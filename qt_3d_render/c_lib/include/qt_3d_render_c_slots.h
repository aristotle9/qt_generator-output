#ifndef QT_3D_RENDER_C_SLOTS_H
#define QT_3D_RENDER_C_SLOTS_H

#include "qt_3d_render_c_global.h"

// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_const_QStringList_ref : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_const_QStringList_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QStringList*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QStringList& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QStringList*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QGeometryRenderer_PrimitiveType : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QGeometryRenderer_PrimitiveType() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QGeometryRenderer::PrimitiveType), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QGeometryRenderer::PrimitiveType arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QGeometryRenderer::PrimitiveType);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QPointSize_SizeMode : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QPointSize_SizeMode() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QPointSize::SizeMode), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QPointSize::SizeMode arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QPointSize::SizeMode);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_PickMethod : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_PickMethod() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const Qt3DRender::QPickingSettings::PickMethod*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QPickingSettings::PickMethod arg0) {
    if (m_func) {
      m_func(m_data, new Qt3DRender::QPickingSettings::PickMethod(arg0));
    }
  }

private:
  void (*m_func)(void*, const Qt3DRender::QPickingSettings::PickMethod*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_Filter : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_Filter() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QAbstractTexture::Filter), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QAbstractTexture::Filter arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QAbstractTexture::Filter);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_const_QVector_Qt3DRender_QSortPolicy_SortType_ref : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_const_QVector_Qt3DRender_QSortPolicy_SortType_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QVector< Qt3DRender::QSortPolicy::SortType >*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QVector< Qt3DRender::QSortPolicy::SortType >& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QVector< Qt3DRender::QSortPolicy::SortType >*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTarget_ptr : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTarget_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QRenderTarget*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QRenderTarget* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QRenderTarget*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QFrameGraphNode_ptr : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QFrameGraphNode_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QFrameGraphNode*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QFrameGraphNode* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QFrameGraphNode*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QGeometry_ptr : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QGeometry_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QGeometry*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QGeometry* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QGeometry*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ComparisonFunction : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ComparisonFunction() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QAbstractTexture::ComparisonFunction), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QAbstractTexture::ComparisonFunction arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QAbstractTexture::ComparisonFunction);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilTestArguments_StencilFaceMode : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilTestArguments_StencilFaceMode() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QStencilTestArguments::StencilFaceMode), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QStencilTestArguments::StencilFaceMode arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QStencilTestArguments::StencilFaceMode);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QLevelOfDetail_ThresholdType : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QLevelOfDetail_ThresholdType() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QLevelOfDetail::ThresholdType), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QLevelOfDetail::ThresholdType arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QLevelOfDetail::ThresholdType);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QDepthTest_DepthFunction : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QDepthTest_DepthFunction() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QDepthTest::DepthFunction), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QDepthTest::DepthFunction arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QDepthTest::DepthFunction);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_BufferType : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_BufferType() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QBuffer::BufferType), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QBuffer::BufferType arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QBuffer::BufferType);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QSceneLoader_Status : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QSceneLoader_Status() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QSceneLoader::Status), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QSceneLoader::Status arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QSceneLoader::Status);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QTextureWrapMode_WrapMode : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QTextureWrapMode_WrapMode() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QTextureWrapMode::WrapMode), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QTextureWrapMode::WrapMode arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QTextureWrapMode::WrapMode);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilOperationArguments_Operation : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilOperationArguments_Operation() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QStencilOperationArguments::Operation), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QStencilOperationArguments::Operation arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QStencilOperationArguments::Operation);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderSettings_RenderPolicy : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderSettings_RenderPolicy() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QRenderSettings::RenderPolicy), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QRenderSettings::RenderPolicy arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QRenderSettings::RenderPolicy);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_const_QVector_double_ref : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_const_QVector_double_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QVector< double >*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QVector< double >& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QVector< double >*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTargetOutput_AttachmentPoint : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTargetOutput_AttachmentPoint() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QRenderTargetOutput::AttachmentPoint), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QRenderTargetOutput::AttachmentPoint arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QRenderTargetOutput::AttachmentPoint);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QTextureImage_Status : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QTextureImage_Status() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QTextureImage::Status), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QTextureImage::Status arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QTextureImage::Status);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_QVector3D : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_QVector3D() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QVector3D*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QVector3D arg0) {
    if (m_func) {
      m_func(m_data, new QVector3D(arg0));
    }
  }

private:
  void (*m_func)(void*, const QVector3D*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_FaceOrientationPickingMode : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_FaceOrientationPickingMode() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const Qt3DRender::QPickingSettings::FaceOrientationPickingMode*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QPickingSettings::FaceOrientationPickingMode arg0) {
    if (m_func) {
      m_func(m_data, new Qt3DRender::QPickingSettings::FaceOrientationPickingMode(arg0));
    }
  }

private:
  void (*m_func)(void*, const Qt3DRender::QPickingSettings::FaceOrientationPickingMode*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QCameraLens_ProjectionType : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QCameraLens_ProjectionType() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const Qt3DRender::QCameraLens::ProjectionType*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QCameraLens::ProjectionType arg0) {
    if (m_func) {
      m_func(m_data, new Qt3DRender::QCameraLens::ProjectionType(arg0));
    }
  }

private:
  void (*m_func)(void*, const Qt3DRender::QCameraLens::ProjectionType*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTargetOutput_ptr : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTargetOutput_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QRenderTargetOutput*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QRenderTargetOutput* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QRenderTargetOutput*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_TextureFormat : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_TextureFormat() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QAbstractTexture::TextureFormat), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QAbstractTexture::TextureFormat arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QAbstractTexture::TextureFormat);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_const_QByteArray_ref : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_const_QByteArray_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QByteArray*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QByteArray& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QByteArray*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_QSize : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_QSize() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QSize*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QSize arg0) {
    if (m_func) {
      m_func(m_data, new QSize(arg0));
    }
  }

private:
  void (*m_func)(void*, const QSize*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_CubeMapFace : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_CubeMapFace() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const Qt3DRender::QAbstractTexture::CubeMapFace*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QAbstractTexture::CubeMapFace arg0) {
    if (m_func) {
      m_func(m_data, new Qt3DRender::QAbstractTexture::CubeMapFace(arg0));
    }
  }

private:
  void (*m_func)(void*, const Qt3DRender::QAbstractTexture::CubeMapFace*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_AttributeType : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_AttributeType() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QAttribute::AttributeType), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QAttribute::AttributeType arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QAttribute::AttributeType);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QEffect_ptr : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QEffect_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QEffect*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QEffect* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QEffect*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ComparisonMode : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ComparisonMode() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QAbstractTexture::ComparisonMode), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QAbstractTexture::ComparisonMode arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QAbstractTexture::ComparisonMode);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_ptr : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QBuffer*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QBuffer* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QBuffer*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QClearBuffers_BufferType : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QClearBuffers_BufferType() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QClearBuffers::BufferType), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QClearBuffers::BufferType arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QClearBuffers::BufferType);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_PickResultMode : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_PickResultMode() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const Qt3DRender::QPickingSettings::PickResultMode*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QPickingSettings::PickResultMode arg0) {
    if (m_func) {
      m_func(m_data, new Qt3DRender::QPickingSettings::PickResultMode(arg0));
    }
  }

private:
  void (*m_func)(void*, const Qt3DRender::QPickingSettings::PickResultMode*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ptr : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QAbstractTexture*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QAbstractTexture* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QAbstractTexture*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QShaderProgram_ptr : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QShaderProgram_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QShaderProgram*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QShaderProgram* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QShaderProgram*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QGraphicsApiFilter_OpenGLProfile : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QGraphicsApiFilter_OpenGLProfile() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const Qt3DRender::QGraphicsApiFilter::OpenGLProfile*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QGraphicsApiFilter::OpenGLProfile arg0) {
    if (m_func) {
      m_func(m_data, new Qt3DRender::QGraphicsApiFilter::OpenGLProfile(arg0));
    }
  }

private:
  void (*m_func)(void*, const Qt3DRender::QGraphicsApiFilter::OpenGLProfile*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilOperationArguments_FaceMode : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilOperationArguments_FaceMode() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QStencilOperationArguments::FaceMode), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QStencilOperationArguments::FaceMode arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QStencilOperationArguments::FaceMode);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QShaderProgram_Status : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QShaderProgram_Status() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QShaderProgram::Status), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QShaderProgram::Status arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QShaderProgram::Status);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_const_QVector_int_ref : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_const_QVector_int_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QVector< int >*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QVector< int >& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QVector< int >*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_const_QColor_ref : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_const_QColor_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QColor*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QColor& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QColor*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QBlendEquation_BlendFunction : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QBlendEquation_BlendFunction() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QBlendEquation::BlendFunction), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QBlendEquation::BlendFunction arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QBlendEquation::BlendFunction);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_Status : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_Status() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QAbstractTexture::Status), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QAbstractTexture::Status arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QAbstractTexture::Status);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_unsigned_int : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_unsigned_int() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, unsigned int), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(unsigned int arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, unsigned int);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_ptr : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QAttribute*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QAttribute* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QAttribute*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QBlendEquationArguments_Blending : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QBlendEquationArguments_Blending() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QBlendEquationArguments::Blending), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QBlendEquationArguments::Blending arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QBlendEquationArguments::Blending);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QCullFace_CullingMode : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QCullFace_CullingMode() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QCullFace::CullingMode), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QCullFace::CullingMode arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QCullFace::CullingMode);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QFrontFace_WindingDirection : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QFrontFace_WindingDirection() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QFrontFace::WindingDirection), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QFrontFace::WindingDirection arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QFrontFace::WindingDirection);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilTestArguments_StencilFunction : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilTestArguments_StencilFunction() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QStencilTestArguments::StencilFunction), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QStencilTestArguments::StencilFunction arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QStencilTestArguments::StencilFunction);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QPickEvent_ptr : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QPickEvent_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QPickEvent*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QPickEvent* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QPickEvent*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QAlphaTest_AlphaFunction : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QAlphaTest_AlphaFunction() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QAlphaTest::AlphaFunction), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QAlphaTest::AlphaFunction arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QAlphaTest::AlphaFunction);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_VertexBaseType : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_VertexBaseType() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QAttribute::VertexBaseType), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QAttribute::VertexBaseType arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QAttribute::VertexBaseType);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_const_Qt3DRender_QLevelOfDetailBoundingSphere_ref : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_const_Qt3DRender_QLevelOfDetailBoundingSphere_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const Qt3DRender::QLevelOfDetailBoundingSphere*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const Qt3DRender::QLevelOfDetailBoundingSphere& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const Qt3DRender::QLevelOfDetailBoundingSphere*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_const_QMatrix4x4_ref : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_const_QMatrix4x4_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QMatrix4x4*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QMatrix4x4& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QMatrix4x4*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QCamera_ptr : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QCamera_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QCamera*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QCamera* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QCamera*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QGraphicsApiFilter_Api : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QGraphicsApiFilter_Api() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const Qt3DRender::QGraphicsApiFilter::Api*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QGraphicsApiFilter::Api arg0) {
    if (m_func) {
      m_func(m_data, new Qt3DRender::QGraphicsApiFilter::Api(arg0));
    }
  }

private:
  void (*m_func)(void*, const Qt3DRender::QGraphicsApiFilter::Api*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_UsageType : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_UsageType() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QBuffer::UsageType), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QBuffer::UsageType arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QBuffer::UsageType);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_AccessType : public QObject {
  Q_OBJECT
public:
  qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_AccessType() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DRender::QBuffer::AccessType), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DRender::QBuffer::AccessType arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DRender::QBuffer::AccessType);
  void* m_data;
};
extern "C" {

QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_QSize_custom_slot(qt_3d_render_c_SlotWrapper_QSize* this_ptr, const QSize* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_QSize_delete(qt_3d_render_c_SlotWrapper_QSize* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_QSize* qt_3d_render_c_qt_3d_render_c_SlotWrapper_QSize_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_QSize_set(qt_3d_render_c_SlotWrapper_QSize* this_ptr, void (*func)(void*, const QSize*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_QVector3D_custom_slot(qt_3d_render_c_SlotWrapper_QVector3D* this_ptr, const QVector3D* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_QVector3D_delete(qt_3d_render_c_SlotWrapper_QVector3D* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_QVector3D* qt_3d_render_c_qt_3d_render_c_SlotWrapper_QVector3D_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_QVector3D_set(qt_3d_render_c_SlotWrapper_QVector3D* this_ptr, void (*func)(void*, const QVector3D*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ComparisonFunction_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ComparisonFunction* this_ptr, Qt3DRender::QAbstractTexture::ComparisonFunction arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ComparisonFunction_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ComparisonFunction* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ComparisonFunction* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ComparisonFunction_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ComparisonFunction_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ComparisonFunction* this_ptr, void (*func)(void*, Qt3DRender::QAbstractTexture::ComparisonFunction), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ComparisonMode_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ComparisonMode* this_ptr, Qt3DRender::QAbstractTexture::ComparisonMode arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ComparisonMode_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ComparisonMode* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ComparisonMode* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ComparisonMode_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ComparisonMode_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ComparisonMode* this_ptr, void (*func)(void*, Qt3DRender::QAbstractTexture::ComparisonMode), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_CubeMapFace_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_CubeMapFace* this_ptr, const Qt3DRender::QAbstractTexture::CubeMapFace* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_CubeMapFace_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_CubeMapFace* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_CubeMapFace* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_CubeMapFace_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_CubeMapFace_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_CubeMapFace* this_ptr, void (*func)(void*, const Qt3DRender::QAbstractTexture::CubeMapFace*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_Filter_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_Filter* this_ptr, Qt3DRender::QAbstractTexture::Filter arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_Filter_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_Filter* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_Filter* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_Filter_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_Filter_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_Filter* this_ptr, void (*func)(void*, Qt3DRender::QAbstractTexture::Filter), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_Status_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_Status* this_ptr, Qt3DRender::QAbstractTexture::Status arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_Status_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_Status* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_Status* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_Status_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_Status_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_Status* this_ptr, void (*func)(void*, Qt3DRender::QAbstractTexture::Status), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_TextureFormat_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_TextureFormat* this_ptr, Qt3DRender::QAbstractTexture::TextureFormat arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_TextureFormat_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_TextureFormat* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_TextureFormat* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_TextureFormat_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_TextureFormat_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_TextureFormat* this_ptr, void (*func)(void*, Qt3DRender::QAbstractTexture::TextureFormat), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ptr_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ptr* this_ptr, Qt3DRender::QAbstractTexture* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ptr_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ptr* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ptr* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ptr_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ptr_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ptr* this_ptr, void (*func)(void*, Qt3DRender::QAbstractTexture*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAlphaTest_AlphaFunction_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QAlphaTest_AlphaFunction* this_ptr, Qt3DRender::QAlphaTest::AlphaFunction arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAlphaTest_AlphaFunction_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QAlphaTest_AlphaFunction* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QAlphaTest_AlphaFunction* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAlphaTest_AlphaFunction_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAlphaTest_AlphaFunction_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QAlphaTest_AlphaFunction* this_ptr, void (*func)(void*, Qt3DRender::QAlphaTest::AlphaFunction), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_AttributeType_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_AttributeType* this_ptr, Qt3DRender::QAttribute::AttributeType arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_AttributeType_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_AttributeType* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_AttributeType* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_AttributeType_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_AttributeType_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_AttributeType* this_ptr, void (*func)(void*, Qt3DRender::QAttribute::AttributeType), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_VertexBaseType_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_VertexBaseType* this_ptr, Qt3DRender::QAttribute::VertexBaseType arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_VertexBaseType_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_VertexBaseType* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_VertexBaseType* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_VertexBaseType_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_VertexBaseType_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_VertexBaseType* this_ptr, void (*func)(void*, Qt3DRender::QAttribute::VertexBaseType), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_ptr_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_ptr* this_ptr, Qt3DRender::QAttribute* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_ptr_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_ptr* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_ptr* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_ptr_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_ptr_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_ptr* this_ptr, void (*func)(void*, Qt3DRender::QAttribute*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QBlendEquationArguments_Blending_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QBlendEquationArguments_Blending* this_ptr, Qt3DRender::QBlendEquationArguments::Blending arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QBlendEquationArguments_Blending_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QBlendEquationArguments_Blending* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QBlendEquationArguments_Blending* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QBlendEquationArguments_Blending_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QBlendEquationArguments_Blending_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QBlendEquationArguments_Blending* this_ptr, void (*func)(void*, Qt3DRender::QBlendEquationArguments::Blending), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QBlendEquation_BlendFunction_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QBlendEquation_BlendFunction* this_ptr, Qt3DRender::QBlendEquation::BlendFunction arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QBlendEquation_BlendFunction_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QBlendEquation_BlendFunction* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QBlendEquation_BlendFunction* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QBlendEquation_BlendFunction_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QBlendEquation_BlendFunction_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QBlendEquation_BlendFunction* this_ptr, void (*func)(void*, Qt3DRender::QBlendEquation::BlendFunction), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_AccessType_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_AccessType* this_ptr, Qt3DRender::QBuffer::AccessType arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_AccessType_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_AccessType* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_AccessType* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_AccessType_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_AccessType_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_AccessType* this_ptr, void (*func)(void*, Qt3DRender::QBuffer::AccessType), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_BufferType_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_BufferType* this_ptr, Qt3DRender::QBuffer::BufferType arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_BufferType_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_BufferType* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_BufferType* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_BufferType_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_BufferType_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_BufferType* this_ptr, void (*func)(void*, Qt3DRender::QBuffer::BufferType), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_UsageType_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_UsageType* this_ptr, Qt3DRender::QBuffer::UsageType arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_UsageType_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_UsageType* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_UsageType* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_UsageType_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_UsageType_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_UsageType* this_ptr, void (*func)(void*, Qt3DRender::QBuffer::UsageType), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_ptr_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_ptr* this_ptr, Qt3DRender::QBuffer* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_ptr_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_ptr* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_ptr* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_ptr_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_ptr_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_ptr* this_ptr, void (*func)(void*, Qt3DRender::QBuffer*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QCameraLens_ProjectionType_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QCameraLens_ProjectionType* this_ptr, const Qt3DRender::QCameraLens::ProjectionType* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QCameraLens_ProjectionType_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QCameraLens_ProjectionType* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QCameraLens_ProjectionType* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QCameraLens_ProjectionType_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QCameraLens_ProjectionType_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QCameraLens_ProjectionType* this_ptr, void (*func)(void*, const Qt3DRender::QCameraLens::ProjectionType*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QCamera_ptr_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QCamera_ptr* this_ptr, Qt3DRender::QCamera* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QCamera_ptr_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QCamera_ptr* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QCamera_ptr* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QCamera_ptr_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QCamera_ptr_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QCamera_ptr* this_ptr, void (*func)(void*, Qt3DRender::QCamera*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QClearBuffers_BufferType_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QClearBuffers_BufferType* this_ptr, Qt3DRender::QClearBuffers::BufferType arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QClearBuffers_BufferType_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QClearBuffers_BufferType* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QClearBuffers_BufferType* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QClearBuffers_BufferType_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QClearBuffers_BufferType_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QClearBuffers_BufferType* this_ptr, void (*func)(void*, Qt3DRender::QClearBuffers::BufferType), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QCullFace_CullingMode_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QCullFace_CullingMode* this_ptr, Qt3DRender::QCullFace::CullingMode arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QCullFace_CullingMode_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QCullFace_CullingMode* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QCullFace_CullingMode* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QCullFace_CullingMode_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QCullFace_CullingMode_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QCullFace_CullingMode* this_ptr, void (*func)(void*, Qt3DRender::QCullFace::CullingMode), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QDepthTest_DepthFunction_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QDepthTest_DepthFunction* this_ptr, Qt3DRender::QDepthTest::DepthFunction arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QDepthTest_DepthFunction_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QDepthTest_DepthFunction* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QDepthTest_DepthFunction* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QDepthTest_DepthFunction_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QDepthTest_DepthFunction_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QDepthTest_DepthFunction* this_ptr, void (*func)(void*, Qt3DRender::QDepthTest::DepthFunction), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QEffect_ptr_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QEffect_ptr* this_ptr, Qt3DRender::QEffect* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QEffect_ptr_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QEffect_ptr* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QEffect_ptr* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QEffect_ptr_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QEffect_ptr_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QEffect_ptr* this_ptr, void (*func)(void*, Qt3DRender::QEffect*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QFrameGraphNode_ptr_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QFrameGraphNode_ptr* this_ptr, Qt3DRender::QFrameGraphNode* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QFrameGraphNode_ptr_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QFrameGraphNode_ptr* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QFrameGraphNode_ptr* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QFrameGraphNode_ptr_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QFrameGraphNode_ptr_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QFrameGraphNode_ptr* this_ptr, void (*func)(void*, Qt3DRender::QFrameGraphNode*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QFrontFace_WindingDirection_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QFrontFace_WindingDirection* this_ptr, Qt3DRender::QFrontFace::WindingDirection arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QFrontFace_WindingDirection_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QFrontFace_WindingDirection* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QFrontFace_WindingDirection* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QFrontFace_WindingDirection_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QFrontFace_WindingDirection_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QFrontFace_WindingDirection* this_ptr, void (*func)(void*, Qt3DRender::QFrontFace::WindingDirection), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QGeometryRenderer_PrimitiveType_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QGeometryRenderer_PrimitiveType* this_ptr, Qt3DRender::QGeometryRenderer::PrimitiveType arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QGeometryRenderer_PrimitiveType_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QGeometryRenderer_PrimitiveType* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QGeometryRenderer_PrimitiveType* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QGeometryRenderer_PrimitiveType_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QGeometryRenderer_PrimitiveType_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QGeometryRenderer_PrimitiveType* this_ptr, void (*func)(void*, Qt3DRender::QGeometryRenderer::PrimitiveType), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QGeometry_ptr_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QGeometry_ptr* this_ptr, Qt3DRender::QGeometry* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QGeometry_ptr_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QGeometry_ptr* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QGeometry_ptr* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QGeometry_ptr_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QGeometry_ptr_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QGeometry_ptr* this_ptr, void (*func)(void*, Qt3DRender::QGeometry*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QGraphicsApiFilter_Api_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QGraphicsApiFilter_Api* this_ptr, const Qt3DRender::QGraphicsApiFilter::Api* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QGraphicsApiFilter_Api_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QGraphicsApiFilter_Api* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QGraphicsApiFilter_Api* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QGraphicsApiFilter_Api_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QGraphicsApiFilter_Api_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QGraphicsApiFilter_Api* this_ptr, void (*func)(void*, const Qt3DRender::QGraphicsApiFilter::Api*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QGraphicsApiFilter_OpenGLProfile_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QGraphicsApiFilter_OpenGLProfile* this_ptr, const Qt3DRender::QGraphicsApiFilter::OpenGLProfile* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QGraphicsApiFilter_OpenGLProfile_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QGraphicsApiFilter_OpenGLProfile* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QGraphicsApiFilter_OpenGLProfile* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QGraphicsApiFilter_OpenGLProfile_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QGraphicsApiFilter_OpenGLProfile_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QGraphicsApiFilter_OpenGLProfile* this_ptr, void (*func)(void*, const Qt3DRender::QGraphicsApiFilter::OpenGLProfile*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QLevelOfDetail_ThresholdType_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QLevelOfDetail_ThresholdType* this_ptr, Qt3DRender::QLevelOfDetail::ThresholdType arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QLevelOfDetail_ThresholdType_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QLevelOfDetail_ThresholdType* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QLevelOfDetail_ThresholdType* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QLevelOfDetail_ThresholdType_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QLevelOfDetail_ThresholdType_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QLevelOfDetail_ThresholdType* this_ptr, void (*func)(void*, Qt3DRender::QLevelOfDetail::ThresholdType), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QPickEvent_ptr_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QPickEvent_ptr* this_ptr, Qt3DRender::QPickEvent* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QPickEvent_ptr_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QPickEvent_ptr* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QPickEvent_ptr* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QPickEvent_ptr_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QPickEvent_ptr_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QPickEvent_ptr* this_ptr, void (*func)(void*, Qt3DRender::QPickEvent*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_FaceOrientationPickingMode_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_FaceOrientationPickingMode* this_ptr, const Qt3DRender::QPickingSettings::FaceOrientationPickingMode* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_FaceOrientationPickingMode_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_FaceOrientationPickingMode* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_FaceOrientationPickingMode* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_FaceOrientationPickingMode_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_FaceOrientationPickingMode_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_FaceOrientationPickingMode* this_ptr, void (*func)(void*, const Qt3DRender::QPickingSettings::FaceOrientationPickingMode*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_PickMethod_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_PickMethod* this_ptr, const Qt3DRender::QPickingSettings::PickMethod* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_PickMethod_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_PickMethod* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_PickMethod* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_PickMethod_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_PickMethod_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_PickMethod* this_ptr, void (*func)(void*, const Qt3DRender::QPickingSettings::PickMethod*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_PickResultMode_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_PickResultMode* this_ptr, const Qt3DRender::QPickingSettings::PickResultMode* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_PickResultMode_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_PickResultMode* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_PickResultMode* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_PickResultMode_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_PickResultMode_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_PickResultMode* this_ptr, void (*func)(void*, const Qt3DRender::QPickingSettings::PickResultMode*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QPointSize_SizeMode_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QPointSize_SizeMode* this_ptr, Qt3DRender::QPointSize::SizeMode arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QPointSize_SizeMode_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QPointSize_SizeMode* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QPointSize_SizeMode* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QPointSize_SizeMode_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QPointSize_SizeMode_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QPointSize_SizeMode* this_ptr, void (*func)(void*, Qt3DRender::QPointSize::SizeMode), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderSettings_RenderPolicy_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderSettings_RenderPolicy* this_ptr, Qt3DRender::QRenderSettings::RenderPolicy arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderSettings_RenderPolicy_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderSettings_RenderPolicy* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderSettings_RenderPolicy* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderSettings_RenderPolicy_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderSettings_RenderPolicy_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderSettings_RenderPolicy* this_ptr, void (*func)(void*, Qt3DRender::QRenderSettings::RenderPolicy), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTargetOutput_AttachmentPoint_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTargetOutput_AttachmentPoint* this_ptr, Qt3DRender::QRenderTargetOutput::AttachmentPoint arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTargetOutput_AttachmentPoint_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTargetOutput_AttachmentPoint* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTargetOutput_AttachmentPoint* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTargetOutput_AttachmentPoint_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTargetOutput_AttachmentPoint_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTargetOutput_AttachmentPoint* this_ptr, void (*func)(void*, Qt3DRender::QRenderTargetOutput::AttachmentPoint), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTargetOutput_ptr_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTargetOutput_ptr* this_ptr, Qt3DRender::QRenderTargetOutput* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTargetOutput_ptr_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTargetOutput_ptr* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTargetOutput_ptr* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTargetOutput_ptr_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTargetOutput_ptr_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTargetOutput_ptr* this_ptr, void (*func)(void*, Qt3DRender::QRenderTargetOutput*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTarget_ptr_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTarget_ptr* this_ptr, Qt3DRender::QRenderTarget* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTarget_ptr_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTarget_ptr* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTarget_ptr* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTarget_ptr_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTarget_ptr_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTarget_ptr* this_ptr, void (*func)(void*, Qt3DRender::QRenderTarget*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QSceneLoader_Status_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QSceneLoader_Status* this_ptr, Qt3DRender::QSceneLoader::Status arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QSceneLoader_Status_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QSceneLoader_Status* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QSceneLoader_Status* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QSceneLoader_Status_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QSceneLoader_Status_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QSceneLoader_Status* this_ptr, void (*func)(void*, Qt3DRender::QSceneLoader::Status), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QShaderProgram_Status_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QShaderProgram_Status* this_ptr, Qt3DRender::QShaderProgram::Status arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QShaderProgram_Status_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QShaderProgram_Status* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QShaderProgram_Status* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QShaderProgram_Status_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QShaderProgram_Status_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QShaderProgram_Status* this_ptr, void (*func)(void*, Qt3DRender::QShaderProgram::Status), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QShaderProgram_ptr_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QShaderProgram_ptr* this_ptr, Qt3DRender::QShaderProgram* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QShaderProgram_ptr_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QShaderProgram_ptr* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QShaderProgram_ptr* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QShaderProgram_ptr_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QShaderProgram_ptr_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QShaderProgram_ptr* this_ptr, void (*func)(void*, Qt3DRender::QShaderProgram*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilOperationArguments_FaceMode_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilOperationArguments_FaceMode* this_ptr, Qt3DRender::QStencilOperationArguments::FaceMode arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilOperationArguments_FaceMode_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilOperationArguments_FaceMode* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilOperationArguments_FaceMode* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilOperationArguments_FaceMode_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilOperationArguments_FaceMode_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilOperationArguments_FaceMode* this_ptr, void (*func)(void*, Qt3DRender::QStencilOperationArguments::FaceMode), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilOperationArguments_Operation_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilOperationArguments_Operation* this_ptr, Qt3DRender::QStencilOperationArguments::Operation arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilOperationArguments_Operation_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilOperationArguments_Operation* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilOperationArguments_Operation* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilOperationArguments_Operation_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilOperationArguments_Operation_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilOperationArguments_Operation* this_ptr, void (*func)(void*, Qt3DRender::QStencilOperationArguments::Operation), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilTestArguments_StencilFaceMode_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilTestArguments_StencilFaceMode* this_ptr, Qt3DRender::QStencilTestArguments::StencilFaceMode arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilTestArguments_StencilFaceMode_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilTestArguments_StencilFaceMode* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilTestArguments_StencilFaceMode* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilTestArguments_StencilFaceMode_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilTestArguments_StencilFaceMode_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilTestArguments_StencilFaceMode* this_ptr, void (*func)(void*, Qt3DRender::QStencilTestArguments::StencilFaceMode), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilTestArguments_StencilFunction_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilTestArguments_StencilFunction* this_ptr, Qt3DRender::QStencilTestArguments::StencilFunction arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilTestArguments_StencilFunction_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilTestArguments_StencilFunction* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilTestArguments_StencilFunction* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilTestArguments_StencilFunction_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilTestArguments_StencilFunction_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilTestArguments_StencilFunction* this_ptr, void (*func)(void*, Qt3DRender::QStencilTestArguments::StencilFunction), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QTextureImage_Status_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QTextureImage_Status* this_ptr, Qt3DRender::QTextureImage::Status arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QTextureImage_Status_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QTextureImage_Status* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QTextureImage_Status* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QTextureImage_Status_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QTextureImage_Status_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QTextureImage_Status* this_ptr, void (*func)(void*, Qt3DRender::QTextureImage::Status), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QTextureWrapMode_WrapMode_custom_slot(qt_3d_render_c_SlotWrapper_Qt3DRender_QTextureWrapMode_WrapMode* this_ptr, Qt3DRender::QTextureWrapMode::WrapMode arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QTextureWrapMode_WrapMode_delete(qt_3d_render_c_SlotWrapper_Qt3DRender_QTextureWrapMode_WrapMode* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_Qt3DRender_QTextureWrapMode_WrapMode* qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QTextureWrapMode_WrapMode_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_Qt3DRender_QTextureWrapMode_WrapMode_set(qt_3d_render_c_SlotWrapper_Qt3DRender_QTextureWrapMode_WrapMode* this_ptr, void (*func)(void*, Qt3DRender::QTextureWrapMode::WrapMode), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QByteArray_ref_custom_slot(qt_3d_render_c_SlotWrapper_const_QByteArray_ref* this_ptr, const QByteArray* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QByteArray_ref_delete(qt_3d_render_c_SlotWrapper_const_QByteArray_ref* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_const_QByteArray_ref* qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QByteArray_ref_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QByteArray_ref_set(qt_3d_render_c_SlotWrapper_const_QByteArray_ref* this_ptr, void (*func)(void*, const QByteArray*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QColor_ref_custom_slot(qt_3d_render_c_SlotWrapper_const_QColor_ref* this_ptr, const QColor* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QColor_ref_delete(qt_3d_render_c_SlotWrapper_const_QColor_ref* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_const_QColor_ref* qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QColor_ref_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QColor_ref_set(qt_3d_render_c_SlotWrapper_const_QColor_ref* this_ptr, void (*func)(void*, const QColor*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QMatrix4x4_ref_custom_slot(qt_3d_render_c_SlotWrapper_const_QMatrix4x4_ref* this_ptr, const QMatrix4x4* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QMatrix4x4_ref_delete(qt_3d_render_c_SlotWrapper_const_QMatrix4x4_ref* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_const_QMatrix4x4_ref* qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QMatrix4x4_ref_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QMatrix4x4_ref_set(qt_3d_render_c_SlotWrapper_const_QMatrix4x4_ref* this_ptr, void (*func)(void*, const QMatrix4x4*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QStringList_ref_custom_slot(qt_3d_render_c_SlotWrapper_const_QStringList_ref* this_ptr, const QStringList* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QStringList_ref_delete(qt_3d_render_c_SlotWrapper_const_QStringList_ref* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_const_QStringList_ref* qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QStringList_ref_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QStringList_ref_set(qt_3d_render_c_SlotWrapper_const_QStringList_ref* this_ptr, void (*func)(void*, const QStringList*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QVector_Qt3DRender_QSortPolicy_SortType_ref_custom_slot(qt_3d_render_c_SlotWrapper_const_QVector_Qt3DRender_QSortPolicy_SortType_ref* this_ptr, const QVector< Qt3DRender::QSortPolicy::SortType >* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QVector_Qt3DRender_QSortPolicy_SortType_ref_delete(qt_3d_render_c_SlotWrapper_const_QVector_Qt3DRender_QSortPolicy_SortType_ref* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_const_QVector_Qt3DRender_QSortPolicy_SortType_ref* qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QVector_Qt3DRender_QSortPolicy_SortType_ref_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QVector_Qt3DRender_QSortPolicy_SortType_ref_set(qt_3d_render_c_SlotWrapper_const_QVector_Qt3DRender_QSortPolicy_SortType_ref* this_ptr, void (*func)(void*, const QVector< Qt3DRender::QSortPolicy::SortType >*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QVector_double_ref_custom_slot(qt_3d_render_c_SlotWrapper_const_QVector_double_ref* this_ptr, const QVector< double >* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QVector_double_ref_delete(qt_3d_render_c_SlotWrapper_const_QVector_double_ref* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_const_QVector_double_ref* qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QVector_double_ref_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QVector_double_ref_set(qt_3d_render_c_SlotWrapper_const_QVector_double_ref* this_ptr, void (*func)(void*, const QVector< double >*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QVector_int_ref_custom_slot(qt_3d_render_c_SlotWrapper_const_QVector_int_ref* this_ptr, const QVector< int >* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QVector_int_ref_delete(qt_3d_render_c_SlotWrapper_const_QVector_int_ref* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_const_QVector_int_ref* qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QVector_int_ref_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_QVector_int_ref_set(qt_3d_render_c_SlotWrapper_const_QVector_int_ref* this_ptr, void (*func)(void*, const QVector< int >*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_Qt3DRender_QLevelOfDetailBoundingSphere_ref_custom_slot(qt_3d_render_c_SlotWrapper_const_Qt3DRender_QLevelOfDetailBoundingSphere_ref* this_ptr, const Qt3DRender::QLevelOfDetailBoundingSphere* arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_Qt3DRender_QLevelOfDetailBoundingSphere_ref_delete(qt_3d_render_c_SlotWrapper_const_Qt3DRender_QLevelOfDetailBoundingSphere_ref* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_const_Qt3DRender_QLevelOfDetailBoundingSphere_ref* qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_Qt3DRender_QLevelOfDetailBoundingSphere_ref_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_const_Qt3DRender_QLevelOfDetailBoundingSphere_ref_set(qt_3d_render_c_SlotWrapper_const_Qt3DRender_QLevelOfDetailBoundingSphere_ref* this_ptr, void (*func)(void*, const Qt3DRender::QLevelOfDetailBoundingSphere*), void* data);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_unsigned_int_custom_slot(qt_3d_render_c_SlotWrapper_unsigned_int* this_ptr, unsigned int arg0);
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_unsigned_int_delete(qt_3d_render_c_SlotWrapper_unsigned_int* this_ptr);
QT_3D_RENDER_C_EXPORT qt_3d_render_c_SlotWrapper_unsigned_int* qt_3d_render_c_qt_3d_render_c_SlotWrapper_unsigned_int_new();
QT_3D_RENDER_C_EXPORT void qt_3d_render_c_qt_3d_render_c_SlotWrapper_unsigned_int_set(qt_3d_render_c_SlotWrapper_unsigned_int* this_ptr, void (*func)(void*, unsigned int), void* data);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_QSize(qt_3d_render_c_SlotWrapper_QSize* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_QVector3D(qt_3d_render_c_SlotWrapper_QVector3D* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ComparisonFunction(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ComparisonFunction* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ComparisonMode(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ComparisonMode* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_CubeMapFace(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_CubeMapFace* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_Filter(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_Filter* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_Status(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_Status* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_TextureFormat(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_TextureFormat* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ptr(qt_3d_render_c_SlotWrapper_Qt3DRender_QAbstractTexture_ptr* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QAlphaTest_AlphaFunction(qt_3d_render_c_SlotWrapper_Qt3DRender_QAlphaTest_AlphaFunction* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_AttributeType(qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_AttributeType* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_VertexBaseType(qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_VertexBaseType* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_ptr(qt_3d_render_c_SlotWrapper_Qt3DRender_QAttribute_ptr* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QBlendEquationArguments_Blending(qt_3d_render_c_SlotWrapper_Qt3DRender_QBlendEquationArguments_Blending* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QBlendEquation_BlendFunction(qt_3d_render_c_SlotWrapper_Qt3DRender_QBlendEquation_BlendFunction* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_AccessType(qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_AccessType* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_BufferType(qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_BufferType* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_UsageType(qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_UsageType* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_ptr(qt_3d_render_c_SlotWrapper_Qt3DRender_QBuffer_ptr* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QCameraLens_ProjectionType(qt_3d_render_c_SlotWrapper_Qt3DRender_QCameraLens_ProjectionType* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QCamera_ptr(qt_3d_render_c_SlotWrapper_Qt3DRender_QCamera_ptr* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QClearBuffers_BufferType(qt_3d_render_c_SlotWrapper_Qt3DRender_QClearBuffers_BufferType* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QCullFace_CullingMode(qt_3d_render_c_SlotWrapper_Qt3DRender_QCullFace_CullingMode* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QDepthTest_DepthFunction(qt_3d_render_c_SlotWrapper_Qt3DRender_QDepthTest_DepthFunction* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QEffect_ptr(qt_3d_render_c_SlotWrapper_Qt3DRender_QEffect_ptr* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QFrameGraphNode_ptr(qt_3d_render_c_SlotWrapper_Qt3DRender_QFrameGraphNode_ptr* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QFrontFace_WindingDirection(qt_3d_render_c_SlotWrapper_Qt3DRender_QFrontFace_WindingDirection* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QGeometryRenderer_PrimitiveType(qt_3d_render_c_SlotWrapper_Qt3DRender_QGeometryRenderer_PrimitiveType* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QGeometry_ptr(qt_3d_render_c_SlotWrapper_Qt3DRender_QGeometry_ptr* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QGraphicsApiFilter_Api(qt_3d_render_c_SlotWrapper_Qt3DRender_QGraphicsApiFilter_Api* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QGraphicsApiFilter_OpenGLProfile(qt_3d_render_c_SlotWrapper_Qt3DRender_QGraphicsApiFilter_OpenGLProfile* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QLevelOfDetail_ThresholdType(qt_3d_render_c_SlotWrapper_Qt3DRender_QLevelOfDetail_ThresholdType* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QPickEvent_ptr(qt_3d_render_c_SlotWrapper_Qt3DRender_QPickEvent_ptr* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_FaceOrientationPickingMode(qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_FaceOrientationPickingMode* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_PickMethod(qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_PickMethod* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_PickResultMode(qt_3d_render_c_SlotWrapper_Qt3DRender_QPickingSettings_PickResultMode* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QPointSize_SizeMode(qt_3d_render_c_SlotWrapper_Qt3DRender_QPointSize_SizeMode* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderSettings_RenderPolicy(qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderSettings_RenderPolicy* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTargetOutput_AttachmentPoint(qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTargetOutput_AttachmentPoint* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTargetOutput_ptr(qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTargetOutput_ptr* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTarget_ptr(qt_3d_render_c_SlotWrapper_Qt3DRender_QRenderTarget_ptr* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QSceneLoader_Status(qt_3d_render_c_SlotWrapper_Qt3DRender_QSceneLoader_Status* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QShaderProgram_Status(qt_3d_render_c_SlotWrapper_Qt3DRender_QShaderProgram_Status* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QShaderProgram_ptr(qt_3d_render_c_SlotWrapper_Qt3DRender_QShaderProgram_ptr* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilOperationArguments_FaceMode(qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilOperationArguments_FaceMode* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilOperationArguments_Operation(qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilOperationArguments_Operation* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilTestArguments_StencilFaceMode(qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilTestArguments_StencilFaceMode* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilTestArguments_StencilFunction(qt_3d_render_c_SlotWrapper_Qt3DRender_QStencilTestArguments_StencilFunction* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QTextureImage_Status(qt_3d_render_c_SlotWrapper_Qt3DRender_QTextureImage_Status* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_Qt3DRender_QTextureWrapMode_WrapMode(qt_3d_render_c_SlotWrapper_Qt3DRender_QTextureWrapMode_WrapMode* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_const_QByteArray_ref(qt_3d_render_c_SlotWrapper_const_QByteArray_ref* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_const_QColor_ref(qt_3d_render_c_SlotWrapper_const_QColor_ref* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_const_QMatrix4x4_ref(qt_3d_render_c_SlotWrapper_const_QMatrix4x4_ref* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_const_QStringList_ref(qt_3d_render_c_SlotWrapper_const_QStringList_ref* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_const_QVector_Qt3DRender_QSortPolicy_SortType_ref(qt_3d_render_c_SlotWrapper_const_QVector_Qt3DRender_QSortPolicy_SortType_ref* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_const_QVector_double_ref(qt_3d_render_c_SlotWrapper_const_QVector_double_ref* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_const_QVector_int_ref(qt_3d_render_c_SlotWrapper_const_QVector_int_ref* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_const_Qt3DRender_QLevelOfDetailBoundingSphere_ref(qt_3d_render_c_SlotWrapper_const_Qt3DRender_QLevelOfDetailBoundingSphere_ref* ptr);
QT_3D_RENDER_C_EXPORT QObject* qt_3d_render_c_slots_G_static_cast_QObject_ptr_qt_3d_render_c_SlotWrapper_unsigned_int(qt_3d_render_c_SlotWrapper_unsigned_int* ptr);

} // extern "C"

#endif // QT_3D_RENDER_C_SLOTS_H
