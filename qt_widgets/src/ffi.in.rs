extern "C" {
  // Header: QAbstractButton
  pub fn qt_widgets_c_QAbstractButton_G_dynamic_cast_QAbstractButton_ptr(ptr: *mut ::widget::Widget) -> *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QAbstractButton_G_static_cast_QAbstractButton_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QAbstractButton_G_static_cast_QAbstractButton_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QAbstractButton_G_static_cast_QAbstractButton_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QAbstractButton_G_static_cast_QObject_ptr(ptr: *mut ::abstract_button::AbstractButton) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QAbstractButton_G_static_cast_QPaintDevice_ptr(ptr: *mut ::abstract_button::AbstractButton) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QAbstractButton_G_static_cast_QWidget_ptr(ptr: *mut ::abstract_button::AbstractButton) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QAbstractButton_animateClick_msec(this_ptr: *mut ::abstract_button::AbstractButton, msec: ::libc::c_int);
  pub fn qt_widgets_c_QAbstractButton_animateClick_no_args(this_ptr: *mut ::abstract_button::AbstractButton);
  pub fn qt_widgets_c_QAbstractButton_autoExclusive(this_ptr: *const ::abstract_button::AbstractButton) -> bool;
  pub fn qt_widgets_c_QAbstractButton_autoRepeat(this_ptr: *const ::abstract_button::AbstractButton) -> bool;
  pub fn qt_widgets_c_QAbstractButton_autoRepeatDelay(this_ptr: *const ::abstract_button::AbstractButton) -> ::libc::c_int;
  pub fn qt_widgets_c_QAbstractButton_autoRepeatInterval(this_ptr: *const ::abstract_button::AbstractButton) -> ::libc::c_int;
  pub fn qt_widgets_c_QAbstractButton_click(this_ptr: *mut ::abstract_button::AbstractButton);
  pub fn qt_widgets_c_QAbstractButton_delete(this_ptr: *mut ::abstract_button::AbstractButton);
  pub fn qt_widgets_c_QAbstractButton_group(this_ptr: *const ::abstract_button::AbstractButton) -> *mut ::button_group::ButtonGroup;
  pub fn qt_widgets_c_QAbstractButton_iconSize_to_output(this_ptr: *const ::abstract_button::AbstractButton, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QAbstractButton_icon_to_output(this_ptr: *const ::abstract_button::AbstractButton, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QAbstractButton_isCheckable(this_ptr: *const ::abstract_button::AbstractButton) -> bool;
  pub fn qt_widgets_c_QAbstractButton_isChecked(this_ptr: *const ::abstract_button::AbstractButton) -> bool;
  pub fn qt_widgets_c_QAbstractButton_isDown(this_ptr: *const ::abstract_button::AbstractButton) -> bool;
  pub fn qt_widgets_c_QAbstractButton_metaObject(this_ptr: *const ::abstract_button::AbstractButton) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QAbstractButton_qt_metacall(this_ptr: *mut ::abstract_button::AbstractButton, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QAbstractButton_qt_metacast(this_ptr: *mut ::abstract_button::AbstractButton, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QAbstractButton_setAutoExclusive(this_ptr: *mut ::abstract_button::AbstractButton, arg1: bool);
  pub fn qt_widgets_c_QAbstractButton_setAutoRepeat(this_ptr: *mut ::abstract_button::AbstractButton, arg1: bool);
  pub fn qt_widgets_c_QAbstractButton_setAutoRepeatDelay(this_ptr: *mut ::abstract_button::AbstractButton, arg1: ::libc::c_int);
  pub fn qt_widgets_c_QAbstractButton_setAutoRepeatInterval(this_ptr: *mut ::abstract_button::AbstractButton, arg1: ::libc::c_int);
  pub fn qt_widgets_c_QAbstractButton_setCheckable(this_ptr: *mut ::abstract_button::AbstractButton, arg1: bool);
  pub fn qt_widgets_c_QAbstractButton_setChecked(this_ptr: *mut ::abstract_button::AbstractButton, arg1: bool);
  pub fn qt_widgets_c_QAbstractButton_setDown(this_ptr: *mut ::abstract_button::AbstractButton, arg1: bool);
  pub fn qt_widgets_c_QAbstractButton_setIcon(this_ptr: *mut ::abstract_button::AbstractButton, icon: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QAbstractButton_setIconSize(this_ptr: *mut ::abstract_button::AbstractButton, size: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QAbstractButton_setShortcut(this_ptr: *mut ::abstract_button::AbstractButton, key: *const ::qt_gui::key_sequence::KeySequence);
  pub fn qt_widgets_c_QAbstractButton_setText(this_ptr: *mut ::abstract_button::AbstractButton, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QAbstractButton_shortcut_to_output(this_ptr: *const ::abstract_button::AbstractButton, output: *mut ::qt_gui::key_sequence::KeySequence);
  pub fn qt_widgets_c_QAbstractButton_text_to_output(this_ptr: *const ::abstract_button::AbstractButton, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QAbstractButton_toggle(this_ptr: *mut ::abstract_button::AbstractButton);
  pub fn qt_widgets_c_QAbstractButton_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QAbstractButton_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QAbstractGraphicsShapeItem
  pub fn qt_widgets_c_QAbstractGraphicsShapeItem_G_dynamic_cast_QAbstractGraphicsShapeItem_ptr(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::abstract_graphics_shape_item::AbstractGraphicsShapeItem;
  pub fn qt_widgets_c_QAbstractGraphicsShapeItem_G_static_cast_QAbstractGraphicsShapeItem_ptr(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::abstract_graphics_shape_item::AbstractGraphicsShapeItem;
  pub fn qt_widgets_c_QAbstractGraphicsShapeItem_G_static_cast_QGraphicsItem_ptr(ptr: *mut ::abstract_graphics_shape_item::AbstractGraphicsShapeItem) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QAbstractGraphicsShapeItem_brush_to_output(this_ptr: *const ::abstract_graphics_shape_item::AbstractGraphicsShapeItem, output: *mut ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QAbstractGraphicsShapeItem_delete(this_ptr: *mut ::abstract_graphics_shape_item::AbstractGraphicsShapeItem);
  pub fn qt_widgets_c_QAbstractGraphicsShapeItem_isObscuredBy(this_ptr: *const ::abstract_graphics_shape_item::AbstractGraphicsShapeItem, item: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QAbstractGraphicsShapeItem_opaqueArea_to_output(this_ptr: *const ::abstract_graphics_shape_item::AbstractGraphicsShapeItem, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QAbstractGraphicsShapeItem_pen_to_output(this_ptr: *const ::abstract_graphics_shape_item::AbstractGraphicsShapeItem, output: *mut ::qt_gui::pen::Pen);
  pub fn qt_widgets_c_QAbstractGraphicsShapeItem_setBrush(this_ptr: *mut ::abstract_graphics_shape_item::AbstractGraphicsShapeItem, brush: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QAbstractGraphicsShapeItem_setPen(this_ptr: *mut ::abstract_graphics_shape_item::AbstractGraphicsShapeItem, pen: *const ::qt_gui::pen::Pen);

  // Header: QAbstractItemDelegate
  pub fn qt_widgets_c_QAbstractItemDelegate_G_static_cast_QAbstractItemDelegate_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::abstract_item_delegate::AbstractItemDelegate;
  pub fn qt_widgets_c_QAbstractItemDelegate_G_static_cast_QObject_ptr(ptr: *mut ::abstract_item_delegate::AbstractItemDelegate) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QAbstractItemDelegate_createEditor(this_ptr: *const ::abstract_item_delegate::AbstractItemDelegate, parent: *mut ::widget::Widget, option: *const ::style_option_view_item::StyleOptionViewItem, index: *const ::qt_core::model_index::ModelIndex) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QAbstractItemDelegate_delete(this_ptr: *mut ::abstract_item_delegate::AbstractItemDelegate);
  pub fn qt_widgets_c_QAbstractItemDelegate_destroyEditor(this_ptr: *const ::abstract_item_delegate::AbstractItemDelegate, editor: *mut ::widget::Widget, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QAbstractItemDelegate_editorEvent(this_ptr: *mut ::abstract_item_delegate::AbstractItemDelegate, event: *mut ::qt_core::event::Event, model: *mut ::qt_core::abstract_item_model::AbstractItemModel, option: *const ::style_option_view_item::StyleOptionViewItem, index: *const ::qt_core::model_index::ModelIndex) -> bool;
  pub fn qt_widgets_c_QAbstractItemDelegate_elidedText_to_output(fontMetrics: *const ::qt_gui::font_metrics::FontMetrics, width: ::libc::c_int, mode: *const ::qt_core::qt::TextElideMode, text: *const ::qt_core::string::String, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QAbstractItemDelegate_helpEvent(this_ptr: *mut ::abstract_item_delegate::AbstractItemDelegate, event: *mut ::qt_gui::help_event::HelpEvent, view: *mut ::abstract_item_view::AbstractItemView, option: *const ::style_option_view_item::StyleOptionViewItem, index: *const ::qt_core::model_index::ModelIndex) -> bool;
  pub fn qt_widgets_c_QAbstractItemDelegate_metaObject(this_ptr: *const ::abstract_item_delegate::AbstractItemDelegate) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QAbstractItemDelegate_paint(this_ptr: *const ::abstract_item_delegate::AbstractItemDelegate, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_view_item::StyleOptionViewItem, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QAbstractItemDelegate_paintingRoles_to_output(this_ptr: *const ::abstract_item_delegate::AbstractItemDelegate, output: *mut ::qt_core::vector::VectorCInt);
  pub fn qt_widgets_c_QAbstractItemDelegate_qt_metacall(this_ptr: *mut ::abstract_item_delegate::AbstractItemDelegate, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QAbstractItemDelegate_qt_metacast(this_ptr: *mut ::abstract_item_delegate::AbstractItemDelegate, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QAbstractItemDelegate_setEditorData(this_ptr: *const ::abstract_item_delegate::AbstractItemDelegate, editor: *mut ::widget::Widget, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QAbstractItemDelegate_setModelData(this_ptr: *const ::abstract_item_delegate::AbstractItemDelegate, editor: *mut ::widget::Widget, model: *mut ::qt_core::abstract_item_model::AbstractItemModel, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QAbstractItemDelegate_sizeHint_to_output(this_ptr: *const ::abstract_item_delegate::AbstractItemDelegate, option: *const ::style_option_view_item::StyleOptionViewItem, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QAbstractItemDelegate_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QAbstractItemDelegate_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QAbstractItemDelegate_updateEditorGeometry(this_ptr: *const ::abstract_item_delegate::AbstractItemDelegate, editor: *mut ::widget::Widget, option: *const ::style_option_view_item::StyleOptionViewItem, index: *const ::qt_core::model_index::ModelIndex);

  // Header: QAbstractItemView
  pub fn qt_widgets_c_QAbstractItemView_G_dynamic_cast_QAbstractItemView_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::abstract_item_view::AbstractItemView;
  pub fn qt_widgets_c_QAbstractItemView_G_dynamic_cast_QAbstractItemView_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::abstract_item_view::AbstractItemView;
  pub fn qt_widgets_c_QAbstractItemView_G_dynamic_cast_QAbstractItemView_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::abstract_item_view::AbstractItemView;
  pub fn qt_widgets_c_QAbstractItemView_G_static_cast_QAbstractItemView_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::abstract_item_view::AbstractItemView;
  pub fn qt_widgets_c_QAbstractItemView_G_static_cast_QAbstractItemView_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::abstract_item_view::AbstractItemView;
  pub fn qt_widgets_c_QAbstractItemView_G_static_cast_QAbstractItemView_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::abstract_item_view::AbstractItemView;
  pub fn qt_widgets_c_QAbstractItemView_G_static_cast_QAbstractItemView_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::abstract_item_view::AbstractItemView;
  pub fn qt_widgets_c_QAbstractItemView_G_static_cast_QAbstractItemView_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::abstract_item_view::AbstractItemView;
  pub fn qt_widgets_c_QAbstractItemView_G_static_cast_QAbstractScrollArea_ptr(ptr: *mut ::abstract_item_view::AbstractItemView) -> *mut ::abstract_scroll_area::AbstractScrollArea;
  pub fn qt_widgets_c_QAbstractItemView_G_static_cast_QFrame_ptr(ptr: *mut ::abstract_item_view::AbstractItemView) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QAbstractItemView_G_static_cast_QObject_ptr(ptr: *mut ::abstract_item_view::AbstractItemView) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QAbstractItemView_G_static_cast_QPaintDevice_ptr(ptr: *mut ::abstract_item_view::AbstractItemView) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QAbstractItemView_G_static_cast_QWidget_ptr(ptr: *mut ::abstract_item_view::AbstractItemView) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QAbstractItemView_alternatingRowColors(this_ptr: *const ::abstract_item_view::AbstractItemView) -> bool;
  pub fn qt_widgets_c_QAbstractItemView_autoScrollMargin(this_ptr: *const ::abstract_item_view::AbstractItemView) -> ::libc::c_int;
  pub fn qt_widgets_c_QAbstractItemView_clearSelection(this_ptr: *mut ::abstract_item_view::AbstractItemView);
  pub fn qt_widgets_c_QAbstractItemView_closePersistentEditor(this_ptr: *mut ::abstract_item_view::AbstractItemView, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QAbstractItemView_currentIndex_to_output(this_ptr: *const ::abstract_item_view::AbstractItemView, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QAbstractItemView_delete(this_ptr: *mut ::abstract_item_view::AbstractItemView);
  pub fn qt_widgets_c_QAbstractItemView_doItemsLayout(this_ptr: *mut ::abstract_item_view::AbstractItemView);
  pub fn qt_widgets_c_QAbstractItemView_dragDropMode(this_ptr: *const ::abstract_item_view::AbstractItemView) -> ::abstract_item_view::DragDropMode;
  pub fn qt_widgets_c_QAbstractItemView_dragDropOverwriteMode(this_ptr: *const ::abstract_item_view::AbstractItemView) -> bool;
  pub fn qt_widgets_c_QAbstractItemView_dragEnabled(this_ptr: *const ::abstract_item_view::AbstractItemView) -> bool;
  pub fn qt_widgets_c_QAbstractItemView_edit(this_ptr: *mut ::abstract_item_view::AbstractItemView, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QAbstractItemView_editTriggers(this_ptr: *const ::abstract_item_view::AbstractItemView) -> ::libc::c_uint;
  pub fn qt_widgets_c_QAbstractItemView_hasAutoScroll(this_ptr: *const ::abstract_item_view::AbstractItemView) -> bool;
  pub fn qt_widgets_c_QAbstractItemView_horizontalScrollMode(this_ptr: *const ::abstract_item_view::AbstractItemView) -> ::abstract_item_view::ScrollMode;
  pub fn qt_widgets_c_QAbstractItemView_iconSize_to_output(this_ptr: *const ::abstract_item_view::AbstractItemView, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QAbstractItemView_indexAt_to_output(this_ptr: *const ::abstract_item_view::AbstractItemView, point: *const ::qt_core::point::Point, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QAbstractItemView_indexWidget(this_ptr: *const ::abstract_item_view::AbstractItemView, index: *const ::qt_core::model_index::ModelIndex) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QAbstractItemView_inputMethodQuery_to_output(this_ptr: *const ::abstract_item_view::AbstractItemView, query: *const ::qt_core::qt::InputMethodQuery, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QAbstractItemView_itemDelegateForColumn(this_ptr: *const ::abstract_item_view::AbstractItemView, column: ::libc::c_int) -> *mut ::abstract_item_delegate::AbstractItemDelegate;
  pub fn qt_widgets_c_QAbstractItemView_itemDelegateForRow(this_ptr: *const ::abstract_item_view::AbstractItemView, row: ::libc::c_int) -> *mut ::abstract_item_delegate::AbstractItemDelegate;
  pub fn qt_widgets_c_QAbstractItemView_itemDelegate_index(this_ptr: *const ::abstract_item_view::AbstractItemView, index: *const ::qt_core::model_index::ModelIndex) -> *mut ::abstract_item_delegate::AbstractItemDelegate;
  pub fn qt_widgets_c_QAbstractItemView_itemDelegate_no_args(this_ptr: *const ::abstract_item_view::AbstractItemView) -> *mut ::abstract_item_delegate::AbstractItemDelegate;
  pub fn qt_widgets_c_QAbstractItemView_keyboardSearch(this_ptr: *mut ::abstract_item_view::AbstractItemView, search: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QAbstractItemView_metaObject(this_ptr: *const ::abstract_item_view::AbstractItemView) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QAbstractItemView_model(this_ptr: *const ::abstract_item_view::AbstractItemView) -> *mut ::qt_core::abstract_item_model::AbstractItemModel;
  pub fn qt_widgets_c_QAbstractItemView_openPersistentEditor(this_ptr: *mut ::abstract_item_view::AbstractItemView, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QAbstractItemView_qt_metacall(this_ptr: *mut ::abstract_item_view::AbstractItemView, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QAbstractItemView_qt_metacast(this_ptr: *mut ::abstract_item_view::AbstractItemView, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QAbstractItemView_reset(this_ptr: *mut ::abstract_item_view::AbstractItemView);
  pub fn qt_widgets_c_QAbstractItemView_resetHorizontalScrollMode(this_ptr: *mut ::abstract_item_view::AbstractItemView);
  pub fn qt_widgets_c_QAbstractItemView_resetVerticalScrollMode(this_ptr: *mut ::abstract_item_view::AbstractItemView);
  pub fn qt_widgets_c_QAbstractItemView_rootIndex_to_output(this_ptr: *const ::abstract_item_view::AbstractItemView, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QAbstractItemView_scrollToBottom(this_ptr: *mut ::abstract_item_view::AbstractItemView);
  pub fn qt_widgets_c_QAbstractItemView_scrollToTop(this_ptr: *mut ::abstract_item_view::AbstractItemView);
  pub fn qt_widgets_c_QAbstractItemView_scrollTo_index(this_ptr: *mut ::abstract_item_view::AbstractItemView, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QAbstractItemView_scrollTo_index_hint(this_ptr: *mut ::abstract_item_view::AbstractItemView, index: *const ::qt_core::model_index::ModelIndex, hint: ::abstract_item_view::ScrollHint);
  pub fn qt_widgets_c_QAbstractItemView_selectAll(this_ptr: *mut ::abstract_item_view::AbstractItemView);
  pub fn qt_widgets_c_QAbstractItemView_selectionModel(this_ptr: *const ::abstract_item_view::AbstractItemView) -> *mut ::qt_core::item_selection_model::ItemSelectionModel;
  pub fn qt_widgets_c_QAbstractItemView_setAlternatingRowColors(this_ptr: *mut ::abstract_item_view::AbstractItemView, enable: bool);
  pub fn qt_widgets_c_QAbstractItemView_setAutoScroll(this_ptr: *mut ::abstract_item_view::AbstractItemView, enable: bool);
  pub fn qt_widgets_c_QAbstractItemView_setAutoScrollMargin(this_ptr: *mut ::abstract_item_view::AbstractItemView, margin: ::libc::c_int);
  pub fn qt_widgets_c_QAbstractItemView_setCurrentIndex(this_ptr: *mut ::abstract_item_view::AbstractItemView, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QAbstractItemView_setDefaultDropAction(this_ptr: *mut ::abstract_item_view::AbstractItemView, dropAction: *const ::qt_core::qt::DropAction);
  pub fn qt_widgets_c_QAbstractItemView_setDragDropMode(this_ptr: *mut ::abstract_item_view::AbstractItemView, behavior: ::abstract_item_view::DragDropMode);
  pub fn qt_widgets_c_QAbstractItemView_setDragDropOverwriteMode(this_ptr: *mut ::abstract_item_view::AbstractItemView, overwrite: bool);
  pub fn qt_widgets_c_QAbstractItemView_setDragEnabled(this_ptr: *mut ::abstract_item_view::AbstractItemView, enable: bool);
  pub fn qt_widgets_c_QAbstractItemView_setDropIndicatorShown(this_ptr: *mut ::abstract_item_view::AbstractItemView, enable: bool);
  pub fn qt_widgets_c_QAbstractItemView_setEditTriggers(this_ptr: *mut ::abstract_item_view::AbstractItemView, triggers: ::libc::c_uint);
  pub fn qt_widgets_c_QAbstractItemView_setHorizontalScrollMode(this_ptr: *mut ::abstract_item_view::AbstractItemView, mode: ::abstract_item_view::ScrollMode);
  pub fn qt_widgets_c_QAbstractItemView_setIconSize(this_ptr: *mut ::abstract_item_view::AbstractItemView, size: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QAbstractItemView_setIndexWidget(this_ptr: *mut ::abstract_item_view::AbstractItemView, index: *const ::qt_core::model_index::ModelIndex, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QAbstractItemView_setItemDelegate(this_ptr: *mut ::abstract_item_view::AbstractItemView, delegate: *mut ::abstract_item_delegate::AbstractItemDelegate);
  pub fn qt_widgets_c_QAbstractItemView_setItemDelegateForColumn(this_ptr: *mut ::abstract_item_view::AbstractItemView, column: ::libc::c_int, delegate: *mut ::abstract_item_delegate::AbstractItemDelegate);
  pub fn qt_widgets_c_QAbstractItemView_setItemDelegateForRow(this_ptr: *mut ::abstract_item_view::AbstractItemView, row: ::libc::c_int, delegate: *mut ::abstract_item_delegate::AbstractItemDelegate);
  pub fn qt_widgets_c_QAbstractItemView_setModel(this_ptr: *mut ::abstract_item_view::AbstractItemView, model: *mut ::qt_core::abstract_item_model::AbstractItemModel);
  pub fn qt_widgets_c_QAbstractItemView_setRootIndex(this_ptr: *mut ::abstract_item_view::AbstractItemView, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QAbstractItemView_setSelectionBehavior(this_ptr: *mut ::abstract_item_view::AbstractItemView, behavior: *const ::abstract_item_view::SelectionBehavior);
  pub fn qt_widgets_c_QAbstractItemView_setSelectionMode(this_ptr: *mut ::abstract_item_view::AbstractItemView, mode: *const ::abstract_item_view::SelectionMode);
  pub fn qt_widgets_c_QAbstractItemView_setSelectionModel(this_ptr: *mut ::abstract_item_view::AbstractItemView, selectionModel: *mut ::qt_core::item_selection_model::ItemSelectionModel);
  pub fn qt_widgets_c_QAbstractItemView_setTabKeyNavigation(this_ptr: *mut ::abstract_item_view::AbstractItemView, enable: bool);
  pub fn qt_widgets_c_QAbstractItemView_setTextElideMode(this_ptr: *mut ::abstract_item_view::AbstractItemView, mode: *const ::qt_core::qt::TextElideMode);
  pub fn qt_widgets_c_QAbstractItemView_setVerticalScrollMode(this_ptr: *mut ::abstract_item_view::AbstractItemView, mode: ::abstract_item_view::ScrollMode);
  pub fn qt_widgets_c_QAbstractItemView_showDropIndicator(this_ptr: *const ::abstract_item_view::AbstractItemView) -> bool;
  pub fn qt_widgets_c_QAbstractItemView_sizeHintForColumn(this_ptr: *const ::abstract_item_view::AbstractItemView, column: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QAbstractItemView_sizeHintForIndex_to_output(this_ptr: *const ::abstract_item_view::AbstractItemView, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QAbstractItemView_sizeHintForRow(this_ptr: *const ::abstract_item_view::AbstractItemView, row: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QAbstractItemView_tabKeyNavigation(this_ptr: *const ::abstract_item_view::AbstractItemView) -> bool;
  pub fn qt_widgets_c_QAbstractItemView_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QAbstractItemView_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QAbstractItemView_update(this_ptr: *mut ::abstract_item_view::AbstractItemView, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QAbstractItemView_verticalScrollMode(this_ptr: *const ::abstract_item_view::AbstractItemView) -> ::abstract_item_view::ScrollMode;
  pub fn qt_widgets_c_QAbstractItemView_visualRect_to_output(this_ptr: *const ::abstract_item_view::AbstractItemView, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::rect::Rect);

  // Header: QAbstractScrollArea
  pub fn qt_widgets_c_QAbstractScrollArea_G_dynamic_cast_QAbstractScrollArea_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::abstract_scroll_area::AbstractScrollArea;
  pub fn qt_widgets_c_QAbstractScrollArea_G_dynamic_cast_QAbstractScrollArea_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::abstract_scroll_area::AbstractScrollArea;
  pub fn qt_widgets_c_QAbstractScrollArea_G_static_cast_QAbstractScrollArea_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::abstract_scroll_area::AbstractScrollArea;
  pub fn qt_widgets_c_QAbstractScrollArea_G_static_cast_QAbstractScrollArea_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::abstract_scroll_area::AbstractScrollArea;
  pub fn qt_widgets_c_QAbstractScrollArea_G_static_cast_QAbstractScrollArea_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::abstract_scroll_area::AbstractScrollArea;
  pub fn qt_widgets_c_QAbstractScrollArea_G_static_cast_QAbstractScrollArea_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::abstract_scroll_area::AbstractScrollArea;
  pub fn qt_widgets_c_QAbstractScrollArea_G_static_cast_QFrame_ptr(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QAbstractScrollArea_G_static_cast_QObject_ptr(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QAbstractScrollArea_G_static_cast_QPaintDevice_ptr(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QAbstractScrollArea_G_static_cast_QWidget_ptr(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QAbstractScrollArea_cornerWidget(this_ptr: *const ::abstract_scroll_area::AbstractScrollArea) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QAbstractScrollArea_delete(this_ptr: *mut ::abstract_scroll_area::AbstractScrollArea);
  pub fn qt_widgets_c_QAbstractScrollArea_horizontalScrollBar(this_ptr: *const ::abstract_scroll_area::AbstractScrollArea) -> *mut ::scroll_bar::ScrollBar;
  pub fn qt_widgets_c_QAbstractScrollArea_maximumViewportSize_to_output(this_ptr: *const ::abstract_scroll_area::AbstractScrollArea, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QAbstractScrollArea_metaObject(this_ptr: *const ::abstract_scroll_area::AbstractScrollArea) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QAbstractScrollArea_minimumSizeHint_to_output(this_ptr: *const ::abstract_scroll_area::AbstractScrollArea, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QAbstractScrollArea_new_no_args() -> *mut ::abstract_scroll_area::AbstractScrollArea;
  pub fn qt_widgets_c_QAbstractScrollArea_new_parent(parent: *mut ::widget::Widget) -> *mut ::abstract_scroll_area::AbstractScrollArea;
  pub fn qt_widgets_c_QAbstractScrollArea_qt_metacall(this_ptr: *mut ::abstract_scroll_area::AbstractScrollArea, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QAbstractScrollArea_qt_metacast(this_ptr: *mut ::abstract_scroll_area::AbstractScrollArea, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QAbstractScrollArea_setCornerWidget(this_ptr: *mut ::abstract_scroll_area::AbstractScrollArea, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QAbstractScrollArea_setHorizontalScrollBar(this_ptr: *mut ::abstract_scroll_area::AbstractScrollArea, scrollbar: *mut ::scroll_bar::ScrollBar);
  pub fn qt_widgets_c_QAbstractScrollArea_setHorizontalScrollBarPolicy(this_ptr: *mut ::abstract_scroll_area::AbstractScrollArea, arg1: *const ::qt_core::qt::ScrollBarPolicy);
  pub fn qt_widgets_c_QAbstractScrollArea_setSizeAdjustPolicy(this_ptr: *mut ::abstract_scroll_area::AbstractScrollArea, policy: ::abstract_scroll_area::SizeAdjustPolicy);
  pub fn qt_widgets_c_QAbstractScrollArea_setVerticalScrollBar(this_ptr: *mut ::abstract_scroll_area::AbstractScrollArea, scrollbar: *mut ::scroll_bar::ScrollBar);
  pub fn qt_widgets_c_QAbstractScrollArea_setVerticalScrollBarPolicy(this_ptr: *mut ::abstract_scroll_area::AbstractScrollArea, arg1: *const ::qt_core::qt::ScrollBarPolicy);
  pub fn qt_widgets_c_QAbstractScrollArea_setViewport(this_ptr: *mut ::abstract_scroll_area::AbstractScrollArea, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QAbstractScrollArea_setupViewport(this_ptr: *mut ::abstract_scroll_area::AbstractScrollArea, viewport: *mut ::widget::Widget);
  pub fn qt_widgets_c_QAbstractScrollArea_sizeAdjustPolicy(this_ptr: *const ::abstract_scroll_area::AbstractScrollArea) -> ::abstract_scroll_area::SizeAdjustPolicy;
  pub fn qt_widgets_c_QAbstractScrollArea_sizeHint_to_output(this_ptr: *const ::abstract_scroll_area::AbstractScrollArea, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QAbstractScrollArea_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QAbstractScrollArea_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QAbstractScrollArea_verticalScrollBar(this_ptr: *const ::abstract_scroll_area::AbstractScrollArea) -> *mut ::scroll_bar::ScrollBar;
  pub fn qt_widgets_c_QAbstractScrollArea_viewport(this_ptr: *const ::abstract_scroll_area::AbstractScrollArea) -> *mut ::widget::Widget;

  // Header: QAbstractSlider
  pub fn qt_widgets_c_QAbstractSlider_G_dynamic_cast_QAbstractSlider_ptr(ptr: *mut ::widget::Widget) -> *mut ::abstract_slider::AbstractSlider;
  pub fn qt_widgets_c_QAbstractSlider_G_static_cast_QAbstractSlider_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::abstract_slider::AbstractSlider;
  pub fn qt_widgets_c_QAbstractSlider_G_static_cast_QAbstractSlider_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::abstract_slider::AbstractSlider;
  pub fn qt_widgets_c_QAbstractSlider_G_static_cast_QAbstractSlider_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::abstract_slider::AbstractSlider;
  pub fn qt_widgets_c_QAbstractSlider_G_static_cast_QObject_ptr(ptr: *mut ::abstract_slider::AbstractSlider) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QAbstractSlider_G_static_cast_QPaintDevice_ptr(ptr: *mut ::abstract_slider::AbstractSlider) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QAbstractSlider_G_static_cast_QWidget_ptr(ptr: *mut ::abstract_slider::AbstractSlider) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QAbstractSlider_delete(this_ptr: *mut ::abstract_slider::AbstractSlider);
  pub fn qt_widgets_c_QAbstractSlider_hasTracking(this_ptr: *const ::abstract_slider::AbstractSlider) -> bool;
  pub fn qt_widgets_c_QAbstractSlider_invertedAppearance(this_ptr: *const ::abstract_slider::AbstractSlider) -> bool;
  pub fn qt_widgets_c_QAbstractSlider_invertedControls(this_ptr: *const ::abstract_slider::AbstractSlider) -> bool;
  pub fn qt_widgets_c_QAbstractSlider_isSliderDown(this_ptr: *const ::abstract_slider::AbstractSlider) -> bool;
  pub fn qt_widgets_c_QAbstractSlider_maximum(this_ptr: *const ::abstract_slider::AbstractSlider) -> ::libc::c_int;
  pub fn qt_widgets_c_QAbstractSlider_metaObject(this_ptr: *const ::abstract_slider::AbstractSlider) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QAbstractSlider_minimum(this_ptr: *const ::abstract_slider::AbstractSlider) -> ::libc::c_int;
  pub fn qt_widgets_c_QAbstractSlider_new_no_args() -> *mut ::abstract_slider::AbstractSlider;
  pub fn qt_widgets_c_QAbstractSlider_new_parent(parent: *mut ::widget::Widget) -> *mut ::abstract_slider::AbstractSlider;
  pub fn qt_widgets_c_QAbstractSlider_pageStep(this_ptr: *const ::abstract_slider::AbstractSlider) -> ::libc::c_int;
  pub fn qt_widgets_c_QAbstractSlider_qt_metacall(this_ptr: *mut ::abstract_slider::AbstractSlider, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QAbstractSlider_qt_metacast(this_ptr: *mut ::abstract_slider::AbstractSlider, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QAbstractSlider_setInvertedAppearance(this_ptr: *mut ::abstract_slider::AbstractSlider, arg1: bool);
  pub fn qt_widgets_c_QAbstractSlider_setInvertedControls(this_ptr: *mut ::abstract_slider::AbstractSlider, arg1: bool);
  pub fn qt_widgets_c_QAbstractSlider_setMaximum(this_ptr: *mut ::abstract_slider::AbstractSlider, arg1: ::libc::c_int);
  pub fn qt_widgets_c_QAbstractSlider_setMinimum(this_ptr: *mut ::abstract_slider::AbstractSlider, arg1: ::libc::c_int);
  pub fn qt_widgets_c_QAbstractSlider_setOrientation(this_ptr: *mut ::abstract_slider::AbstractSlider, arg1: *const ::qt_core::qt::Orientation);
  pub fn qt_widgets_c_QAbstractSlider_setPageStep(this_ptr: *mut ::abstract_slider::AbstractSlider, arg1: ::libc::c_int);
  pub fn qt_widgets_c_QAbstractSlider_setRange(this_ptr: *mut ::abstract_slider::AbstractSlider, min: ::libc::c_int, max: ::libc::c_int);
  pub fn qt_widgets_c_QAbstractSlider_setSingleStep(this_ptr: *mut ::abstract_slider::AbstractSlider, arg1: ::libc::c_int);
  pub fn qt_widgets_c_QAbstractSlider_setSliderDown(this_ptr: *mut ::abstract_slider::AbstractSlider, arg1: bool);
  pub fn qt_widgets_c_QAbstractSlider_setSliderPosition(this_ptr: *mut ::abstract_slider::AbstractSlider, arg1: ::libc::c_int);
  pub fn qt_widgets_c_QAbstractSlider_setTracking(this_ptr: *mut ::abstract_slider::AbstractSlider, enable: bool);
  pub fn qt_widgets_c_QAbstractSlider_setValue(this_ptr: *mut ::abstract_slider::AbstractSlider, arg1: ::libc::c_int);
  pub fn qt_widgets_c_QAbstractSlider_singleStep(this_ptr: *const ::abstract_slider::AbstractSlider) -> ::libc::c_int;
  pub fn qt_widgets_c_QAbstractSlider_sliderPosition(this_ptr: *const ::abstract_slider::AbstractSlider) -> ::libc::c_int;
  pub fn qt_widgets_c_QAbstractSlider_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QAbstractSlider_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QAbstractSlider_triggerAction(this_ptr: *mut ::abstract_slider::AbstractSlider, action: ::abstract_slider::SliderAction);
  pub fn qt_widgets_c_QAbstractSlider_value(this_ptr: *const ::abstract_slider::AbstractSlider) -> ::libc::c_int;

  // Header: QAbstractSpinBox
  pub fn qt_widgets_c_QAbstractSpinBox_G_dynamic_cast_QAbstractSpinBox_ptr(ptr: *mut ::widget::Widget) -> *mut ::abstract_spin_box::AbstractSpinBox;
  pub fn qt_widgets_c_QAbstractSpinBox_G_static_cast_QAbstractSpinBox_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::abstract_spin_box::AbstractSpinBox;
  pub fn qt_widgets_c_QAbstractSpinBox_G_static_cast_QAbstractSpinBox_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::abstract_spin_box::AbstractSpinBox;
  pub fn qt_widgets_c_QAbstractSpinBox_G_static_cast_QAbstractSpinBox_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::abstract_spin_box::AbstractSpinBox;
  pub fn qt_widgets_c_QAbstractSpinBox_G_static_cast_QObject_ptr(ptr: *mut ::abstract_spin_box::AbstractSpinBox) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QAbstractSpinBox_G_static_cast_QPaintDevice_ptr(ptr: *mut ::abstract_spin_box::AbstractSpinBox) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QAbstractSpinBox_G_static_cast_QWidget_ptr(ptr: *mut ::abstract_spin_box::AbstractSpinBox) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QAbstractSpinBox_buttonSymbols(this_ptr: *const ::abstract_spin_box::AbstractSpinBox) -> ::abstract_spin_box::ButtonSymbols;
  pub fn qt_widgets_c_QAbstractSpinBox_clear(this_ptr: *mut ::abstract_spin_box::AbstractSpinBox);
  pub fn qt_widgets_c_QAbstractSpinBox_correctionMode(this_ptr: *const ::abstract_spin_box::AbstractSpinBox) -> ::abstract_spin_box::CorrectionMode;
  pub fn qt_widgets_c_QAbstractSpinBox_delete(this_ptr: *mut ::abstract_spin_box::AbstractSpinBox);
  pub fn qt_widgets_c_QAbstractSpinBox_event(this_ptr: *mut ::abstract_spin_box::AbstractSpinBox, event: *mut ::qt_core::event::Event) -> bool;
  pub fn qt_widgets_c_QAbstractSpinBox_fixup(this_ptr: *const ::abstract_spin_box::AbstractSpinBox, input: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QAbstractSpinBox_hasAcceptableInput(this_ptr: *const ::abstract_spin_box::AbstractSpinBox) -> bool;
  pub fn qt_widgets_c_QAbstractSpinBox_hasFrame(this_ptr: *const ::abstract_spin_box::AbstractSpinBox) -> bool;
  pub fn qt_widgets_c_QAbstractSpinBox_inputMethodQuery_to_output(this_ptr: *const ::abstract_spin_box::AbstractSpinBox, arg1: *const ::qt_core::qt::InputMethodQuery, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QAbstractSpinBox_interpretText(this_ptr: *mut ::abstract_spin_box::AbstractSpinBox);
  pub fn qt_widgets_c_QAbstractSpinBox_isAccelerated(this_ptr: *const ::abstract_spin_box::AbstractSpinBox) -> bool;
  pub fn qt_widgets_c_QAbstractSpinBox_isGroupSeparatorShown(this_ptr: *const ::abstract_spin_box::AbstractSpinBox) -> bool;
  pub fn qt_widgets_c_QAbstractSpinBox_isReadOnly(this_ptr: *const ::abstract_spin_box::AbstractSpinBox) -> bool;
  pub fn qt_widgets_c_QAbstractSpinBox_keyboardTracking(this_ptr: *const ::abstract_spin_box::AbstractSpinBox) -> bool;
  pub fn qt_widgets_c_QAbstractSpinBox_metaObject(this_ptr: *const ::abstract_spin_box::AbstractSpinBox) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QAbstractSpinBox_minimumSizeHint_to_output(this_ptr: *const ::abstract_spin_box::AbstractSpinBox, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QAbstractSpinBox_new_no_args() -> *mut ::abstract_spin_box::AbstractSpinBox;
  pub fn qt_widgets_c_QAbstractSpinBox_new_parent(parent: *mut ::widget::Widget) -> *mut ::abstract_spin_box::AbstractSpinBox;
  pub fn qt_widgets_c_QAbstractSpinBox_qt_metacall(this_ptr: *mut ::abstract_spin_box::AbstractSpinBox, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QAbstractSpinBox_qt_metacast(this_ptr: *mut ::abstract_spin_box::AbstractSpinBox, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QAbstractSpinBox_selectAll(this_ptr: *mut ::abstract_spin_box::AbstractSpinBox);
  pub fn qt_widgets_c_QAbstractSpinBox_setAccelerated(this_ptr: *mut ::abstract_spin_box::AbstractSpinBox, on: bool);
  pub fn qt_widgets_c_QAbstractSpinBox_setButtonSymbols(this_ptr: *mut ::abstract_spin_box::AbstractSpinBox, bs: ::abstract_spin_box::ButtonSymbols);
  pub fn qt_widgets_c_QAbstractSpinBox_setCorrectionMode(this_ptr: *mut ::abstract_spin_box::AbstractSpinBox, cm: ::abstract_spin_box::CorrectionMode);
  pub fn qt_widgets_c_QAbstractSpinBox_setFrame(this_ptr: *mut ::abstract_spin_box::AbstractSpinBox, arg1: bool);
  pub fn qt_widgets_c_QAbstractSpinBox_setGroupSeparatorShown(this_ptr: *mut ::abstract_spin_box::AbstractSpinBox, shown: bool);
  pub fn qt_widgets_c_QAbstractSpinBox_setKeyboardTracking(this_ptr: *mut ::abstract_spin_box::AbstractSpinBox, kt: bool);
  pub fn qt_widgets_c_QAbstractSpinBox_setReadOnly(this_ptr: *mut ::abstract_spin_box::AbstractSpinBox, r: bool);
  pub fn qt_widgets_c_QAbstractSpinBox_setSpecialValueText(this_ptr: *mut ::abstract_spin_box::AbstractSpinBox, txt: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QAbstractSpinBox_setWrapping(this_ptr: *mut ::abstract_spin_box::AbstractSpinBox, w: bool);
  pub fn qt_widgets_c_QAbstractSpinBox_sizeHint_to_output(this_ptr: *const ::abstract_spin_box::AbstractSpinBox, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QAbstractSpinBox_specialValueText_to_output(this_ptr: *const ::abstract_spin_box::AbstractSpinBox, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QAbstractSpinBox_stepBy(this_ptr: *mut ::abstract_spin_box::AbstractSpinBox, steps: ::libc::c_int);
  pub fn qt_widgets_c_QAbstractSpinBox_stepDown(this_ptr: *mut ::abstract_spin_box::AbstractSpinBox);
  pub fn qt_widgets_c_QAbstractSpinBox_stepUp(this_ptr: *mut ::abstract_spin_box::AbstractSpinBox);
  pub fn qt_widgets_c_QAbstractSpinBox_text_to_output(this_ptr: *const ::abstract_spin_box::AbstractSpinBox, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QAbstractSpinBox_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QAbstractSpinBox_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QAbstractSpinBox_wrapping(this_ptr: *const ::abstract_spin_box::AbstractSpinBox) -> bool;

  // Header: QAccessibleWidget
  pub fn qt_widgets_c_QAccessibleWidget_G_static_cast_QAccessibleActionInterface_ptr(ptr: *mut ::accessible_widget::AccessibleWidget) -> *mut ::qt_gui::accessible_action_interface::AccessibleActionInterface;
  pub fn qt_widgets_c_QAccessibleWidget_G_static_cast_QAccessibleInterface_ptr(ptr: *mut ::accessible_widget::AccessibleWidget) -> *mut ::qt_gui::accessible_interface::AccessibleInterface;
  pub fn qt_widgets_c_QAccessibleWidget_G_static_cast_QAccessibleObject_ptr(ptr: *mut ::accessible_widget::AccessibleWidget) -> *mut ::qt_gui::accessible_object::AccessibleObject;
  pub fn qt_widgets_c_QAccessibleWidget_G_static_cast_QAccessibleWidget_ptr_QAccessibleActionInterface(ptr: *mut ::qt_gui::accessible_action_interface::AccessibleActionInterface) -> *mut ::accessible_widget::AccessibleWidget;
  pub fn qt_widgets_c_QAccessibleWidget_G_static_cast_QAccessibleWidget_ptr_QAccessibleInterface(ptr: *mut ::qt_gui::accessible_interface::AccessibleInterface) -> *mut ::accessible_widget::AccessibleWidget;
  pub fn qt_widgets_c_QAccessibleWidget_G_static_cast_QAccessibleWidget_ptr_QAccessibleObject(ptr: *mut ::qt_gui::accessible_object::AccessibleObject) -> *mut ::accessible_widget::AccessibleWidget;
  pub fn qt_widgets_c_QAccessibleWidget_actionNames_to_output(this_ptr: *const ::accessible_widget::AccessibleWidget, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QAccessibleWidget_backgroundColor_to_output(this_ptr: *const ::accessible_widget::AccessibleWidget, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QAccessibleWidget_child(this_ptr: *const ::accessible_widget::AccessibleWidget, index: ::libc::c_int) -> *mut ::qt_gui::accessible_interface::AccessibleInterface;
  pub fn qt_widgets_c_QAccessibleWidget_childCount(this_ptr: *const ::accessible_widget::AccessibleWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QAccessibleWidget_doAction(this_ptr: *mut ::accessible_widget::AccessibleWidget, actionName: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QAccessibleWidget_focusChild(this_ptr: *const ::accessible_widget::AccessibleWidget) -> *mut ::qt_gui::accessible_interface::AccessibleInterface;
  pub fn qt_widgets_c_QAccessibleWidget_foregroundColor_to_output(this_ptr: *const ::accessible_widget::AccessibleWidget, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QAccessibleWidget_indexOfChild(this_ptr: *const ::accessible_widget::AccessibleWidget, child: *const ::qt_gui::accessible_interface::AccessibleInterface) -> ::libc::c_int;
  pub fn qt_widgets_c_QAccessibleWidget_interface_cast(this_ptr: *mut ::accessible_widget::AccessibleWidget, t: *const ::qt_gui::accessible::InterfaceType) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QAccessibleWidget_isValid(this_ptr: *const ::accessible_widget::AccessibleWidget) -> bool;
  pub fn qt_widgets_c_QAccessibleWidget_keyBindingsForAction_to_output(this_ptr: *const ::accessible_widget::AccessibleWidget, actionName: *const ::qt_core::string::String, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QAccessibleWidget_new_o(o: *mut ::widget::Widget) -> *mut ::accessible_widget::AccessibleWidget;
  pub fn qt_widgets_c_QAccessibleWidget_new_o_r(o: *mut ::widget::Widget, r: *const ::qt_gui::accessible::Role) -> *mut ::accessible_widget::AccessibleWidget;
  pub fn qt_widgets_c_QAccessibleWidget_new_o_r_name(o: *mut ::widget::Widget, r: *const ::qt_gui::accessible::Role, name: *const ::qt_core::string::String) -> *mut ::accessible_widget::AccessibleWidget;
  pub fn qt_widgets_c_QAccessibleWidget_parent(this_ptr: *const ::accessible_widget::AccessibleWidget) -> *mut ::qt_gui::accessible_interface::AccessibleInterface;
  pub fn qt_widgets_c_QAccessibleWidget_rect_to_output(this_ptr: *const ::accessible_widget::AccessibleWidget, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QAccessibleWidget_state_to_output(this_ptr: *const ::accessible_widget::AccessibleWidget, output: *mut ::qt_gui::accessible::State);
  pub fn qt_widgets_c_QAccessibleWidget_text_to_output(this_ptr: *const ::accessible_widget::AccessibleWidget, t: *const ::qt_gui::accessible::Text, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QAccessibleWidget_window(this_ptr: *const ::accessible_widget::AccessibleWidget) -> *mut ::qt_gui::window::Window;

  // Header: QAction
  pub fn qt_widgets_c_QAction_G_operator_shl_to_output(arg1: *const ::qt_core::debug::Debug, arg2: *const ::action::Action, output: *mut ::qt_core::debug::Debug);
  pub fn qt_widgets_c_QAction_G_static_cast_QAction_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::action::Action;
  pub fn qt_widgets_c_QAction_G_static_cast_QObject_ptr(ptr: *mut ::action::Action) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QAction_actionGroup(this_ptr: *const ::action::Action) -> *mut ::action_group::ActionGroup;
  pub fn qt_widgets_c_QAction_activate(this_ptr: *mut ::action::Action, event: ::action::ActionEvent);
  pub fn qt_widgets_c_QAction_associatedGraphicsWidgets_to_output(this_ptr: *const ::action::Action, output: *mut ::list::ListGraphicsWidgetMutPtr);
  pub fn qt_widgets_c_QAction_associatedWidgets_to_output(this_ptr: *const ::action::Action, output: *mut ::list::ListWidgetMutPtr);
  pub fn qt_widgets_c_QAction_autoRepeat(this_ptr: *const ::action::Action) -> bool;
  pub fn qt_widgets_c_QAction_data_to_output(this_ptr: *const ::action::Action, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QAction_delete(this_ptr: *mut ::action::Action);
  pub fn qt_widgets_c_QAction_font_to_output(this_ptr: *const ::action::Action, output: *mut ::qt_gui::font::Font);
  pub fn qt_widgets_c_QAction_hover(this_ptr: *mut ::action::Action);
  pub fn qt_widgets_c_QAction_iconText_to_output(this_ptr: *const ::action::Action, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QAction_icon_to_output(this_ptr: *const ::action::Action, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QAction_isCheckable(this_ptr: *const ::action::Action) -> bool;
  pub fn qt_widgets_c_QAction_isChecked(this_ptr: *const ::action::Action) -> bool;
  pub fn qt_widgets_c_QAction_isEnabled(this_ptr: *const ::action::Action) -> bool;
  pub fn qt_widgets_c_QAction_isIconVisibleInMenu(this_ptr: *const ::action::Action) -> bool;
  pub fn qt_widgets_c_QAction_isSeparator(this_ptr: *const ::action::Action) -> bool;
  pub fn qt_widgets_c_QAction_isVisible(this_ptr: *const ::action::Action) -> bool;
  pub fn qt_widgets_c_QAction_menu(this_ptr: *const ::action::Action) -> *mut ::menu::Menu;
  pub fn qt_widgets_c_QAction_menuRole(this_ptr: *const ::action::Action) -> ::action::MenuRole;
  pub fn qt_widgets_c_QAction_metaObject(this_ptr: *const ::action::Action) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QAction_new_icon_text(icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String) -> *mut ::action::Action;
  pub fn qt_widgets_c_QAction_new_icon_text_parent(icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String, parent: *mut ::qt_core::object::Object) -> *mut ::action::Action;
  pub fn qt_widgets_c_QAction_new_no_args() -> *mut ::action::Action;
  pub fn qt_widgets_c_QAction_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::action::Action;
  pub fn qt_widgets_c_QAction_new_text(text: *const ::qt_core::string::String) -> *mut ::action::Action;
  pub fn qt_widgets_c_QAction_new_text_parent(text: *const ::qt_core::string::String, parent: *mut ::qt_core::object::Object) -> *mut ::action::Action;
  pub fn qt_widgets_c_QAction_parentWidget(this_ptr: *const ::action::Action) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QAction_priority(this_ptr: *const ::action::Action) -> ::action::Priority;
  pub fn qt_widgets_c_QAction_qt_metacall(this_ptr: *mut ::action::Action, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QAction_qt_metacast(this_ptr: *mut ::action::Action, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QAction_setActionGroup(this_ptr: *mut ::action::Action, group: *mut ::action_group::ActionGroup);
  pub fn qt_widgets_c_QAction_setAutoRepeat(this_ptr: *mut ::action::Action, arg1: bool);
  pub fn qt_widgets_c_QAction_setCheckable(this_ptr: *mut ::action::Action, arg1: bool);
  pub fn qt_widgets_c_QAction_setChecked(this_ptr: *mut ::action::Action, arg1: bool);
  pub fn qt_widgets_c_QAction_setData(this_ptr: *mut ::action::Action, var: *const ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QAction_setDisabled(this_ptr: *mut ::action::Action, b: bool);
  pub fn qt_widgets_c_QAction_setEnabled(this_ptr: *mut ::action::Action, arg1: bool);
  pub fn qt_widgets_c_QAction_setFont(this_ptr: *mut ::action::Action, font: *const ::qt_gui::font::Font);
  pub fn qt_widgets_c_QAction_setIcon(this_ptr: *mut ::action::Action, icon: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QAction_setIconText(this_ptr: *mut ::action::Action, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QAction_setIconVisibleInMenu(this_ptr: *mut ::action::Action, visible: bool);
  pub fn qt_widgets_c_QAction_setMenu(this_ptr: *mut ::action::Action, menu: *mut ::menu::Menu);
  pub fn qt_widgets_c_QAction_setMenuRole(this_ptr: *mut ::action::Action, menuRole: ::action::MenuRole);
  pub fn qt_widgets_c_QAction_setPriority(this_ptr: *mut ::action::Action, priority: ::action::Priority);
  pub fn qt_widgets_c_QAction_setSeparator(this_ptr: *mut ::action::Action, b: bool);
  pub fn qt_widgets_c_QAction_setShortcut(this_ptr: *mut ::action::Action, shortcut: *const ::qt_gui::key_sequence::KeySequence);
  pub fn qt_widgets_c_QAction_setShortcutContext(this_ptr: *mut ::action::Action, context: *const ::qt_core::qt::ShortcutContext);
  pub fn qt_widgets_c_QAction_setShortcuts_arg1(this_ptr: *mut ::action::Action, arg1: *const ::qt_gui::key_sequence::StandardKey);
  pub fn qt_widgets_c_QAction_setShortcuts_shortcuts(this_ptr: *mut ::action::Action, shortcuts: *const ::qt_gui::list::ListKeySequence);
  pub fn qt_widgets_c_QAction_setStatusTip(this_ptr: *mut ::action::Action, statusTip: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QAction_setText(this_ptr: *mut ::action::Action, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QAction_setToolTip(this_ptr: *mut ::action::Action, tip: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QAction_setVisible(this_ptr: *mut ::action::Action, arg1: bool);
  pub fn qt_widgets_c_QAction_setWhatsThis(this_ptr: *mut ::action::Action, what: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QAction_shortcut_to_output(this_ptr: *const ::action::Action, output: *mut ::qt_gui::key_sequence::KeySequence);
  pub fn qt_widgets_c_QAction_shortcuts_to_output(this_ptr: *const ::action::Action, output: *mut ::qt_gui::list::ListKeySequence);
  pub fn qt_widgets_c_QAction_showStatusText_no_args(this_ptr: *mut ::action::Action) -> bool;
  pub fn qt_widgets_c_QAction_showStatusText_widget(this_ptr: *mut ::action::Action, widget: *mut ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QAction_statusTip_to_output(this_ptr: *const ::action::Action, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QAction_text_to_output(this_ptr: *const ::action::Action, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QAction_toggle(this_ptr: *mut ::action::Action);
  pub fn qt_widgets_c_QAction_toolTip_to_output(this_ptr: *const ::action::Action, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QAction_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QAction_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QAction_trigger(this_ptr: *mut ::action::Action);
  pub fn qt_widgets_c_QAction_whatsThis_to_output(this_ptr: *const ::action::Action, output: *mut ::qt_core::string::String);

  // Header: QActionGroup
  pub fn qt_widgets_c_QActionGroup_G_static_cast_QActionGroup_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::action_group::ActionGroup;
  pub fn qt_widgets_c_QActionGroup_G_static_cast_QObject_ptr(ptr: *mut ::action_group::ActionGroup) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QActionGroup_actions_to_output(this_ptr: *const ::action_group::ActionGroup, output: *mut ::list::ListActionMutPtr);
  pub fn qt_widgets_c_QActionGroup_addAction_a(this_ptr: *mut ::action_group::ActionGroup, a: *mut ::action::Action) -> *mut ::action::Action;
  pub fn qt_widgets_c_QActionGroup_addAction_icon_text(this_ptr: *mut ::action_group::ActionGroup, icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String) -> *mut ::action::Action;
  pub fn qt_widgets_c_QActionGroup_addAction_text(this_ptr: *mut ::action_group::ActionGroup, text: *const ::qt_core::string::String) -> *mut ::action::Action;
  pub fn qt_widgets_c_QActionGroup_checkedAction(this_ptr: *const ::action_group::ActionGroup) -> *mut ::action::Action;
  pub fn qt_widgets_c_QActionGroup_delete(this_ptr: *mut ::action_group::ActionGroup);
  pub fn qt_widgets_c_QActionGroup_isEnabled(this_ptr: *const ::action_group::ActionGroup) -> bool;
  pub fn qt_widgets_c_QActionGroup_isExclusive(this_ptr: *const ::action_group::ActionGroup) -> bool;
  pub fn qt_widgets_c_QActionGroup_isVisible(this_ptr: *const ::action_group::ActionGroup) -> bool;
  pub fn qt_widgets_c_QActionGroup_metaObject(this_ptr: *const ::action_group::ActionGroup) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QActionGroup_new(parent: *mut ::qt_core::object::Object) -> *mut ::action_group::ActionGroup;
  pub fn qt_widgets_c_QActionGroup_qt_metacall(this_ptr: *mut ::action_group::ActionGroup, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QActionGroup_qt_metacast(this_ptr: *mut ::action_group::ActionGroup, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QActionGroup_removeAction(this_ptr: *mut ::action_group::ActionGroup, a: *mut ::action::Action);
  pub fn qt_widgets_c_QActionGroup_setDisabled(this_ptr: *mut ::action_group::ActionGroup, b: bool);
  pub fn qt_widgets_c_QActionGroup_setEnabled(this_ptr: *mut ::action_group::ActionGroup, arg1: bool);
  pub fn qt_widgets_c_QActionGroup_setExclusive(this_ptr: *mut ::action_group::ActionGroup, arg1: bool);
  pub fn qt_widgets_c_QActionGroup_setVisible(this_ptr: *mut ::action_group::ActionGroup, arg1: bool);
  pub fn qt_widgets_c_QActionGroup_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QActionGroup_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QApplication
  pub fn qt_widgets_c_QApplication_G_static_cast_QApplication_ptr_QCoreApplication(ptr: *mut ::qt_core::core_application::CoreApplication) -> *mut ::application::Application;
  pub fn qt_widgets_c_QApplication_G_static_cast_QApplication_ptr_QGuiApplication(ptr: *mut ::qt_gui::gui_application::GuiApplication) -> *mut ::application::Application;
  pub fn qt_widgets_c_QApplication_G_static_cast_QApplication_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::application::Application;
  pub fn qt_widgets_c_QApplication_G_static_cast_QCoreApplication_ptr(ptr: *mut ::application::Application) -> *mut ::qt_core::core_application::CoreApplication;
  pub fn qt_widgets_c_QApplication_G_static_cast_QGuiApplication_ptr(ptr: *mut ::application::Application) -> *mut ::qt_gui::gui_application::GuiApplication;
  pub fn qt_widgets_c_QApplication_G_static_cast_QObject_ptr(ptr: *mut ::application::Application) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QApplication_aboutQt();
  pub fn qt_widgets_c_QApplication_activeModalWidget() -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QApplication_activePopupWidget() -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QApplication_activeWindow() -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QApplication_alert_widget(widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QApplication_alert_widget_duration(widget: *mut ::widget::Widget, duration: ::libc::c_int);
  pub fn qt_widgets_c_QApplication_allWidgets_to_output(output: *mut ::list::ListWidgetMutPtr);
  pub fn qt_widgets_c_QApplication_autoSipEnabled(this_ptr: *const ::application::Application) -> bool;
  pub fn qt_widgets_c_QApplication_beep();
  pub fn qt_widgets_c_QApplication_closeAllWindows();
  pub fn qt_widgets_c_QApplication_colorSpec() -> ::libc::c_int;
  pub fn qt_widgets_c_QApplication_cursorFlashTime() -> ::libc::c_int;
  pub fn qt_widgets_c_QApplication_delete(this_ptr: *mut ::application::Application);
  pub fn qt_widgets_c_QApplication_desktop() -> *mut ::desktop_widget::DesktopWidget;
  pub fn qt_widgets_c_QApplication_doubleClickInterval() -> ::libc::c_int;
  pub fn qt_widgets_c_QApplication_exec() -> ::libc::c_int;
  pub fn qt_widgets_c_QApplication_focusWidget() -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QApplication_fontMetrics_to_output(output: *mut ::qt_gui::font_metrics::FontMetrics);
  pub fn qt_widgets_c_QApplication_font_to_output_arg1(arg1: *const ::widget::Widget, output: *mut ::qt_gui::font::Font);
  pub fn qt_widgets_c_QApplication_font_to_output_className(className: *const ::libc::c_char, output: *mut ::qt_gui::font::Font);
  pub fn qt_widgets_c_QApplication_font_to_output_no_args(output: *mut ::qt_gui::font::Font);
  pub fn qt_widgets_c_QApplication_globalStrut_to_output(output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QApplication_isEffectEnabled(arg1: *const ::qt_core::qt::UIEffect) -> bool;
  pub fn qt_widgets_c_QApplication_keyboardInputInterval() -> ::libc::c_int;
  pub fn qt_widgets_c_QApplication_metaObject(this_ptr: *const ::application::Application) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QApplication_new_argc_argv(argc: *mut ::libc::c_int, argv: *mut *mut ::libc::c_char) -> *mut ::application::Application;
  pub fn qt_widgets_c_QApplication_new_argc_argv_arg3(argc: *mut ::libc::c_int, argv: *mut *mut ::libc::c_char, arg3: ::libc::c_int) -> *mut ::application::Application;
  pub fn qt_widgets_c_QApplication_notify(this_ptr: *mut ::application::Application, arg1: *mut ::qt_core::object::Object, arg2: *mut ::qt_core::event::Event) -> bool;
  pub fn qt_widgets_c_QApplication_palette_to_output_arg1(arg1: *const ::widget::Widget, output: *mut ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QApplication_palette_to_output_className(className: *const ::libc::c_char, output: *mut ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QApplication_qt_metacall(this_ptr: *mut ::application::Application, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QApplication_qt_metacast(this_ptr: *mut ::application::Application, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QApplication_setActiveWindow(act: *mut ::widget::Widget);
  pub fn qt_widgets_c_QApplication_setAutoSipEnabled(this_ptr: *mut ::application::Application, enabled: bool);
  pub fn qt_widgets_c_QApplication_setColorSpec(arg1: ::libc::c_int);
  pub fn qt_widgets_c_QApplication_setCursorFlashTime(arg1: ::libc::c_int);
  pub fn qt_widgets_c_QApplication_setDoubleClickInterval(arg1: ::libc::c_int);
  pub fn qt_widgets_c_QApplication_setEffectEnabled_arg1(arg1: *const ::qt_core::qt::UIEffect);
  pub fn qt_widgets_c_QApplication_setEffectEnabled_arg1_enable(arg1: *const ::qt_core::qt::UIEffect, enable: bool);
  pub fn qt_widgets_c_QApplication_setFont_arg1(arg1: *const ::qt_gui::font::Font);
  pub fn qt_widgets_c_QApplication_setFont_arg1_className(arg1: *const ::qt_gui::font::Font, className: *const ::libc::c_char);
  pub fn qt_widgets_c_QApplication_setGlobalStrut(arg1: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QApplication_setKeyboardInputInterval(arg1: ::libc::c_int);
  pub fn qt_widgets_c_QApplication_setPalette_arg1(arg1: *const ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QApplication_setPalette_arg1_className(arg1: *const ::qt_gui::palette::Palette, className: *const ::libc::c_char);
  pub fn qt_widgets_c_QApplication_setStartDragDistance(l: ::libc::c_int);
  pub fn qt_widgets_c_QApplication_setStartDragTime(ms: ::libc::c_int);
  pub fn qt_widgets_c_QApplication_setStyleSheet(this_ptr: *mut ::application::Application, sheet: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QApplication_setStyle_QString(arg1: *const ::qt_core::string::String) -> *mut ::style::Style;
  pub fn qt_widgets_c_QApplication_setStyle_QStyle(arg1: *mut ::style::Style);
  pub fn qt_widgets_c_QApplication_setWheelScrollLines(arg1: ::libc::c_int);
  pub fn qt_widgets_c_QApplication_setWindowIcon(icon: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QApplication_startDragDistance() -> ::libc::c_int;
  pub fn qt_widgets_c_QApplication_startDragTime() -> ::libc::c_int;
  pub fn qt_widgets_c_QApplication_style() -> *mut ::style::Style;
  pub fn qt_widgets_c_QApplication_styleSheet_to_output(this_ptr: *const ::application::Application, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QApplication_topLevelAt_p(p: *const ::qt_core::point::Point) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QApplication_topLevelAt_x_y(x: ::libc::c_int, y: ::libc::c_int) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QApplication_topLevelWidgets_to_output(output: *mut ::list::ListWidgetMutPtr);
  pub fn qt_widgets_c_QApplication_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QApplication_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QApplication_wheelScrollLines() -> ::libc::c_int;
  pub fn qt_widgets_c_QApplication_widgetAt_p(p: *const ::qt_core::point::Point) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QApplication_widgetAt_x_y(x: ::libc::c_int, y: ::libc::c_int) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QApplication_windowIcon_to_output(output: *mut ::qt_gui::icon::Icon);

  // Header: QBoxLayout
  pub fn qt_widgets_c_QBoxLayout_G_dynamic_cast_QBoxLayout_ptr_QLayout(ptr: *mut ::layout::Layout) -> *mut ::box_layout::BoxLayout;
  pub fn qt_widgets_c_QBoxLayout_G_dynamic_cast_QBoxLayout_ptr_QLayoutItem(ptr: *mut ::layout_item::LayoutItem) -> *mut ::box_layout::BoxLayout;
  pub fn qt_widgets_c_QBoxLayout_G_static_cast_QBoxLayout_ptr_QLayout(ptr: *mut ::layout::Layout) -> *mut ::box_layout::BoxLayout;
  pub fn qt_widgets_c_QBoxLayout_G_static_cast_QBoxLayout_ptr_QLayoutItem(ptr: *mut ::layout_item::LayoutItem) -> *mut ::box_layout::BoxLayout;
  pub fn qt_widgets_c_QBoxLayout_G_static_cast_QBoxLayout_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::box_layout::BoxLayout;
  pub fn qt_widgets_c_QBoxLayout_G_static_cast_QLayoutItem_ptr(ptr: *mut ::box_layout::BoxLayout) -> *mut ::layout_item::LayoutItem;
  pub fn qt_widgets_c_QBoxLayout_G_static_cast_QLayout_ptr(ptr: *mut ::box_layout::BoxLayout) -> *mut ::layout::Layout;
  pub fn qt_widgets_c_QBoxLayout_G_static_cast_QObject_ptr(ptr: *mut ::box_layout::BoxLayout) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QBoxLayout_addItem(this_ptr: *mut ::box_layout::BoxLayout, arg1: *mut ::layout_item::LayoutItem);
  pub fn qt_widgets_c_QBoxLayout_addLayout_layout(this_ptr: *mut ::box_layout::BoxLayout, layout: *mut ::layout::Layout);
  pub fn qt_widgets_c_QBoxLayout_addLayout_layout_stretch(this_ptr: *mut ::box_layout::BoxLayout, layout: *mut ::layout::Layout, stretch: ::libc::c_int);
  pub fn qt_widgets_c_QBoxLayout_addSpacerItem(this_ptr: *mut ::box_layout::BoxLayout, spacerItem: *mut ::spacer_item::SpacerItem);
  pub fn qt_widgets_c_QBoxLayout_addSpacing(this_ptr: *mut ::box_layout::BoxLayout, size: ::libc::c_int);
  pub fn qt_widgets_c_QBoxLayout_addStretch_no_args(this_ptr: *mut ::box_layout::BoxLayout);
  pub fn qt_widgets_c_QBoxLayout_addStretch_stretch(this_ptr: *mut ::box_layout::BoxLayout, stretch: ::libc::c_int);
  pub fn qt_widgets_c_QBoxLayout_addStrut(this_ptr: *mut ::box_layout::BoxLayout, arg1: ::libc::c_int);
  pub fn qt_widgets_c_QBoxLayout_count(this_ptr: *const ::box_layout::BoxLayout) -> ::libc::c_int;
  pub fn qt_widgets_c_QBoxLayout_delete(this_ptr: *mut ::box_layout::BoxLayout);
  pub fn qt_widgets_c_QBoxLayout_direction(this_ptr: *const ::box_layout::BoxLayout) -> ::box_layout::Direction;
  pub fn qt_widgets_c_QBoxLayout_hasHeightForWidth(this_ptr: *const ::box_layout::BoxLayout) -> bool;
  pub fn qt_widgets_c_QBoxLayout_heightForWidth(this_ptr: *const ::box_layout::BoxLayout, arg1: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QBoxLayout_insertItem(this_ptr: *mut ::box_layout::BoxLayout, index: ::libc::c_int, arg2: *mut ::layout_item::LayoutItem);
  pub fn qt_widgets_c_QBoxLayout_insertLayout_index_layout(this_ptr: *mut ::box_layout::BoxLayout, index: ::libc::c_int, layout: *mut ::layout::Layout);
  pub fn qt_widgets_c_QBoxLayout_insertLayout_index_layout_stretch(this_ptr: *mut ::box_layout::BoxLayout, index: ::libc::c_int, layout: *mut ::layout::Layout, stretch: ::libc::c_int);
  pub fn qt_widgets_c_QBoxLayout_insertSpacerItem(this_ptr: *mut ::box_layout::BoxLayout, index: ::libc::c_int, spacerItem: *mut ::spacer_item::SpacerItem);
  pub fn qt_widgets_c_QBoxLayout_insertSpacing(this_ptr: *mut ::box_layout::BoxLayout, index: ::libc::c_int, size: ::libc::c_int);
  pub fn qt_widgets_c_QBoxLayout_insertStretch_index(this_ptr: *mut ::box_layout::BoxLayout, index: ::libc::c_int);
  pub fn qt_widgets_c_QBoxLayout_insertStretch_index_stretch(this_ptr: *mut ::box_layout::BoxLayout, index: ::libc::c_int, stretch: ::libc::c_int);
  pub fn qt_widgets_c_QBoxLayout_invalidate(this_ptr: *mut ::box_layout::BoxLayout);
  pub fn qt_widgets_c_QBoxLayout_itemAt(this_ptr: *const ::box_layout::BoxLayout, arg1: ::libc::c_int) -> *mut ::layout_item::LayoutItem;
  pub fn qt_widgets_c_QBoxLayout_maximumSize_to_output(this_ptr: *const ::box_layout::BoxLayout, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QBoxLayout_metaObject(this_ptr: *const ::box_layout::BoxLayout) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QBoxLayout_minimumHeightForWidth(this_ptr: *const ::box_layout::BoxLayout, arg1: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QBoxLayout_minimumSize_to_output(this_ptr: *const ::box_layout::BoxLayout, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QBoxLayout_new_arg1(arg1: ::box_layout::Direction) -> *mut ::box_layout::BoxLayout;
  pub fn qt_widgets_c_QBoxLayout_new_arg1_parent(arg1: ::box_layout::Direction, parent: *mut ::widget::Widget) -> *mut ::box_layout::BoxLayout;
  pub fn qt_widgets_c_QBoxLayout_qt_metacall(this_ptr: *mut ::box_layout::BoxLayout, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QBoxLayout_qt_metacast(this_ptr: *mut ::box_layout::BoxLayout, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QBoxLayout_setDirection(this_ptr: *mut ::box_layout::BoxLayout, arg1: ::box_layout::Direction);
  pub fn qt_widgets_c_QBoxLayout_setGeometry(this_ptr: *mut ::box_layout::BoxLayout, arg1: *const ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QBoxLayout_setSpacing(this_ptr: *mut ::box_layout::BoxLayout, spacing: ::libc::c_int);
  pub fn qt_widgets_c_QBoxLayout_setStretch(this_ptr: *mut ::box_layout::BoxLayout, index: ::libc::c_int, stretch: ::libc::c_int);
  pub fn qt_widgets_c_QBoxLayout_setStretchFactor_l_stretch(this_ptr: *mut ::box_layout::BoxLayout, l: *mut ::layout::Layout, stretch: ::libc::c_int) -> bool;
  pub fn qt_widgets_c_QBoxLayout_setStretchFactor_w_stretch(this_ptr: *mut ::box_layout::BoxLayout, w: *mut ::widget::Widget, stretch: ::libc::c_int) -> bool;
  pub fn qt_widgets_c_QBoxLayout_sizeHint_to_output(this_ptr: *const ::box_layout::BoxLayout, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QBoxLayout_spacing(this_ptr: *const ::box_layout::BoxLayout) -> ::libc::c_int;
  pub fn qt_widgets_c_QBoxLayout_stretch(this_ptr: *const ::box_layout::BoxLayout, index: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QBoxLayout_takeAt(this_ptr: *mut ::box_layout::BoxLayout, arg1: ::libc::c_int) -> *mut ::layout_item::LayoutItem;
  pub fn qt_widgets_c_QBoxLayout_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QBoxLayout_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QButtonGroup
  pub fn qt_widgets_c_QButtonGroup_G_static_cast_QButtonGroup_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::button_group::ButtonGroup;
  pub fn qt_widgets_c_QButtonGroup_G_static_cast_QObject_ptr(ptr: *mut ::button_group::ButtonGroup) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QButtonGroup_addButton_arg1(this_ptr: *mut ::button_group::ButtonGroup, arg1: *mut ::abstract_button::AbstractButton);
  pub fn qt_widgets_c_QButtonGroup_addButton_arg1_id(this_ptr: *mut ::button_group::ButtonGroup, arg1: *mut ::abstract_button::AbstractButton, id: ::libc::c_int);
  pub fn qt_widgets_c_QButtonGroup_button(this_ptr: *const ::button_group::ButtonGroup, id: ::libc::c_int) -> *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QButtonGroup_buttons_to_output(this_ptr: *const ::button_group::ButtonGroup, output: *mut ::list::ListAbstractButtonMutPtr);
  pub fn qt_widgets_c_QButtonGroup_checkedButton(this_ptr: *const ::button_group::ButtonGroup) -> *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QButtonGroup_checkedId(this_ptr: *const ::button_group::ButtonGroup) -> ::libc::c_int;
  pub fn qt_widgets_c_QButtonGroup_delete(this_ptr: *mut ::button_group::ButtonGroup);
  pub fn qt_widgets_c_QButtonGroup_exclusive(this_ptr: *const ::button_group::ButtonGroup) -> bool;
  pub fn qt_widgets_c_QButtonGroup_id(this_ptr: *const ::button_group::ButtonGroup, button: *mut ::abstract_button::AbstractButton) -> ::libc::c_int;
  pub fn qt_widgets_c_QButtonGroup_metaObject(this_ptr: *const ::button_group::ButtonGroup) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QButtonGroup_new_no_args() -> *mut ::button_group::ButtonGroup;
  pub fn qt_widgets_c_QButtonGroup_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::button_group::ButtonGroup;
  pub fn qt_widgets_c_QButtonGroup_qt_metacall(this_ptr: *mut ::button_group::ButtonGroup, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QButtonGroup_qt_metacast(this_ptr: *mut ::button_group::ButtonGroup, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QButtonGroup_removeButton(this_ptr: *mut ::button_group::ButtonGroup, arg1: *mut ::abstract_button::AbstractButton);
  pub fn qt_widgets_c_QButtonGroup_setExclusive(this_ptr: *mut ::button_group::ButtonGroup, arg1: bool);
  pub fn qt_widgets_c_QButtonGroup_setId(this_ptr: *mut ::button_group::ButtonGroup, button: *mut ::abstract_button::AbstractButton, id: ::libc::c_int);
  pub fn qt_widgets_c_QButtonGroup_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QButtonGroup_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QCalendarWidget
  pub fn qt_widgets_c_QCalendarWidget_G_dynamic_cast_QCalendarWidget_ptr(ptr: *mut ::widget::Widget) -> *mut ::calendar_widget::CalendarWidget;
  pub fn qt_widgets_c_QCalendarWidget_G_static_cast_QCalendarWidget_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::calendar_widget::CalendarWidget;
  pub fn qt_widgets_c_QCalendarWidget_G_static_cast_QCalendarWidget_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::calendar_widget::CalendarWidget;
  pub fn qt_widgets_c_QCalendarWidget_G_static_cast_QCalendarWidget_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::calendar_widget::CalendarWidget;
  pub fn qt_widgets_c_QCalendarWidget_G_static_cast_QObject_ptr(ptr: *mut ::calendar_widget::CalendarWidget) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QCalendarWidget_G_static_cast_QPaintDevice_ptr(ptr: *mut ::calendar_widget::CalendarWidget) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QCalendarWidget_G_static_cast_QWidget_ptr(ptr: *mut ::calendar_widget::CalendarWidget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QCalendarWidget_dateEditAcceptDelay(this_ptr: *const ::calendar_widget::CalendarWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QCalendarWidget_dateTextFormat_to_output_date(this_ptr: *const ::calendar_widget::CalendarWidget, date: *const ::qt_core::date::Date, output: *mut ::qt_gui::text_char_format::TextCharFormat);
  pub fn qt_widgets_c_QCalendarWidget_dateTextFormat_to_output_no_args(this_ptr: *const ::calendar_widget::CalendarWidget, output: *mut ::map::MapQtCoreDateQtGuiTextCharFormat);
  pub fn qt_widgets_c_QCalendarWidget_delete(this_ptr: *mut ::calendar_widget::CalendarWidget);
  pub fn qt_widgets_c_QCalendarWidget_headerTextFormat_to_output(this_ptr: *const ::calendar_widget::CalendarWidget, output: *mut ::qt_gui::text_char_format::TextCharFormat);
  pub fn qt_widgets_c_QCalendarWidget_horizontalHeaderFormat(this_ptr: *const ::calendar_widget::CalendarWidget) -> ::calendar_widget::HorizontalHeaderFormat;
  pub fn qt_widgets_c_QCalendarWidget_isDateEditEnabled(this_ptr: *const ::calendar_widget::CalendarWidget) -> bool;
  pub fn qt_widgets_c_QCalendarWidget_isGridVisible(this_ptr: *const ::calendar_widget::CalendarWidget) -> bool;
  pub fn qt_widgets_c_QCalendarWidget_isNavigationBarVisible(this_ptr: *const ::calendar_widget::CalendarWidget) -> bool;
  pub fn qt_widgets_c_QCalendarWidget_maximumDate_to_output(this_ptr: *const ::calendar_widget::CalendarWidget, output: *mut ::qt_core::date::Date);
  pub fn qt_widgets_c_QCalendarWidget_metaObject(this_ptr: *const ::calendar_widget::CalendarWidget) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QCalendarWidget_minimumDate_to_output(this_ptr: *const ::calendar_widget::CalendarWidget, output: *mut ::qt_core::date::Date);
  pub fn qt_widgets_c_QCalendarWidget_minimumSizeHint_to_output(this_ptr: *const ::calendar_widget::CalendarWidget, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QCalendarWidget_monthShown(this_ptr: *const ::calendar_widget::CalendarWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QCalendarWidget_new_no_args() -> *mut ::calendar_widget::CalendarWidget;
  pub fn qt_widgets_c_QCalendarWidget_new_parent(parent: *mut ::widget::Widget) -> *mut ::calendar_widget::CalendarWidget;
  pub fn qt_widgets_c_QCalendarWidget_qt_metacall(this_ptr: *mut ::calendar_widget::CalendarWidget, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QCalendarWidget_qt_metacast(this_ptr: *mut ::calendar_widget::CalendarWidget, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QCalendarWidget_selectedDate_to_output(this_ptr: *const ::calendar_widget::CalendarWidget, output: *mut ::qt_core::date::Date);
  pub fn qt_widgets_c_QCalendarWidget_selectionMode(this_ptr: *const ::calendar_widget::CalendarWidget) -> ::calendar_widget::SelectionMode;
  pub fn qt_widgets_c_QCalendarWidget_setCurrentPage(this_ptr: *mut ::calendar_widget::CalendarWidget, year: ::libc::c_int, month: ::libc::c_int);
  pub fn qt_widgets_c_QCalendarWidget_setDateEditAcceptDelay(this_ptr: *mut ::calendar_widget::CalendarWidget, delay: ::libc::c_int);
  pub fn qt_widgets_c_QCalendarWidget_setDateEditEnabled(this_ptr: *mut ::calendar_widget::CalendarWidget, enable: bool);
  pub fn qt_widgets_c_QCalendarWidget_setDateRange(this_ptr: *mut ::calendar_widget::CalendarWidget, min: *const ::qt_core::date::Date, max: *const ::qt_core::date::Date);
  pub fn qt_widgets_c_QCalendarWidget_setDateTextFormat(this_ptr: *mut ::calendar_widget::CalendarWidget, date: *const ::qt_core::date::Date, format: *const ::qt_gui::text_char_format::TextCharFormat);
  pub fn qt_widgets_c_QCalendarWidget_setFirstDayOfWeek(this_ptr: *mut ::calendar_widget::CalendarWidget, dayOfWeek: *const ::qt_core::qt::DayOfWeek);
  pub fn qt_widgets_c_QCalendarWidget_setGridVisible(this_ptr: *mut ::calendar_widget::CalendarWidget, show: bool);
  pub fn qt_widgets_c_QCalendarWidget_setHeaderTextFormat(this_ptr: *mut ::calendar_widget::CalendarWidget, format: *const ::qt_gui::text_char_format::TextCharFormat);
  pub fn qt_widgets_c_QCalendarWidget_setHorizontalHeaderFormat(this_ptr: *mut ::calendar_widget::CalendarWidget, format: ::calendar_widget::HorizontalHeaderFormat);
  pub fn qt_widgets_c_QCalendarWidget_setMaximumDate(this_ptr: *mut ::calendar_widget::CalendarWidget, date: *const ::qt_core::date::Date);
  pub fn qt_widgets_c_QCalendarWidget_setMinimumDate(this_ptr: *mut ::calendar_widget::CalendarWidget, date: *const ::qt_core::date::Date);
  pub fn qt_widgets_c_QCalendarWidget_setNavigationBarVisible(this_ptr: *mut ::calendar_widget::CalendarWidget, visible: bool);
  pub fn qt_widgets_c_QCalendarWidget_setSelectedDate(this_ptr: *mut ::calendar_widget::CalendarWidget, date: *const ::qt_core::date::Date);
  pub fn qt_widgets_c_QCalendarWidget_setSelectionMode(this_ptr: *mut ::calendar_widget::CalendarWidget, mode: ::calendar_widget::SelectionMode);
  pub fn qt_widgets_c_QCalendarWidget_setVerticalHeaderFormat(this_ptr: *mut ::calendar_widget::CalendarWidget, format: ::calendar_widget::VerticalHeaderFormat);
  pub fn qt_widgets_c_QCalendarWidget_setWeekdayTextFormat(this_ptr: *mut ::calendar_widget::CalendarWidget, dayOfWeek: *const ::qt_core::qt::DayOfWeek, format: *const ::qt_gui::text_char_format::TextCharFormat);
  pub fn qt_widgets_c_QCalendarWidget_showNextMonth(this_ptr: *mut ::calendar_widget::CalendarWidget);
  pub fn qt_widgets_c_QCalendarWidget_showNextYear(this_ptr: *mut ::calendar_widget::CalendarWidget);
  pub fn qt_widgets_c_QCalendarWidget_showPreviousMonth(this_ptr: *mut ::calendar_widget::CalendarWidget);
  pub fn qt_widgets_c_QCalendarWidget_showPreviousYear(this_ptr: *mut ::calendar_widget::CalendarWidget);
  pub fn qt_widgets_c_QCalendarWidget_showSelectedDate(this_ptr: *mut ::calendar_widget::CalendarWidget);
  pub fn qt_widgets_c_QCalendarWidget_showToday(this_ptr: *mut ::calendar_widget::CalendarWidget);
  pub fn qt_widgets_c_QCalendarWidget_sizeHint_to_output(this_ptr: *const ::calendar_widget::CalendarWidget, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QCalendarWidget_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QCalendarWidget_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QCalendarWidget_verticalHeaderFormat(this_ptr: *const ::calendar_widget::CalendarWidget) -> ::calendar_widget::VerticalHeaderFormat;
  pub fn qt_widgets_c_QCalendarWidget_weekdayTextFormat_to_output(this_ptr: *const ::calendar_widget::CalendarWidget, dayOfWeek: *const ::qt_core::qt::DayOfWeek, output: *mut ::qt_gui::text_char_format::TextCharFormat);
  pub fn qt_widgets_c_QCalendarWidget_yearShown(this_ptr: *const ::calendar_widget::CalendarWidget) -> ::libc::c_int;

  // Header: QCheckBox
  pub fn qt_widgets_c_QCheckBox_G_dynamic_cast_QCheckBox_ptr_QAbstractButton(ptr: *mut ::abstract_button::AbstractButton) -> *mut ::check_box::CheckBox;
  pub fn qt_widgets_c_QCheckBox_G_dynamic_cast_QCheckBox_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::check_box::CheckBox;
  pub fn qt_widgets_c_QCheckBox_G_static_cast_QAbstractButton_ptr(ptr: *mut ::check_box::CheckBox) -> *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QCheckBox_G_static_cast_QCheckBox_ptr_QAbstractButton(ptr: *mut ::abstract_button::AbstractButton) -> *mut ::check_box::CheckBox;
  pub fn qt_widgets_c_QCheckBox_G_static_cast_QCheckBox_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::check_box::CheckBox;
  pub fn qt_widgets_c_QCheckBox_G_static_cast_QCheckBox_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::check_box::CheckBox;
  pub fn qt_widgets_c_QCheckBox_G_static_cast_QCheckBox_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::check_box::CheckBox;
  pub fn qt_widgets_c_QCheckBox_G_static_cast_QObject_ptr(ptr: *mut ::check_box::CheckBox) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QCheckBox_G_static_cast_QPaintDevice_ptr(ptr: *mut ::check_box::CheckBox) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QCheckBox_G_static_cast_QWidget_ptr(ptr: *mut ::check_box::CheckBox) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QCheckBox_delete(this_ptr: *mut ::check_box::CheckBox);
  pub fn qt_widgets_c_QCheckBox_isTristate(this_ptr: *const ::check_box::CheckBox) -> bool;
  pub fn qt_widgets_c_QCheckBox_metaObject(this_ptr: *const ::check_box::CheckBox) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QCheckBox_minimumSizeHint_to_output(this_ptr: *const ::check_box::CheckBox, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QCheckBox_new_no_args() -> *mut ::check_box::CheckBox;
  pub fn qt_widgets_c_QCheckBox_new_parent(parent: *mut ::widget::Widget) -> *mut ::check_box::CheckBox;
  pub fn qt_widgets_c_QCheckBox_new_text(text: *const ::qt_core::string::String) -> *mut ::check_box::CheckBox;
  pub fn qt_widgets_c_QCheckBox_new_text_parent(text: *const ::qt_core::string::String, parent: *mut ::widget::Widget) -> *mut ::check_box::CheckBox;
  pub fn qt_widgets_c_QCheckBox_qt_metacall(this_ptr: *mut ::check_box::CheckBox, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QCheckBox_qt_metacast(this_ptr: *mut ::check_box::CheckBox, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QCheckBox_setCheckState(this_ptr: *mut ::check_box::CheckBox, state: *const ::qt_core::qt::CheckState);
  pub fn qt_widgets_c_QCheckBox_setTristate_no_args(this_ptr: *mut ::check_box::CheckBox);
  pub fn qt_widgets_c_QCheckBox_setTristate_y(this_ptr: *mut ::check_box::CheckBox, y: bool);
  pub fn qt_widgets_c_QCheckBox_sizeHint_to_output(this_ptr: *const ::check_box::CheckBox, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QCheckBox_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QCheckBox_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QColorDialog
  pub fn qt_widgets_c_QColorDialog_G_dynamic_cast_QColorDialog_ptr_QDialog(ptr: *mut ::dialog::Dialog) -> *mut ::color_dialog::ColorDialog;
  pub fn qt_widgets_c_QColorDialog_G_dynamic_cast_QColorDialog_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::color_dialog::ColorDialog;
  pub fn qt_widgets_c_QColorDialog_G_static_cast_QColorDialog_ptr_QDialog(ptr: *mut ::dialog::Dialog) -> *mut ::color_dialog::ColorDialog;
  pub fn qt_widgets_c_QColorDialog_G_static_cast_QColorDialog_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::color_dialog::ColorDialog;
  pub fn qt_widgets_c_QColorDialog_G_static_cast_QColorDialog_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::color_dialog::ColorDialog;
  pub fn qt_widgets_c_QColorDialog_G_static_cast_QColorDialog_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::color_dialog::ColorDialog;
  pub fn qt_widgets_c_QColorDialog_G_static_cast_QDialog_ptr(ptr: *mut ::color_dialog::ColorDialog) -> *mut ::dialog::Dialog;
  pub fn qt_widgets_c_QColorDialog_G_static_cast_QObject_ptr(ptr: *mut ::color_dialog::ColorDialog) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QColorDialog_G_static_cast_QPaintDevice_ptr(ptr: *mut ::color_dialog::ColorDialog) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QColorDialog_G_static_cast_QWidget_ptr(ptr: *mut ::color_dialog::ColorDialog) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QColorDialog_currentColor_to_output(this_ptr: *const ::color_dialog::ColorDialog, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QColorDialog_customColor_to_output(index: ::libc::c_int, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QColorDialog_customCount() -> ::libc::c_int;
  pub fn qt_widgets_c_QColorDialog_delete(this_ptr: *mut ::color_dialog::ColorDialog);
  pub fn qt_widgets_c_QColorDialog_getColor_to_output_initial(initial: *const ::qt_gui::color::Color, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QColorDialog_getColor_to_output_initial_parent(initial: *const ::qt_gui::color::Color, parent: *mut ::widget::Widget, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QColorDialog_getColor_to_output_initial_parent_title(initial: *const ::qt_gui::color::Color, parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QColorDialog_getColor_to_output_initial_parent_title_options(initial: *const ::qt_gui::color::Color, parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, options: ::libc::c_uint, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QColorDialog_getColor_to_output_no_args(output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QColorDialog_getRgba_no_args() -> ::libc::c_uint;
  pub fn qt_widgets_c_QColorDialog_getRgba_rgba(rgba: ::libc::c_uint) -> ::libc::c_uint;
  pub fn qt_widgets_c_QColorDialog_getRgba_rgba_ok(rgba: ::libc::c_uint, ok: *mut bool) -> ::libc::c_uint;
  pub fn qt_widgets_c_QColorDialog_getRgba_rgba_ok_parent(rgba: ::libc::c_uint, ok: *mut bool, parent: *mut ::widget::Widget) -> ::libc::c_uint;
  pub fn qt_widgets_c_QColorDialog_metaObject(this_ptr: *const ::color_dialog::ColorDialog) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QColorDialog_new_initial(initial: *const ::qt_gui::color::Color) -> *mut ::color_dialog::ColorDialog;
  pub fn qt_widgets_c_QColorDialog_new_initial_parent(initial: *const ::qt_gui::color::Color, parent: *mut ::widget::Widget) -> *mut ::color_dialog::ColorDialog;
  pub fn qt_widgets_c_QColorDialog_new_no_args() -> *mut ::color_dialog::ColorDialog;
  pub fn qt_widgets_c_QColorDialog_new_parent(parent: *mut ::widget::Widget) -> *mut ::color_dialog::ColorDialog;
  pub fn qt_widgets_c_QColorDialog_open(this_ptr: *mut ::color_dialog::ColorDialog, receiver: *mut ::qt_core::object::Object, member: *const ::libc::c_char);
  pub fn qt_widgets_c_QColorDialog_options(this_ptr: *const ::color_dialog::ColorDialog) -> ::libc::c_uint;
  pub fn qt_widgets_c_QColorDialog_qt_metacall(this_ptr: *mut ::color_dialog::ColorDialog, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QColorDialog_qt_metacast(this_ptr: *mut ::color_dialog::ColorDialog, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QColorDialog_selectedColor_to_output(this_ptr: *const ::color_dialog::ColorDialog, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QColorDialog_setCurrentColor(this_ptr: *mut ::color_dialog::ColorDialog, color: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QColorDialog_setCustomColor(index: ::libc::c_int, color: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QColorDialog_setOption_option(this_ptr: *mut ::color_dialog::ColorDialog, option: ::color_dialog::ColorDialogOption);
  pub fn qt_widgets_c_QColorDialog_setOption_option_on(this_ptr: *mut ::color_dialog::ColorDialog, option: ::color_dialog::ColorDialogOption, on: bool);
  pub fn qt_widgets_c_QColorDialog_setOptions(this_ptr: *mut ::color_dialog::ColorDialog, options: ::libc::c_uint);
  pub fn qt_widgets_c_QColorDialog_setStandardColor(index: ::libc::c_int, color: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QColorDialog_setVisible(this_ptr: *mut ::color_dialog::ColorDialog, visible: bool);
  pub fn qt_widgets_c_QColorDialog_standardColor_to_output(index: ::libc::c_int, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QColorDialog_testOption(this_ptr: *const ::color_dialog::ColorDialog, option: ::color_dialog::ColorDialogOption) -> bool;
  pub fn qt_widgets_c_QColorDialog_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QColorDialog_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QColormap
  pub fn qt_widgets_c_QColormap_cleanup();
  pub fn qt_widgets_c_QColormap_colorAt_to_output(this_ptr: *const ::colormap::Colormap, pixel: ::libc::c_uint, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QColormap_colormap_to_output(this_ptr: *const ::colormap::Colormap, output: *mut ::vector::VectorQtGuiColor);
  pub fn qt_widgets_c_QColormap_constructor(colormap: *const ::colormap::Colormap, output: *mut ::colormap::Colormap);
  pub fn qt_widgets_c_QColormap_depth(this_ptr: *const ::colormap::Colormap) -> ::libc::c_int;
  pub fn qt_widgets_c_QColormap_destructor(this_ptr: *mut ::colormap::Colormap);
  pub fn qt_widgets_c_QColormap_initialize();
  pub fn qt_widgets_c_QColormap_instance_to_output_no_args(output: *mut ::colormap::Colormap);
  pub fn qt_widgets_c_QColormap_instance_to_output_screen(screen: ::libc::c_int, output: *mut ::colormap::Colormap);
  pub fn qt_widgets_c_QColormap_mode(this_ptr: *const ::colormap::Colormap) -> ::colormap::Mode;
  pub fn qt_widgets_c_QColormap_operator_assign(this_ptr: *mut ::colormap::Colormap, colormap: *const ::colormap::Colormap) -> *mut ::colormap::Colormap;
  pub fn qt_widgets_c_QColormap_pixel(this_ptr: *const ::colormap::Colormap, color: *const ::qt_gui::color::Color) -> ::libc::c_uint;
  pub fn qt_widgets_c_QColormap_size(this_ptr: *const ::colormap::Colormap) -> ::libc::c_int;

  // Header: QColumnView
  pub fn qt_widgets_c_QColumnView_G_dynamic_cast_QColumnView_ptr_QAbstractItemView(ptr: *mut ::abstract_item_view::AbstractItemView) -> *mut ::column_view::ColumnView;
  pub fn qt_widgets_c_QColumnView_G_dynamic_cast_QColumnView_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::column_view::ColumnView;
  pub fn qt_widgets_c_QColumnView_G_dynamic_cast_QColumnView_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::column_view::ColumnView;
  pub fn qt_widgets_c_QColumnView_G_dynamic_cast_QColumnView_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::column_view::ColumnView;
  pub fn qt_widgets_c_QColumnView_G_static_cast_QAbstractItemView_ptr(ptr: *mut ::column_view::ColumnView) -> *mut ::abstract_item_view::AbstractItemView;
  pub fn qt_widgets_c_QColumnView_G_static_cast_QAbstractScrollArea_ptr(ptr: *mut ::column_view::ColumnView) -> *mut ::abstract_scroll_area::AbstractScrollArea;
  pub fn qt_widgets_c_QColumnView_G_static_cast_QColumnView_ptr_QAbstractItemView(ptr: *mut ::abstract_item_view::AbstractItemView) -> *mut ::column_view::ColumnView;
  pub fn qt_widgets_c_QColumnView_G_static_cast_QColumnView_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::column_view::ColumnView;
  pub fn qt_widgets_c_QColumnView_G_static_cast_QColumnView_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::column_view::ColumnView;
  pub fn qt_widgets_c_QColumnView_G_static_cast_QColumnView_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::column_view::ColumnView;
  pub fn qt_widgets_c_QColumnView_G_static_cast_QColumnView_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::column_view::ColumnView;
  pub fn qt_widgets_c_QColumnView_G_static_cast_QColumnView_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::column_view::ColumnView;
  pub fn qt_widgets_c_QColumnView_G_static_cast_QFrame_ptr(ptr: *mut ::column_view::ColumnView) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QColumnView_G_static_cast_QObject_ptr(ptr: *mut ::column_view::ColumnView) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QColumnView_G_static_cast_QPaintDevice_ptr(ptr: *mut ::column_view::ColumnView) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QColumnView_G_static_cast_QWidget_ptr(ptr: *mut ::column_view::ColumnView) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QColumnView_columnWidths_to_output(this_ptr: *const ::column_view::ColumnView, output: *mut ::qt_core::list::ListCInt);
  pub fn qt_widgets_c_QColumnView_delete(this_ptr: *mut ::column_view::ColumnView);
  pub fn qt_widgets_c_QColumnView_indexAt_to_output(this_ptr: *const ::column_view::ColumnView, point: *const ::qt_core::point::Point, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QColumnView_metaObject(this_ptr: *const ::column_view::ColumnView) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QColumnView_new_no_args() -> *mut ::column_view::ColumnView;
  pub fn qt_widgets_c_QColumnView_new_parent(parent: *mut ::widget::Widget) -> *mut ::column_view::ColumnView;
  pub fn qt_widgets_c_QColumnView_previewWidget(this_ptr: *const ::column_view::ColumnView) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QColumnView_qt_metacall(this_ptr: *mut ::column_view::ColumnView, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QColumnView_qt_metacast(this_ptr: *mut ::column_view::ColumnView, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QColumnView_resizeGripsVisible(this_ptr: *const ::column_view::ColumnView) -> bool;
  pub fn qt_widgets_c_QColumnView_scrollTo_index(this_ptr: *mut ::column_view::ColumnView, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QColumnView_scrollTo_index_hint(this_ptr: *mut ::column_view::ColumnView, index: *const ::qt_core::model_index::ModelIndex, hint: ::abstract_item_view::ScrollHint);
  pub fn qt_widgets_c_QColumnView_selectAll(this_ptr: *mut ::column_view::ColumnView);
  pub fn qt_widgets_c_QColumnView_setColumnWidths(this_ptr: *mut ::column_view::ColumnView, list: *const ::qt_core::list::ListCInt);
  pub fn qt_widgets_c_QColumnView_setModel(this_ptr: *mut ::column_view::ColumnView, model: *mut ::qt_core::abstract_item_model::AbstractItemModel);
  pub fn qt_widgets_c_QColumnView_setPreviewWidget(this_ptr: *mut ::column_view::ColumnView, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QColumnView_setResizeGripsVisible(this_ptr: *mut ::column_view::ColumnView, visible: bool);
  pub fn qt_widgets_c_QColumnView_setRootIndex(this_ptr: *mut ::column_view::ColumnView, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QColumnView_setSelectionModel(this_ptr: *mut ::column_view::ColumnView, selectionModel: *mut ::qt_core::item_selection_model::ItemSelectionModel);
  pub fn qt_widgets_c_QColumnView_sizeHint_to_output(this_ptr: *const ::column_view::ColumnView, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QColumnView_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QColumnView_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QColumnView_visualRect_to_output(this_ptr: *const ::column_view::ColumnView, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::rect::Rect);

  // Header: QComboBox
  pub fn qt_widgets_c_QComboBox_G_dynamic_cast_QComboBox_ptr(ptr: *mut ::widget::Widget) -> *mut ::combo_box::ComboBox;
  pub fn qt_widgets_c_QComboBox_G_static_cast_QComboBox_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::combo_box::ComboBox;
  pub fn qt_widgets_c_QComboBox_G_static_cast_QComboBox_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::combo_box::ComboBox;
  pub fn qt_widgets_c_QComboBox_G_static_cast_QComboBox_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::combo_box::ComboBox;
  pub fn qt_widgets_c_QComboBox_G_static_cast_QObject_ptr(ptr: *mut ::combo_box::ComboBox) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QComboBox_G_static_cast_QPaintDevice_ptr(ptr: *mut ::combo_box::ComboBox) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QComboBox_G_static_cast_QWidget_ptr(ptr: *mut ::combo_box::ComboBox) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QComboBox_addItem_icon_text(this_ptr: *mut ::combo_box::ComboBox, icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QComboBox_addItem_icon_text_userData(this_ptr: *mut ::combo_box::ComboBox, icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String, userData: *const ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QComboBox_addItem_text(this_ptr: *mut ::combo_box::ComboBox, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QComboBox_addItem_text_userData(this_ptr: *mut ::combo_box::ComboBox, text: *const ::qt_core::string::String, userData: *const ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QComboBox_addItems(this_ptr: *mut ::combo_box::ComboBox, texts: *const ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QComboBox_autoCompletion(this_ptr: *const ::combo_box::ComboBox) -> bool;
  pub fn qt_widgets_c_QComboBox_clear(this_ptr: *mut ::combo_box::ComboBox);
  pub fn qt_widgets_c_QComboBox_clearEditText(this_ptr: *mut ::combo_box::ComboBox);
  pub fn qt_widgets_c_QComboBox_completer(this_ptr: *const ::combo_box::ComboBox) -> *mut ::completer::Completer;
  pub fn qt_widgets_c_QComboBox_count(this_ptr: *const ::combo_box::ComboBox) -> ::libc::c_int;
  pub fn qt_widgets_c_QComboBox_currentData_to_output_no_args(this_ptr: *const ::combo_box::ComboBox, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QComboBox_currentData_to_output_role(this_ptr: *const ::combo_box::ComboBox, role: ::libc::c_int, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QComboBox_currentIndex(this_ptr: *const ::combo_box::ComboBox) -> ::libc::c_int;
  pub fn qt_widgets_c_QComboBox_currentText_to_output(this_ptr: *const ::combo_box::ComboBox, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QComboBox_delete(this_ptr: *mut ::combo_box::ComboBox);
  pub fn qt_widgets_c_QComboBox_duplicatesEnabled(this_ptr: *const ::combo_box::ComboBox) -> bool;
  pub fn qt_widgets_c_QComboBox_event(this_ptr: *mut ::combo_box::ComboBox, event: *mut ::qt_core::event::Event) -> bool;
  pub fn qt_widgets_c_QComboBox_hasFrame(this_ptr: *const ::combo_box::ComboBox) -> bool;
  pub fn qt_widgets_c_QComboBox_hidePopup(this_ptr: *mut ::combo_box::ComboBox);
  pub fn qt_widgets_c_QComboBox_iconSize_to_output(this_ptr: *const ::combo_box::ComboBox, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QComboBox_inputMethodQuery_to_output_arg1(this_ptr: *const ::combo_box::ComboBox, arg1: *const ::qt_core::qt::InputMethodQuery, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QComboBox_inputMethodQuery_to_output_query_argument(this_ptr: *const ::combo_box::ComboBox, query: *const ::qt_core::qt::InputMethodQuery, argument: *const ::qt_core::variant::Variant, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QComboBox_insertItem_index_icon_text(this_ptr: *mut ::combo_box::ComboBox, index: ::libc::c_int, icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QComboBox_insertItem_index_icon_text_userData(this_ptr: *mut ::combo_box::ComboBox, index: ::libc::c_int, icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String, userData: *const ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QComboBox_insertItem_index_text(this_ptr: *mut ::combo_box::ComboBox, index: ::libc::c_int, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QComboBox_insertItem_index_text_userData(this_ptr: *mut ::combo_box::ComboBox, index: ::libc::c_int, text: *const ::qt_core::string::String, userData: *const ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QComboBox_insertItems(this_ptr: *mut ::combo_box::ComboBox, index: ::libc::c_int, texts: *const ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QComboBox_insertPolicy(this_ptr: *const ::combo_box::ComboBox) -> ::combo_box::InsertPolicy;
  pub fn qt_widgets_c_QComboBox_insertSeparator(this_ptr: *mut ::combo_box::ComboBox, index: ::libc::c_int);
  pub fn qt_widgets_c_QComboBox_isEditable(this_ptr: *const ::combo_box::ComboBox) -> bool;
  pub fn qt_widgets_c_QComboBox_itemData_to_output_index(this_ptr: *const ::combo_box::ComboBox, index: ::libc::c_int, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QComboBox_itemData_to_output_index_role(this_ptr: *const ::combo_box::ComboBox, index: ::libc::c_int, role: ::libc::c_int, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QComboBox_itemDelegate(this_ptr: *const ::combo_box::ComboBox) -> *mut ::abstract_item_delegate::AbstractItemDelegate;
  pub fn qt_widgets_c_QComboBox_itemIcon_to_output(this_ptr: *const ::combo_box::ComboBox, index: ::libc::c_int, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QComboBox_itemText_to_output(this_ptr: *const ::combo_box::ComboBox, index: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QComboBox_lineEdit(this_ptr: *const ::combo_box::ComboBox) -> *mut ::line_edit::LineEdit;
  pub fn qt_widgets_c_QComboBox_maxCount(this_ptr: *const ::combo_box::ComboBox) -> ::libc::c_int;
  pub fn qt_widgets_c_QComboBox_maxVisibleItems(this_ptr: *const ::combo_box::ComboBox) -> ::libc::c_int;
  pub fn qt_widgets_c_QComboBox_metaObject(this_ptr: *const ::combo_box::ComboBox) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QComboBox_minimumContentsLength(this_ptr: *const ::combo_box::ComboBox) -> ::libc::c_int;
  pub fn qt_widgets_c_QComboBox_minimumSizeHint_to_output(this_ptr: *const ::combo_box::ComboBox, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QComboBox_model(this_ptr: *const ::combo_box::ComboBox) -> *mut ::qt_core::abstract_item_model::AbstractItemModel;
  pub fn qt_widgets_c_QComboBox_modelColumn(this_ptr: *const ::combo_box::ComboBox) -> ::libc::c_int;
  pub fn qt_widgets_c_QComboBox_new_no_args() -> *mut ::combo_box::ComboBox;
  pub fn qt_widgets_c_QComboBox_new_parent(parent: *mut ::widget::Widget) -> *mut ::combo_box::ComboBox;
  pub fn qt_widgets_c_QComboBox_qt_metacall(this_ptr: *mut ::combo_box::ComboBox, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QComboBox_qt_metacast(this_ptr: *mut ::combo_box::ComboBox, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QComboBox_removeItem(this_ptr: *mut ::combo_box::ComboBox, index: ::libc::c_int);
  pub fn qt_widgets_c_QComboBox_rootModelIndex_to_output(this_ptr: *const ::combo_box::ComboBox, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QComboBox_setAutoCompletion(this_ptr: *mut ::combo_box::ComboBox, enable: bool);
  pub fn qt_widgets_c_QComboBox_setAutoCompletionCaseSensitivity(this_ptr: *mut ::combo_box::ComboBox, sensitivity: *const ::qt_core::qt::CaseSensitivity);
  pub fn qt_widgets_c_QComboBox_setCompleter(this_ptr: *mut ::combo_box::ComboBox, c: *mut ::completer::Completer);
  pub fn qt_widgets_c_QComboBox_setCurrentIndex(this_ptr: *mut ::combo_box::ComboBox, index: ::libc::c_int);
  pub fn qt_widgets_c_QComboBox_setCurrentText(this_ptr: *mut ::combo_box::ComboBox, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QComboBox_setDuplicatesEnabled(this_ptr: *mut ::combo_box::ComboBox, enable: bool);
  pub fn qt_widgets_c_QComboBox_setEditText(this_ptr: *mut ::combo_box::ComboBox, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QComboBox_setEditable(this_ptr: *mut ::combo_box::ComboBox, editable: bool);
  pub fn qt_widgets_c_QComboBox_setFrame(this_ptr: *mut ::combo_box::ComboBox, arg1: bool);
  pub fn qt_widgets_c_QComboBox_setIconSize(this_ptr: *mut ::combo_box::ComboBox, size: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QComboBox_setInsertPolicy(this_ptr: *mut ::combo_box::ComboBox, policy: ::combo_box::InsertPolicy);
  pub fn qt_widgets_c_QComboBox_setItemData_index_value(this_ptr: *mut ::combo_box::ComboBox, index: ::libc::c_int, value: *const ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QComboBox_setItemData_index_value_role(this_ptr: *mut ::combo_box::ComboBox, index: ::libc::c_int, value: *const ::qt_core::variant::Variant, role: ::libc::c_int);
  pub fn qt_widgets_c_QComboBox_setItemDelegate(this_ptr: *mut ::combo_box::ComboBox, delegate: *mut ::abstract_item_delegate::AbstractItemDelegate);
  pub fn qt_widgets_c_QComboBox_setItemIcon(this_ptr: *mut ::combo_box::ComboBox, index: ::libc::c_int, icon: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QComboBox_setItemText(this_ptr: *mut ::combo_box::ComboBox, index: ::libc::c_int, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QComboBox_setLineEdit(this_ptr: *mut ::combo_box::ComboBox, edit: *mut ::line_edit::LineEdit);
  pub fn qt_widgets_c_QComboBox_setMaxCount(this_ptr: *mut ::combo_box::ComboBox, max: ::libc::c_int);
  pub fn qt_widgets_c_QComboBox_setMaxVisibleItems(this_ptr: *mut ::combo_box::ComboBox, maxItems: ::libc::c_int);
  pub fn qt_widgets_c_QComboBox_setMinimumContentsLength(this_ptr: *mut ::combo_box::ComboBox, characters: ::libc::c_int);
  pub fn qt_widgets_c_QComboBox_setModel(this_ptr: *mut ::combo_box::ComboBox, model: *mut ::qt_core::abstract_item_model::AbstractItemModel);
  pub fn qt_widgets_c_QComboBox_setModelColumn(this_ptr: *mut ::combo_box::ComboBox, visibleColumn: ::libc::c_int);
  pub fn qt_widgets_c_QComboBox_setRootModelIndex(this_ptr: *mut ::combo_box::ComboBox, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QComboBox_setSizeAdjustPolicy(this_ptr: *mut ::combo_box::ComboBox, policy: ::combo_box::SizeAdjustPolicy);
  pub fn qt_widgets_c_QComboBox_setValidator(this_ptr: *mut ::combo_box::ComboBox, v: *const ::qt_gui::validator::Validator);
  pub fn qt_widgets_c_QComboBox_setView(this_ptr: *mut ::combo_box::ComboBox, itemView: *mut ::abstract_item_view::AbstractItemView);
  pub fn qt_widgets_c_QComboBox_showPopup(this_ptr: *mut ::combo_box::ComboBox);
  pub fn qt_widgets_c_QComboBox_sizeAdjustPolicy(this_ptr: *const ::combo_box::ComboBox) -> ::combo_box::SizeAdjustPolicy;
  pub fn qt_widgets_c_QComboBox_sizeHint_to_output(this_ptr: *const ::combo_box::ComboBox, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QComboBox_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QComboBox_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QComboBox_validator(this_ptr: *const ::combo_box::ComboBox) -> *const ::qt_gui::validator::Validator;
  pub fn qt_widgets_c_QComboBox_view(this_ptr: *const ::combo_box::ComboBox) -> *mut ::abstract_item_view::AbstractItemView;

  // Header: QCommandLinkButton
  pub fn qt_widgets_c_QCommandLinkButton_G_dynamic_cast_QCommandLinkButton_ptr_QAbstractButton(ptr: *mut ::abstract_button::AbstractButton) -> *mut ::command_link_button::CommandLinkButton;
  pub fn qt_widgets_c_QCommandLinkButton_G_dynamic_cast_QCommandLinkButton_ptr_QPushButton(ptr: *mut ::push_button::PushButton) -> *mut ::command_link_button::CommandLinkButton;
  pub fn qt_widgets_c_QCommandLinkButton_G_dynamic_cast_QCommandLinkButton_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::command_link_button::CommandLinkButton;
  pub fn qt_widgets_c_QCommandLinkButton_G_static_cast_QAbstractButton_ptr(ptr: *mut ::command_link_button::CommandLinkButton) -> *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QCommandLinkButton_G_static_cast_QCommandLinkButton_ptr_QAbstractButton(ptr: *mut ::abstract_button::AbstractButton) -> *mut ::command_link_button::CommandLinkButton;
  pub fn qt_widgets_c_QCommandLinkButton_G_static_cast_QCommandLinkButton_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::command_link_button::CommandLinkButton;
  pub fn qt_widgets_c_QCommandLinkButton_G_static_cast_QCommandLinkButton_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::command_link_button::CommandLinkButton;
  pub fn qt_widgets_c_QCommandLinkButton_G_static_cast_QCommandLinkButton_ptr_QPushButton(ptr: *mut ::push_button::PushButton) -> *mut ::command_link_button::CommandLinkButton;
  pub fn qt_widgets_c_QCommandLinkButton_G_static_cast_QCommandLinkButton_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::command_link_button::CommandLinkButton;
  pub fn qt_widgets_c_QCommandLinkButton_G_static_cast_QObject_ptr(ptr: *mut ::command_link_button::CommandLinkButton) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QCommandLinkButton_G_static_cast_QPaintDevice_ptr(ptr: *mut ::command_link_button::CommandLinkButton) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QCommandLinkButton_G_static_cast_QPushButton_ptr(ptr: *mut ::command_link_button::CommandLinkButton) -> *mut ::push_button::PushButton;
  pub fn qt_widgets_c_QCommandLinkButton_G_static_cast_QWidget_ptr(ptr: *mut ::command_link_button::CommandLinkButton) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QCommandLinkButton_delete(this_ptr: *mut ::command_link_button::CommandLinkButton);
  pub fn qt_widgets_c_QCommandLinkButton_description_to_output(this_ptr: *const ::command_link_button::CommandLinkButton, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QCommandLinkButton_metaObject(this_ptr: *const ::command_link_button::CommandLinkButton) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QCommandLinkButton_new_no_args() -> *mut ::command_link_button::CommandLinkButton;
  pub fn qt_widgets_c_QCommandLinkButton_new_parent(parent: *mut ::widget::Widget) -> *mut ::command_link_button::CommandLinkButton;
  pub fn qt_widgets_c_QCommandLinkButton_new_text(text: *const ::qt_core::string::String) -> *mut ::command_link_button::CommandLinkButton;
  pub fn qt_widgets_c_QCommandLinkButton_new_text_description(text: *const ::qt_core::string::String, description: *const ::qt_core::string::String) -> *mut ::command_link_button::CommandLinkButton;
  pub fn qt_widgets_c_QCommandLinkButton_new_text_description_parent(text: *const ::qt_core::string::String, description: *const ::qt_core::string::String, parent: *mut ::widget::Widget) -> *mut ::command_link_button::CommandLinkButton;
  pub fn qt_widgets_c_QCommandLinkButton_new_text_parent(text: *const ::qt_core::string::String, parent: *mut ::widget::Widget) -> *mut ::command_link_button::CommandLinkButton;
  pub fn qt_widgets_c_QCommandLinkButton_qt_metacall(this_ptr: *mut ::command_link_button::CommandLinkButton, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QCommandLinkButton_qt_metacast(this_ptr: *mut ::command_link_button::CommandLinkButton, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QCommandLinkButton_setDescription(this_ptr: *mut ::command_link_button::CommandLinkButton, description: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QCommandLinkButton_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QCommandLinkButton_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QCommonStyle
  pub fn qt_widgets_c_QCommonStyle_G_dynamic_cast_QCommonStyle_ptr(ptr: *mut ::style::Style) -> *mut ::common_style::CommonStyle;
  pub fn qt_widgets_c_QCommonStyle_G_static_cast_QCommonStyle_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::common_style::CommonStyle;
  pub fn qt_widgets_c_QCommonStyle_G_static_cast_QCommonStyle_ptr_QStyle(ptr: *mut ::style::Style) -> *mut ::common_style::CommonStyle;
  pub fn qt_widgets_c_QCommonStyle_G_static_cast_QObject_ptr(ptr: *mut ::common_style::CommonStyle) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QCommonStyle_G_static_cast_QStyle_ptr(ptr: *mut ::common_style::CommonStyle) -> *mut ::style::Style;
  pub fn qt_widgets_c_QCommonStyle_delete(this_ptr: *mut ::common_style::CommonStyle);
  pub fn qt_widgets_c_QCommonStyle_drawComplexControl_cc_opt_p(this_ptr: *const ::common_style::CommonStyle, cc: ::style::ComplexControl, opt: *const ::style_option_complex::StyleOptionComplex, p: *mut ::qt_gui::painter::Painter);
  pub fn qt_widgets_c_QCommonStyle_drawComplexControl_cc_opt_p_w(this_ptr: *const ::common_style::CommonStyle, cc: ::style::ComplexControl, opt: *const ::style_option_complex::StyleOptionComplex, p: *mut ::qt_gui::painter::Painter, w: *const ::widget::Widget);
  pub fn qt_widgets_c_QCommonStyle_drawControl_element_opt_p(this_ptr: *const ::common_style::CommonStyle, element: ::style::ControlElement, opt: *const ::style_option::StyleOption, p: *mut ::qt_gui::painter::Painter);
  pub fn qt_widgets_c_QCommonStyle_drawControl_element_opt_p_w(this_ptr: *const ::common_style::CommonStyle, element: ::style::ControlElement, opt: *const ::style_option::StyleOption, p: *mut ::qt_gui::painter::Painter, w: *const ::widget::Widget);
  pub fn qt_widgets_c_QCommonStyle_drawPrimitive_pe_opt_p(this_ptr: *const ::common_style::CommonStyle, pe: ::style::PrimitiveElement, opt: *const ::style_option::StyleOption, p: *mut ::qt_gui::painter::Painter);
  pub fn qt_widgets_c_QCommonStyle_drawPrimitive_pe_opt_p_w(this_ptr: *const ::common_style::CommonStyle, pe: ::style::PrimitiveElement, opt: *const ::style_option::StyleOption, p: *mut ::qt_gui::painter::Painter, w: *const ::widget::Widget);
  pub fn qt_widgets_c_QCommonStyle_generatedIconPixmap_as_ptr(this_ptr: *const ::common_style::CommonStyle, iconMode: *const ::qt_gui::icon::Mode, pixmap: *const ::qt_gui::pixmap::Pixmap, opt: *const ::style_option::StyleOption) -> *mut ::qt_gui::pixmap::Pixmap;
  pub fn qt_widgets_c_QCommonStyle_hitTestComplexControl_cc_opt_pt(this_ptr: *const ::common_style::CommonStyle, cc: ::style::ComplexControl, opt: *const ::style_option_complex::StyleOptionComplex, pt: *const ::qt_core::point::Point) -> ::style::SubControl;
  pub fn qt_widgets_c_QCommonStyle_hitTestComplexControl_cc_opt_pt_w(this_ptr: *const ::common_style::CommonStyle, cc: ::style::ComplexControl, opt: *const ::style_option_complex::StyleOptionComplex, pt: *const ::qt_core::point::Point, w: *const ::widget::Widget) -> ::style::SubControl;
  pub fn qt_widgets_c_QCommonStyle_layoutSpacing_control1_control2_orientation(this_ptr: *const ::common_style::CommonStyle, control1: *const ::size_policy::ControlType, control2: *const ::size_policy::ControlType, orientation: *const ::qt_core::qt::Orientation) -> ::libc::c_int;
  pub fn qt_widgets_c_QCommonStyle_layoutSpacing_control1_control2_orientation_option(this_ptr: *const ::common_style::CommonStyle, control1: *const ::size_policy::ControlType, control2: *const ::size_policy::ControlType, orientation: *const ::qt_core::qt::Orientation, option: *const ::style_option::StyleOption) -> ::libc::c_int;
  pub fn qt_widgets_c_QCommonStyle_layoutSpacing_control1_control2_orientation_option_widget(this_ptr: *const ::common_style::CommonStyle, control1: *const ::size_policy::ControlType, control2: *const ::size_policy::ControlType, orientation: *const ::qt_core::qt::Orientation, option: *const ::style_option::StyleOption, widget: *const ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QCommonStyle_metaObject(this_ptr: *const ::common_style::CommonStyle) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QCommonStyle_new() -> *mut ::common_style::CommonStyle;
  pub fn qt_widgets_c_QCommonStyle_pixelMetric_m(this_ptr: *const ::common_style::CommonStyle, m: ::style::PixelMetric) -> ::libc::c_int;
  pub fn qt_widgets_c_QCommonStyle_pixelMetric_m_opt(this_ptr: *const ::common_style::CommonStyle, m: ::style::PixelMetric, opt: *const ::style_option::StyleOption) -> ::libc::c_int;
  pub fn qt_widgets_c_QCommonStyle_pixelMetric_m_opt_widget(this_ptr: *const ::common_style::CommonStyle, m: ::style::PixelMetric, opt: *const ::style_option::StyleOption, widget: *const ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QCommonStyle_polish_app(this_ptr: *mut ::common_style::CommonStyle, app: *mut ::application::Application);
  pub fn qt_widgets_c_QCommonStyle_polish_arg1(this_ptr: *mut ::common_style::CommonStyle, arg1: *mut ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QCommonStyle_polish_widget(this_ptr: *mut ::common_style::CommonStyle, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QCommonStyle_qt_metacall(this_ptr: *mut ::common_style::CommonStyle, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QCommonStyle_qt_metacast(this_ptr: *mut ::common_style::CommonStyle, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QCommonStyle_sizeFromContents_to_output_ct_opt_contentsSize(this_ptr: *const ::common_style::CommonStyle, ct: ::style::ContentsType, opt: *const ::style_option::StyleOption, contentsSize: *const ::qt_core::size::Size, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QCommonStyle_sizeFromContents_to_output_ct_opt_contentsSize_widget(this_ptr: *const ::common_style::CommonStyle, ct: ::style::ContentsType, opt: *const ::style_option::StyleOption, contentsSize: *const ::qt_core::size::Size, widget: *const ::widget::Widget, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QCommonStyle_standardIcon_to_output_standardIcon(this_ptr: *const ::common_style::CommonStyle, standardIcon: ::style::StandardPixmap, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QCommonStyle_standardIcon_to_output_standardIcon_opt(this_ptr: *const ::common_style::CommonStyle, standardIcon: ::style::StandardPixmap, opt: *const ::style_option::StyleOption, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QCommonStyle_standardIcon_to_output_standardIcon_opt_widget(this_ptr: *const ::common_style::CommonStyle, standardIcon: ::style::StandardPixmap, opt: *const ::style_option::StyleOption, widget: *const ::widget::Widget, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QCommonStyle_standardPixmap_as_ptr_sp(this_ptr: *const ::common_style::CommonStyle, sp: ::style::StandardPixmap) -> *mut ::qt_gui::pixmap::Pixmap;
  pub fn qt_widgets_c_QCommonStyle_standardPixmap_as_ptr_sp_opt(this_ptr: *const ::common_style::CommonStyle, sp: ::style::StandardPixmap, opt: *const ::style_option::StyleOption) -> *mut ::qt_gui::pixmap::Pixmap;
  pub fn qt_widgets_c_QCommonStyle_standardPixmap_as_ptr_sp_opt_widget(this_ptr: *const ::common_style::CommonStyle, sp: ::style::StandardPixmap, opt: *const ::style_option::StyleOption, widget: *const ::widget::Widget) -> *mut ::qt_gui::pixmap::Pixmap;
  pub fn qt_widgets_c_QCommonStyle_styleHint_sh(this_ptr: *const ::common_style::CommonStyle, sh: ::style::StyleHint) -> ::libc::c_int;
  pub fn qt_widgets_c_QCommonStyle_styleHint_sh_opt(this_ptr: *const ::common_style::CommonStyle, sh: ::style::StyleHint, opt: *const ::style_option::StyleOption) -> ::libc::c_int;
  pub fn qt_widgets_c_QCommonStyle_styleHint_sh_opt_w(this_ptr: *const ::common_style::CommonStyle, sh: ::style::StyleHint, opt: *const ::style_option::StyleOption, w: *const ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QCommonStyle_styleHint_sh_opt_w_shret(this_ptr: *const ::common_style::CommonStyle, sh: ::style::StyleHint, opt: *const ::style_option::StyleOption, w: *const ::widget::Widget, shret: *mut ::style_hint_return::StyleHintReturn) -> ::libc::c_int;
  pub fn qt_widgets_c_QCommonStyle_subControlRect_to_output_cc_opt_sc(this_ptr: *const ::common_style::CommonStyle, cc: ::style::ComplexControl, opt: *const ::style_option_complex::StyleOptionComplex, sc: ::style::SubControl, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QCommonStyle_subControlRect_to_output_cc_opt_sc_w(this_ptr: *const ::common_style::CommonStyle, cc: ::style::ComplexControl, opt: *const ::style_option_complex::StyleOptionComplex, sc: ::style::SubControl, w: *const ::widget::Widget, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QCommonStyle_subElementRect_to_output_r_opt(this_ptr: *const ::common_style::CommonStyle, r: ::style::SubElement, opt: *const ::style_option::StyleOption, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QCommonStyle_subElementRect_to_output_r_opt_widget(this_ptr: *const ::common_style::CommonStyle, r: ::style::SubElement, opt: *const ::style_option::StyleOption, widget: *const ::widget::Widget, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QCommonStyle_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QCommonStyle_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QCommonStyle_unpolish_application(this_ptr: *mut ::common_style::CommonStyle, application: *mut ::application::Application);
  pub fn qt_widgets_c_QCommonStyle_unpolish_widget(this_ptr: *mut ::common_style::CommonStyle, widget: *mut ::widget::Widget);

  // Header: QCompleter
  pub fn qt_widgets_c_QCompleter_G_static_cast_QCompleter_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::completer::Completer;
  pub fn qt_widgets_c_QCompleter_G_static_cast_QObject_ptr(ptr: *mut ::completer::Completer) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QCompleter_complete_no_args(this_ptr: *mut ::completer::Completer);
  pub fn qt_widgets_c_QCompleter_complete_rect(this_ptr: *mut ::completer::Completer, rect: *const ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QCompleter_completionColumn(this_ptr: *const ::completer::Completer) -> ::libc::c_int;
  pub fn qt_widgets_c_QCompleter_completionCount(this_ptr: *const ::completer::Completer) -> ::libc::c_int;
  pub fn qt_widgets_c_QCompleter_completionMode(this_ptr: *const ::completer::Completer) -> ::completer::CompletionMode;
  pub fn qt_widgets_c_QCompleter_completionModel(this_ptr: *const ::completer::Completer) -> *mut ::qt_core::abstract_item_model::AbstractItemModel;
  pub fn qt_widgets_c_QCompleter_completionPrefix_to_output(this_ptr: *const ::completer::Completer, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QCompleter_completionRole(this_ptr: *const ::completer::Completer) -> ::libc::c_int;
  pub fn qt_widgets_c_QCompleter_currentCompletion_to_output(this_ptr: *const ::completer::Completer, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QCompleter_currentIndex_to_output(this_ptr: *const ::completer::Completer, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QCompleter_currentRow(this_ptr: *const ::completer::Completer) -> ::libc::c_int;
  pub fn qt_widgets_c_QCompleter_delete(this_ptr: *mut ::completer::Completer);
  pub fn qt_widgets_c_QCompleter_maxVisibleItems(this_ptr: *const ::completer::Completer) -> ::libc::c_int;
  pub fn qt_widgets_c_QCompleter_metaObject(this_ptr: *const ::completer::Completer) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QCompleter_model(this_ptr: *const ::completer::Completer) -> *mut ::qt_core::abstract_item_model::AbstractItemModel;
  pub fn qt_widgets_c_QCompleter_modelSorting(this_ptr: *const ::completer::Completer) -> ::completer::ModelSorting;
  pub fn qt_widgets_c_QCompleter_new_completions(completions: *const ::qt_core::string_list::StringList) -> *mut ::completer::Completer;
  pub fn qt_widgets_c_QCompleter_new_completions_parent(completions: *const ::qt_core::string_list::StringList, parent: *mut ::qt_core::object::Object) -> *mut ::completer::Completer;
  pub fn qt_widgets_c_QCompleter_new_model(model: *mut ::qt_core::abstract_item_model::AbstractItemModel) -> *mut ::completer::Completer;
  pub fn qt_widgets_c_QCompleter_new_model_parent(model: *mut ::qt_core::abstract_item_model::AbstractItemModel, parent: *mut ::qt_core::object::Object) -> *mut ::completer::Completer;
  pub fn qt_widgets_c_QCompleter_new_no_args() -> *mut ::completer::Completer;
  pub fn qt_widgets_c_QCompleter_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::completer::Completer;
  pub fn qt_widgets_c_QCompleter_pathFromIndex_to_output(this_ptr: *const ::completer::Completer, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QCompleter_popup(this_ptr: *const ::completer::Completer) -> *mut ::abstract_item_view::AbstractItemView;
  pub fn qt_widgets_c_QCompleter_qt_metacall(this_ptr: *mut ::completer::Completer, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QCompleter_qt_metacast(this_ptr: *mut ::completer::Completer, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QCompleter_setCaseSensitivity(this_ptr: *mut ::completer::Completer, caseSensitivity: *const ::qt_core::qt::CaseSensitivity);
  pub fn qt_widgets_c_QCompleter_setCompletionColumn(this_ptr: *mut ::completer::Completer, column: ::libc::c_int);
  pub fn qt_widgets_c_QCompleter_setCompletionMode(this_ptr: *mut ::completer::Completer, mode: ::completer::CompletionMode);
  pub fn qt_widgets_c_QCompleter_setCompletionPrefix(this_ptr: *mut ::completer::Completer, prefix: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QCompleter_setCompletionRole(this_ptr: *mut ::completer::Completer, role: ::libc::c_int);
  pub fn qt_widgets_c_QCompleter_setCurrentRow(this_ptr: *mut ::completer::Completer, row: ::libc::c_int) -> bool;
  pub fn qt_widgets_c_QCompleter_setMaxVisibleItems(this_ptr: *mut ::completer::Completer, maxItems: ::libc::c_int);
  pub fn qt_widgets_c_QCompleter_setModel(this_ptr: *mut ::completer::Completer, c: *mut ::qt_core::abstract_item_model::AbstractItemModel);
  pub fn qt_widgets_c_QCompleter_setModelSorting(this_ptr: *mut ::completer::Completer, sorting: ::completer::ModelSorting);
  pub fn qt_widgets_c_QCompleter_setPopup(this_ptr: *mut ::completer::Completer, popup: *mut ::abstract_item_view::AbstractItemView);
  pub fn qt_widgets_c_QCompleter_setWidget(this_ptr: *mut ::completer::Completer, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QCompleter_setWrapAround(this_ptr: *mut ::completer::Completer, wrap: bool);
  pub fn qt_widgets_c_QCompleter_splitPath_to_output(this_ptr: *const ::completer::Completer, path: *const ::qt_core::string::String, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QCompleter_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QCompleter_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QCompleter_widget(this_ptr: *const ::completer::Completer) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QCompleter_wrapAround(this_ptr: *const ::completer::Completer) -> bool;

  // Header: QDataWidgetMapper
  pub fn qt_widgets_c_QDataWidgetMapper_G_static_cast_QDataWidgetMapper_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::data_widget_mapper::DataWidgetMapper;
  pub fn qt_widgets_c_QDataWidgetMapper_G_static_cast_QObject_ptr(ptr: *mut ::data_widget_mapper::DataWidgetMapper) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QDataWidgetMapper_addMapping_widget_section(this_ptr: *mut ::data_widget_mapper::DataWidgetMapper, widget: *mut ::widget::Widget, section: ::libc::c_int);
  pub fn qt_widgets_c_QDataWidgetMapper_addMapping_widget_section_propertyName(this_ptr: *mut ::data_widget_mapper::DataWidgetMapper, widget: *mut ::widget::Widget, section: ::libc::c_int, propertyName: *const ::qt_core::byte_array::ByteArray);
  pub fn qt_widgets_c_QDataWidgetMapper_clearMapping(this_ptr: *mut ::data_widget_mapper::DataWidgetMapper);
  pub fn qt_widgets_c_QDataWidgetMapper_currentIndex(this_ptr: *const ::data_widget_mapper::DataWidgetMapper) -> ::libc::c_int;
  pub fn qt_widgets_c_QDataWidgetMapper_delete(this_ptr: *mut ::data_widget_mapper::DataWidgetMapper);
  pub fn qt_widgets_c_QDataWidgetMapper_itemDelegate(this_ptr: *const ::data_widget_mapper::DataWidgetMapper) -> *mut ::abstract_item_delegate::AbstractItemDelegate;
  pub fn qt_widgets_c_QDataWidgetMapper_mappedPropertyName_to_output(this_ptr: *const ::data_widget_mapper::DataWidgetMapper, widget: *mut ::widget::Widget, output: *mut ::qt_core::byte_array::ByteArray);
  pub fn qt_widgets_c_QDataWidgetMapper_mappedSection(this_ptr: *const ::data_widget_mapper::DataWidgetMapper, widget: *mut ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QDataWidgetMapper_mappedWidgetAt(this_ptr: *const ::data_widget_mapper::DataWidgetMapper, section: ::libc::c_int) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QDataWidgetMapper_metaObject(this_ptr: *const ::data_widget_mapper::DataWidgetMapper) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QDataWidgetMapper_model(this_ptr: *const ::data_widget_mapper::DataWidgetMapper) -> *mut ::qt_core::abstract_item_model::AbstractItemModel;
  pub fn qt_widgets_c_QDataWidgetMapper_new_no_args() -> *mut ::data_widget_mapper::DataWidgetMapper;
  pub fn qt_widgets_c_QDataWidgetMapper_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::data_widget_mapper::DataWidgetMapper;
  pub fn qt_widgets_c_QDataWidgetMapper_qt_metacall(this_ptr: *mut ::data_widget_mapper::DataWidgetMapper, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QDataWidgetMapper_qt_metacast(this_ptr: *mut ::data_widget_mapper::DataWidgetMapper, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QDataWidgetMapper_removeMapping(this_ptr: *mut ::data_widget_mapper::DataWidgetMapper, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QDataWidgetMapper_revert(this_ptr: *mut ::data_widget_mapper::DataWidgetMapper);
  pub fn qt_widgets_c_QDataWidgetMapper_rootIndex_to_output(this_ptr: *const ::data_widget_mapper::DataWidgetMapper, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QDataWidgetMapper_setCurrentIndex(this_ptr: *mut ::data_widget_mapper::DataWidgetMapper, index: ::libc::c_int);
  pub fn qt_widgets_c_QDataWidgetMapper_setCurrentModelIndex(this_ptr: *mut ::data_widget_mapper::DataWidgetMapper, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QDataWidgetMapper_setItemDelegate(this_ptr: *mut ::data_widget_mapper::DataWidgetMapper, delegate: *mut ::abstract_item_delegate::AbstractItemDelegate);
  pub fn qt_widgets_c_QDataWidgetMapper_setModel(this_ptr: *mut ::data_widget_mapper::DataWidgetMapper, model: *mut ::qt_core::abstract_item_model::AbstractItemModel);
  pub fn qt_widgets_c_QDataWidgetMapper_setOrientation(this_ptr: *mut ::data_widget_mapper::DataWidgetMapper, aOrientation: *const ::qt_core::qt::Orientation);
  pub fn qt_widgets_c_QDataWidgetMapper_setRootIndex(this_ptr: *mut ::data_widget_mapper::DataWidgetMapper, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QDataWidgetMapper_setSubmitPolicy(this_ptr: *mut ::data_widget_mapper::DataWidgetMapper, policy: ::data_widget_mapper::SubmitPolicy);
  pub fn qt_widgets_c_QDataWidgetMapper_submit(this_ptr: *mut ::data_widget_mapper::DataWidgetMapper) -> bool;
  pub fn qt_widgets_c_QDataWidgetMapper_submitPolicy(this_ptr: *const ::data_widget_mapper::DataWidgetMapper) -> ::data_widget_mapper::SubmitPolicy;
  pub fn qt_widgets_c_QDataWidgetMapper_toFirst(this_ptr: *mut ::data_widget_mapper::DataWidgetMapper);
  pub fn qt_widgets_c_QDataWidgetMapper_toLast(this_ptr: *mut ::data_widget_mapper::DataWidgetMapper);
  pub fn qt_widgets_c_QDataWidgetMapper_toNext(this_ptr: *mut ::data_widget_mapper::DataWidgetMapper);
  pub fn qt_widgets_c_QDataWidgetMapper_toPrevious(this_ptr: *mut ::data_widget_mapper::DataWidgetMapper);
  pub fn qt_widgets_c_QDataWidgetMapper_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QDataWidgetMapper_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QDateEdit
  pub fn qt_widgets_c_QDateEdit_G_dynamic_cast_QDateEdit_ptr_QAbstractSpinBox(ptr: *mut ::abstract_spin_box::AbstractSpinBox) -> *mut ::date_edit::DateEdit;
  pub fn qt_widgets_c_QDateEdit_G_dynamic_cast_QDateEdit_ptr_QDateTimeEdit(ptr: *mut ::date_time_edit::DateTimeEdit) -> *mut ::date_edit::DateEdit;
  pub fn qt_widgets_c_QDateEdit_G_dynamic_cast_QDateEdit_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::date_edit::DateEdit;
  pub fn qt_widgets_c_QDateEdit_G_static_cast_QAbstractSpinBox_ptr(ptr: *mut ::date_edit::DateEdit) -> *mut ::abstract_spin_box::AbstractSpinBox;
  pub fn qt_widgets_c_QDateEdit_G_static_cast_QDateEdit_ptr_QAbstractSpinBox(ptr: *mut ::abstract_spin_box::AbstractSpinBox) -> *mut ::date_edit::DateEdit;
  pub fn qt_widgets_c_QDateEdit_G_static_cast_QDateEdit_ptr_QDateTimeEdit(ptr: *mut ::date_time_edit::DateTimeEdit) -> *mut ::date_edit::DateEdit;
  pub fn qt_widgets_c_QDateEdit_G_static_cast_QDateEdit_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::date_edit::DateEdit;
  pub fn qt_widgets_c_QDateEdit_G_static_cast_QDateEdit_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::date_edit::DateEdit;
  pub fn qt_widgets_c_QDateEdit_G_static_cast_QDateEdit_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::date_edit::DateEdit;
  pub fn qt_widgets_c_QDateEdit_G_static_cast_QDateTimeEdit_ptr(ptr: *mut ::date_edit::DateEdit) -> *mut ::date_time_edit::DateTimeEdit;
  pub fn qt_widgets_c_QDateEdit_G_static_cast_QObject_ptr(ptr: *mut ::date_edit::DateEdit) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QDateEdit_G_static_cast_QPaintDevice_ptr(ptr: *mut ::date_edit::DateEdit) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QDateEdit_G_static_cast_QWidget_ptr(ptr: *mut ::date_edit::DateEdit) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QDateEdit_delete(this_ptr: *mut ::date_edit::DateEdit);
  pub fn qt_widgets_c_QDateEdit_metaObject(this_ptr: *const ::date_edit::DateEdit) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QDateEdit_new_date(date: *const ::qt_core::date::Date) -> *mut ::date_edit::DateEdit;
  pub fn qt_widgets_c_QDateEdit_new_date_parent(date: *const ::qt_core::date::Date, parent: *mut ::widget::Widget) -> *mut ::date_edit::DateEdit;
  pub fn qt_widgets_c_QDateEdit_new_no_args() -> *mut ::date_edit::DateEdit;
  pub fn qt_widgets_c_QDateEdit_new_parent(parent: *mut ::widget::Widget) -> *mut ::date_edit::DateEdit;
  pub fn qt_widgets_c_QDateEdit_qt_metacall(this_ptr: *mut ::date_edit::DateEdit, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QDateEdit_qt_metacast(this_ptr: *mut ::date_edit::DateEdit, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QDateEdit_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QDateEdit_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QDateTimeEdit
  pub fn qt_widgets_c_QDateTimeEdit_G_dynamic_cast_QDateTimeEdit_ptr_QAbstractSpinBox(ptr: *mut ::abstract_spin_box::AbstractSpinBox) -> *mut ::date_time_edit::DateTimeEdit;
  pub fn qt_widgets_c_QDateTimeEdit_G_dynamic_cast_QDateTimeEdit_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::date_time_edit::DateTimeEdit;
  pub fn qt_widgets_c_QDateTimeEdit_G_static_cast_QAbstractSpinBox_ptr(ptr: *mut ::date_time_edit::DateTimeEdit) -> *mut ::abstract_spin_box::AbstractSpinBox;
  pub fn qt_widgets_c_QDateTimeEdit_G_static_cast_QDateTimeEdit_ptr_QAbstractSpinBox(ptr: *mut ::abstract_spin_box::AbstractSpinBox) -> *mut ::date_time_edit::DateTimeEdit;
  pub fn qt_widgets_c_QDateTimeEdit_G_static_cast_QDateTimeEdit_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::date_time_edit::DateTimeEdit;
  pub fn qt_widgets_c_QDateTimeEdit_G_static_cast_QDateTimeEdit_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::date_time_edit::DateTimeEdit;
  pub fn qt_widgets_c_QDateTimeEdit_G_static_cast_QDateTimeEdit_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::date_time_edit::DateTimeEdit;
  pub fn qt_widgets_c_QDateTimeEdit_G_static_cast_QObject_ptr(ptr: *mut ::date_time_edit::DateTimeEdit) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QDateTimeEdit_G_static_cast_QPaintDevice_ptr(ptr: *mut ::date_time_edit::DateTimeEdit) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QDateTimeEdit_G_static_cast_QWidget_ptr(ptr: *mut ::date_time_edit::DateTimeEdit) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QDateTimeEdit_calendarPopup(this_ptr: *const ::date_time_edit::DateTimeEdit) -> bool;
  pub fn qt_widgets_c_QDateTimeEdit_calendarWidget(this_ptr: *const ::date_time_edit::DateTimeEdit) -> *mut ::calendar_widget::CalendarWidget;
  pub fn qt_widgets_c_QDateTimeEdit_clear(this_ptr: *mut ::date_time_edit::DateTimeEdit);
  pub fn qt_widgets_c_QDateTimeEdit_clearMaximumDate(this_ptr: *mut ::date_time_edit::DateTimeEdit);
  pub fn qt_widgets_c_QDateTimeEdit_clearMaximumDateTime(this_ptr: *mut ::date_time_edit::DateTimeEdit);
  pub fn qt_widgets_c_QDateTimeEdit_clearMaximumTime(this_ptr: *mut ::date_time_edit::DateTimeEdit);
  pub fn qt_widgets_c_QDateTimeEdit_clearMinimumDate(this_ptr: *mut ::date_time_edit::DateTimeEdit);
  pub fn qt_widgets_c_QDateTimeEdit_clearMinimumDateTime(this_ptr: *mut ::date_time_edit::DateTimeEdit);
  pub fn qt_widgets_c_QDateTimeEdit_clearMinimumTime(this_ptr: *mut ::date_time_edit::DateTimeEdit);
  pub fn qt_widgets_c_QDateTimeEdit_currentSection(this_ptr: *const ::date_time_edit::DateTimeEdit) -> ::date_time_edit::Section;
  pub fn qt_widgets_c_QDateTimeEdit_currentSectionIndex(this_ptr: *const ::date_time_edit::DateTimeEdit) -> ::libc::c_int;
  pub fn qt_widgets_c_QDateTimeEdit_dateTime_to_output(this_ptr: *const ::date_time_edit::DateTimeEdit, output: *mut ::qt_core::date_time::DateTime);
  pub fn qt_widgets_c_QDateTimeEdit_date_to_output(this_ptr: *const ::date_time_edit::DateTimeEdit, output: *mut ::qt_core::date::Date);
  pub fn qt_widgets_c_QDateTimeEdit_delete(this_ptr: *mut ::date_time_edit::DateTimeEdit);
  pub fn qt_widgets_c_QDateTimeEdit_displayFormat_to_output(this_ptr: *const ::date_time_edit::DateTimeEdit, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QDateTimeEdit_displayedSections(this_ptr: *const ::date_time_edit::DateTimeEdit) -> ::libc::c_uint;
  pub fn qt_widgets_c_QDateTimeEdit_event(this_ptr: *mut ::date_time_edit::DateTimeEdit, event: *mut ::qt_core::event::Event) -> bool;
  pub fn qt_widgets_c_QDateTimeEdit_maximumDateTime_to_output(this_ptr: *const ::date_time_edit::DateTimeEdit, output: *mut ::qt_core::date_time::DateTime);
  pub fn qt_widgets_c_QDateTimeEdit_maximumDate_to_output(this_ptr: *const ::date_time_edit::DateTimeEdit, output: *mut ::qt_core::date::Date);
  pub fn qt_widgets_c_QDateTimeEdit_maximumTime_to_output(this_ptr: *const ::date_time_edit::DateTimeEdit, output: *mut ::qt_core::time::Time);
  pub fn qt_widgets_c_QDateTimeEdit_metaObject(this_ptr: *const ::date_time_edit::DateTimeEdit) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QDateTimeEdit_minimumDateTime_to_output(this_ptr: *const ::date_time_edit::DateTimeEdit, output: *mut ::qt_core::date_time::DateTime);
  pub fn qt_widgets_c_QDateTimeEdit_minimumDate_to_output(this_ptr: *const ::date_time_edit::DateTimeEdit, output: *mut ::qt_core::date::Date);
  pub fn qt_widgets_c_QDateTimeEdit_minimumTime_to_output(this_ptr: *const ::date_time_edit::DateTimeEdit, output: *mut ::qt_core::time::Time);
  pub fn qt_widgets_c_QDateTimeEdit_new_d(d: *const ::qt_core::date::Date) -> *mut ::date_time_edit::DateTimeEdit;
  pub fn qt_widgets_c_QDateTimeEdit_new_d_parent(d: *const ::qt_core::date::Date, parent: *mut ::widget::Widget) -> *mut ::date_time_edit::DateTimeEdit;
  pub fn qt_widgets_c_QDateTimeEdit_new_dt(dt: *const ::qt_core::date_time::DateTime) -> *mut ::date_time_edit::DateTimeEdit;
  pub fn qt_widgets_c_QDateTimeEdit_new_dt_parent(dt: *const ::qt_core::date_time::DateTime, parent: *mut ::widget::Widget) -> *mut ::date_time_edit::DateTimeEdit;
  pub fn qt_widgets_c_QDateTimeEdit_new_no_args() -> *mut ::date_time_edit::DateTimeEdit;
  pub fn qt_widgets_c_QDateTimeEdit_new_parent(parent: *mut ::widget::Widget) -> *mut ::date_time_edit::DateTimeEdit;
  pub fn qt_widgets_c_QDateTimeEdit_new_t(t: *const ::qt_core::time::Time) -> *mut ::date_time_edit::DateTimeEdit;
  pub fn qt_widgets_c_QDateTimeEdit_new_t_parent(t: *const ::qt_core::time::Time, parent: *mut ::widget::Widget) -> *mut ::date_time_edit::DateTimeEdit;
  pub fn qt_widgets_c_QDateTimeEdit_qt_metacall(this_ptr: *mut ::date_time_edit::DateTimeEdit, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QDateTimeEdit_qt_metacast(this_ptr: *mut ::date_time_edit::DateTimeEdit, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QDateTimeEdit_sectionAt(this_ptr: *const ::date_time_edit::DateTimeEdit, index: ::libc::c_int) -> ::date_time_edit::Section;
  pub fn qt_widgets_c_QDateTimeEdit_sectionCount(this_ptr: *const ::date_time_edit::DateTimeEdit) -> ::libc::c_int;
  pub fn qt_widgets_c_QDateTimeEdit_sectionText_to_output(this_ptr: *const ::date_time_edit::DateTimeEdit, section: ::date_time_edit::Section, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QDateTimeEdit_setCalendarPopup(this_ptr: *mut ::date_time_edit::DateTimeEdit, enable: bool);
  pub fn qt_widgets_c_QDateTimeEdit_setCalendarWidget(this_ptr: *mut ::date_time_edit::DateTimeEdit, calendarWidget: *mut ::calendar_widget::CalendarWidget);
  pub fn qt_widgets_c_QDateTimeEdit_setCurrentSection(this_ptr: *mut ::date_time_edit::DateTimeEdit, section: ::date_time_edit::Section);
  pub fn qt_widgets_c_QDateTimeEdit_setCurrentSectionIndex(this_ptr: *mut ::date_time_edit::DateTimeEdit, index: ::libc::c_int);
  pub fn qt_widgets_c_QDateTimeEdit_setDate(this_ptr: *mut ::date_time_edit::DateTimeEdit, date: *const ::qt_core::date::Date);
  pub fn qt_widgets_c_QDateTimeEdit_setDateRange(this_ptr: *mut ::date_time_edit::DateTimeEdit, min: *const ::qt_core::date::Date, max: *const ::qt_core::date::Date);
  pub fn qt_widgets_c_QDateTimeEdit_setDateTime(this_ptr: *mut ::date_time_edit::DateTimeEdit, dateTime: *const ::qt_core::date_time::DateTime);
  pub fn qt_widgets_c_QDateTimeEdit_setDateTimeRange(this_ptr: *mut ::date_time_edit::DateTimeEdit, min: *const ::qt_core::date_time::DateTime, max: *const ::qt_core::date_time::DateTime);
  pub fn qt_widgets_c_QDateTimeEdit_setDisplayFormat(this_ptr: *mut ::date_time_edit::DateTimeEdit, format: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QDateTimeEdit_setMaximumDate(this_ptr: *mut ::date_time_edit::DateTimeEdit, max: *const ::qt_core::date::Date);
  pub fn qt_widgets_c_QDateTimeEdit_setMaximumDateTime(this_ptr: *mut ::date_time_edit::DateTimeEdit, dt: *const ::qt_core::date_time::DateTime);
  pub fn qt_widgets_c_QDateTimeEdit_setMaximumTime(this_ptr: *mut ::date_time_edit::DateTimeEdit, max: *const ::qt_core::time::Time);
  pub fn qt_widgets_c_QDateTimeEdit_setMinimumDate(this_ptr: *mut ::date_time_edit::DateTimeEdit, min: *const ::qt_core::date::Date);
  pub fn qt_widgets_c_QDateTimeEdit_setMinimumDateTime(this_ptr: *mut ::date_time_edit::DateTimeEdit, dt: *const ::qt_core::date_time::DateTime);
  pub fn qt_widgets_c_QDateTimeEdit_setMinimumTime(this_ptr: *mut ::date_time_edit::DateTimeEdit, min: *const ::qt_core::time::Time);
  pub fn qt_widgets_c_QDateTimeEdit_setSelectedSection(this_ptr: *mut ::date_time_edit::DateTimeEdit, section: ::date_time_edit::Section);
  pub fn qt_widgets_c_QDateTimeEdit_setTime(this_ptr: *mut ::date_time_edit::DateTimeEdit, time: *const ::qt_core::time::Time);
  pub fn qt_widgets_c_QDateTimeEdit_setTimeRange(this_ptr: *mut ::date_time_edit::DateTimeEdit, min: *const ::qt_core::time::Time, max: *const ::qt_core::time::Time);
  pub fn qt_widgets_c_QDateTimeEdit_setTimeSpec(this_ptr: *mut ::date_time_edit::DateTimeEdit, spec: *const ::qt_core::qt::TimeSpec);
  pub fn qt_widgets_c_QDateTimeEdit_sizeHint_to_output(this_ptr: *const ::date_time_edit::DateTimeEdit, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QDateTimeEdit_stepBy(this_ptr: *mut ::date_time_edit::DateTimeEdit, steps: ::libc::c_int);
  pub fn qt_widgets_c_QDateTimeEdit_time_to_output(this_ptr: *const ::date_time_edit::DateTimeEdit, output: *mut ::qt_core::time::Time);
  pub fn qt_widgets_c_QDateTimeEdit_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QDateTimeEdit_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QDesktopWidget
  pub fn qt_widgets_c_QDesktopWidget_G_dynamic_cast_QDesktopWidget_ptr(ptr: *mut ::widget::Widget) -> *mut ::desktop_widget::DesktopWidget;
  pub fn qt_widgets_c_QDesktopWidget_G_static_cast_QDesktopWidget_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::desktop_widget::DesktopWidget;
  pub fn qt_widgets_c_QDesktopWidget_G_static_cast_QDesktopWidget_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::desktop_widget::DesktopWidget;
  pub fn qt_widgets_c_QDesktopWidget_G_static_cast_QDesktopWidget_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::desktop_widget::DesktopWidget;
  pub fn qt_widgets_c_QDesktopWidget_G_static_cast_QObject_ptr(ptr: *mut ::desktop_widget::DesktopWidget) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QDesktopWidget_G_static_cast_QPaintDevice_ptr(ptr: *mut ::desktop_widget::DesktopWidget) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QDesktopWidget_G_static_cast_QWidget_ptr(ptr: *mut ::desktop_widget::DesktopWidget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QDesktopWidget_availableGeometry_to_output_no_args(this_ptr: *const ::desktop_widget::DesktopWidget, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QDesktopWidget_availableGeometry_to_output_point(this_ptr: *const ::desktop_widget::DesktopWidget, point: *const ::qt_core::point::Point, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QDesktopWidget_availableGeometry_to_output_screen(this_ptr: *const ::desktop_widget::DesktopWidget, screen: ::libc::c_int, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QDesktopWidget_availableGeometry_to_output_widget(this_ptr: *const ::desktop_widget::DesktopWidget, widget: *const ::widget::Widget, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QDesktopWidget_delete(this_ptr: *mut ::desktop_widget::DesktopWidget);
  pub fn qt_widgets_c_QDesktopWidget_isVirtualDesktop(this_ptr: *const ::desktop_widget::DesktopWidget) -> bool;
  pub fn qt_widgets_c_QDesktopWidget_metaObject(this_ptr: *const ::desktop_widget::DesktopWidget) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QDesktopWidget_new() -> *mut ::desktop_widget::DesktopWidget;
  pub fn qt_widgets_c_QDesktopWidget_numScreens(this_ptr: *const ::desktop_widget::DesktopWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QDesktopWidget_primaryScreen(this_ptr: *const ::desktop_widget::DesktopWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QDesktopWidget_qt_metacall(this_ptr: *mut ::desktop_widget::DesktopWidget, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QDesktopWidget_qt_metacast(this_ptr: *mut ::desktop_widget::DesktopWidget, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QDesktopWidget_screenCount(this_ptr: *const ::desktop_widget::DesktopWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QDesktopWidget_screenGeometry_to_output_no_args(this_ptr: *const ::desktop_widget::DesktopWidget, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QDesktopWidget_screenGeometry_to_output_point(this_ptr: *const ::desktop_widget::DesktopWidget, point: *const ::qt_core::point::Point, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QDesktopWidget_screenGeometry_to_output_screen(this_ptr: *const ::desktop_widget::DesktopWidget, screen: ::libc::c_int, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QDesktopWidget_screenGeometry_to_output_widget(this_ptr: *const ::desktop_widget::DesktopWidget, widget: *const ::widget::Widget, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QDesktopWidget_screenNumber_arg1(this_ptr: *const ::desktop_widget::DesktopWidget, arg1: *const ::qt_core::point::Point) -> ::libc::c_int;
  pub fn qt_widgets_c_QDesktopWidget_screenNumber_no_args(this_ptr: *const ::desktop_widget::DesktopWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QDesktopWidget_screenNumber_widget(this_ptr: *const ::desktop_widget::DesktopWidget, widget: *const ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QDesktopWidget_screen_no_args(this_ptr: *mut ::desktop_widget::DesktopWidget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QDesktopWidget_screen_screen(this_ptr: *mut ::desktop_widget::DesktopWidget, screen: ::libc::c_int) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QDesktopWidget_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QDesktopWidget_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QDial
  pub fn qt_widgets_c_QDial_G_dynamic_cast_QDial_ptr_QAbstractSlider(ptr: *mut ::abstract_slider::AbstractSlider) -> *mut ::dial::Dial;
  pub fn qt_widgets_c_QDial_G_dynamic_cast_QDial_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::dial::Dial;
  pub fn qt_widgets_c_QDial_G_static_cast_QAbstractSlider_ptr(ptr: *mut ::dial::Dial) -> *mut ::abstract_slider::AbstractSlider;
  pub fn qt_widgets_c_QDial_G_static_cast_QDial_ptr_QAbstractSlider(ptr: *mut ::abstract_slider::AbstractSlider) -> *mut ::dial::Dial;
  pub fn qt_widgets_c_QDial_G_static_cast_QDial_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::dial::Dial;
  pub fn qt_widgets_c_QDial_G_static_cast_QDial_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::dial::Dial;
  pub fn qt_widgets_c_QDial_G_static_cast_QDial_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::dial::Dial;
  pub fn qt_widgets_c_QDial_G_static_cast_QObject_ptr(ptr: *mut ::dial::Dial) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QDial_G_static_cast_QPaintDevice_ptr(ptr: *mut ::dial::Dial) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QDial_G_static_cast_QWidget_ptr(ptr: *mut ::dial::Dial) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QDial_delete(this_ptr: *mut ::dial::Dial);
  pub fn qt_widgets_c_QDial_metaObject(this_ptr: *const ::dial::Dial) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QDial_minimumSizeHint_to_output(this_ptr: *const ::dial::Dial, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QDial_new_no_args() -> *mut ::dial::Dial;
  pub fn qt_widgets_c_QDial_new_parent(parent: *mut ::widget::Widget) -> *mut ::dial::Dial;
  pub fn qt_widgets_c_QDial_notchSize(this_ptr: *const ::dial::Dial) -> ::libc::c_int;
  pub fn qt_widgets_c_QDial_notchTarget(this_ptr: *const ::dial::Dial) -> ::libc::c_double;
  pub fn qt_widgets_c_QDial_notchesVisible(this_ptr: *const ::dial::Dial) -> bool;
  pub fn qt_widgets_c_QDial_qt_metacall(this_ptr: *mut ::dial::Dial, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QDial_qt_metacast(this_ptr: *mut ::dial::Dial, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QDial_setNotchTarget(this_ptr: *mut ::dial::Dial, target: ::libc::c_double);
  pub fn qt_widgets_c_QDial_setNotchesVisible(this_ptr: *mut ::dial::Dial, visible: bool);
  pub fn qt_widgets_c_QDial_setWrapping(this_ptr: *mut ::dial::Dial, on: bool);
  pub fn qt_widgets_c_QDial_sizeHint_to_output(this_ptr: *const ::dial::Dial, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QDial_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QDial_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QDial_wrapping(this_ptr: *const ::dial::Dial) -> bool;

  // Header: QDialog
  pub fn qt_widgets_c_QDialog_G_dynamic_cast_QDialog_ptr(ptr: *mut ::widget::Widget) -> *mut ::dialog::Dialog;
  pub fn qt_widgets_c_QDialog_G_static_cast_QDialog_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::dialog::Dialog;
  pub fn qt_widgets_c_QDialog_G_static_cast_QDialog_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::dialog::Dialog;
  pub fn qt_widgets_c_QDialog_G_static_cast_QDialog_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::dialog::Dialog;
  pub fn qt_widgets_c_QDialog_G_static_cast_QObject_ptr(ptr: *mut ::dialog::Dialog) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QDialog_G_static_cast_QPaintDevice_ptr(ptr: *mut ::dialog::Dialog) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QDialog_G_static_cast_QWidget_ptr(ptr: *mut ::dialog::Dialog) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QDialog_accept(this_ptr: *mut ::dialog::Dialog);
  pub fn qt_widgets_c_QDialog_delete(this_ptr: *mut ::dialog::Dialog);
  pub fn qt_widgets_c_QDialog_done(this_ptr: *mut ::dialog::Dialog, arg1: ::libc::c_int);
  pub fn qt_widgets_c_QDialog_exec(this_ptr: *mut ::dialog::Dialog) -> ::libc::c_int;
  pub fn qt_widgets_c_QDialog_extension(this_ptr: *const ::dialog::Dialog) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QDialog_isSizeGripEnabled(this_ptr: *const ::dialog::Dialog) -> bool;
  pub fn qt_widgets_c_QDialog_metaObject(this_ptr: *const ::dialog::Dialog) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QDialog_minimumSizeHint_to_output(this_ptr: *const ::dialog::Dialog, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QDialog_open(this_ptr: *mut ::dialog::Dialog);
  pub fn qt_widgets_c_QDialog_qt_metacall(this_ptr: *mut ::dialog::Dialog, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QDialog_qt_metacast(this_ptr: *mut ::dialog::Dialog, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QDialog_reject(this_ptr: *mut ::dialog::Dialog);
  pub fn qt_widgets_c_QDialog_result(this_ptr: *const ::dialog::Dialog) -> ::libc::c_int;
  pub fn qt_widgets_c_QDialog_setExtension(this_ptr: *mut ::dialog::Dialog, extension: *mut ::widget::Widget);
  pub fn qt_widgets_c_QDialog_setModal(this_ptr: *mut ::dialog::Dialog, modal: bool);
  pub fn qt_widgets_c_QDialog_setOrientation(this_ptr: *mut ::dialog::Dialog, orientation: *const ::qt_core::qt::Orientation);
  pub fn qt_widgets_c_QDialog_setResult(this_ptr: *mut ::dialog::Dialog, r: ::libc::c_int);
  pub fn qt_widgets_c_QDialog_setSizeGripEnabled(this_ptr: *mut ::dialog::Dialog, arg1: bool);
  pub fn qt_widgets_c_QDialog_setVisible(this_ptr: *mut ::dialog::Dialog, visible: bool);
  pub fn qt_widgets_c_QDialog_showExtension(this_ptr: *mut ::dialog::Dialog, arg1: bool);
  pub fn qt_widgets_c_QDialog_sizeHint_to_output(this_ptr: *const ::dialog::Dialog, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QDialog_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QDialog_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QDialogButtonBox
  pub fn qt_widgets_c_QDialogButtonBox_G_dynamic_cast_QDialogButtonBox_ptr(ptr: *mut ::widget::Widget) -> *mut ::dialog_button_box::DialogButtonBox;
  pub fn qt_widgets_c_QDialogButtonBox_G_static_cast_QDialogButtonBox_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::dialog_button_box::DialogButtonBox;
  pub fn qt_widgets_c_QDialogButtonBox_G_static_cast_QDialogButtonBox_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::dialog_button_box::DialogButtonBox;
  pub fn qt_widgets_c_QDialogButtonBox_G_static_cast_QDialogButtonBox_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::dialog_button_box::DialogButtonBox;
  pub fn qt_widgets_c_QDialogButtonBox_G_static_cast_QObject_ptr(ptr: *mut ::dialog_button_box::DialogButtonBox) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QDialogButtonBox_G_static_cast_QPaintDevice_ptr(ptr: *mut ::dialog_button_box::DialogButtonBox) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QDialogButtonBox_G_static_cast_QWidget_ptr(ptr: *mut ::dialog_button_box::DialogButtonBox) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QDialogButtonBox_addButton_button(this_ptr: *mut ::dialog_button_box::DialogButtonBox, button: ::dialog_button_box::StandardButton) -> *mut ::push_button::PushButton;
  pub fn qt_widgets_c_QDialogButtonBox_addButton_button_role(this_ptr: *mut ::dialog_button_box::DialogButtonBox, button: *mut ::abstract_button::AbstractButton, role: ::dialog_button_box::ButtonRole);
  pub fn qt_widgets_c_QDialogButtonBox_addButton_text_role(this_ptr: *mut ::dialog_button_box::DialogButtonBox, text: *const ::qt_core::string::String, role: ::dialog_button_box::ButtonRole) -> *mut ::push_button::PushButton;
  pub fn qt_widgets_c_QDialogButtonBox_button(this_ptr: *const ::dialog_button_box::DialogButtonBox, which: ::dialog_button_box::StandardButton) -> *mut ::push_button::PushButton;
  pub fn qt_widgets_c_QDialogButtonBox_buttonRole(this_ptr: *const ::dialog_button_box::DialogButtonBox, button: *mut ::abstract_button::AbstractButton) -> ::dialog_button_box::ButtonRole;
  pub fn qt_widgets_c_QDialogButtonBox_buttons_to_output(this_ptr: *const ::dialog_button_box::DialogButtonBox, output: *mut ::list::ListAbstractButtonMutPtr);
  pub fn qt_widgets_c_QDialogButtonBox_centerButtons(this_ptr: *const ::dialog_button_box::DialogButtonBox) -> bool;
  pub fn qt_widgets_c_QDialogButtonBox_clear(this_ptr: *mut ::dialog_button_box::DialogButtonBox);
  pub fn qt_widgets_c_QDialogButtonBox_delete(this_ptr: *mut ::dialog_button_box::DialogButtonBox);
  pub fn qt_widgets_c_QDialogButtonBox_metaObject(this_ptr: *const ::dialog_button_box::DialogButtonBox) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QDialogButtonBox_new_buttons(buttons: ::libc::c_uint) -> *mut ::dialog_button_box::DialogButtonBox;
  pub fn qt_widgets_c_QDialogButtonBox_new_buttons_orientation(buttons: ::libc::c_uint, orientation: *const ::qt_core::qt::Orientation) -> *mut ::dialog_button_box::DialogButtonBox;
  pub fn qt_widgets_c_QDialogButtonBox_new_buttons_orientation_parent(buttons: ::libc::c_uint, orientation: *const ::qt_core::qt::Orientation, parent: *mut ::widget::Widget) -> *mut ::dialog_button_box::DialogButtonBox;
  pub fn qt_widgets_c_QDialogButtonBox_new_buttons_parent(buttons: ::libc::c_uint, parent: *mut ::widget::Widget) -> *mut ::dialog_button_box::DialogButtonBox;
  pub fn qt_widgets_c_QDialogButtonBox_new_no_args() -> *mut ::dialog_button_box::DialogButtonBox;
  pub fn qt_widgets_c_QDialogButtonBox_new_orientation(orientation: *const ::qt_core::qt::Orientation) -> *mut ::dialog_button_box::DialogButtonBox;
  pub fn qt_widgets_c_QDialogButtonBox_new_orientation_parent(orientation: *const ::qt_core::qt::Orientation, parent: *mut ::widget::Widget) -> *mut ::dialog_button_box::DialogButtonBox;
  pub fn qt_widgets_c_QDialogButtonBox_new_parent(parent: *mut ::widget::Widget) -> *mut ::dialog_button_box::DialogButtonBox;
  pub fn qt_widgets_c_QDialogButtonBox_qt_metacall(this_ptr: *mut ::dialog_button_box::DialogButtonBox, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QDialogButtonBox_qt_metacast(this_ptr: *mut ::dialog_button_box::DialogButtonBox, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QDialogButtonBox_removeButton(this_ptr: *mut ::dialog_button_box::DialogButtonBox, button: *mut ::abstract_button::AbstractButton);
  pub fn qt_widgets_c_QDialogButtonBox_setCenterButtons(this_ptr: *mut ::dialog_button_box::DialogButtonBox, center: bool);
  pub fn qt_widgets_c_QDialogButtonBox_setOrientation(this_ptr: *mut ::dialog_button_box::DialogButtonBox, orientation: *const ::qt_core::qt::Orientation);
  pub fn qt_widgets_c_QDialogButtonBox_setStandardButtons(this_ptr: *mut ::dialog_button_box::DialogButtonBox, buttons: ::libc::c_uint);
  pub fn qt_widgets_c_QDialogButtonBox_standardButton(this_ptr: *const ::dialog_button_box::DialogButtonBox, button: *mut ::abstract_button::AbstractButton) -> ::dialog_button_box::StandardButton;
  pub fn qt_widgets_c_QDialogButtonBox_standardButtons(this_ptr: *const ::dialog_button_box::DialogButtonBox) -> ::libc::c_uint;
  pub fn qt_widgets_c_QDialogButtonBox_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QDialogButtonBox_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QDirModel
  pub fn qt_widgets_c_QDirModel_G_static_cast_QAbstractItemModel_ptr(ptr: *mut ::dir_model::DirModel) -> *mut ::qt_core::abstract_item_model::AbstractItemModel;
  pub fn qt_widgets_c_QDirModel_G_static_cast_QDirModel_ptr_QAbstractItemModel(ptr: *mut ::qt_core::abstract_item_model::AbstractItemModel) -> *mut ::dir_model::DirModel;
  pub fn qt_widgets_c_QDirModel_G_static_cast_QDirModel_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::dir_model::DirModel;
  pub fn qt_widgets_c_QDirModel_G_static_cast_QObject_ptr(ptr: *mut ::dir_model::DirModel) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QDirModel_columnCount_no_args(this_ptr: *const ::dir_model::DirModel) -> ::libc::c_int;
  pub fn qt_widgets_c_QDirModel_columnCount_parent(this_ptr: *const ::dir_model::DirModel, parent: *const ::qt_core::model_index::ModelIndex) -> ::libc::c_int;
  pub fn qt_widgets_c_QDirModel_data_to_output_index(this_ptr: *const ::dir_model::DirModel, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QDirModel_data_to_output_index_role(this_ptr: *const ::dir_model::DirModel, index: *const ::qt_core::model_index::ModelIndex, role: ::libc::c_int, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QDirModel_delete(this_ptr: *mut ::dir_model::DirModel);
  pub fn qt_widgets_c_QDirModel_dropMimeData(this_ptr: *mut ::dir_model::DirModel, data: *const ::qt_core::mime_data::MimeData, action: *const ::qt_core::qt::DropAction, row: ::libc::c_int, column: ::libc::c_int, parent: *const ::qt_core::model_index::ModelIndex) -> bool;
  pub fn qt_widgets_c_QDirModel_fileIcon_to_output(this_ptr: *const ::dir_model::DirModel, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QDirModel_fileInfo_to_output(this_ptr: *const ::dir_model::DirModel, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::file_info::FileInfo);
  pub fn qt_widgets_c_QDirModel_fileName_to_output(this_ptr: *const ::dir_model::DirModel, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QDirModel_filePath_to_output(this_ptr: *const ::dir_model::DirModel, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QDirModel_hasChildren_index(this_ptr: *const ::dir_model::DirModel, index: *const ::qt_core::model_index::ModelIndex) -> bool;
  pub fn qt_widgets_c_QDirModel_hasChildren_no_args(this_ptr: *const ::dir_model::DirModel) -> bool;
  pub fn qt_widgets_c_QDirModel_headerData_to_output_section_orientation(this_ptr: *const ::dir_model::DirModel, section: ::libc::c_int, orientation: *const ::qt_core::qt::Orientation, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QDirModel_headerData_to_output_section_orientation_role(this_ptr: *const ::dir_model::DirModel, section: ::libc::c_int, orientation: *const ::qt_core::qt::Orientation, role: ::libc::c_int, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QDirModel_iconProvider(this_ptr: *const ::dir_model::DirModel) -> *mut ::file_icon_provider::FileIconProvider;
  pub fn qt_widgets_c_QDirModel_index_to_output_path(this_ptr: *const ::dir_model::DirModel, path: *const ::qt_core::string::String, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QDirModel_index_to_output_path_column(this_ptr: *const ::dir_model::DirModel, path: *const ::qt_core::string::String, column: ::libc::c_int, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QDirModel_index_to_output_row_column(this_ptr: *const ::dir_model::DirModel, row: ::libc::c_int, column: ::libc::c_int, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QDirModel_index_to_output_row_column_parent(this_ptr: *const ::dir_model::DirModel, row: ::libc::c_int, column: ::libc::c_int, parent: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QDirModel_isDir(this_ptr: *const ::dir_model::DirModel, index: *const ::qt_core::model_index::ModelIndex) -> bool;
  pub fn qt_widgets_c_QDirModel_isReadOnly(this_ptr: *const ::dir_model::DirModel) -> bool;
  pub fn qt_widgets_c_QDirModel_lazyChildCount(this_ptr: *const ::dir_model::DirModel) -> bool;
  pub fn qt_widgets_c_QDirModel_metaObject(this_ptr: *const ::dir_model::DirModel) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QDirModel_mimeData(this_ptr: *const ::dir_model::DirModel, indexes: *const ::qt_core::list::ListModelIndex) -> *mut ::qt_core::mime_data::MimeData;
  pub fn qt_widgets_c_QDirModel_mimeTypes_to_output(this_ptr: *const ::dir_model::DirModel, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QDirModel_mkdir_to_output(this_ptr: *mut ::dir_model::DirModel, parent: *const ::qt_core::model_index::ModelIndex, name: *const ::qt_core::string::String, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QDirModel_nameFilters_to_output(this_ptr: *const ::dir_model::DirModel, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QDirModel_new_no_args() -> *mut ::dir_model::DirModel;
  pub fn qt_widgets_c_QDirModel_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::dir_model::DirModel;
  pub fn qt_widgets_c_QDirModel_parent_to_output(this_ptr: *const ::dir_model::DirModel, child: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QDirModel_qt_metacall(this_ptr: *mut ::dir_model::DirModel, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QDirModel_qt_metacast(this_ptr: *mut ::dir_model::DirModel, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QDirModel_refresh_no_args(this_ptr: *mut ::dir_model::DirModel);
  pub fn qt_widgets_c_QDirModel_refresh_parent(this_ptr: *mut ::dir_model::DirModel, parent: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QDirModel_remove(this_ptr: *mut ::dir_model::DirModel, index: *const ::qt_core::model_index::ModelIndex) -> bool;
  pub fn qt_widgets_c_QDirModel_resolveSymlinks(this_ptr: *const ::dir_model::DirModel) -> bool;
  pub fn qt_widgets_c_QDirModel_rmdir(this_ptr: *mut ::dir_model::DirModel, index: *const ::qt_core::model_index::ModelIndex) -> bool;
  pub fn qt_widgets_c_QDirModel_rowCount_no_args(this_ptr: *const ::dir_model::DirModel) -> ::libc::c_int;
  pub fn qt_widgets_c_QDirModel_rowCount_parent(this_ptr: *const ::dir_model::DirModel, parent: *const ::qt_core::model_index::ModelIndex) -> ::libc::c_int;
  pub fn qt_widgets_c_QDirModel_setData_index_value(this_ptr: *mut ::dir_model::DirModel, index: *const ::qt_core::model_index::ModelIndex, value: *const ::qt_core::variant::Variant) -> bool;
  pub fn qt_widgets_c_QDirModel_setData_index_value_role(this_ptr: *mut ::dir_model::DirModel, index: *const ::qt_core::model_index::ModelIndex, value: *const ::qt_core::variant::Variant, role: ::libc::c_int) -> bool;
  pub fn qt_widgets_c_QDirModel_setIconProvider(this_ptr: *mut ::dir_model::DirModel, provider: *mut ::file_icon_provider::FileIconProvider);
  pub fn qt_widgets_c_QDirModel_setLazyChildCount(this_ptr: *mut ::dir_model::DirModel, enable: bool);
  pub fn qt_widgets_c_QDirModel_setNameFilters(this_ptr: *mut ::dir_model::DirModel, filters: *const ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QDirModel_setReadOnly(this_ptr: *mut ::dir_model::DirModel, enable: bool);
  pub fn qt_widgets_c_QDirModel_setResolveSymlinks(this_ptr: *mut ::dir_model::DirModel, enable: bool);
  pub fn qt_widgets_c_QDirModel_sort_column(this_ptr: *mut ::dir_model::DirModel, column: ::libc::c_int);
  pub fn qt_widgets_c_QDirModel_sort_column_order(this_ptr: *mut ::dir_model::DirModel, column: ::libc::c_int, order: *const ::qt_core::qt::SortOrder);
  pub fn qt_widgets_c_QDirModel_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QDirModel_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QDockWidget
  pub fn qt_widgets_c_QDockWidget_G_dynamic_cast_QDockWidget_ptr(ptr: *mut ::widget::Widget) -> *mut ::dock_widget::DockWidget;
  pub fn qt_widgets_c_QDockWidget_G_static_cast_QDockWidget_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::dock_widget::DockWidget;
  pub fn qt_widgets_c_QDockWidget_G_static_cast_QDockWidget_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::dock_widget::DockWidget;
  pub fn qt_widgets_c_QDockWidget_G_static_cast_QDockWidget_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::dock_widget::DockWidget;
  pub fn qt_widgets_c_QDockWidget_G_static_cast_QObject_ptr(ptr: *mut ::dock_widget::DockWidget) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QDockWidget_G_static_cast_QPaintDevice_ptr(ptr: *mut ::dock_widget::DockWidget) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QDockWidget_G_static_cast_QWidget_ptr(ptr: *mut ::dock_widget::DockWidget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QDockWidget_delete(this_ptr: *mut ::dock_widget::DockWidget);
  pub fn qt_widgets_c_QDockWidget_features(this_ptr: *const ::dock_widget::DockWidget) -> ::libc::c_uint;
  pub fn qt_widgets_c_QDockWidget_isAreaAllowed(this_ptr: *const ::dock_widget::DockWidget, area: *const ::qt_core::qt::DockWidgetArea) -> bool;
  pub fn qt_widgets_c_QDockWidget_isFloating(this_ptr: *const ::dock_widget::DockWidget) -> bool;
  pub fn qt_widgets_c_QDockWidget_metaObject(this_ptr: *const ::dock_widget::DockWidget) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QDockWidget_qt_metacall(this_ptr: *mut ::dock_widget::DockWidget, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QDockWidget_qt_metacast(this_ptr: *mut ::dock_widget::DockWidget, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QDockWidget_setFeatures(this_ptr: *mut ::dock_widget::DockWidget, features: ::libc::c_uint);
  pub fn qt_widgets_c_QDockWidget_setFloating(this_ptr: *mut ::dock_widget::DockWidget, floating: bool);
  pub fn qt_widgets_c_QDockWidget_setTitleBarWidget(this_ptr: *mut ::dock_widget::DockWidget, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QDockWidget_setWidget(this_ptr: *mut ::dock_widget::DockWidget, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QDockWidget_titleBarWidget(this_ptr: *const ::dock_widget::DockWidget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QDockWidget_toggleViewAction(this_ptr: *const ::dock_widget::DockWidget) -> *mut ::action::Action;
  pub fn qt_widgets_c_QDockWidget_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QDockWidget_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QDockWidget_widget(this_ptr: *const ::dock_widget::DockWidget) -> *mut ::widget::Widget;

  // Header: QDoubleSpinBox
  pub fn qt_widgets_c_QDoubleSpinBox_G_dynamic_cast_QDoubleSpinBox_ptr_QAbstractSpinBox(ptr: *mut ::abstract_spin_box::AbstractSpinBox) -> *mut ::double_spin_box::DoubleSpinBox;
  pub fn qt_widgets_c_QDoubleSpinBox_G_dynamic_cast_QDoubleSpinBox_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::double_spin_box::DoubleSpinBox;
  pub fn qt_widgets_c_QDoubleSpinBox_G_static_cast_QAbstractSpinBox_ptr(ptr: *mut ::double_spin_box::DoubleSpinBox) -> *mut ::abstract_spin_box::AbstractSpinBox;
  pub fn qt_widgets_c_QDoubleSpinBox_G_static_cast_QDoubleSpinBox_ptr_QAbstractSpinBox(ptr: *mut ::abstract_spin_box::AbstractSpinBox) -> *mut ::double_spin_box::DoubleSpinBox;
  pub fn qt_widgets_c_QDoubleSpinBox_G_static_cast_QDoubleSpinBox_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::double_spin_box::DoubleSpinBox;
  pub fn qt_widgets_c_QDoubleSpinBox_G_static_cast_QDoubleSpinBox_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::double_spin_box::DoubleSpinBox;
  pub fn qt_widgets_c_QDoubleSpinBox_G_static_cast_QDoubleSpinBox_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::double_spin_box::DoubleSpinBox;
  pub fn qt_widgets_c_QDoubleSpinBox_G_static_cast_QObject_ptr(ptr: *mut ::double_spin_box::DoubleSpinBox) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QDoubleSpinBox_G_static_cast_QPaintDevice_ptr(ptr: *mut ::double_spin_box::DoubleSpinBox) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QDoubleSpinBox_G_static_cast_QWidget_ptr(ptr: *mut ::double_spin_box::DoubleSpinBox) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QDoubleSpinBox_cleanText_to_output(this_ptr: *const ::double_spin_box::DoubleSpinBox, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QDoubleSpinBox_decimals(this_ptr: *const ::double_spin_box::DoubleSpinBox) -> ::libc::c_int;
  pub fn qt_widgets_c_QDoubleSpinBox_delete(this_ptr: *mut ::double_spin_box::DoubleSpinBox);
  pub fn qt_widgets_c_QDoubleSpinBox_fixup(this_ptr: *const ::double_spin_box::DoubleSpinBox, str: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QDoubleSpinBox_maximum(this_ptr: *const ::double_spin_box::DoubleSpinBox) -> ::libc::c_double;
  pub fn qt_widgets_c_QDoubleSpinBox_metaObject(this_ptr: *const ::double_spin_box::DoubleSpinBox) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QDoubleSpinBox_minimum(this_ptr: *const ::double_spin_box::DoubleSpinBox) -> ::libc::c_double;
  pub fn qt_widgets_c_QDoubleSpinBox_new_no_args() -> *mut ::double_spin_box::DoubleSpinBox;
  pub fn qt_widgets_c_QDoubleSpinBox_new_parent(parent: *mut ::widget::Widget) -> *mut ::double_spin_box::DoubleSpinBox;
  pub fn qt_widgets_c_QDoubleSpinBox_prefix_to_output(this_ptr: *const ::double_spin_box::DoubleSpinBox, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QDoubleSpinBox_qt_metacall(this_ptr: *mut ::double_spin_box::DoubleSpinBox, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QDoubleSpinBox_qt_metacast(this_ptr: *mut ::double_spin_box::DoubleSpinBox, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QDoubleSpinBox_setDecimals(this_ptr: *mut ::double_spin_box::DoubleSpinBox, prec: ::libc::c_int);
  pub fn qt_widgets_c_QDoubleSpinBox_setMaximum(this_ptr: *mut ::double_spin_box::DoubleSpinBox, max: ::libc::c_double);
  pub fn qt_widgets_c_QDoubleSpinBox_setMinimum(this_ptr: *mut ::double_spin_box::DoubleSpinBox, min: ::libc::c_double);
  pub fn qt_widgets_c_QDoubleSpinBox_setPrefix(this_ptr: *mut ::double_spin_box::DoubleSpinBox, prefix: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QDoubleSpinBox_setRange(this_ptr: *mut ::double_spin_box::DoubleSpinBox, min: ::libc::c_double, max: ::libc::c_double);
  pub fn qt_widgets_c_QDoubleSpinBox_setSingleStep(this_ptr: *mut ::double_spin_box::DoubleSpinBox, val: ::libc::c_double);
  pub fn qt_widgets_c_QDoubleSpinBox_setSuffix(this_ptr: *mut ::double_spin_box::DoubleSpinBox, suffix: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QDoubleSpinBox_setValue(this_ptr: *mut ::double_spin_box::DoubleSpinBox, val: ::libc::c_double);
  pub fn qt_widgets_c_QDoubleSpinBox_singleStep(this_ptr: *const ::double_spin_box::DoubleSpinBox) -> ::libc::c_double;
  pub fn qt_widgets_c_QDoubleSpinBox_suffix_to_output(this_ptr: *const ::double_spin_box::DoubleSpinBox, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QDoubleSpinBox_textFromValue_to_output(this_ptr: *const ::double_spin_box::DoubleSpinBox, val: ::libc::c_double, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QDoubleSpinBox_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QDoubleSpinBox_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QDoubleSpinBox_value(this_ptr: *const ::double_spin_box::DoubleSpinBox) -> ::libc::c_double;
  pub fn qt_widgets_c_QDoubleSpinBox_valueFromText(this_ptr: *const ::double_spin_box::DoubleSpinBox, text: *const ::qt_core::string::String) -> ::libc::c_double;

  // Header: QErrorMessage
  pub fn qt_widgets_c_QErrorMessage_G_dynamic_cast_QErrorMessage_ptr_QDialog(ptr: *mut ::dialog::Dialog) -> *mut ::error_message::ErrorMessage;
  pub fn qt_widgets_c_QErrorMessage_G_dynamic_cast_QErrorMessage_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::error_message::ErrorMessage;
  pub fn qt_widgets_c_QErrorMessage_G_static_cast_QDialog_ptr(ptr: *mut ::error_message::ErrorMessage) -> *mut ::dialog::Dialog;
  pub fn qt_widgets_c_QErrorMessage_G_static_cast_QErrorMessage_ptr_QDialog(ptr: *mut ::dialog::Dialog) -> *mut ::error_message::ErrorMessage;
  pub fn qt_widgets_c_QErrorMessage_G_static_cast_QErrorMessage_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::error_message::ErrorMessage;
  pub fn qt_widgets_c_QErrorMessage_G_static_cast_QErrorMessage_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::error_message::ErrorMessage;
  pub fn qt_widgets_c_QErrorMessage_G_static_cast_QErrorMessage_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::error_message::ErrorMessage;
  pub fn qt_widgets_c_QErrorMessage_G_static_cast_QObject_ptr(ptr: *mut ::error_message::ErrorMessage) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QErrorMessage_G_static_cast_QPaintDevice_ptr(ptr: *mut ::error_message::ErrorMessage) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QErrorMessage_G_static_cast_QWidget_ptr(ptr: *mut ::error_message::ErrorMessage) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QErrorMessage_delete(this_ptr: *mut ::error_message::ErrorMessage);
  pub fn qt_widgets_c_QErrorMessage_metaObject(this_ptr: *const ::error_message::ErrorMessage) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QErrorMessage_new_no_args() -> *mut ::error_message::ErrorMessage;
  pub fn qt_widgets_c_QErrorMessage_new_parent(parent: *mut ::widget::Widget) -> *mut ::error_message::ErrorMessage;
  pub fn qt_widgets_c_QErrorMessage_qtHandler() -> *mut ::error_message::ErrorMessage;
  pub fn qt_widgets_c_QErrorMessage_qt_metacall(this_ptr: *mut ::error_message::ErrorMessage, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QErrorMessage_qt_metacast(this_ptr: *mut ::error_message::ErrorMessage, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QErrorMessage_showMessage_message(this_ptr: *mut ::error_message::ErrorMessage, message: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QErrorMessage_showMessage_message_type(this_ptr: *mut ::error_message::ErrorMessage, message: *const ::qt_core::string::String, type_: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QErrorMessage_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QErrorMessage_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QFileDialog
  pub fn qt_widgets_c_QFileDialog_G_dynamic_cast_QFileDialog_ptr_QDialog(ptr: *mut ::dialog::Dialog) -> *mut ::file_dialog::FileDialog;
  pub fn qt_widgets_c_QFileDialog_G_dynamic_cast_QFileDialog_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::file_dialog::FileDialog;
  pub fn qt_widgets_c_QFileDialog_G_static_cast_QDialog_ptr(ptr: *mut ::file_dialog::FileDialog) -> *mut ::dialog::Dialog;
  pub fn qt_widgets_c_QFileDialog_G_static_cast_QFileDialog_ptr_QDialog(ptr: *mut ::dialog::Dialog) -> *mut ::file_dialog::FileDialog;
  pub fn qt_widgets_c_QFileDialog_G_static_cast_QFileDialog_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::file_dialog::FileDialog;
  pub fn qt_widgets_c_QFileDialog_G_static_cast_QFileDialog_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::file_dialog::FileDialog;
  pub fn qt_widgets_c_QFileDialog_G_static_cast_QFileDialog_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::file_dialog::FileDialog;
  pub fn qt_widgets_c_QFileDialog_G_static_cast_QObject_ptr(ptr: *mut ::file_dialog::FileDialog) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QFileDialog_G_static_cast_QPaintDevice_ptr(ptr: *mut ::file_dialog::FileDialog) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QFileDialog_G_static_cast_QWidget_ptr(ptr: *mut ::file_dialog::FileDialog) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QFileDialog_acceptMode(this_ptr: *const ::file_dialog::FileDialog) -> ::file_dialog::AcceptMode;
  pub fn qt_widgets_c_QFileDialog_confirmOverwrite(this_ptr: *const ::file_dialog::FileDialog) -> bool;
  pub fn qt_widgets_c_QFileDialog_defaultSuffix_to_output(this_ptr: *const ::file_dialog::FileDialog, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_delete(this_ptr: *mut ::file_dialog::FileDialog);
  pub fn qt_widgets_c_QFileDialog_directoryUrl_to_output(this_ptr: *const ::file_dialog::FileDialog, output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_directory_to_output(this_ptr: *const ::file_dialog::FileDialog, output: *mut ::qt_core::dir::Dir);
  pub fn qt_widgets_c_QFileDialog_fileMode(this_ptr: *const ::file_dialog::FileDialog) -> ::file_dialog::FileMode;
  pub fn qt_widgets_c_QFileDialog_getExistingDirectoryUrl_to_output_no_args(output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_getExistingDirectoryUrl_to_output_parent(parent: *mut ::widget::Widget, output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_getExistingDirectoryUrl_to_output_parent_caption(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_getExistingDirectoryUrl_to_output_parent_caption_dir(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::url::Url, output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_getExistingDirectoryUrl_to_output_parent_caption_dir_options(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::url::Url, options: ::libc::c_uint, output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_getExistingDirectoryUrl_to_output_parent_caption_dir_options_supportedSchemes(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::url::Url, options: ::libc::c_uint, supportedSchemes: *const ::qt_core::string_list::StringList, output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_getExistingDirectory_to_output_no_args(output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_getExistingDirectory_to_output_parent(parent: *mut ::widget::Widget, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_getExistingDirectory_to_output_parent_caption(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_getExistingDirectory_to_output_parent_caption_dir(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::string::String, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_getExistingDirectory_to_output_parent_caption_dir_options(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::string::String, options: ::libc::c_uint, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_getOpenFileName_to_output_no_args(output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_getOpenFileName_to_output_parent(parent: *mut ::widget::Widget, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_getOpenFileName_to_output_parent_caption(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_getOpenFileName_to_output_parent_caption_dir(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::string::String, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_getOpenFileName_to_output_parent_caption_dir_filter(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::string::String, filter: *const ::qt_core::string::String, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_getOpenFileName_to_output_parent_caption_dir_filter_selectedFilter(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::string::String, filter: *const ::qt_core::string::String, selectedFilter: *mut ::qt_core::string::String, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_getOpenFileName_to_output_parent_caption_dir_filter_selectedFilter_options(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::string::String, filter: *const ::qt_core::string::String, selectedFilter: *mut ::qt_core::string::String, options: ::libc::c_uint, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_getOpenFileNames_to_output_no_args(output: *mut ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QFileDialog_getOpenFileNames_to_output_parent(parent: *mut ::widget::Widget, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QFileDialog_getOpenFileNames_to_output_parent_caption(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QFileDialog_getOpenFileNames_to_output_parent_caption_dir(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::string::String, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QFileDialog_getOpenFileNames_to_output_parent_caption_dir_filter(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::string::String, filter: *const ::qt_core::string::String, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QFileDialog_getOpenFileNames_to_output_parent_caption_dir_filter_selectedFilter(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::string::String, filter: *const ::qt_core::string::String, selectedFilter: *mut ::qt_core::string::String, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QFileDialog_getOpenFileNames_to_output_parent_caption_dir_filter_selectedFilter_options(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::string::String, filter: *const ::qt_core::string::String, selectedFilter: *mut ::qt_core::string::String, options: ::libc::c_uint, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QFileDialog_getOpenFileUrl_to_output_no_args(output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_getOpenFileUrl_to_output_parent(parent: *mut ::widget::Widget, output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_getOpenFileUrl_to_output_parent_caption(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_getOpenFileUrl_to_output_parent_caption_dir(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::url::Url, output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_getOpenFileUrl_to_output_parent_caption_dir_filter(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::url::Url, filter: *const ::qt_core::string::String, output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_getOpenFileUrl_to_output_parent_caption_dir_filter_selectedFilter(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::url::Url, filter: *const ::qt_core::string::String, selectedFilter: *mut ::qt_core::string::String, output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_getOpenFileUrl_to_output_parent_caption_dir_filter_selectedFilter_options(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::url::Url, filter: *const ::qt_core::string::String, selectedFilter: *mut ::qt_core::string::String, options: ::libc::c_uint, output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_getOpenFileUrl_to_output_parent_caption_dir_filter_selectedFilter_options_supportedSchemes(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::url::Url, filter: *const ::qt_core::string::String, selectedFilter: *mut ::qt_core::string::String, options: ::libc::c_uint, supportedSchemes: *const ::qt_core::string_list::StringList, output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_getOpenFileUrls_to_output_no_args(output: *mut ::qt_core::list::ListUrl);
  pub fn qt_widgets_c_QFileDialog_getOpenFileUrls_to_output_parent(parent: *mut ::widget::Widget, output: *mut ::qt_core::list::ListUrl);
  pub fn qt_widgets_c_QFileDialog_getOpenFileUrls_to_output_parent_caption(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, output: *mut ::qt_core::list::ListUrl);
  pub fn qt_widgets_c_QFileDialog_getOpenFileUrls_to_output_parent_caption_dir(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::url::Url, output: *mut ::qt_core::list::ListUrl);
  pub fn qt_widgets_c_QFileDialog_getOpenFileUrls_to_output_parent_caption_dir_filter(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::url::Url, filter: *const ::qt_core::string::String, output: *mut ::qt_core::list::ListUrl);
  pub fn qt_widgets_c_QFileDialog_getOpenFileUrls_to_output_parent_caption_dir_filter_selectedFilter(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::url::Url, filter: *const ::qt_core::string::String, selectedFilter: *mut ::qt_core::string::String, output: *mut ::qt_core::list::ListUrl);
  pub fn qt_widgets_c_QFileDialog_getOpenFileUrls_to_output_parent_caption_dir_filter_selectedFilter_options(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::url::Url, filter: *const ::qt_core::string::String, selectedFilter: *mut ::qt_core::string::String, options: ::libc::c_uint, output: *mut ::qt_core::list::ListUrl);
  pub fn qt_widgets_c_QFileDialog_getOpenFileUrls_to_output_parent_caption_dir_filter_selectedFilter_options_supportedSchemes(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::url::Url, filter: *const ::qt_core::string::String, selectedFilter: *mut ::qt_core::string::String, options: ::libc::c_uint, supportedSchemes: *const ::qt_core::string_list::StringList, output: *mut ::qt_core::list::ListUrl);
  pub fn qt_widgets_c_QFileDialog_getSaveFileName_to_output_no_args(output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_getSaveFileName_to_output_parent(parent: *mut ::widget::Widget, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_getSaveFileName_to_output_parent_caption(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_getSaveFileName_to_output_parent_caption_dir(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::string::String, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_getSaveFileName_to_output_parent_caption_dir_filter(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::string::String, filter: *const ::qt_core::string::String, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_getSaveFileName_to_output_parent_caption_dir_filter_selectedFilter(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::string::String, filter: *const ::qt_core::string::String, selectedFilter: *mut ::qt_core::string::String, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_getSaveFileName_to_output_parent_caption_dir_filter_selectedFilter_options(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::string::String, filter: *const ::qt_core::string::String, selectedFilter: *mut ::qt_core::string::String, options: ::libc::c_uint, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_getSaveFileUrl_to_output_no_args(output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_getSaveFileUrl_to_output_parent(parent: *mut ::widget::Widget, output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_getSaveFileUrl_to_output_parent_caption(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_getSaveFileUrl_to_output_parent_caption_dir(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::url::Url, output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_getSaveFileUrl_to_output_parent_caption_dir_filter(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::url::Url, filter: *const ::qt_core::string::String, output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_getSaveFileUrl_to_output_parent_caption_dir_filter_selectedFilter(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::url::Url, filter: *const ::qt_core::string::String, selectedFilter: *mut ::qt_core::string::String, output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_getSaveFileUrl_to_output_parent_caption_dir_filter_selectedFilter_options(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::url::Url, filter: *const ::qt_core::string::String, selectedFilter: *mut ::qt_core::string::String, options: ::libc::c_uint, output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_getSaveFileUrl_to_output_parent_caption_dir_filter_selectedFilter_options_supportedSchemes(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, dir: *const ::qt_core::url::Url, filter: *const ::qt_core::string::String, selectedFilter: *mut ::qt_core::string::String, options: ::libc::c_uint, supportedSchemes: *const ::qt_core::string_list::StringList, output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_history_to_output(this_ptr: *const ::file_dialog::FileDialog, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QFileDialog_iconProvider(this_ptr: *const ::file_dialog::FileDialog) -> *mut ::file_icon_provider::FileIconProvider;
  pub fn qt_widgets_c_QFileDialog_isNameFilterDetailsVisible(this_ptr: *const ::file_dialog::FileDialog) -> bool;
  pub fn qt_widgets_c_QFileDialog_isReadOnly(this_ptr: *const ::file_dialog::FileDialog) -> bool;
  pub fn qt_widgets_c_QFileDialog_itemDelegate(this_ptr: *const ::file_dialog::FileDialog) -> *mut ::abstract_item_delegate::AbstractItemDelegate;
  pub fn qt_widgets_c_QFileDialog_labelText_to_output(this_ptr: *const ::file_dialog::FileDialog, label: ::file_dialog::DialogLabel, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_metaObject(this_ptr: *const ::file_dialog::FileDialog) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QFileDialog_mimeTypeFilters_to_output(this_ptr: *const ::file_dialog::FileDialog, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QFileDialog_nameFilters_to_output(this_ptr: *const ::file_dialog::FileDialog, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QFileDialog_new_no_args() -> *mut ::file_dialog::FileDialog;
  pub fn qt_widgets_c_QFileDialog_new_parent(parent: *mut ::widget::Widget) -> *mut ::file_dialog::FileDialog;
  pub fn qt_widgets_c_QFileDialog_new_parent_caption(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String) -> *mut ::file_dialog::FileDialog;
  pub fn qt_widgets_c_QFileDialog_new_parent_caption_directory(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, directory: *const ::qt_core::string::String) -> *mut ::file_dialog::FileDialog;
  pub fn qt_widgets_c_QFileDialog_new_parent_caption_directory_filter(parent: *mut ::widget::Widget, caption: *const ::qt_core::string::String, directory: *const ::qt_core::string::String, filter: *const ::qt_core::string::String) -> *mut ::file_dialog::FileDialog;
  pub fn qt_widgets_c_QFileDialog_open(this_ptr: *mut ::file_dialog::FileDialog, receiver: *mut ::qt_core::object::Object, member: *const ::libc::c_char);
  pub fn qt_widgets_c_QFileDialog_options(this_ptr: *const ::file_dialog::FileDialog) -> ::libc::c_uint;
  pub fn qt_widgets_c_QFileDialog_proxyModel(this_ptr: *const ::file_dialog::FileDialog) -> *mut ::qt_core::abstract_proxy_model::AbstractProxyModel;
  pub fn qt_widgets_c_QFileDialog_qt_metacall(this_ptr: *mut ::file_dialog::FileDialog, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QFileDialog_qt_metacast(this_ptr: *mut ::file_dialog::FileDialog, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QFileDialog_resolveSymlinks(this_ptr: *const ::file_dialog::FileDialog) -> bool;
  pub fn qt_widgets_c_QFileDialog_restoreState(this_ptr: *mut ::file_dialog::FileDialog, state: *const ::qt_core::byte_array::ByteArray) -> bool;
  pub fn qt_widgets_c_QFileDialog_saveState_to_output(this_ptr: *const ::file_dialog::FileDialog, output: *mut ::qt_core::byte_array::ByteArray);
  pub fn qt_widgets_c_QFileDialog_selectFile(this_ptr: *mut ::file_dialog::FileDialog, filename: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_selectMimeTypeFilter(this_ptr: *mut ::file_dialog::FileDialog, filter: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_selectNameFilter(this_ptr: *mut ::file_dialog::FileDialog, filter: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_selectUrl(this_ptr: *mut ::file_dialog::FileDialog, url: *const ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_selectedFiles_to_output(this_ptr: *const ::file_dialog::FileDialog, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QFileDialog_selectedMimeTypeFilter_to_output(this_ptr: *const ::file_dialog::FileDialog, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_selectedNameFilter_to_output(this_ptr: *const ::file_dialog::FileDialog, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_selectedUrls_to_output(this_ptr: *const ::file_dialog::FileDialog, output: *mut ::qt_core::list::ListUrl);
  pub fn qt_widgets_c_QFileDialog_setAcceptMode(this_ptr: *mut ::file_dialog::FileDialog, mode: ::file_dialog::AcceptMode);
  pub fn qt_widgets_c_QFileDialog_setConfirmOverwrite(this_ptr: *mut ::file_dialog::FileDialog, enabled: bool);
  pub fn qt_widgets_c_QFileDialog_setDefaultSuffix(this_ptr: *mut ::file_dialog::FileDialog, suffix: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_setDirectoryUrl(this_ptr: *mut ::file_dialog::FileDialog, directory: *const ::qt_core::url::Url);
  pub fn qt_widgets_c_QFileDialog_setDirectory_QDir(this_ptr: *mut ::file_dialog::FileDialog, directory: *const ::qt_core::dir::Dir);
  pub fn qt_widgets_c_QFileDialog_setDirectory_QString(this_ptr: *mut ::file_dialog::FileDialog, directory: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_setFileMode(this_ptr: *mut ::file_dialog::FileDialog, mode: ::file_dialog::FileMode);
  pub fn qt_widgets_c_QFileDialog_setHistory(this_ptr: *mut ::file_dialog::FileDialog, paths: *const ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QFileDialog_setIconProvider(this_ptr: *mut ::file_dialog::FileDialog, provider: *mut ::file_icon_provider::FileIconProvider);
  pub fn qt_widgets_c_QFileDialog_setItemDelegate(this_ptr: *mut ::file_dialog::FileDialog, delegate: *mut ::abstract_item_delegate::AbstractItemDelegate);
  pub fn qt_widgets_c_QFileDialog_setLabelText(this_ptr: *mut ::file_dialog::FileDialog, label: ::file_dialog::DialogLabel, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_setMimeTypeFilters(this_ptr: *mut ::file_dialog::FileDialog, filters: *const ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QFileDialog_setNameFilter(this_ptr: *mut ::file_dialog::FileDialog, filter: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_setNameFilterDetailsVisible(this_ptr: *mut ::file_dialog::FileDialog, enabled: bool);
  pub fn qt_widgets_c_QFileDialog_setNameFilters(this_ptr: *mut ::file_dialog::FileDialog, filters: *const ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QFileDialog_setOption_option(this_ptr: *mut ::file_dialog::FileDialog, option: ::file_dialog::Option);
  pub fn qt_widgets_c_QFileDialog_setOption_option_on(this_ptr: *mut ::file_dialog::FileDialog, option: ::file_dialog::Option, on: bool);
  pub fn qt_widgets_c_QFileDialog_setOptions(this_ptr: *mut ::file_dialog::FileDialog, options: ::libc::c_uint);
  pub fn qt_widgets_c_QFileDialog_setProxyModel(this_ptr: *mut ::file_dialog::FileDialog, model: *mut ::qt_core::abstract_proxy_model::AbstractProxyModel);
  pub fn qt_widgets_c_QFileDialog_setReadOnly(this_ptr: *mut ::file_dialog::FileDialog, enabled: bool);
  pub fn qt_widgets_c_QFileDialog_setResolveSymlinks(this_ptr: *mut ::file_dialog::FileDialog, enabled: bool);
  pub fn qt_widgets_c_QFileDialog_setSidebarUrls(this_ptr: *mut ::file_dialog::FileDialog, urls: *const ::qt_core::list::ListUrl);
  pub fn qt_widgets_c_QFileDialog_setSupportedSchemes(this_ptr: *mut ::file_dialog::FileDialog, schemes: *const ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QFileDialog_setViewMode(this_ptr: *mut ::file_dialog::FileDialog, mode: ::file_dialog::ViewMode);
  pub fn qt_widgets_c_QFileDialog_setVisible(this_ptr: *mut ::file_dialog::FileDialog, visible: bool);
  pub fn qt_widgets_c_QFileDialog_sidebarUrls_to_output(this_ptr: *const ::file_dialog::FileDialog, output: *mut ::qt_core::list::ListUrl);
  pub fn qt_widgets_c_QFileDialog_supportedSchemes_to_output(this_ptr: *const ::file_dialog::FileDialog, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QFileDialog_testOption(this_ptr: *const ::file_dialog::FileDialog, option: ::file_dialog::Option) -> bool;
  pub fn qt_widgets_c_QFileDialog_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileDialog_viewMode(this_ptr: *const ::file_dialog::FileDialog) -> ::file_dialog::ViewMode;

  // Header: QFileIconProvider
  pub fn qt_widgets_c_QFileIconProvider_delete(this_ptr: *mut ::file_icon_provider::FileIconProvider);
  pub fn qt_widgets_c_QFileIconProvider_icon_to_output_info(this_ptr: *const ::file_icon_provider::FileIconProvider, info: *const ::qt_core::file_info::FileInfo, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QFileIconProvider_icon_to_output_type(this_ptr: *const ::file_icon_provider::FileIconProvider, type_: ::file_icon_provider::IconType, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QFileIconProvider_new() -> *mut ::file_icon_provider::FileIconProvider;
  pub fn qt_widgets_c_QFileIconProvider_options(this_ptr: *const ::file_icon_provider::FileIconProvider) -> ::libc::c_uint;
  pub fn qt_widgets_c_QFileIconProvider_setOptions(this_ptr: *mut ::file_icon_provider::FileIconProvider, options: ::libc::c_uint);
  pub fn qt_widgets_c_QFileIconProvider_type_to_output(this_ptr: *const ::file_icon_provider::FileIconProvider, info: *const ::qt_core::file_info::FileInfo, output: *mut ::qt_core::string::String);

  // Header: QFileSystemModel
  pub fn qt_widgets_c_QFileSystemModel_G_static_cast_QAbstractItemModel_ptr(ptr: *mut ::file_system_model::FileSystemModel) -> *mut ::qt_core::abstract_item_model::AbstractItemModel;
  pub fn qt_widgets_c_QFileSystemModel_G_static_cast_QFileSystemModel_ptr_QAbstractItemModel(ptr: *mut ::qt_core::abstract_item_model::AbstractItemModel) -> *mut ::file_system_model::FileSystemModel;
  pub fn qt_widgets_c_QFileSystemModel_G_static_cast_QFileSystemModel_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::file_system_model::FileSystemModel;
  pub fn qt_widgets_c_QFileSystemModel_G_static_cast_QObject_ptr(ptr: *mut ::file_system_model::FileSystemModel) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QFileSystemModel_canFetchMore(this_ptr: *const ::file_system_model::FileSystemModel, parent: *const ::qt_core::model_index::ModelIndex) -> bool;
  pub fn qt_widgets_c_QFileSystemModel_columnCount_no_args(this_ptr: *const ::file_system_model::FileSystemModel) -> ::libc::c_int;
  pub fn qt_widgets_c_QFileSystemModel_columnCount_parent(this_ptr: *const ::file_system_model::FileSystemModel, parent: *const ::qt_core::model_index::ModelIndex) -> ::libc::c_int;
  pub fn qt_widgets_c_QFileSystemModel_data_to_output_index(this_ptr: *const ::file_system_model::FileSystemModel, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QFileSystemModel_data_to_output_index_role(this_ptr: *const ::file_system_model::FileSystemModel, index: *const ::qt_core::model_index::ModelIndex, role: ::libc::c_int, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QFileSystemModel_delete(this_ptr: *mut ::file_system_model::FileSystemModel);
  pub fn qt_widgets_c_QFileSystemModel_dropMimeData(this_ptr: *mut ::file_system_model::FileSystemModel, data: *const ::qt_core::mime_data::MimeData, action: *const ::qt_core::qt::DropAction, row: ::libc::c_int, column: ::libc::c_int, parent: *const ::qt_core::model_index::ModelIndex) -> bool;
  pub fn qt_widgets_c_QFileSystemModel_fetchMore(this_ptr: *mut ::file_system_model::FileSystemModel, parent: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QFileSystemModel_fileIcon_to_output(this_ptr: *const ::file_system_model::FileSystemModel, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QFileSystemModel_fileInfo_to_output(this_ptr: *const ::file_system_model::FileSystemModel, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::file_info::FileInfo);
  pub fn qt_widgets_c_QFileSystemModel_fileName_to_output(this_ptr: *const ::file_system_model::FileSystemModel, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileSystemModel_filePath_to_output(this_ptr: *const ::file_system_model::FileSystemModel, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileSystemModel_hasChildren_no_args(this_ptr: *const ::file_system_model::FileSystemModel) -> bool;
  pub fn qt_widgets_c_QFileSystemModel_hasChildren_parent(this_ptr: *const ::file_system_model::FileSystemModel, parent: *const ::qt_core::model_index::ModelIndex) -> bool;
  pub fn qt_widgets_c_QFileSystemModel_headerData_to_output_section_orientation(this_ptr: *const ::file_system_model::FileSystemModel, section: ::libc::c_int, orientation: *const ::qt_core::qt::Orientation, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QFileSystemModel_headerData_to_output_section_orientation_role(this_ptr: *const ::file_system_model::FileSystemModel, section: ::libc::c_int, orientation: *const ::qt_core::qt::Orientation, role: ::libc::c_int, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QFileSystemModel_iconProvider(this_ptr: *const ::file_system_model::FileSystemModel) -> *mut ::file_icon_provider::FileIconProvider;
  pub fn qt_widgets_c_QFileSystemModel_index_to_output_path(this_ptr: *const ::file_system_model::FileSystemModel, path: *const ::qt_core::string::String, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QFileSystemModel_index_to_output_path_column(this_ptr: *const ::file_system_model::FileSystemModel, path: *const ::qt_core::string::String, column: ::libc::c_int, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QFileSystemModel_index_to_output_row_column(this_ptr: *const ::file_system_model::FileSystemModel, row: ::libc::c_int, column: ::libc::c_int, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QFileSystemModel_index_to_output_row_column_parent(this_ptr: *const ::file_system_model::FileSystemModel, row: ::libc::c_int, column: ::libc::c_int, parent: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QFileSystemModel_isDir(this_ptr: *const ::file_system_model::FileSystemModel, index: *const ::qt_core::model_index::ModelIndex) -> bool;
  pub fn qt_widgets_c_QFileSystemModel_isReadOnly(this_ptr: *const ::file_system_model::FileSystemModel) -> bool;
  pub fn qt_widgets_c_QFileSystemModel_lastModified_to_output(this_ptr: *const ::file_system_model::FileSystemModel, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::date_time::DateTime);
  pub fn qt_widgets_c_QFileSystemModel_metaObject(this_ptr: *const ::file_system_model::FileSystemModel) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QFileSystemModel_mimeData(this_ptr: *const ::file_system_model::FileSystemModel, indexes: *const ::qt_core::list::ListModelIndex) -> *mut ::qt_core::mime_data::MimeData;
  pub fn qt_widgets_c_QFileSystemModel_mimeTypes_to_output(this_ptr: *const ::file_system_model::FileSystemModel, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QFileSystemModel_mkdir_to_output(this_ptr: *mut ::file_system_model::FileSystemModel, parent: *const ::qt_core::model_index::ModelIndex, name: *const ::qt_core::string::String, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QFileSystemModel_myComputer_to_output_no_args(this_ptr: *const ::file_system_model::FileSystemModel, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QFileSystemModel_myComputer_to_output_role(this_ptr: *const ::file_system_model::FileSystemModel, role: ::libc::c_int, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QFileSystemModel_nameFilterDisables(this_ptr: *const ::file_system_model::FileSystemModel) -> bool;
  pub fn qt_widgets_c_QFileSystemModel_nameFilters_to_output(this_ptr: *const ::file_system_model::FileSystemModel, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QFileSystemModel_new_no_args() -> *mut ::file_system_model::FileSystemModel;
  pub fn qt_widgets_c_QFileSystemModel_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::file_system_model::FileSystemModel;
  pub fn qt_widgets_c_QFileSystemModel_parent_to_output(this_ptr: *const ::file_system_model::FileSystemModel, child: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QFileSystemModel_qt_metacall(this_ptr: *mut ::file_system_model::FileSystemModel, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QFileSystemModel_qt_metacast(this_ptr: *mut ::file_system_model::FileSystemModel, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QFileSystemModel_remove(this_ptr: *mut ::file_system_model::FileSystemModel, index: *const ::qt_core::model_index::ModelIndex) -> bool;
  pub fn qt_widgets_c_QFileSystemModel_resolveSymlinks(this_ptr: *const ::file_system_model::FileSystemModel) -> bool;
  pub fn qt_widgets_c_QFileSystemModel_rmdir(this_ptr: *mut ::file_system_model::FileSystemModel, index: *const ::qt_core::model_index::ModelIndex) -> bool;
  pub fn qt_widgets_c_QFileSystemModel_rootDirectory_to_output(this_ptr: *const ::file_system_model::FileSystemModel, output: *mut ::qt_core::dir::Dir);
  pub fn qt_widgets_c_QFileSystemModel_rootPath_to_output(this_ptr: *const ::file_system_model::FileSystemModel, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileSystemModel_rowCount_no_args(this_ptr: *const ::file_system_model::FileSystemModel) -> ::libc::c_int;
  pub fn qt_widgets_c_QFileSystemModel_rowCount_parent(this_ptr: *const ::file_system_model::FileSystemModel, parent: *const ::qt_core::model_index::ModelIndex) -> ::libc::c_int;
  pub fn qt_widgets_c_QFileSystemModel_setData_index_value(this_ptr: *mut ::file_system_model::FileSystemModel, index: *const ::qt_core::model_index::ModelIndex, value: *const ::qt_core::variant::Variant) -> bool;
  pub fn qt_widgets_c_QFileSystemModel_setData_index_value_role(this_ptr: *mut ::file_system_model::FileSystemModel, index: *const ::qt_core::model_index::ModelIndex, value: *const ::qt_core::variant::Variant, role: ::libc::c_int) -> bool;
  pub fn qt_widgets_c_QFileSystemModel_setIconProvider(this_ptr: *mut ::file_system_model::FileSystemModel, provider: *mut ::file_icon_provider::FileIconProvider);
  pub fn qt_widgets_c_QFileSystemModel_setNameFilterDisables(this_ptr: *mut ::file_system_model::FileSystemModel, enable: bool);
  pub fn qt_widgets_c_QFileSystemModel_setNameFilters(this_ptr: *mut ::file_system_model::FileSystemModel, filters: *const ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QFileSystemModel_setReadOnly(this_ptr: *mut ::file_system_model::FileSystemModel, enable: bool);
  pub fn qt_widgets_c_QFileSystemModel_setResolveSymlinks(this_ptr: *mut ::file_system_model::FileSystemModel, enable: bool);
  pub fn qt_widgets_c_QFileSystemModel_setRootPath_to_output(this_ptr: *mut ::file_system_model::FileSystemModel, path: *const ::qt_core::string::String, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QFileSystemModel_sibling_to_output(this_ptr: *const ::file_system_model::FileSystemModel, row: ::libc::c_int, column: ::libc::c_int, idx: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QFileSystemModel_size(this_ptr: *const ::file_system_model::FileSystemModel, index: *const ::qt_core::model_index::ModelIndex) -> i64;
  pub fn qt_widgets_c_QFileSystemModel_sort_column(this_ptr: *mut ::file_system_model::FileSystemModel, column: ::libc::c_int);
  pub fn qt_widgets_c_QFileSystemModel_sort_column_order(this_ptr: *mut ::file_system_model::FileSystemModel, column: ::libc::c_int, order: *const ::qt_core::qt::SortOrder);
  pub fn qt_widgets_c_QFileSystemModel_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileSystemModel_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFileSystemModel_type_to_output(this_ptr: *const ::file_system_model::FileSystemModel, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::string::String);

  // Header: QFocusFrame
  pub fn qt_widgets_c_QFocusFrame_G_dynamic_cast_QFocusFrame_ptr(ptr: *mut ::widget::Widget) -> *mut ::focus_frame::FocusFrame;
  pub fn qt_widgets_c_QFocusFrame_G_static_cast_QFocusFrame_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::focus_frame::FocusFrame;
  pub fn qt_widgets_c_QFocusFrame_G_static_cast_QFocusFrame_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::focus_frame::FocusFrame;
  pub fn qt_widgets_c_QFocusFrame_G_static_cast_QFocusFrame_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::focus_frame::FocusFrame;
  pub fn qt_widgets_c_QFocusFrame_G_static_cast_QObject_ptr(ptr: *mut ::focus_frame::FocusFrame) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QFocusFrame_G_static_cast_QPaintDevice_ptr(ptr: *mut ::focus_frame::FocusFrame) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QFocusFrame_G_static_cast_QWidget_ptr(ptr: *mut ::focus_frame::FocusFrame) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QFocusFrame_delete(this_ptr: *mut ::focus_frame::FocusFrame);
  pub fn qt_widgets_c_QFocusFrame_metaObject(this_ptr: *const ::focus_frame::FocusFrame) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QFocusFrame_new_no_args() -> *mut ::focus_frame::FocusFrame;
  pub fn qt_widgets_c_QFocusFrame_new_parent(parent: *mut ::widget::Widget) -> *mut ::focus_frame::FocusFrame;
  pub fn qt_widgets_c_QFocusFrame_qt_metacall(this_ptr: *mut ::focus_frame::FocusFrame, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QFocusFrame_qt_metacast(this_ptr: *mut ::focus_frame::FocusFrame, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QFocusFrame_setWidget(this_ptr: *mut ::focus_frame::FocusFrame, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QFocusFrame_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFocusFrame_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFocusFrame_widget(this_ptr: *const ::focus_frame::FocusFrame) -> *mut ::widget::Widget;

  // Header: QFontComboBox
  pub fn qt_widgets_c_QFontComboBox_G_dynamic_cast_QFontComboBox_ptr_QComboBox(ptr: *mut ::combo_box::ComboBox) -> *mut ::font_combo_box::FontComboBox;
  pub fn qt_widgets_c_QFontComboBox_G_dynamic_cast_QFontComboBox_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::font_combo_box::FontComboBox;
  pub fn qt_widgets_c_QFontComboBox_G_static_cast_QComboBox_ptr(ptr: *mut ::font_combo_box::FontComboBox) -> *mut ::combo_box::ComboBox;
  pub fn qt_widgets_c_QFontComboBox_G_static_cast_QFontComboBox_ptr_QComboBox(ptr: *mut ::combo_box::ComboBox) -> *mut ::font_combo_box::FontComboBox;
  pub fn qt_widgets_c_QFontComboBox_G_static_cast_QFontComboBox_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::font_combo_box::FontComboBox;
  pub fn qt_widgets_c_QFontComboBox_G_static_cast_QFontComboBox_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::font_combo_box::FontComboBox;
  pub fn qt_widgets_c_QFontComboBox_G_static_cast_QFontComboBox_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::font_combo_box::FontComboBox;
  pub fn qt_widgets_c_QFontComboBox_G_static_cast_QObject_ptr(ptr: *mut ::font_combo_box::FontComboBox) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QFontComboBox_G_static_cast_QPaintDevice_ptr(ptr: *mut ::font_combo_box::FontComboBox) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QFontComboBox_G_static_cast_QWidget_ptr(ptr: *mut ::font_combo_box::FontComboBox) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QFontComboBox_currentFont_to_output(this_ptr: *const ::font_combo_box::FontComboBox, output: *mut ::qt_gui::font::Font);
  pub fn qt_widgets_c_QFontComboBox_delete(this_ptr: *mut ::font_combo_box::FontComboBox);
  pub fn qt_widgets_c_QFontComboBox_fontFilters(this_ptr: *const ::font_combo_box::FontComboBox) -> ::libc::c_uint;
  pub fn qt_widgets_c_QFontComboBox_metaObject(this_ptr: *const ::font_combo_box::FontComboBox) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QFontComboBox_new_no_args() -> *mut ::font_combo_box::FontComboBox;
  pub fn qt_widgets_c_QFontComboBox_new_parent(parent: *mut ::widget::Widget) -> *mut ::font_combo_box::FontComboBox;
  pub fn qt_widgets_c_QFontComboBox_qt_metacall(this_ptr: *mut ::font_combo_box::FontComboBox, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QFontComboBox_qt_metacast(this_ptr: *mut ::font_combo_box::FontComboBox, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QFontComboBox_setCurrentFont(this_ptr: *mut ::font_combo_box::FontComboBox, f: *const ::qt_gui::font::Font);
  pub fn qt_widgets_c_QFontComboBox_setFontFilters(this_ptr: *mut ::font_combo_box::FontComboBox, filters: ::libc::c_uint);
  pub fn qt_widgets_c_QFontComboBox_setWritingSystem(this_ptr: *mut ::font_combo_box::FontComboBox, arg1: *const ::qt_gui::font_database::WritingSystem);
  pub fn qt_widgets_c_QFontComboBox_sizeHint_to_output(this_ptr: *const ::font_combo_box::FontComboBox, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QFontComboBox_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFontComboBox_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QFontDialog
  pub fn qt_widgets_c_QFontDialog_G_dynamic_cast_QFontDialog_ptr_QDialog(ptr: *mut ::dialog::Dialog) -> *mut ::font_dialog::FontDialog;
  pub fn qt_widgets_c_QFontDialog_G_dynamic_cast_QFontDialog_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::font_dialog::FontDialog;
  pub fn qt_widgets_c_QFontDialog_G_static_cast_QDialog_ptr(ptr: *mut ::font_dialog::FontDialog) -> *mut ::dialog::Dialog;
  pub fn qt_widgets_c_QFontDialog_G_static_cast_QFontDialog_ptr_QDialog(ptr: *mut ::dialog::Dialog) -> *mut ::font_dialog::FontDialog;
  pub fn qt_widgets_c_QFontDialog_G_static_cast_QFontDialog_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::font_dialog::FontDialog;
  pub fn qt_widgets_c_QFontDialog_G_static_cast_QFontDialog_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::font_dialog::FontDialog;
  pub fn qt_widgets_c_QFontDialog_G_static_cast_QFontDialog_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::font_dialog::FontDialog;
  pub fn qt_widgets_c_QFontDialog_G_static_cast_QObject_ptr(ptr: *mut ::font_dialog::FontDialog) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QFontDialog_G_static_cast_QPaintDevice_ptr(ptr: *mut ::font_dialog::FontDialog) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QFontDialog_G_static_cast_QWidget_ptr(ptr: *mut ::font_dialog::FontDialog) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QFontDialog_currentFont_to_output(this_ptr: *const ::font_dialog::FontDialog, output: *mut ::qt_gui::font::Font);
  pub fn qt_widgets_c_QFontDialog_delete(this_ptr: *mut ::font_dialog::FontDialog);
  pub fn qt_widgets_c_QFontDialog_getFont_to_output_ok(ok: *mut bool, output: *mut ::qt_gui::font::Font);
  pub fn qt_widgets_c_QFontDialog_getFont_to_output_ok_initial(ok: *mut bool, initial: *const ::qt_gui::font::Font, output: *mut ::qt_gui::font::Font);
  pub fn qt_widgets_c_QFontDialog_getFont_to_output_ok_initial_parent(ok: *mut bool, initial: *const ::qt_gui::font::Font, parent: *mut ::widget::Widget, output: *mut ::qt_gui::font::Font);
  pub fn qt_widgets_c_QFontDialog_getFont_to_output_ok_initial_parent_title(ok: *mut bool, initial: *const ::qt_gui::font::Font, parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, output: *mut ::qt_gui::font::Font);
  pub fn qt_widgets_c_QFontDialog_getFont_to_output_ok_initial_parent_title_options(ok: *mut bool, initial: *const ::qt_gui::font::Font, parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, options: ::libc::c_uint, output: *mut ::qt_gui::font::Font);
  pub fn qt_widgets_c_QFontDialog_getFont_to_output_ok_parent(ok: *mut bool, parent: *mut ::widget::Widget, output: *mut ::qt_gui::font::Font);
  pub fn qt_widgets_c_QFontDialog_metaObject(this_ptr: *const ::font_dialog::FontDialog) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QFontDialog_new_initial(initial: *const ::qt_gui::font::Font) -> *mut ::font_dialog::FontDialog;
  pub fn qt_widgets_c_QFontDialog_new_initial_parent(initial: *const ::qt_gui::font::Font, parent: *mut ::widget::Widget) -> *mut ::font_dialog::FontDialog;
  pub fn qt_widgets_c_QFontDialog_new_no_args() -> *mut ::font_dialog::FontDialog;
  pub fn qt_widgets_c_QFontDialog_new_parent(parent: *mut ::widget::Widget) -> *mut ::font_dialog::FontDialog;
  pub fn qt_widgets_c_QFontDialog_open(this_ptr: *mut ::font_dialog::FontDialog, receiver: *mut ::qt_core::object::Object, member: *const ::libc::c_char);
  pub fn qt_widgets_c_QFontDialog_options(this_ptr: *const ::font_dialog::FontDialog) -> ::libc::c_uint;
  pub fn qt_widgets_c_QFontDialog_qt_metacall(this_ptr: *mut ::font_dialog::FontDialog, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QFontDialog_qt_metacast(this_ptr: *mut ::font_dialog::FontDialog, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QFontDialog_selectedFont_to_output(this_ptr: *const ::font_dialog::FontDialog, output: *mut ::qt_gui::font::Font);
  pub fn qt_widgets_c_QFontDialog_setCurrentFont(this_ptr: *mut ::font_dialog::FontDialog, font: *const ::qt_gui::font::Font);
  pub fn qt_widgets_c_QFontDialog_setOption_option(this_ptr: *mut ::font_dialog::FontDialog, option: ::font_dialog::FontDialogOption);
  pub fn qt_widgets_c_QFontDialog_setOption_option_on(this_ptr: *mut ::font_dialog::FontDialog, option: ::font_dialog::FontDialogOption, on: bool);
  pub fn qt_widgets_c_QFontDialog_setOptions(this_ptr: *mut ::font_dialog::FontDialog, options: ::libc::c_uint);
  pub fn qt_widgets_c_QFontDialog_setVisible(this_ptr: *mut ::font_dialog::FontDialog, visible: bool);
  pub fn qt_widgets_c_QFontDialog_testOption(this_ptr: *const ::font_dialog::FontDialog, option: ::font_dialog::FontDialogOption) -> bool;
  pub fn qt_widgets_c_QFontDialog_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFontDialog_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QFormLayout
  pub fn qt_widgets_c_QFormLayout_G_dynamic_cast_QFormLayout_ptr_QLayout(ptr: *mut ::layout::Layout) -> *mut ::form_layout::FormLayout;
  pub fn qt_widgets_c_QFormLayout_G_dynamic_cast_QFormLayout_ptr_QLayoutItem(ptr: *mut ::layout_item::LayoutItem) -> *mut ::form_layout::FormLayout;
  pub fn qt_widgets_c_QFormLayout_G_static_cast_QFormLayout_ptr_QLayout(ptr: *mut ::layout::Layout) -> *mut ::form_layout::FormLayout;
  pub fn qt_widgets_c_QFormLayout_G_static_cast_QFormLayout_ptr_QLayoutItem(ptr: *mut ::layout_item::LayoutItem) -> *mut ::form_layout::FormLayout;
  pub fn qt_widgets_c_QFormLayout_G_static_cast_QFormLayout_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::form_layout::FormLayout;
  pub fn qt_widgets_c_QFormLayout_G_static_cast_QLayoutItem_ptr(ptr: *mut ::form_layout::FormLayout) -> *mut ::layout_item::LayoutItem;
  pub fn qt_widgets_c_QFormLayout_G_static_cast_QLayout_ptr(ptr: *mut ::form_layout::FormLayout) -> *mut ::layout::Layout;
  pub fn qt_widgets_c_QFormLayout_G_static_cast_QObject_ptr(ptr: *mut ::form_layout::FormLayout) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QFormLayout_TakeRowResult_destructor(this_ptr: *mut ::form_layout::TakeRowResult);
  pub fn qt_widgets_c_QFormLayout_TakeRowResult_fieldItem(this_ptr: *const ::form_layout::TakeRowResult) -> *mut ::layout_item::LayoutItem;
  pub fn qt_widgets_c_QFormLayout_TakeRowResult_labelItem(this_ptr: *const ::form_layout::TakeRowResult) -> *mut ::layout_item::LayoutItem;
  pub fn qt_widgets_c_QFormLayout_TakeRowResult_set_fieldItem(this_ptr: *mut ::form_layout::TakeRowResult, value: *mut ::layout_item::LayoutItem);
  pub fn qt_widgets_c_QFormLayout_TakeRowResult_set_labelItem(this_ptr: *mut ::form_layout::TakeRowResult, value: *mut ::layout_item::LayoutItem);
  pub fn qt_widgets_c_QFormLayout_addItem(this_ptr: *mut ::form_layout::FormLayout, item: *mut ::layout_item::LayoutItem);
  pub fn qt_widgets_c_QFormLayout_addRow_QLayout(this_ptr: *mut ::form_layout::FormLayout, layout: *mut ::layout::Layout);
  pub fn qt_widgets_c_QFormLayout_addRow_QString_QLayout(this_ptr: *mut ::form_layout::FormLayout, labelText: *const ::qt_core::string::String, field: *mut ::layout::Layout);
  pub fn qt_widgets_c_QFormLayout_addRow_QString_QWidget(this_ptr: *mut ::form_layout::FormLayout, labelText: *const ::qt_core::string::String, field: *mut ::widget::Widget);
  pub fn qt_widgets_c_QFormLayout_addRow_QWidget(this_ptr: *mut ::form_layout::FormLayout, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QFormLayout_addRow_QWidget_QLayout(this_ptr: *mut ::form_layout::FormLayout, label: *mut ::widget::Widget, field: *mut ::layout::Layout);
  pub fn qt_widgets_c_QFormLayout_addRow_QWidget_QWidget(this_ptr: *mut ::form_layout::FormLayout, label: *mut ::widget::Widget, field: *mut ::widget::Widget);
  pub fn qt_widgets_c_QFormLayout_count(this_ptr: *const ::form_layout::FormLayout) -> ::libc::c_int;
  pub fn qt_widgets_c_QFormLayout_delete(this_ptr: *mut ::form_layout::FormLayout);
  pub fn qt_widgets_c_QFormLayout_fieldGrowthPolicy(this_ptr: *const ::form_layout::FormLayout) -> ::form_layout::FieldGrowthPolicy;
  pub fn qt_widgets_c_QFormLayout_getItemPosition(this_ptr: *const ::form_layout::FormLayout, index: ::libc::c_int, rowPtr: *mut ::libc::c_int, rolePtr: *mut ::form_layout::ItemRole);
  pub fn qt_widgets_c_QFormLayout_getLayoutPosition(this_ptr: *const ::form_layout::FormLayout, layout: *mut ::layout::Layout, rowPtr: *mut ::libc::c_int, rolePtr: *mut ::form_layout::ItemRole);
  pub fn qt_widgets_c_QFormLayout_getWidgetPosition(this_ptr: *const ::form_layout::FormLayout, widget: *mut ::widget::Widget, rowPtr: *mut ::libc::c_int, rolePtr: *mut ::form_layout::ItemRole);
  pub fn qt_widgets_c_QFormLayout_hasHeightForWidth(this_ptr: *const ::form_layout::FormLayout) -> bool;
  pub fn qt_widgets_c_QFormLayout_heightForWidth(this_ptr: *const ::form_layout::FormLayout, width: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QFormLayout_horizontalSpacing(this_ptr: *const ::form_layout::FormLayout) -> ::libc::c_int;
  pub fn qt_widgets_c_QFormLayout_insertRow_int_QLayout(this_ptr: *mut ::form_layout::FormLayout, row: ::libc::c_int, layout: *mut ::layout::Layout);
  pub fn qt_widgets_c_QFormLayout_insertRow_int_QString_QLayout(this_ptr: *mut ::form_layout::FormLayout, row: ::libc::c_int, labelText: *const ::qt_core::string::String, field: *mut ::layout::Layout);
  pub fn qt_widgets_c_QFormLayout_insertRow_int_QString_QWidget(this_ptr: *mut ::form_layout::FormLayout, row: ::libc::c_int, labelText: *const ::qt_core::string::String, field: *mut ::widget::Widget);
  pub fn qt_widgets_c_QFormLayout_insertRow_int_QWidget(this_ptr: *mut ::form_layout::FormLayout, row: ::libc::c_int, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QFormLayout_insertRow_int_QWidget_QLayout(this_ptr: *mut ::form_layout::FormLayout, row: ::libc::c_int, label: *mut ::widget::Widget, field: *mut ::layout::Layout);
  pub fn qt_widgets_c_QFormLayout_insertRow_int_QWidget_QWidget(this_ptr: *mut ::form_layout::FormLayout, row: ::libc::c_int, label: *mut ::widget::Widget, field: *mut ::widget::Widget);
  pub fn qt_widgets_c_QFormLayout_invalidate(this_ptr: *mut ::form_layout::FormLayout);
  pub fn qt_widgets_c_QFormLayout_itemAt_index(this_ptr: *const ::form_layout::FormLayout, index: ::libc::c_int) -> *mut ::layout_item::LayoutItem;
  pub fn qt_widgets_c_QFormLayout_itemAt_row_role(this_ptr: *const ::form_layout::FormLayout, row: ::libc::c_int, role: ::form_layout::ItemRole) -> *mut ::layout_item::LayoutItem;
  pub fn qt_widgets_c_QFormLayout_labelForField_QLayout(this_ptr: *const ::form_layout::FormLayout, field: *mut ::layout::Layout) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QFormLayout_labelForField_QWidget(this_ptr: *const ::form_layout::FormLayout, field: *mut ::widget::Widget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QFormLayout_metaObject(this_ptr: *const ::form_layout::FormLayout) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QFormLayout_minimumSize_to_output(this_ptr: *const ::form_layout::FormLayout, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QFormLayout_new_no_args() -> *mut ::form_layout::FormLayout;
  pub fn qt_widgets_c_QFormLayout_new_parent(parent: *mut ::widget::Widget) -> *mut ::form_layout::FormLayout;
  pub fn qt_widgets_c_QFormLayout_qt_metacall(this_ptr: *mut ::form_layout::FormLayout, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QFormLayout_qt_metacast(this_ptr: *mut ::form_layout::FormLayout, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QFormLayout_removeRow_layout(this_ptr: *mut ::form_layout::FormLayout, layout: *mut ::layout::Layout);
  pub fn qt_widgets_c_QFormLayout_removeRow_row(this_ptr: *mut ::form_layout::FormLayout, row: ::libc::c_int);
  pub fn qt_widgets_c_QFormLayout_removeRow_widget(this_ptr: *mut ::form_layout::FormLayout, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QFormLayout_rowCount(this_ptr: *const ::form_layout::FormLayout) -> ::libc::c_int;
  pub fn qt_widgets_c_QFormLayout_rowWrapPolicy(this_ptr: *const ::form_layout::FormLayout) -> ::form_layout::RowWrapPolicy;
  pub fn qt_widgets_c_QFormLayout_setFieldGrowthPolicy(this_ptr: *mut ::form_layout::FormLayout, policy: ::form_layout::FieldGrowthPolicy);
  pub fn qt_widgets_c_QFormLayout_setGeometry(this_ptr: *mut ::form_layout::FormLayout, rect: *const ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QFormLayout_setHorizontalSpacing(this_ptr: *mut ::form_layout::FormLayout, spacing: ::libc::c_int);
  pub fn qt_widgets_c_QFormLayout_setItem(this_ptr: *mut ::form_layout::FormLayout, row: ::libc::c_int, role: ::form_layout::ItemRole, item: *mut ::layout_item::LayoutItem);
  pub fn qt_widgets_c_QFormLayout_setLayout(this_ptr: *mut ::form_layout::FormLayout, row: ::libc::c_int, role: ::form_layout::ItemRole, layout: *mut ::layout::Layout);
  pub fn qt_widgets_c_QFormLayout_setRowWrapPolicy(this_ptr: *mut ::form_layout::FormLayout, policy: ::form_layout::RowWrapPolicy);
  pub fn qt_widgets_c_QFormLayout_setSpacing(this_ptr: *mut ::form_layout::FormLayout, arg1: ::libc::c_int);
  pub fn qt_widgets_c_QFormLayout_setVerticalSpacing(this_ptr: *mut ::form_layout::FormLayout, spacing: ::libc::c_int);
  pub fn qt_widgets_c_QFormLayout_setWidget(this_ptr: *mut ::form_layout::FormLayout, row: ::libc::c_int, role: ::form_layout::ItemRole, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QFormLayout_sizeHint_to_output(this_ptr: *const ::form_layout::FormLayout, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QFormLayout_spacing(this_ptr: *const ::form_layout::FormLayout) -> ::libc::c_int;
  pub fn qt_widgets_c_QFormLayout_takeAt(this_ptr: *mut ::form_layout::FormLayout, index: ::libc::c_int) -> *mut ::layout_item::LayoutItem;
  pub fn qt_widgets_c_QFormLayout_takeRow_to_output_layout(this_ptr: *mut ::form_layout::FormLayout, layout: *mut ::layout::Layout, output: *mut ::form_layout::TakeRowResult);
  pub fn qt_widgets_c_QFormLayout_takeRow_to_output_row(this_ptr: *mut ::form_layout::FormLayout, row: ::libc::c_int, output: *mut ::form_layout::TakeRowResult);
  pub fn qt_widgets_c_QFormLayout_takeRow_to_output_widget(this_ptr: *mut ::form_layout::FormLayout, widget: *mut ::widget::Widget, output: *mut ::form_layout::TakeRowResult);
  pub fn qt_widgets_c_QFormLayout_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFormLayout_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFormLayout_verticalSpacing(this_ptr: *const ::form_layout::FormLayout) -> ::libc::c_int;

  // Header: QFrame
  pub fn qt_widgets_c_QFrame_G_dynamic_cast_QFrame_ptr(ptr: *mut ::widget::Widget) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QFrame_G_static_cast_QFrame_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QFrame_G_static_cast_QFrame_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QFrame_G_static_cast_QFrame_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QFrame_G_static_cast_QObject_ptr(ptr: *mut ::frame::Frame) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QFrame_G_static_cast_QPaintDevice_ptr(ptr: *mut ::frame::Frame) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QFrame_G_static_cast_QWidget_ptr(ptr: *mut ::frame::Frame) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QFrame_delete(this_ptr: *mut ::frame::Frame);
  pub fn qt_widgets_c_QFrame_frameRect_to_output(this_ptr: *const ::frame::Frame, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QFrame_frameShadow(this_ptr: *const ::frame::Frame) -> ::frame::Shadow;
  pub fn qt_widgets_c_QFrame_frameShape(this_ptr: *const ::frame::Frame) -> ::frame::Shape;
  pub fn qt_widgets_c_QFrame_frameStyle(this_ptr: *const ::frame::Frame) -> ::libc::c_int;
  pub fn qt_widgets_c_QFrame_frameWidth(this_ptr: *const ::frame::Frame) -> ::libc::c_int;
  pub fn qt_widgets_c_QFrame_lineWidth(this_ptr: *const ::frame::Frame) -> ::libc::c_int;
  pub fn qt_widgets_c_QFrame_metaObject(this_ptr: *const ::frame::Frame) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QFrame_midLineWidth(this_ptr: *const ::frame::Frame) -> ::libc::c_int;
  pub fn qt_widgets_c_QFrame_qt_metacall(this_ptr: *mut ::frame::Frame, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QFrame_qt_metacast(this_ptr: *mut ::frame::Frame, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QFrame_setFrameRect(this_ptr: *mut ::frame::Frame, arg1: *const ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QFrame_setFrameShadow(this_ptr: *mut ::frame::Frame, arg1: ::frame::Shadow);
  pub fn qt_widgets_c_QFrame_setFrameShape(this_ptr: *mut ::frame::Frame, arg1: ::frame::Shape);
  pub fn qt_widgets_c_QFrame_setFrameStyle(this_ptr: *mut ::frame::Frame, arg1: ::libc::c_int);
  pub fn qt_widgets_c_QFrame_setLineWidth(this_ptr: *mut ::frame::Frame, arg1: ::libc::c_int);
  pub fn qt_widgets_c_QFrame_setMidLineWidth(this_ptr: *mut ::frame::Frame, arg1: ::libc::c_int);
  pub fn qt_widgets_c_QFrame_sizeHint_to_output(this_ptr: *const ::frame::Frame, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QFrame_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QFrame_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QGesture
  pub fn qt_widgets_c_QGesture_G_operator_shl_to_output_QDebug_QGesture(arg1: *const ::qt_core::debug::Debug, arg2: *const ::gesture::Gesture, output: *mut ::qt_core::debug::Debug);
  pub fn qt_widgets_c_QGesture_G_operator_shl_to_output_QDebug_QGestureEvent(arg1: *const ::qt_core::debug::Debug, arg2: *const ::gesture_event::GestureEvent, output: *mut ::qt_core::debug::Debug);
  pub fn qt_widgets_c_QGesture_G_static_cast_QGesture_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QGesture_G_static_cast_QObject_ptr(ptr: *mut ::gesture::Gesture) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QGesture_delete(this_ptr: *mut ::gesture::Gesture);
  pub fn qt_widgets_c_QGesture_gestureCancelPolicy(this_ptr: *const ::gesture::Gesture) -> ::gesture::GestureCancelPolicy;
  pub fn qt_widgets_c_QGesture_hasHotSpot(this_ptr: *const ::gesture::Gesture) -> bool;
  pub fn qt_widgets_c_QGesture_hotSpot_to_output(this_ptr: *const ::gesture::Gesture, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGesture_metaObject(this_ptr: *const ::gesture::Gesture) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QGesture_new_no_args() -> *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QGesture_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QGesture_qt_metacall(this_ptr: *mut ::gesture::Gesture, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QGesture_qt_metacast(this_ptr: *mut ::gesture::Gesture, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QGesture_setGestureCancelPolicy(this_ptr: *mut ::gesture::Gesture, policy: ::gesture::GestureCancelPolicy);
  pub fn qt_widgets_c_QGesture_setHotSpot(this_ptr: *mut ::gesture::Gesture, value: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGesture_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGesture_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGesture_unsetHotSpot(this_ptr: *mut ::gesture::Gesture);

  // Header: QGestureEvent
  pub fn qt_widgets_c_QGestureEvent_G_static_cast_QEvent_ptr(ptr: *mut ::gesture_event::GestureEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_widgets_c_QGestureEvent_G_static_cast_QGestureEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::gesture_event::GestureEvent;
  pub fn qt_widgets_c_QGestureEvent_accept_QGesture(this_ptr: *mut ::gesture_event::GestureEvent, arg1: *mut ::gesture::Gesture);
  pub fn qt_widgets_c_QGestureEvent_accept_Qt_GestureType(this_ptr: *mut ::gesture_event::GestureEvent, arg1: *const ::qt_core::qt::GestureType);
  pub fn qt_widgets_c_QGestureEvent_activeGestures_to_output(this_ptr: *const ::gesture_event::GestureEvent, output: *mut ::list::ListGestureMutPtr);
  pub fn qt_widgets_c_QGestureEvent_canceledGestures_to_output(this_ptr: *const ::gesture_event::GestureEvent, output: *mut ::list::ListGestureMutPtr);
  pub fn qt_widgets_c_QGestureEvent_delete(this_ptr: *mut ::gesture_event::GestureEvent);
  pub fn qt_widgets_c_QGestureEvent_gesture(this_ptr: *const ::gesture_event::GestureEvent, type_: *const ::qt_core::qt::GestureType) -> *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QGestureEvent_gestures_to_output(this_ptr: *const ::gesture_event::GestureEvent, output: *mut ::list::ListGestureMutPtr);
  pub fn qt_widgets_c_QGestureEvent_ignore_QGesture(this_ptr: *mut ::gesture_event::GestureEvent, arg1: *mut ::gesture::Gesture);
  pub fn qt_widgets_c_QGestureEvent_ignore_Qt_GestureType(this_ptr: *mut ::gesture_event::GestureEvent, arg1: *const ::qt_core::qt::GestureType);
  pub fn qt_widgets_c_QGestureEvent_isAccepted_QGesture(this_ptr: *const ::gesture_event::GestureEvent, arg1: *mut ::gesture::Gesture) -> bool;
  pub fn qt_widgets_c_QGestureEvent_isAccepted_Qt_GestureType(this_ptr: *const ::gesture_event::GestureEvent, arg1: *const ::qt_core::qt::GestureType) -> bool;
  pub fn qt_widgets_c_QGestureEvent_mapToGraphicsScene_to_output(this_ptr: *const ::gesture_event::GestureEvent, gesturePoint: *const ::qt_core::point_f::PointF, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGestureEvent_new(gestures: *const ::list::ListGestureMutPtr) -> *mut ::gesture_event::GestureEvent;
  pub fn qt_widgets_c_QGestureEvent_setAccepted_QGesture_bool(this_ptr: *mut ::gesture_event::GestureEvent, arg1: *mut ::gesture::Gesture, arg2: bool);
  pub fn qt_widgets_c_QGestureEvent_setAccepted_Qt_GestureType_bool(this_ptr: *mut ::gesture_event::GestureEvent, arg1: *const ::qt_core::qt::GestureType, arg2: bool);
  pub fn qt_widgets_c_QGestureEvent_setWidget(this_ptr: *mut ::gesture_event::GestureEvent, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QGestureEvent_widget(this_ptr: *const ::gesture_event::GestureEvent) -> *mut ::widget::Widget;

  // Header: QGestureRecognizer
  pub fn qt_widgets_c_QGestureRecognizer_create(this_ptr: *mut ::gesture_recognizer::GestureRecognizer, target: *mut ::qt_core::object::Object) -> *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QGestureRecognizer_delete(this_ptr: *mut ::gesture_recognizer::GestureRecognizer);
  pub fn qt_widgets_c_QGestureRecognizer_recognize(this_ptr: *mut ::gesture_recognizer::GestureRecognizer, state: *mut ::gesture::Gesture, watched: *mut ::qt_core::object::Object, event: *mut ::qt_core::event::Event) -> ::libc::c_uint;
  pub fn qt_widgets_c_QGestureRecognizer_reset(this_ptr: *mut ::gesture_recognizer::GestureRecognizer, state: *mut ::gesture::Gesture);
  pub fn qt_widgets_c_QGestureRecognizer_unregisterRecognizer(type_: *const ::qt_core::qt::GestureType);

  // Header: QGraphicsAnchor
  pub fn qt_widgets_c_QGraphicsAnchor_G_static_cast_QGraphicsAnchor_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::graphics_anchor::GraphicsAnchor;
  pub fn qt_widgets_c_QGraphicsAnchor_G_static_cast_QObject_ptr(ptr: *mut ::graphics_anchor::GraphicsAnchor) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QGraphicsAnchor_delete(this_ptr: *mut ::graphics_anchor::GraphicsAnchor);
  pub fn qt_widgets_c_QGraphicsAnchor_metaObject(this_ptr: *const ::graphics_anchor::GraphicsAnchor) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QGraphicsAnchor_qt_metacall(this_ptr: *mut ::graphics_anchor::GraphicsAnchor, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsAnchor_qt_metacast(this_ptr: *mut ::graphics_anchor::GraphicsAnchor, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QGraphicsAnchor_setSizePolicy(this_ptr: *mut ::graphics_anchor::GraphicsAnchor, policy: *const ::size_policy::Policy);
  pub fn qt_widgets_c_QGraphicsAnchor_setSpacing(this_ptr: *mut ::graphics_anchor::GraphicsAnchor, spacing: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsAnchor_spacing(this_ptr: *const ::graphics_anchor::GraphicsAnchor) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsAnchor_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsAnchor_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsAnchor_unsetSpacing(this_ptr: *mut ::graphics_anchor::GraphicsAnchor);

  // Header: QGraphicsAnchorLayout
  pub fn qt_widgets_c_QGraphicsAnchorLayout_G_dynamic_cast_QGraphicsAnchorLayout_ptr_QGraphicsLayout(ptr: *mut ::graphics_layout::GraphicsLayout) -> *mut ::graphics_anchor_layout::GraphicsAnchorLayout;
  pub fn qt_widgets_c_QGraphicsAnchorLayout_G_dynamic_cast_QGraphicsAnchorLayout_ptr_QGraphicsLayoutItem(ptr: *mut ::graphics_layout_item::GraphicsLayoutItem) -> *mut ::graphics_anchor_layout::GraphicsAnchorLayout;
  pub fn qt_widgets_c_QGraphicsAnchorLayout_G_static_cast_QGraphicsAnchorLayout_ptr_QGraphicsLayout(ptr: *mut ::graphics_layout::GraphicsLayout) -> *mut ::graphics_anchor_layout::GraphicsAnchorLayout;
  pub fn qt_widgets_c_QGraphicsAnchorLayout_G_static_cast_QGraphicsAnchorLayout_ptr_QGraphicsLayoutItem(ptr: *mut ::graphics_layout_item::GraphicsLayoutItem) -> *mut ::graphics_anchor_layout::GraphicsAnchorLayout;
  pub fn qt_widgets_c_QGraphicsAnchorLayout_G_static_cast_QGraphicsLayoutItem_ptr(ptr: *mut ::graphics_anchor_layout::GraphicsAnchorLayout) -> *mut ::graphics_layout_item::GraphicsLayoutItem;
  pub fn qt_widgets_c_QGraphicsAnchorLayout_G_static_cast_QGraphicsLayout_ptr(ptr: *mut ::graphics_anchor_layout::GraphicsAnchorLayout) -> *mut ::graphics_layout::GraphicsLayout;
  pub fn qt_widgets_c_QGraphicsAnchorLayout_addAnchor(this_ptr: *mut ::graphics_anchor_layout::GraphicsAnchorLayout, firstItem: *mut ::graphics_layout_item::GraphicsLayoutItem, firstEdge: *const ::qt_core::qt::AnchorPoint, secondItem: *mut ::graphics_layout_item::GraphicsLayoutItem, secondEdge: *const ::qt_core::qt::AnchorPoint) -> *mut ::graphics_anchor::GraphicsAnchor;
  pub fn qt_widgets_c_QGraphicsAnchorLayout_addCornerAnchors(this_ptr: *mut ::graphics_anchor_layout::GraphicsAnchorLayout, firstItem: *mut ::graphics_layout_item::GraphicsLayoutItem, firstCorner: *const ::qt_core::qt::Corner, secondItem: *mut ::graphics_layout_item::GraphicsLayoutItem, secondCorner: *const ::qt_core::qt::Corner);
  pub fn qt_widgets_c_QGraphicsAnchorLayout_anchor(this_ptr: *mut ::graphics_anchor_layout::GraphicsAnchorLayout, firstItem: *mut ::graphics_layout_item::GraphicsLayoutItem, firstEdge: *const ::qt_core::qt::AnchorPoint, secondItem: *mut ::graphics_layout_item::GraphicsLayoutItem, secondEdge: *const ::qt_core::qt::AnchorPoint) -> *mut ::graphics_anchor::GraphicsAnchor;
  pub fn qt_widgets_c_QGraphicsAnchorLayout_count(this_ptr: *const ::graphics_anchor_layout::GraphicsAnchorLayout) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsAnchorLayout_delete(this_ptr: *mut ::graphics_anchor_layout::GraphicsAnchorLayout);
  pub fn qt_widgets_c_QGraphicsAnchorLayout_horizontalSpacing(this_ptr: *const ::graphics_anchor_layout::GraphicsAnchorLayout) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsAnchorLayout_invalidate(this_ptr: *mut ::graphics_anchor_layout::GraphicsAnchorLayout);
  pub fn qt_widgets_c_QGraphicsAnchorLayout_itemAt(this_ptr: *const ::graphics_anchor_layout::GraphicsAnchorLayout, index: ::libc::c_int) -> *mut ::graphics_layout_item::GraphicsLayoutItem;
  pub fn qt_widgets_c_QGraphicsAnchorLayout_new_no_args() -> *mut ::graphics_anchor_layout::GraphicsAnchorLayout;
  pub fn qt_widgets_c_QGraphicsAnchorLayout_new_parent(parent: *mut ::graphics_layout_item::GraphicsLayoutItem) -> *mut ::graphics_anchor_layout::GraphicsAnchorLayout;
  pub fn qt_widgets_c_QGraphicsAnchorLayout_removeAt(this_ptr: *mut ::graphics_anchor_layout::GraphicsAnchorLayout, index: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsAnchorLayout_setGeometry(this_ptr: *mut ::graphics_anchor_layout::GraphicsAnchorLayout, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsAnchorLayout_setHorizontalSpacing(this_ptr: *mut ::graphics_anchor_layout::GraphicsAnchorLayout, spacing: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsAnchorLayout_setSpacing(this_ptr: *mut ::graphics_anchor_layout::GraphicsAnchorLayout, spacing: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsAnchorLayout_setVerticalSpacing(this_ptr: *mut ::graphics_anchor_layout::GraphicsAnchorLayout, spacing: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsAnchorLayout_verticalSpacing(this_ptr: *const ::graphics_anchor_layout::GraphicsAnchorLayout) -> ::libc::c_double;

  // Header: QGraphicsBlurEffect
  pub fn qt_widgets_c_QGraphicsBlurEffect_G_dynamic_cast_QGraphicsBlurEffect_ptr(ptr: *mut ::graphics_effect::GraphicsEffect) -> *mut ::graphics_blur_effect::GraphicsBlurEffect;
  pub fn qt_widgets_c_QGraphicsBlurEffect_G_static_cast_QGraphicsBlurEffect_ptr_QGraphicsEffect(ptr: *mut ::graphics_effect::GraphicsEffect) -> *mut ::graphics_blur_effect::GraphicsBlurEffect;
  pub fn qt_widgets_c_QGraphicsBlurEffect_G_static_cast_QGraphicsBlurEffect_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::graphics_blur_effect::GraphicsBlurEffect;
  pub fn qt_widgets_c_QGraphicsBlurEffect_G_static_cast_QGraphicsEffect_ptr(ptr: *mut ::graphics_blur_effect::GraphicsBlurEffect) -> *mut ::graphics_effect::GraphicsEffect;
  pub fn qt_widgets_c_QGraphicsBlurEffect_G_static_cast_QObject_ptr(ptr: *mut ::graphics_blur_effect::GraphicsBlurEffect) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QGraphicsBlurEffect_blurHints(this_ptr: *const ::graphics_blur_effect::GraphicsBlurEffect) -> ::libc::c_uint;
  pub fn qt_widgets_c_QGraphicsBlurEffect_blurRadius(this_ptr: *const ::graphics_blur_effect::GraphicsBlurEffect) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsBlurEffect_boundingRectFor_to_output(this_ptr: *const ::graphics_blur_effect::GraphicsBlurEffect, rect: *const ::qt_core::rect_f::RectF, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsBlurEffect_delete(this_ptr: *mut ::graphics_blur_effect::GraphicsBlurEffect);
  pub fn qt_widgets_c_QGraphicsBlurEffect_metaObject(this_ptr: *const ::graphics_blur_effect::GraphicsBlurEffect) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QGraphicsBlurEffect_new_no_args() -> *mut ::graphics_blur_effect::GraphicsBlurEffect;
  pub fn qt_widgets_c_QGraphicsBlurEffect_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::graphics_blur_effect::GraphicsBlurEffect;
  pub fn qt_widgets_c_QGraphicsBlurEffect_qt_metacall(this_ptr: *mut ::graphics_blur_effect::GraphicsBlurEffect, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsBlurEffect_qt_metacast(this_ptr: *mut ::graphics_blur_effect::GraphicsBlurEffect, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QGraphicsBlurEffect_setBlurHints(this_ptr: *mut ::graphics_blur_effect::GraphicsBlurEffect, hints: ::libc::c_uint);
  pub fn qt_widgets_c_QGraphicsBlurEffect_setBlurRadius(this_ptr: *mut ::graphics_blur_effect::GraphicsBlurEffect, blurRadius: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsBlurEffect_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsBlurEffect_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QGraphicsColorizeEffect
  pub fn qt_widgets_c_QGraphicsColorizeEffect_G_dynamic_cast_QGraphicsColorizeEffect_ptr(ptr: *mut ::graphics_effect::GraphicsEffect) -> *mut ::graphics_colorize_effect::GraphicsColorizeEffect;
  pub fn qt_widgets_c_QGraphicsColorizeEffect_G_static_cast_QGraphicsColorizeEffect_ptr_QGraphicsEffect(ptr: *mut ::graphics_effect::GraphicsEffect) -> *mut ::graphics_colorize_effect::GraphicsColorizeEffect;
  pub fn qt_widgets_c_QGraphicsColorizeEffect_G_static_cast_QGraphicsColorizeEffect_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::graphics_colorize_effect::GraphicsColorizeEffect;
  pub fn qt_widgets_c_QGraphicsColorizeEffect_G_static_cast_QGraphicsEffect_ptr(ptr: *mut ::graphics_colorize_effect::GraphicsColorizeEffect) -> *mut ::graphics_effect::GraphicsEffect;
  pub fn qt_widgets_c_QGraphicsColorizeEffect_G_static_cast_QObject_ptr(ptr: *mut ::graphics_colorize_effect::GraphicsColorizeEffect) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QGraphicsColorizeEffect_color_to_output(this_ptr: *const ::graphics_colorize_effect::GraphicsColorizeEffect, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QGraphicsColorizeEffect_delete(this_ptr: *mut ::graphics_colorize_effect::GraphicsColorizeEffect);
  pub fn qt_widgets_c_QGraphicsColorizeEffect_metaObject(this_ptr: *const ::graphics_colorize_effect::GraphicsColorizeEffect) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QGraphicsColorizeEffect_new_no_args() -> *mut ::graphics_colorize_effect::GraphicsColorizeEffect;
  pub fn qt_widgets_c_QGraphicsColorizeEffect_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::graphics_colorize_effect::GraphicsColorizeEffect;
  pub fn qt_widgets_c_QGraphicsColorizeEffect_qt_metacall(this_ptr: *mut ::graphics_colorize_effect::GraphicsColorizeEffect, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsColorizeEffect_qt_metacast(this_ptr: *mut ::graphics_colorize_effect::GraphicsColorizeEffect, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QGraphicsColorizeEffect_setColor(this_ptr: *mut ::graphics_colorize_effect::GraphicsColorizeEffect, c: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QGraphicsColorizeEffect_setStrength(this_ptr: *mut ::graphics_colorize_effect::GraphicsColorizeEffect, strength: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsColorizeEffect_strength(this_ptr: *const ::graphics_colorize_effect::GraphicsColorizeEffect) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsColorizeEffect_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsColorizeEffect_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QGraphicsDropShadowEffect
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_G_dynamic_cast_QGraphicsDropShadowEffect_ptr(ptr: *mut ::graphics_effect::GraphicsEffect) -> *mut ::graphics_drop_shadow_effect::GraphicsDropShadowEffect;
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_G_static_cast_QGraphicsDropShadowEffect_ptr_QGraphicsEffect(ptr: *mut ::graphics_effect::GraphicsEffect) -> *mut ::graphics_drop_shadow_effect::GraphicsDropShadowEffect;
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_G_static_cast_QGraphicsDropShadowEffect_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::graphics_drop_shadow_effect::GraphicsDropShadowEffect;
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_G_static_cast_QGraphicsEffect_ptr(ptr: *mut ::graphics_drop_shadow_effect::GraphicsDropShadowEffect) -> *mut ::graphics_effect::GraphicsEffect;
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_G_static_cast_QObject_ptr(ptr: *mut ::graphics_drop_shadow_effect::GraphicsDropShadowEffect) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_blurRadius(this_ptr: *const ::graphics_drop_shadow_effect::GraphicsDropShadowEffect) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_boundingRectFor_to_output(this_ptr: *const ::graphics_drop_shadow_effect::GraphicsDropShadowEffect, rect: *const ::qt_core::rect_f::RectF, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_color_to_output(this_ptr: *const ::graphics_drop_shadow_effect::GraphicsDropShadowEffect, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_delete(this_ptr: *mut ::graphics_drop_shadow_effect::GraphicsDropShadowEffect);
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_metaObject(this_ptr: *const ::graphics_drop_shadow_effect::GraphicsDropShadowEffect) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_new_no_args() -> *mut ::graphics_drop_shadow_effect::GraphicsDropShadowEffect;
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::graphics_drop_shadow_effect::GraphicsDropShadowEffect;
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_offset_to_output(this_ptr: *const ::graphics_drop_shadow_effect::GraphicsDropShadowEffect, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_qt_metacall(this_ptr: *mut ::graphics_drop_shadow_effect::GraphicsDropShadowEffect, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_qt_metacast(this_ptr: *mut ::graphics_drop_shadow_effect::GraphicsDropShadowEffect, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_setBlurRadius(this_ptr: *mut ::graphics_drop_shadow_effect::GraphicsDropShadowEffect, blurRadius: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_setColor(this_ptr: *mut ::graphics_drop_shadow_effect::GraphicsDropShadowEffect, color: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_setOffset_d(this_ptr: *mut ::graphics_drop_shadow_effect::GraphicsDropShadowEffect, d: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_setOffset_dx_dy(this_ptr: *mut ::graphics_drop_shadow_effect::GraphicsDropShadowEffect, dx: ::libc::c_double, dy: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_setOffset_ofs(this_ptr: *mut ::graphics_drop_shadow_effect::GraphicsDropShadowEffect, ofs: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_setXOffset(this_ptr: *mut ::graphics_drop_shadow_effect::GraphicsDropShadowEffect, dx: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_setYOffset(this_ptr: *mut ::graphics_drop_shadow_effect::GraphicsDropShadowEffect, dy: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_xOffset(this_ptr: *const ::graphics_drop_shadow_effect::GraphicsDropShadowEffect) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsDropShadowEffect_yOffset(this_ptr: *const ::graphics_drop_shadow_effect::GraphicsDropShadowEffect) -> ::libc::c_double;

  // Header: QGraphicsEffect
  pub fn qt_widgets_c_QGraphicsEffect_G_static_cast_QGraphicsEffect_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::graphics_effect::GraphicsEffect;
  pub fn qt_widgets_c_QGraphicsEffect_G_static_cast_QObject_ptr(ptr: *mut ::graphics_effect::GraphicsEffect) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QGraphicsEffect_boundingRectFor_to_output(this_ptr: *const ::graphics_effect::GraphicsEffect, sourceRect: *const ::qt_core::rect_f::RectF, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsEffect_boundingRect_to_output(this_ptr: *const ::graphics_effect::GraphicsEffect, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsEffect_delete(this_ptr: *mut ::graphics_effect::GraphicsEffect);
  pub fn qt_widgets_c_QGraphicsEffect_isEnabled(this_ptr: *const ::graphics_effect::GraphicsEffect) -> bool;
  pub fn qt_widgets_c_QGraphicsEffect_metaObject(this_ptr: *const ::graphics_effect::GraphicsEffect) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QGraphicsEffect_qt_metacall(this_ptr: *mut ::graphics_effect::GraphicsEffect, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsEffect_qt_metacast(this_ptr: *mut ::graphics_effect::GraphicsEffect, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QGraphicsEffect_setEnabled(this_ptr: *mut ::graphics_effect::GraphicsEffect, enable: bool);
  pub fn qt_widgets_c_QGraphicsEffect_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsEffect_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsEffect_update(this_ptr: *mut ::graphics_effect::GraphicsEffect);

  // Header: QGraphicsEllipseItem
  pub fn qt_widgets_c_QGraphicsEllipseItem_G_dynamic_cast_QGraphicsEllipseItem_ptr_QAbstractGraphicsShapeItem(ptr: *mut ::abstract_graphics_shape_item::AbstractGraphicsShapeItem) -> *mut ::graphics_ellipse_item::GraphicsEllipseItem;
  pub fn qt_widgets_c_QGraphicsEllipseItem_G_dynamic_cast_QGraphicsEllipseItem_ptr_QGraphicsItem(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_ellipse_item::GraphicsEllipseItem;
  pub fn qt_widgets_c_QGraphicsEllipseItem_G_static_cast_QAbstractGraphicsShapeItem_ptr(ptr: *mut ::graphics_ellipse_item::GraphicsEllipseItem) -> *mut ::abstract_graphics_shape_item::AbstractGraphicsShapeItem;
  pub fn qt_widgets_c_QGraphicsEllipseItem_G_static_cast_QGraphicsEllipseItem_ptr_QAbstractGraphicsShapeItem(ptr: *mut ::abstract_graphics_shape_item::AbstractGraphicsShapeItem) -> *mut ::graphics_ellipse_item::GraphicsEllipseItem;
  pub fn qt_widgets_c_QGraphicsEllipseItem_G_static_cast_QGraphicsEllipseItem_ptr_QGraphicsItem(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_ellipse_item::GraphicsEllipseItem;
  pub fn qt_widgets_c_QGraphicsEllipseItem_G_static_cast_QGraphicsItem_ptr(ptr: *mut ::graphics_ellipse_item::GraphicsEllipseItem) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsEllipseItem_boundingRect_to_output(this_ptr: *const ::graphics_ellipse_item::GraphicsEllipseItem, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsEllipseItem_contains(this_ptr: *const ::graphics_ellipse_item::GraphicsEllipseItem, point: *const ::qt_core::point_f::PointF) -> bool;
  pub fn qt_widgets_c_QGraphicsEllipseItem_delete(this_ptr: *mut ::graphics_ellipse_item::GraphicsEllipseItem);
  pub fn qt_widgets_c_QGraphicsEllipseItem_isObscuredBy(this_ptr: *const ::graphics_ellipse_item::GraphicsEllipseItem, item: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsEllipseItem_new_no_args() -> *mut ::graphics_ellipse_item::GraphicsEllipseItem;
  pub fn qt_widgets_c_QGraphicsEllipseItem_new_parent(parent: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_ellipse_item::GraphicsEllipseItem;
  pub fn qt_widgets_c_QGraphicsEllipseItem_new_rect(rect: *const ::qt_core::rect_f::RectF) -> *mut ::graphics_ellipse_item::GraphicsEllipseItem;
  pub fn qt_widgets_c_QGraphicsEllipseItem_new_rect_parent(rect: *const ::qt_core::rect_f::RectF, parent: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_ellipse_item::GraphicsEllipseItem;
  pub fn qt_widgets_c_QGraphicsEllipseItem_new_x_y_w_h(x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double) -> *mut ::graphics_ellipse_item::GraphicsEllipseItem;
  pub fn qt_widgets_c_QGraphicsEllipseItem_new_x_y_w_h_parent(x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, parent: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_ellipse_item::GraphicsEllipseItem;
  pub fn qt_widgets_c_QGraphicsEllipseItem_opaqueArea_to_output(this_ptr: *const ::graphics_ellipse_item::GraphicsEllipseItem, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsEllipseItem_paint_painter_option(this_ptr: *mut ::graphics_ellipse_item::GraphicsEllipseItem, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_graphics_item::StyleOptionGraphicsItem);
  pub fn qt_widgets_c_QGraphicsEllipseItem_paint_painter_option_widget(this_ptr: *mut ::graphics_ellipse_item::GraphicsEllipseItem, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_graphics_item::StyleOptionGraphicsItem, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QGraphicsEllipseItem_rect_to_output(this_ptr: *const ::graphics_ellipse_item::GraphicsEllipseItem, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsEllipseItem_setRect_rect(this_ptr: *mut ::graphics_ellipse_item::GraphicsEllipseItem, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsEllipseItem_setRect_x_y_w_h(this_ptr: *mut ::graphics_ellipse_item::GraphicsEllipseItem, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsEllipseItem_setSpanAngle(this_ptr: *mut ::graphics_ellipse_item::GraphicsEllipseItem, angle: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsEllipseItem_setStartAngle(this_ptr: *mut ::graphics_ellipse_item::GraphicsEllipseItem, angle: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsEllipseItem_shape_to_output(this_ptr: *const ::graphics_ellipse_item::GraphicsEllipseItem, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsEllipseItem_spanAngle(this_ptr: *const ::graphics_ellipse_item::GraphicsEllipseItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsEllipseItem_startAngle(this_ptr: *const ::graphics_ellipse_item::GraphicsEllipseItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsEllipseItem_type(this_ptr: *const ::graphics_ellipse_item::GraphicsEllipseItem) -> ::libc::c_int;

  // Header: QGraphicsGridLayout
  pub fn qt_widgets_c_QGraphicsGridLayout_G_dynamic_cast_QGraphicsGridLayout_ptr_QGraphicsLayout(ptr: *mut ::graphics_layout::GraphicsLayout) -> *mut ::graphics_grid_layout::GraphicsGridLayout;
  pub fn qt_widgets_c_QGraphicsGridLayout_G_dynamic_cast_QGraphicsGridLayout_ptr_QGraphicsLayoutItem(ptr: *mut ::graphics_layout_item::GraphicsLayoutItem) -> *mut ::graphics_grid_layout::GraphicsGridLayout;
  pub fn qt_widgets_c_QGraphicsGridLayout_G_static_cast_QGraphicsGridLayout_ptr_QGraphicsLayout(ptr: *mut ::graphics_layout::GraphicsLayout) -> *mut ::graphics_grid_layout::GraphicsGridLayout;
  pub fn qt_widgets_c_QGraphicsGridLayout_G_static_cast_QGraphicsGridLayout_ptr_QGraphicsLayoutItem(ptr: *mut ::graphics_layout_item::GraphicsLayoutItem) -> *mut ::graphics_grid_layout::GraphicsGridLayout;
  pub fn qt_widgets_c_QGraphicsGridLayout_G_static_cast_QGraphicsLayoutItem_ptr(ptr: *mut ::graphics_grid_layout::GraphicsGridLayout) -> *mut ::graphics_layout_item::GraphicsLayoutItem;
  pub fn qt_widgets_c_QGraphicsGridLayout_G_static_cast_QGraphicsLayout_ptr(ptr: *mut ::graphics_grid_layout::GraphicsGridLayout) -> *mut ::graphics_layout::GraphicsLayout;
  pub fn qt_widgets_c_QGraphicsGridLayout_columnCount(this_ptr: *const ::graphics_grid_layout::GraphicsGridLayout) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsGridLayout_columnMaximumWidth(this_ptr: *const ::graphics_grid_layout::GraphicsGridLayout, column: ::libc::c_int) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsGridLayout_columnMinimumWidth(this_ptr: *const ::graphics_grid_layout::GraphicsGridLayout, column: ::libc::c_int) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsGridLayout_columnPreferredWidth(this_ptr: *const ::graphics_grid_layout::GraphicsGridLayout, column: ::libc::c_int) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsGridLayout_columnSpacing(this_ptr: *const ::graphics_grid_layout::GraphicsGridLayout, column: ::libc::c_int) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsGridLayout_columnStretchFactor(this_ptr: *const ::graphics_grid_layout::GraphicsGridLayout, column: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsGridLayout_count(this_ptr: *const ::graphics_grid_layout::GraphicsGridLayout) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsGridLayout_delete(this_ptr: *mut ::graphics_grid_layout::GraphicsGridLayout);
  pub fn qt_widgets_c_QGraphicsGridLayout_horizontalSpacing(this_ptr: *const ::graphics_grid_layout::GraphicsGridLayout) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsGridLayout_invalidate(this_ptr: *mut ::graphics_grid_layout::GraphicsGridLayout);
  pub fn qt_widgets_c_QGraphicsGridLayout_itemAt_index(this_ptr: *const ::graphics_grid_layout::GraphicsGridLayout, index: ::libc::c_int) -> *mut ::graphics_layout_item::GraphicsLayoutItem;
  pub fn qt_widgets_c_QGraphicsGridLayout_itemAt_row_column(this_ptr: *const ::graphics_grid_layout::GraphicsGridLayout, row: ::libc::c_int, column: ::libc::c_int) -> *mut ::graphics_layout_item::GraphicsLayoutItem;
  pub fn qt_widgets_c_QGraphicsGridLayout_new_no_args() -> *mut ::graphics_grid_layout::GraphicsGridLayout;
  pub fn qt_widgets_c_QGraphicsGridLayout_new_parent(parent: *mut ::graphics_layout_item::GraphicsLayoutItem) -> *mut ::graphics_grid_layout::GraphicsGridLayout;
  pub fn qt_widgets_c_QGraphicsGridLayout_removeAt(this_ptr: *mut ::graphics_grid_layout::GraphicsGridLayout, index: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsGridLayout_removeItem(this_ptr: *mut ::graphics_grid_layout::GraphicsGridLayout, item: *mut ::graphics_layout_item::GraphicsLayoutItem);
  pub fn qt_widgets_c_QGraphicsGridLayout_rowCount(this_ptr: *const ::graphics_grid_layout::GraphicsGridLayout) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsGridLayout_rowMaximumHeight(this_ptr: *const ::graphics_grid_layout::GraphicsGridLayout, row: ::libc::c_int) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsGridLayout_rowMinimumHeight(this_ptr: *const ::graphics_grid_layout::GraphicsGridLayout, row: ::libc::c_int) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsGridLayout_rowPreferredHeight(this_ptr: *const ::graphics_grid_layout::GraphicsGridLayout, row: ::libc::c_int) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsGridLayout_rowSpacing(this_ptr: *const ::graphics_grid_layout::GraphicsGridLayout, row: ::libc::c_int) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsGridLayout_rowStretchFactor(this_ptr: *const ::graphics_grid_layout::GraphicsGridLayout, row: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsGridLayout_setColumnFixedWidth(this_ptr: *mut ::graphics_grid_layout::GraphicsGridLayout, column: ::libc::c_int, width: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsGridLayout_setColumnMaximumWidth(this_ptr: *mut ::graphics_grid_layout::GraphicsGridLayout, column: ::libc::c_int, width: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsGridLayout_setColumnMinimumWidth(this_ptr: *mut ::graphics_grid_layout::GraphicsGridLayout, column: ::libc::c_int, width: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsGridLayout_setColumnPreferredWidth(this_ptr: *mut ::graphics_grid_layout::GraphicsGridLayout, column: ::libc::c_int, width: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsGridLayout_setColumnSpacing(this_ptr: *mut ::graphics_grid_layout::GraphicsGridLayout, column: ::libc::c_int, spacing: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsGridLayout_setColumnStretchFactor(this_ptr: *mut ::graphics_grid_layout::GraphicsGridLayout, column: ::libc::c_int, stretch: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsGridLayout_setGeometry(this_ptr: *mut ::graphics_grid_layout::GraphicsGridLayout, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsGridLayout_setHorizontalSpacing(this_ptr: *mut ::graphics_grid_layout::GraphicsGridLayout, spacing: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsGridLayout_setRowFixedHeight(this_ptr: *mut ::graphics_grid_layout::GraphicsGridLayout, row: ::libc::c_int, height: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsGridLayout_setRowMaximumHeight(this_ptr: *mut ::graphics_grid_layout::GraphicsGridLayout, row: ::libc::c_int, height: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsGridLayout_setRowMinimumHeight(this_ptr: *mut ::graphics_grid_layout::GraphicsGridLayout, row: ::libc::c_int, height: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsGridLayout_setRowPreferredHeight(this_ptr: *mut ::graphics_grid_layout::GraphicsGridLayout, row: ::libc::c_int, height: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsGridLayout_setRowSpacing(this_ptr: *mut ::graphics_grid_layout::GraphicsGridLayout, row: ::libc::c_int, spacing: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsGridLayout_setRowStretchFactor(this_ptr: *mut ::graphics_grid_layout::GraphicsGridLayout, row: ::libc::c_int, stretch: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsGridLayout_setSpacing(this_ptr: *mut ::graphics_grid_layout::GraphicsGridLayout, spacing: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsGridLayout_setVerticalSpacing(this_ptr: *mut ::graphics_grid_layout::GraphicsGridLayout, spacing: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsGridLayout_sizeHint_to_output_which(this_ptr: *const ::graphics_grid_layout::GraphicsGridLayout, which: *const ::qt_core::qt::SizeHint, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_widgets_c_QGraphicsGridLayout_sizeHint_to_output_which_constraint(this_ptr: *const ::graphics_grid_layout::GraphicsGridLayout, which: *const ::qt_core::qt::SizeHint, constraint: *const ::qt_core::size_f::SizeF, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_widgets_c_QGraphicsGridLayout_verticalSpacing(this_ptr: *const ::graphics_grid_layout::GraphicsGridLayout) -> ::libc::c_double;

  // Header: QGraphicsItem
  pub fn qt_widgets_c_QGraphicsItem_G_operator_shl_to_output_QDebug_QGraphicsItem(debug: *const ::qt_core::debug::Debug, item: *mut ::graphics_item::GraphicsItem, output: *mut ::qt_core::debug::Debug);
  pub fn qt_widgets_c_QGraphicsItem_G_operator_shl_to_output_QDebug_QGraphicsItem_GraphicsItemChange(debug: *const ::qt_core::debug::Debug, change: *const ::graphics_item::GraphicsItemChange, output: *mut ::qt_core::debug::Debug);
  pub fn qt_widgets_c_QGraphicsItem_G_operator_shl_to_output_QDebug_QGraphicsItem_GraphicsItemFlag(debug: *const ::qt_core::debug::Debug, flag: *const ::graphics_item::GraphicsItemFlag, output: *mut ::qt_core::debug::Debug);
  pub fn qt_widgets_c_QGraphicsItem_G_operator_shl_to_output_QDebug_QGraphicsObject(debug: *const ::qt_core::debug::Debug, item: *mut ::graphics_object::GraphicsObject, output: *mut ::qt_core::debug::Debug);
  pub fn qt_widgets_c_QGraphicsItem_acceptDrops(this_ptr: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_acceptHoverEvents(this_ptr: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_acceptTouchEvents(this_ptr: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_advance(this_ptr: *mut ::graphics_item::GraphicsItem, phase: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsItem_boundingRect_to_output(this_ptr: *const ::graphics_item::GraphicsItem, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsItem_boundingRegionGranularity(this_ptr: *const ::graphics_item::GraphicsItem) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsItem_boundingRegion_as_ptr(this_ptr: *const ::graphics_item::GraphicsItem, itemToDeviceTransform: *const ::qt_gui::transform::Transform) -> *mut ::qt_gui::region::Region;
  pub fn qt_widgets_c_QGraphicsItem_cacheMode(this_ptr: *const ::graphics_item::GraphicsItem) -> ::graphics_item::CacheMode;
  pub fn qt_widgets_c_QGraphicsItem_childItems_to_output(this_ptr: *const ::graphics_item::GraphicsItem, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsItem_childrenBoundingRect_to_output(this_ptr: *const ::graphics_item::GraphicsItem, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsItem_clearFocus(this_ptr: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsItem_clipPath_to_output(this_ptr: *const ::graphics_item::GraphicsItem, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsItem_collidesWithItem_other(this_ptr: *const ::graphics_item::GraphicsItem, other: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_collidesWithItem_other_mode(this_ptr: *const ::graphics_item::GraphicsItem, other: *const ::graphics_item::GraphicsItem, mode: *const ::qt_core::qt::ItemSelectionMode) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_collidesWithPath_path(this_ptr: *const ::graphics_item::GraphicsItem, path: *const ::qt_gui::painter_path::PainterPath) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_collidesWithPath_path_mode(this_ptr: *const ::graphics_item::GraphicsItem, path: *const ::qt_gui::painter_path::PainterPath, mode: *const ::qt_core::qt::ItemSelectionMode) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_collidingItems_to_output_mode(this_ptr: *const ::graphics_item::GraphicsItem, mode: *const ::qt_core::qt::ItemSelectionMode, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsItem_collidingItems_to_output_no_args(this_ptr: *const ::graphics_item::GraphicsItem, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsItem_commonAncestorItem(this_ptr: *const ::graphics_item::GraphicsItem, other: *const ::graphics_item::GraphicsItem) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsItem_contains(this_ptr: *const ::graphics_item::GraphicsItem, point: *const ::qt_core::point_f::PointF) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_cursor_as_ptr(this_ptr: *const ::graphics_item::GraphicsItem) -> *mut ::qt_gui::cursor::Cursor;
  pub fn qt_widgets_c_QGraphicsItem_data_to_output(this_ptr: *const ::graphics_item::GraphicsItem, key: ::libc::c_int, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QGraphicsItem_delete(this_ptr: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsItem_deviceTransform_to_output(this_ptr: *const ::graphics_item::GraphicsItem, viewportTransform: *const ::qt_gui::transform::Transform, output: *mut ::qt_gui::transform::Transform);
  pub fn qt_widgets_c_QGraphicsItem_effectiveOpacity(this_ptr: *const ::graphics_item::GraphicsItem) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsItem_ensureVisible_no_args(this_ptr: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsItem_ensureVisible_rect(this_ptr: *mut ::graphics_item::GraphicsItem, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsItem_ensureVisible_rect_xmargin(this_ptr: *mut ::graphics_item::GraphicsItem, rect: *const ::qt_core::rect_f::RectF, xmargin: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsItem_ensureVisible_rect_xmargin_ymargin(this_ptr: *mut ::graphics_item::GraphicsItem, rect: *const ::qt_core::rect_f::RectF, xmargin: ::libc::c_int, ymargin: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsItem_ensureVisible_x_y_w_h(this_ptr: *mut ::graphics_item::GraphicsItem, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsItem_ensureVisible_x_y_w_h_xmargin(this_ptr: *mut ::graphics_item::GraphicsItem, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, xmargin: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsItem_ensureVisible_x_y_w_h_xmargin_ymargin(this_ptr: *mut ::graphics_item::GraphicsItem, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, xmargin: ::libc::c_int, ymargin: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsItem_filtersChildEvents(this_ptr: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_flags(this_ptr: *const ::graphics_item::GraphicsItem) -> ::libc::c_uint;
  pub fn qt_widgets_c_QGraphicsItem_focusItem(this_ptr: *const ::graphics_item::GraphicsItem) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsItem_focusProxy(this_ptr: *const ::graphics_item::GraphicsItem) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsItem_focusScopeItem(this_ptr: *const ::graphics_item::GraphicsItem) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsItem_grabKeyboard(this_ptr: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsItem_grabMouse(this_ptr: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsItem_graphicsEffect(this_ptr: *const ::graphics_item::GraphicsItem) -> *mut ::graphics_effect::GraphicsEffect;
  pub fn qt_widgets_c_QGraphicsItem_group(this_ptr: *const ::graphics_item::GraphicsItem) -> *mut ::graphics_item_group::GraphicsItemGroup;
  pub fn qt_widgets_c_QGraphicsItem_handlesChildEvents(this_ptr: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_hasCursor(this_ptr: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_hasFocus(this_ptr: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_hide(this_ptr: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsItem_installSceneEventFilter(this_ptr: *mut ::graphics_item::GraphicsItem, filterItem: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsItem_isActive(this_ptr: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_isAncestorOf(this_ptr: *const ::graphics_item::GraphicsItem, child: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_isBlockedByModalPanel_blockingPanel(this_ptr: *const ::graphics_item::GraphicsItem, blockingPanel: *mut *mut ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_isBlockedByModalPanel_no_args(this_ptr: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_isClipped(this_ptr: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_isEnabled(this_ptr: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_isObscuredBy(this_ptr: *const ::graphics_item::GraphicsItem, item: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_isObscured_no_args(this_ptr: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_isObscured_rect(this_ptr: *const ::graphics_item::GraphicsItem, rect: *const ::qt_core::rect_f::RectF) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_isObscured_x_y_w_h(this_ptr: *const ::graphics_item::GraphicsItem, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_isPanel(this_ptr: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_isSelected(this_ptr: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_isUnderMouse(this_ptr: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_isVisible(this_ptr: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_isVisibleTo(this_ptr: *const ::graphics_item::GraphicsItem, parent: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_isWidget(this_ptr: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_isWindow(this_ptr: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsItem_itemTransform_to_output_other(this_ptr: *const ::graphics_item::GraphicsItem, other: *const ::graphics_item::GraphicsItem, output: *mut ::qt_gui::transform::Transform);
  pub fn qt_widgets_c_QGraphicsItem_itemTransform_to_output_other_ok(this_ptr: *const ::graphics_item::GraphicsItem, other: *const ::graphics_item::GraphicsItem, ok: *mut bool, output: *mut ::qt_gui::transform::Transform);
  pub fn qt_widgets_c_QGraphicsItem_mapFromItem_to_output_item_path(this_ptr: *const ::graphics_item::GraphicsItem, item: *const ::graphics_item::GraphicsItem, path: *const ::qt_gui::painter_path::PainterPath, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsItem_mapFromItem_to_output_item_point(this_ptr: *const ::graphics_item::GraphicsItem, item: *const ::graphics_item::GraphicsItem, point: *const ::qt_core::point_f::PointF, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsItem_mapFromItem_to_output_item_polygon(this_ptr: *const ::graphics_item::GraphicsItem, item: *const ::graphics_item::GraphicsItem, polygon: *const ::qt_gui::polygon_f::PolygonF, output: *mut ::qt_gui::polygon_f::PolygonF);
  pub fn qt_widgets_c_QGraphicsItem_mapFromItem_to_output_item_rect(this_ptr: *const ::graphics_item::GraphicsItem, item: *const ::graphics_item::GraphicsItem, rect: *const ::qt_core::rect_f::RectF, output: *mut ::qt_gui::polygon_f::PolygonF);
  pub fn qt_widgets_c_QGraphicsItem_mapFromItem_to_output_item_x_y(this_ptr: *const ::graphics_item::GraphicsItem, item: *const ::graphics_item::GraphicsItem, x: ::libc::c_double, y: ::libc::c_double, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsItem_mapFromItem_to_output_item_x_y_w_h(this_ptr: *const ::graphics_item::GraphicsItem, item: *const ::graphics_item::GraphicsItem, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, output: *mut ::qt_gui::polygon_f::PolygonF);
  pub fn qt_widgets_c_QGraphicsItem_mapFromParent_to_output_path(this_ptr: *const ::graphics_item::GraphicsItem, path: *const ::qt_gui::painter_path::PainterPath, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsItem_mapFromParent_to_output_point(this_ptr: *const ::graphics_item::GraphicsItem, point: *const ::qt_core::point_f::PointF, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsItem_mapFromParent_to_output_polygon(this_ptr: *const ::graphics_item::GraphicsItem, polygon: *const ::qt_gui::polygon_f::PolygonF, output: *mut ::qt_gui::polygon_f::PolygonF);
  pub fn qt_widgets_c_QGraphicsItem_mapFromParent_to_output_rect(this_ptr: *const ::graphics_item::GraphicsItem, rect: *const ::qt_core::rect_f::RectF, output: *mut ::qt_gui::polygon_f::PolygonF);
  pub fn qt_widgets_c_QGraphicsItem_mapFromParent_to_output_x_y(this_ptr: *const ::graphics_item::GraphicsItem, x: ::libc::c_double, y: ::libc::c_double, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsItem_mapFromParent_to_output_x_y_w_h(this_ptr: *const ::graphics_item::GraphicsItem, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, output: *mut ::qt_gui::polygon_f::PolygonF);
  pub fn qt_widgets_c_QGraphicsItem_mapFromScene_to_output_path(this_ptr: *const ::graphics_item::GraphicsItem, path: *const ::qt_gui::painter_path::PainterPath, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsItem_mapFromScene_to_output_point(this_ptr: *const ::graphics_item::GraphicsItem, point: *const ::qt_core::point_f::PointF, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsItem_mapFromScene_to_output_polygon(this_ptr: *const ::graphics_item::GraphicsItem, polygon: *const ::qt_gui::polygon_f::PolygonF, output: *mut ::qt_gui::polygon_f::PolygonF);
  pub fn qt_widgets_c_QGraphicsItem_mapFromScene_to_output_rect(this_ptr: *const ::graphics_item::GraphicsItem, rect: *const ::qt_core::rect_f::RectF, output: *mut ::qt_gui::polygon_f::PolygonF);
  pub fn qt_widgets_c_QGraphicsItem_mapFromScene_to_output_x_y(this_ptr: *const ::graphics_item::GraphicsItem, x: ::libc::c_double, y: ::libc::c_double, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsItem_mapFromScene_to_output_x_y_w_h(this_ptr: *const ::graphics_item::GraphicsItem, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, output: *mut ::qt_gui::polygon_f::PolygonF);
  pub fn qt_widgets_c_QGraphicsItem_mapRectFromItem_to_output_item_rect(this_ptr: *const ::graphics_item::GraphicsItem, item: *const ::graphics_item::GraphicsItem, rect: *const ::qt_core::rect_f::RectF, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsItem_mapRectFromItem_to_output_item_x_y_w_h(this_ptr: *const ::graphics_item::GraphicsItem, item: *const ::graphics_item::GraphicsItem, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsItem_mapRectFromParent_to_output_rect(this_ptr: *const ::graphics_item::GraphicsItem, rect: *const ::qt_core::rect_f::RectF, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsItem_mapRectFromParent_to_output_x_y_w_h(this_ptr: *const ::graphics_item::GraphicsItem, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsItem_mapRectFromScene_to_output_rect(this_ptr: *const ::graphics_item::GraphicsItem, rect: *const ::qt_core::rect_f::RectF, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsItem_mapRectFromScene_to_output_x_y_w_h(this_ptr: *const ::graphics_item::GraphicsItem, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsItem_mapRectToItem_to_output_item_rect(this_ptr: *const ::graphics_item::GraphicsItem, item: *const ::graphics_item::GraphicsItem, rect: *const ::qt_core::rect_f::RectF, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsItem_mapRectToItem_to_output_item_x_y_w_h(this_ptr: *const ::graphics_item::GraphicsItem, item: *const ::graphics_item::GraphicsItem, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsItem_mapRectToParent_to_output_rect(this_ptr: *const ::graphics_item::GraphicsItem, rect: *const ::qt_core::rect_f::RectF, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsItem_mapRectToParent_to_output_x_y_w_h(this_ptr: *const ::graphics_item::GraphicsItem, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsItem_mapRectToScene_to_output_rect(this_ptr: *const ::graphics_item::GraphicsItem, rect: *const ::qt_core::rect_f::RectF, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsItem_mapRectToScene_to_output_x_y_w_h(this_ptr: *const ::graphics_item::GraphicsItem, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsItem_mapToItem_to_output_item_path(this_ptr: *const ::graphics_item::GraphicsItem, item: *const ::graphics_item::GraphicsItem, path: *const ::qt_gui::painter_path::PainterPath, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsItem_mapToItem_to_output_item_point(this_ptr: *const ::graphics_item::GraphicsItem, item: *const ::graphics_item::GraphicsItem, point: *const ::qt_core::point_f::PointF, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsItem_mapToItem_to_output_item_polygon(this_ptr: *const ::graphics_item::GraphicsItem, item: *const ::graphics_item::GraphicsItem, polygon: *const ::qt_gui::polygon_f::PolygonF, output: *mut ::qt_gui::polygon_f::PolygonF);
  pub fn qt_widgets_c_QGraphicsItem_mapToItem_to_output_item_rect(this_ptr: *const ::graphics_item::GraphicsItem, item: *const ::graphics_item::GraphicsItem, rect: *const ::qt_core::rect_f::RectF, output: *mut ::qt_gui::polygon_f::PolygonF);
  pub fn qt_widgets_c_QGraphicsItem_mapToItem_to_output_item_x_y(this_ptr: *const ::graphics_item::GraphicsItem, item: *const ::graphics_item::GraphicsItem, x: ::libc::c_double, y: ::libc::c_double, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsItem_mapToItem_to_output_item_x_y_w_h(this_ptr: *const ::graphics_item::GraphicsItem, item: *const ::graphics_item::GraphicsItem, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, output: *mut ::qt_gui::polygon_f::PolygonF);
  pub fn qt_widgets_c_QGraphicsItem_mapToParent_to_output_path(this_ptr: *const ::graphics_item::GraphicsItem, path: *const ::qt_gui::painter_path::PainterPath, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsItem_mapToParent_to_output_point(this_ptr: *const ::graphics_item::GraphicsItem, point: *const ::qt_core::point_f::PointF, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsItem_mapToParent_to_output_polygon(this_ptr: *const ::graphics_item::GraphicsItem, polygon: *const ::qt_gui::polygon_f::PolygonF, output: *mut ::qt_gui::polygon_f::PolygonF);
  pub fn qt_widgets_c_QGraphicsItem_mapToParent_to_output_rect(this_ptr: *const ::graphics_item::GraphicsItem, rect: *const ::qt_core::rect_f::RectF, output: *mut ::qt_gui::polygon_f::PolygonF);
  pub fn qt_widgets_c_QGraphicsItem_mapToParent_to_output_x_y(this_ptr: *const ::graphics_item::GraphicsItem, x: ::libc::c_double, y: ::libc::c_double, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsItem_mapToParent_to_output_x_y_w_h(this_ptr: *const ::graphics_item::GraphicsItem, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, output: *mut ::qt_gui::polygon_f::PolygonF);
  pub fn qt_widgets_c_QGraphicsItem_mapToScene_to_output_path(this_ptr: *const ::graphics_item::GraphicsItem, path: *const ::qt_gui::painter_path::PainterPath, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsItem_mapToScene_to_output_point(this_ptr: *const ::graphics_item::GraphicsItem, point: *const ::qt_core::point_f::PointF, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsItem_mapToScene_to_output_polygon(this_ptr: *const ::graphics_item::GraphicsItem, polygon: *const ::qt_gui::polygon_f::PolygonF, output: *mut ::qt_gui::polygon_f::PolygonF);
  pub fn qt_widgets_c_QGraphicsItem_mapToScene_to_output_rect(this_ptr: *const ::graphics_item::GraphicsItem, rect: *const ::qt_core::rect_f::RectF, output: *mut ::qt_gui::polygon_f::PolygonF);
  pub fn qt_widgets_c_QGraphicsItem_mapToScene_to_output_x_y(this_ptr: *const ::graphics_item::GraphicsItem, x: ::libc::c_double, y: ::libc::c_double, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsItem_mapToScene_to_output_x_y_w_h(this_ptr: *const ::graphics_item::GraphicsItem, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, output: *mut ::qt_gui::polygon_f::PolygonF);
  pub fn qt_widgets_c_QGraphicsItem_matrix_to_output(this_ptr: *const ::graphics_item::GraphicsItem, output: *mut ::qt_gui::matrix::Matrix);
  pub fn qt_widgets_c_QGraphicsItem_moveBy(this_ptr: *mut ::graphics_item::GraphicsItem, dx: ::libc::c_double, dy: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsItem_opacity(this_ptr: *const ::graphics_item::GraphicsItem) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsItem_opaqueArea_to_output(this_ptr: *const ::graphics_item::GraphicsItem, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsItem_paint_painter_option(this_ptr: *mut ::graphics_item::GraphicsItem, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_graphics_item::StyleOptionGraphicsItem);
  pub fn qt_widgets_c_QGraphicsItem_paint_painter_option_widget(this_ptr: *mut ::graphics_item::GraphicsItem, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_graphics_item::StyleOptionGraphicsItem, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QGraphicsItem_panel(this_ptr: *const ::graphics_item::GraphicsItem) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsItem_panelModality(this_ptr: *const ::graphics_item::GraphicsItem) -> ::graphics_item::PanelModality;
  pub fn qt_widgets_c_QGraphicsItem_parentItem(this_ptr: *const ::graphics_item::GraphicsItem) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsItem_parentObject(this_ptr: *const ::graphics_item::GraphicsItem) -> *mut ::graphics_object::GraphicsObject;
  pub fn qt_widgets_c_QGraphicsItem_parentWidget(this_ptr: *const ::graphics_item::GraphicsItem) -> *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QGraphicsItem_pos_to_output(this_ptr: *const ::graphics_item::GraphicsItem, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsItem_removeSceneEventFilter(this_ptr: *mut ::graphics_item::GraphicsItem, filterItem: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsItem_resetMatrix(this_ptr: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsItem_resetTransform(this_ptr: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsItem_rotation(this_ptr: *const ::graphics_item::GraphicsItem) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsItem_scale(this_ptr: *const ::graphics_item::GraphicsItem) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsItem_scene(this_ptr: *const ::graphics_item::GraphicsItem) -> *mut ::graphics_scene::GraphicsScene;
  pub fn qt_widgets_c_QGraphicsItem_sceneBoundingRect_to_output(this_ptr: *const ::graphics_item::GraphicsItem, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsItem_sceneMatrix_to_output(this_ptr: *const ::graphics_item::GraphicsItem, output: *mut ::qt_gui::matrix::Matrix);
  pub fn qt_widgets_c_QGraphicsItem_scenePos_to_output(this_ptr: *const ::graphics_item::GraphicsItem, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsItem_sceneTransform_to_output(this_ptr: *const ::graphics_item::GraphicsItem, output: *mut ::qt_gui::transform::Transform);
  pub fn qt_widgets_c_QGraphicsItem_scroll_dx_dy(this_ptr: *mut ::graphics_item::GraphicsItem, dx: ::libc::c_double, dy: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsItem_scroll_dx_dy_rect(this_ptr: *mut ::graphics_item::GraphicsItem, dx: ::libc::c_double, dy: ::libc::c_double, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsItem_setAcceptDrops(this_ptr: *mut ::graphics_item::GraphicsItem, on: bool);
  pub fn qt_widgets_c_QGraphicsItem_setAcceptHoverEvents(this_ptr: *mut ::graphics_item::GraphicsItem, enabled: bool);
  pub fn qt_widgets_c_QGraphicsItem_setAcceptTouchEvents(this_ptr: *mut ::graphics_item::GraphicsItem, enabled: bool);
  pub fn qt_widgets_c_QGraphicsItem_setActive(this_ptr: *mut ::graphics_item::GraphicsItem, active: bool);
  pub fn qt_widgets_c_QGraphicsItem_setBoundingRegionGranularity(this_ptr: *mut ::graphics_item::GraphicsItem, granularity: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsItem_setCacheMode_mode(this_ptr: *mut ::graphics_item::GraphicsItem, mode: ::graphics_item::CacheMode);
  pub fn qt_widgets_c_QGraphicsItem_setCacheMode_mode_cacheSize(this_ptr: *mut ::graphics_item::GraphicsItem, mode: ::graphics_item::CacheMode, cacheSize: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QGraphicsItem_setCursor(this_ptr: *mut ::graphics_item::GraphicsItem, cursor: *const ::qt_gui::cursor::Cursor);
  pub fn qt_widgets_c_QGraphicsItem_setData(this_ptr: *mut ::graphics_item::GraphicsItem, key: ::libc::c_int, value: *const ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QGraphicsItem_setEnabled(this_ptr: *mut ::graphics_item::GraphicsItem, enabled: bool);
  pub fn qt_widgets_c_QGraphicsItem_setFiltersChildEvents(this_ptr: *mut ::graphics_item::GraphicsItem, enabled: bool);
  pub fn qt_widgets_c_QGraphicsItem_setFlag_flag(this_ptr: *mut ::graphics_item::GraphicsItem, flag: ::graphics_item::GraphicsItemFlag);
  pub fn qt_widgets_c_QGraphicsItem_setFlag_flag_enabled(this_ptr: *mut ::graphics_item::GraphicsItem, flag: ::graphics_item::GraphicsItemFlag, enabled: bool);
  pub fn qt_widgets_c_QGraphicsItem_setFlags(this_ptr: *mut ::graphics_item::GraphicsItem, flags: ::libc::c_uint);
  pub fn qt_widgets_c_QGraphicsItem_setFocusProxy(this_ptr: *mut ::graphics_item::GraphicsItem, item: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsItem_setFocus_focusReason(this_ptr: *mut ::graphics_item::GraphicsItem, focusReason: *const ::qt_core::qt::FocusReason);
  pub fn qt_widgets_c_QGraphicsItem_setFocus_no_args(this_ptr: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsItem_setGraphicsEffect(this_ptr: *mut ::graphics_item::GraphicsItem, effect: *mut ::graphics_effect::GraphicsEffect);
  pub fn qt_widgets_c_QGraphicsItem_setGroup(this_ptr: *mut ::graphics_item::GraphicsItem, group: *mut ::graphics_item_group::GraphicsItemGroup);
  pub fn qt_widgets_c_QGraphicsItem_setHandlesChildEvents(this_ptr: *mut ::graphics_item::GraphicsItem, enabled: bool);
  pub fn qt_widgets_c_QGraphicsItem_setMatrix_matrix(this_ptr: *mut ::graphics_item::GraphicsItem, matrix: *const ::qt_gui::matrix::Matrix);
  pub fn qt_widgets_c_QGraphicsItem_setMatrix_matrix_combine(this_ptr: *mut ::graphics_item::GraphicsItem, matrix: *const ::qt_gui::matrix::Matrix, combine: bool);
  pub fn qt_widgets_c_QGraphicsItem_setOpacity(this_ptr: *mut ::graphics_item::GraphicsItem, opacity: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsItem_setPanelModality(this_ptr: *mut ::graphics_item::GraphicsItem, panelModality: ::graphics_item::PanelModality);
  pub fn qt_widgets_c_QGraphicsItem_setParentItem(this_ptr: *mut ::graphics_item::GraphicsItem, parent: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsItem_setPos_pos(this_ptr: *mut ::graphics_item::GraphicsItem, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsItem_setPos_x_y(this_ptr: *mut ::graphics_item::GraphicsItem, x: ::libc::c_double, y: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsItem_setRotation(this_ptr: *mut ::graphics_item::GraphicsItem, angle: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsItem_setScale(this_ptr: *mut ::graphics_item::GraphicsItem, scale: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsItem_setSelected(this_ptr: *mut ::graphics_item::GraphicsItem, selected: bool);
  pub fn qt_widgets_c_QGraphicsItem_setToolTip(this_ptr: *mut ::graphics_item::GraphicsItem, toolTip: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsItem_setTransformOriginPoint_ax_ay(this_ptr: *mut ::graphics_item::GraphicsItem, ax: ::libc::c_double, ay: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsItem_setTransformOriginPoint_origin(this_ptr: *mut ::graphics_item::GraphicsItem, origin: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsItem_setTransform_matrix(this_ptr: *mut ::graphics_item::GraphicsItem, matrix: *const ::qt_gui::transform::Transform);
  pub fn qt_widgets_c_QGraphicsItem_setTransform_matrix_combine(this_ptr: *mut ::graphics_item::GraphicsItem, matrix: *const ::qt_gui::transform::Transform, combine: bool);
  pub fn qt_widgets_c_QGraphicsItem_setTransformations(this_ptr: *mut ::graphics_item::GraphicsItem, transformations: *const ::list::ListGraphicsTransformMutPtr);
  pub fn qt_widgets_c_QGraphicsItem_setVisible(this_ptr: *mut ::graphics_item::GraphicsItem, visible: bool);
  pub fn qt_widgets_c_QGraphicsItem_setX(this_ptr: *mut ::graphics_item::GraphicsItem, x: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsItem_setY(this_ptr: *mut ::graphics_item::GraphicsItem, y: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsItem_setZValue(this_ptr: *mut ::graphics_item::GraphicsItem, z: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsItem_shape_to_output(this_ptr: *const ::graphics_item::GraphicsItem, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsItem_show(this_ptr: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsItem_stackBefore(this_ptr: *mut ::graphics_item::GraphicsItem, sibling: *const ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsItem_toGraphicsObject(this_ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_object::GraphicsObject;
  pub fn qt_widgets_c_QGraphicsItem_toGraphicsObject_const(this_ptr: *const ::graphics_item::GraphicsItem) -> *const ::graphics_object::GraphicsObject;
  pub fn qt_widgets_c_QGraphicsItem_toolTip_to_output(this_ptr: *const ::graphics_item::GraphicsItem, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsItem_topLevelItem(this_ptr: *const ::graphics_item::GraphicsItem) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsItem_topLevelWidget(this_ptr: *const ::graphics_item::GraphicsItem) -> *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QGraphicsItem_transformOriginPoint_to_output(this_ptr: *const ::graphics_item::GraphicsItem, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsItem_transform_to_output(this_ptr: *const ::graphics_item::GraphicsItem, output: *mut ::qt_gui::transform::Transform);
  pub fn qt_widgets_c_QGraphicsItem_transformations_to_output(this_ptr: *const ::graphics_item::GraphicsItem, output: *mut ::list::ListGraphicsTransformMutPtr);
  pub fn qt_widgets_c_QGraphicsItem_type(this_ptr: *const ::graphics_item::GraphicsItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsItem_ungrabKeyboard(this_ptr: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsItem_ungrabMouse(this_ptr: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsItem_unsetCursor(this_ptr: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsItem_update_no_args(this_ptr: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsItem_update_rect(this_ptr: *mut ::graphics_item::GraphicsItem, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsItem_update_x_y_width_height(this_ptr: *mut ::graphics_item::GraphicsItem, x: ::libc::c_double, y: ::libc::c_double, width: ::libc::c_double, height: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsItem_window(this_ptr: *const ::graphics_item::GraphicsItem) -> *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QGraphicsItem_x(this_ptr: *const ::graphics_item::GraphicsItem) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsItem_y(this_ptr: *const ::graphics_item::GraphicsItem) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsItem_zValue(this_ptr: *const ::graphics_item::GraphicsItem) -> ::libc::c_double;

  // Header: QGraphicsItemAnimation
  pub fn qt_widgets_c_QGraphicsItemAnimation_G_static_cast_QGraphicsItemAnimation_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::graphics_item_animation::GraphicsItemAnimation;
  pub fn qt_widgets_c_QGraphicsItemAnimation_G_static_cast_QObject_ptr(ptr: *mut ::graphics_item_animation::GraphicsItemAnimation) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QGraphicsItemAnimation_clear(this_ptr: *mut ::graphics_item_animation::GraphicsItemAnimation);
  pub fn qt_widgets_c_QGraphicsItemAnimation_delete(this_ptr: *mut ::graphics_item_animation::GraphicsItemAnimation);
  pub fn qt_widgets_c_QGraphicsItemAnimation_horizontalScaleAt(this_ptr: *const ::graphics_item_animation::GraphicsItemAnimation, step: ::libc::c_double) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsItemAnimation_horizontalShearAt(this_ptr: *const ::graphics_item_animation::GraphicsItemAnimation, step: ::libc::c_double) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsItemAnimation_item(this_ptr: *const ::graphics_item_animation::GraphicsItemAnimation) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsItemAnimation_matrixAt_to_output(this_ptr: *const ::graphics_item_animation::GraphicsItemAnimation, step: ::libc::c_double, output: *mut ::qt_gui::matrix::Matrix);
  pub fn qt_widgets_c_QGraphicsItemAnimation_metaObject(this_ptr: *const ::graphics_item_animation::GraphicsItemAnimation) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QGraphicsItemAnimation_new_no_args() -> *mut ::graphics_item_animation::GraphicsItemAnimation;
  pub fn qt_widgets_c_QGraphicsItemAnimation_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::graphics_item_animation::GraphicsItemAnimation;
  pub fn qt_widgets_c_QGraphicsItemAnimation_posAt_to_output(this_ptr: *const ::graphics_item_animation::GraphicsItemAnimation, step: ::libc::c_double, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsItemAnimation_posList_to_output(this_ptr: *const ::graphics_item_animation::GraphicsItemAnimation, output: *mut ::list::ListPairPairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QGraphicsItemAnimation_qt_metacall(this_ptr: *mut ::graphics_item_animation::GraphicsItemAnimation, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsItemAnimation_qt_metacast(this_ptr: *mut ::graphics_item_animation::GraphicsItemAnimation, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QGraphicsItemAnimation_reset(this_ptr: *mut ::graphics_item_animation::GraphicsItemAnimation);
  pub fn qt_widgets_c_QGraphicsItemAnimation_rotationAt(this_ptr: *const ::graphics_item_animation::GraphicsItemAnimation, step: ::libc::c_double) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsItemAnimation_rotationList_to_output(this_ptr: *const ::graphics_item_animation::GraphicsItemAnimation, output: *mut ::list::ListPairPairCDoubleCDouble);
  pub fn qt_widgets_c_QGraphicsItemAnimation_scaleList_to_output(this_ptr: *const ::graphics_item_animation::GraphicsItemAnimation, output: *mut ::list::ListPairPairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QGraphicsItemAnimation_setItem(this_ptr: *mut ::graphics_item_animation::GraphicsItemAnimation, item: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsItemAnimation_setPosAt(this_ptr: *mut ::graphics_item_animation::GraphicsItemAnimation, step: ::libc::c_double, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsItemAnimation_setRotationAt(this_ptr: *mut ::graphics_item_animation::GraphicsItemAnimation, step: ::libc::c_double, angle: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsItemAnimation_setScaleAt(this_ptr: *mut ::graphics_item_animation::GraphicsItemAnimation, step: ::libc::c_double, sx: ::libc::c_double, sy: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsItemAnimation_setShearAt(this_ptr: *mut ::graphics_item_animation::GraphicsItemAnimation, step: ::libc::c_double, sh: ::libc::c_double, sv: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsItemAnimation_setStep(this_ptr: *mut ::graphics_item_animation::GraphicsItemAnimation, x: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsItemAnimation_setTimeLine(this_ptr: *mut ::graphics_item_animation::GraphicsItemAnimation, timeLine: *mut ::qt_core::time_line::TimeLine);
  pub fn qt_widgets_c_QGraphicsItemAnimation_setTranslationAt(this_ptr: *mut ::graphics_item_animation::GraphicsItemAnimation, step: ::libc::c_double, dx: ::libc::c_double, dy: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsItemAnimation_shearList_to_output(this_ptr: *const ::graphics_item_animation::GraphicsItemAnimation, output: *mut ::list::ListPairPairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QGraphicsItemAnimation_timeLine(this_ptr: *const ::graphics_item_animation::GraphicsItemAnimation) -> *mut ::qt_core::time_line::TimeLine;
  pub fn qt_widgets_c_QGraphicsItemAnimation_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsItemAnimation_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsItemAnimation_translationList_to_output(this_ptr: *const ::graphics_item_animation::GraphicsItemAnimation, output: *mut ::list::ListPairPairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QGraphicsItemAnimation_verticalScaleAt(this_ptr: *const ::graphics_item_animation::GraphicsItemAnimation, step: ::libc::c_double) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsItemAnimation_verticalShearAt(this_ptr: *const ::graphics_item_animation::GraphicsItemAnimation, step: ::libc::c_double) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsItemAnimation_xTranslationAt(this_ptr: *const ::graphics_item_animation::GraphicsItemAnimation, step: ::libc::c_double) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsItemAnimation_yTranslationAt(this_ptr: *const ::graphics_item_animation::GraphicsItemAnimation, step: ::libc::c_double) -> ::libc::c_double;

  // Header: QGraphicsItemGroup
  pub fn qt_widgets_c_QGraphicsItemGroup_G_dynamic_cast_QGraphicsItemGroup_ptr(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_item_group::GraphicsItemGroup;
  pub fn qt_widgets_c_QGraphicsItemGroup_G_static_cast_QGraphicsItemGroup_ptr(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_item_group::GraphicsItemGroup;
  pub fn qt_widgets_c_QGraphicsItemGroup_G_static_cast_QGraphicsItem_ptr(ptr: *mut ::graphics_item_group::GraphicsItemGroup) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsItemGroup_addToGroup(this_ptr: *mut ::graphics_item_group::GraphicsItemGroup, item: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsItemGroup_boundingRect_to_output(this_ptr: *const ::graphics_item_group::GraphicsItemGroup, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsItemGroup_delete(this_ptr: *mut ::graphics_item_group::GraphicsItemGroup);
  pub fn qt_widgets_c_QGraphicsItemGroup_isObscuredBy(this_ptr: *const ::graphics_item_group::GraphicsItemGroup, item: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsItemGroup_new_no_args() -> *mut ::graphics_item_group::GraphicsItemGroup;
  pub fn qt_widgets_c_QGraphicsItemGroup_new_parent(parent: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_item_group::GraphicsItemGroup;
  pub fn qt_widgets_c_QGraphicsItemGroup_opaqueArea_to_output(this_ptr: *const ::graphics_item_group::GraphicsItemGroup, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsItemGroup_paint_painter_option(this_ptr: *mut ::graphics_item_group::GraphicsItemGroup, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_graphics_item::StyleOptionGraphicsItem);
  pub fn qt_widgets_c_QGraphicsItemGroup_paint_painter_option_widget(this_ptr: *mut ::graphics_item_group::GraphicsItemGroup, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_graphics_item::StyleOptionGraphicsItem, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QGraphicsItemGroup_removeFromGroup(this_ptr: *mut ::graphics_item_group::GraphicsItemGroup, item: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsItemGroup_type(this_ptr: *const ::graphics_item_group::GraphicsItemGroup) -> ::libc::c_int;

  // Header: QGraphicsLayout
  pub fn qt_widgets_c_QGraphicsLayout_G_dynamic_cast_QGraphicsLayout_ptr(ptr: *mut ::graphics_layout_item::GraphicsLayoutItem) -> *mut ::graphics_layout::GraphicsLayout;
  pub fn qt_widgets_c_QGraphicsLayout_G_static_cast_QGraphicsLayoutItem_ptr(ptr: *mut ::graphics_layout::GraphicsLayout) -> *mut ::graphics_layout_item::GraphicsLayoutItem;
  pub fn qt_widgets_c_QGraphicsLayout_G_static_cast_QGraphicsLayout_ptr(ptr: *mut ::graphics_layout_item::GraphicsLayoutItem) -> *mut ::graphics_layout::GraphicsLayout;
  pub fn qt_widgets_c_QGraphicsLayout_activate(this_ptr: *mut ::graphics_layout::GraphicsLayout);
  pub fn qt_widgets_c_QGraphicsLayout_count(this_ptr: *const ::graphics_layout::GraphicsLayout) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsLayout_delete(this_ptr: *mut ::graphics_layout::GraphicsLayout);
  pub fn qt_widgets_c_QGraphicsLayout_getContentsMargins(this_ptr: *const ::graphics_layout::GraphicsLayout, left: *mut ::libc::c_double, top: *mut ::libc::c_double, right: *mut ::libc::c_double, bottom: *mut ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsLayout_instantInvalidatePropagation() -> bool;
  pub fn qt_widgets_c_QGraphicsLayout_invalidate(this_ptr: *mut ::graphics_layout::GraphicsLayout);
  pub fn qt_widgets_c_QGraphicsLayout_isActivated(this_ptr: *const ::graphics_layout::GraphicsLayout) -> bool;
  pub fn qt_widgets_c_QGraphicsLayout_itemAt(this_ptr: *const ::graphics_layout::GraphicsLayout, i: ::libc::c_int) -> *mut ::graphics_layout_item::GraphicsLayoutItem;
  pub fn qt_widgets_c_QGraphicsLayout_removeAt(this_ptr: *mut ::graphics_layout::GraphicsLayout, index: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsLayout_setContentsMargins(this_ptr: *mut ::graphics_layout::GraphicsLayout, left: ::libc::c_double, top: ::libc::c_double, right: ::libc::c_double, bottom: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsLayout_setInstantInvalidatePropagation(enable: bool);
  pub fn qt_widgets_c_QGraphicsLayout_updateGeometry(this_ptr: *mut ::graphics_layout::GraphicsLayout);
  pub fn qt_widgets_c_QGraphicsLayout_widgetEvent(this_ptr: *mut ::graphics_layout::GraphicsLayout, e: *mut ::qt_core::event::Event);

  // Header: QGraphicsLayoutItem
  pub fn qt_widgets_c_QGraphicsLayoutItem_contentsRect_to_output(this_ptr: *const ::graphics_layout_item::GraphicsLayoutItem, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsLayoutItem_delete(this_ptr: *mut ::graphics_layout_item::GraphicsLayoutItem);
  pub fn qt_widgets_c_QGraphicsLayoutItem_effectiveSizeHint_to_output_which(this_ptr: *const ::graphics_layout_item::GraphicsLayoutItem, which: *const ::qt_core::qt::SizeHint, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_widgets_c_QGraphicsLayoutItem_effectiveSizeHint_to_output_which_constraint(this_ptr: *const ::graphics_layout_item::GraphicsLayoutItem, which: *const ::qt_core::qt::SizeHint, constraint: *const ::qt_core::size_f::SizeF, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_widgets_c_QGraphicsLayoutItem_geometry_to_output(this_ptr: *const ::graphics_layout_item::GraphicsLayoutItem, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsLayoutItem_getContentsMargins(this_ptr: *const ::graphics_layout_item::GraphicsLayoutItem, left: *mut ::libc::c_double, top: *mut ::libc::c_double, right: *mut ::libc::c_double, bottom: *mut ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsLayoutItem_graphicsItem(this_ptr: *const ::graphics_layout_item::GraphicsLayoutItem) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsLayoutItem_isLayout(this_ptr: *const ::graphics_layout_item::GraphicsLayoutItem) -> bool;
  pub fn qt_widgets_c_QGraphicsLayoutItem_maximumHeight(this_ptr: *const ::graphics_layout_item::GraphicsLayoutItem) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsLayoutItem_maximumSize_to_output(this_ptr: *const ::graphics_layout_item::GraphicsLayoutItem, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_widgets_c_QGraphicsLayoutItem_maximumWidth(this_ptr: *const ::graphics_layout_item::GraphicsLayoutItem) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsLayoutItem_minimumHeight(this_ptr: *const ::graphics_layout_item::GraphicsLayoutItem) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsLayoutItem_minimumSize_to_output(this_ptr: *const ::graphics_layout_item::GraphicsLayoutItem, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_widgets_c_QGraphicsLayoutItem_minimumWidth(this_ptr: *const ::graphics_layout_item::GraphicsLayoutItem) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsLayoutItem_ownedByLayout(this_ptr: *const ::graphics_layout_item::GraphicsLayoutItem) -> bool;
  pub fn qt_widgets_c_QGraphicsLayoutItem_parentLayoutItem(this_ptr: *const ::graphics_layout_item::GraphicsLayoutItem) -> *mut ::graphics_layout_item::GraphicsLayoutItem;
  pub fn qt_widgets_c_QGraphicsLayoutItem_preferredHeight(this_ptr: *const ::graphics_layout_item::GraphicsLayoutItem) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsLayoutItem_preferredSize_to_output(this_ptr: *const ::graphics_layout_item::GraphicsLayoutItem, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_widgets_c_QGraphicsLayoutItem_preferredWidth(this_ptr: *const ::graphics_layout_item::GraphicsLayoutItem) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsLayoutItem_setGeometry(this_ptr: *mut ::graphics_layout_item::GraphicsLayoutItem, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsLayoutItem_setMaximumHeight(this_ptr: *mut ::graphics_layout_item::GraphicsLayoutItem, height: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsLayoutItem_setMaximumSize_size(this_ptr: *mut ::graphics_layout_item::GraphicsLayoutItem, size: *const ::qt_core::size_f::SizeF);
  pub fn qt_widgets_c_QGraphicsLayoutItem_setMaximumSize_w_h(this_ptr: *mut ::graphics_layout_item::GraphicsLayoutItem, w: ::libc::c_double, h: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsLayoutItem_setMaximumWidth(this_ptr: *mut ::graphics_layout_item::GraphicsLayoutItem, width: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsLayoutItem_setMinimumHeight(this_ptr: *mut ::graphics_layout_item::GraphicsLayoutItem, height: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsLayoutItem_setMinimumSize_size(this_ptr: *mut ::graphics_layout_item::GraphicsLayoutItem, size: *const ::qt_core::size_f::SizeF);
  pub fn qt_widgets_c_QGraphicsLayoutItem_setMinimumSize_w_h(this_ptr: *mut ::graphics_layout_item::GraphicsLayoutItem, w: ::libc::c_double, h: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsLayoutItem_setMinimumWidth(this_ptr: *mut ::graphics_layout_item::GraphicsLayoutItem, width: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsLayoutItem_setParentLayoutItem(this_ptr: *mut ::graphics_layout_item::GraphicsLayoutItem, parent: *mut ::graphics_layout_item::GraphicsLayoutItem);
  pub fn qt_widgets_c_QGraphicsLayoutItem_setPreferredHeight(this_ptr: *mut ::graphics_layout_item::GraphicsLayoutItem, height: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsLayoutItem_setPreferredSize_size(this_ptr: *mut ::graphics_layout_item::GraphicsLayoutItem, size: *const ::qt_core::size_f::SizeF);
  pub fn qt_widgets_c_QGraphicsLayoutItem_setPreferredSize_w_h(this_ptr: *mut ::graphics_layout_item::GraphicsLayoutItem, w: ::libc::c_double, h: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsLayoutItem_setPreferredWidth(this_ptr: *mut ::graphics_layout_item::GraphicsLayoutItem, width: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsLayoutItem_setSizePolicy_hPolicy_vPolicy(this_ptr: *mut ::graphics_layout_item::GraphicsLayoutItem, hPolicy: *const ::size_policy::Policy, vPolicy: *const ::size_policy::Policy);
  pub fn qt_widgets_c_QGraphicsLayoutItem_setSizePolicy_hPolicy_vPolicy_controlType(this_ptr: *mut ::graphics_layout_item::GraphicsLayoutItem, hPolicy: *const ::size_policy::Policy, vPolicy: *const ::size_policy::Policy, controlType: *const ::size_policy::ControlType);
  pub fn qt_widgets_c_QGraphicsLayoutItem_setSizePolicy_policy(this_ptr: *mut ::graphics_layout_item::GraphicsLayoutItem, policy: *const ::size_policy::SizePolicy);
  pub fn qt_widgets_c_QGraphicsLayoutItem_sizePolicy_to_output(this_ptr: *const ::graphics_layout_item::GraphicsLayoutItem, output: *mut ::size_policy::SizePolicy);
  pub fn qt_widgets_c_QGraphicsLayoutItem_updateGeometry(this_ptr: *mut ::graphics_layout_item::GraphicsLayoutItem);

  // Header: QGraphicsLineItem
  pub fn qt_widgets_c_QGraphicsLineItem_G_dynamic_cast_QGraphicsLineItem_ptr(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_line_item::GraphicsLineItem;
  pub fn qt_widgets_c_QGraphicsLineItem_G_static_cast_QGraphicsItem_ptr(ptr: *mut ::graphics_line_item::GraphicsLineItem) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsLineItem_G_static_cast_QGraphicsLineItem_ptr(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_line_item::GraphicsLineItem;
  pub fn qt_widgets_c_QGraphicsLineItem_boundingRect_to_output(this_ptr: *const ::graphics_line_item::GraphicsLineItem, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsLineItem_contains(this_ptr: *const ::graphics_line_item::GraphicsLineItem, point: *const ::qt_core::point_f::PointF) -> bool;
  pub fn qt_widgets_c_QGraphicsLineItem_delete(this_ptr: *mut ::graphics_line_item::GraphicsLineItem);
  pub fn qt_widgets_c_QGraphicsLineItem_isObscuredBy(this_ptr: *const ::graphics_line_item::GraphicsLineItem, item: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsLineItem_line_to_output(this_ptr: *const ::graphics_line_item::GraphicsLineItem, output: *mut ::qt_core::line_f::LineF);
  pub fn qt_widgets_c_QGraphicsLineItem_new_line(line: *const ::qt_core::line_f::LineF) -> *mut ::graphics_line_item::GraphicsLineItem;
  pub fn qt_widgets_c_QGraphicsLineItem_new_line_parent(line: *const ::qt_core::line_f::LineF, parent: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_line_item::GraphicsLineItem;
  pub fn qt_widgets_c_QGraphicsLineItem_new_no_args() -> *mut ::graphics_line_item::GraphicsLineItem;
  pub fn qt_widgets_c_QGraphicsLineItem_new_parent(parent: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_line_item::GraphicsLineItem;
  pub fn qt_widgets_c_QGraphicsLineItem_new_x1_y1_x2_y2(x1: ::libc::c_double, y1: ::libc::c_double, x2: ::libc::c_double, y2: ::libc::c_double) -> *mut ::graphics_line_item::GraphicsLineItem;
  pub fn qt_widgets_c_QGraphicsLineItem_new_x1_y1_x2_y2_parent(x1: ::libc::c_double, y1: ::libc::c_double, x2: ::libc::c_double, y2: ::libc::c_double, parent: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_line_item::GraphicsLineItem;
  pub fn qt_widgets_c_QGraphicsLineItem_opaqueArea_to_output(this_ptr: *const ::graphics_line_item::GraphicsLineItem, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsLineItem_paint_painter_option(this_ptr: *mut ::graphics_line_item::GraphicsLineItem, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_graphics_item::StyleOptionGraphicsItem);
  pub fn qt_widgets_c_QGraphicsLineItem_paint_painter_option_widget(this_ptr: *mut ::graphics_line_item::GraphicsLineItem, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_graphics_item::StyleOptionGraphicsItem, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QGraphicsLineItem_pen_to_output(this_ptr: *const ::graphics_line_item::GraphicsLineItem, output: *mut ::qt_gui::pen::Pen);
  pub fn qt_widgets_c_QGraphicsLineItem_setLine_line(this_ptr: *mut ::graphics_line_item::GraphicsLineItem, line: *const ::qt_core::line_f::LineF);
  pub fn qt_widgets_c_QGraphicsLineItem_setLine_x1_y1_x2_y2(this_ptr: *mut ::graphics_line_item::GraphicsLineItem, x1: ::libc::c_double, y1: ::libc::c_double, x2: ::libc::c_double, y2: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsLineItem_setPen(this_ptr: *mut ::graphics_line_item::GraphicsLineItem, pen: *const ::qt_gui::pen::Pen);
  pub fn qt_widgets_c_QGraphicsLineItem_shape_to_output(this_ptr: *const ::graphics_line_item::GraphicsLineItem, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsLineItem_type(this_ptr: *const ::graphics_line_item::GraphicsLineItem) -> ::libc::c_int;

  // Header: QGraphicsLinearLayout
  pub fn qt_widgets_c_QGraphicsLinearLayout_G_dynamic_cast_QGraphicsLinearLayout_ptr_QGraphicsLayout(ptr: *mut ::graphics_layout::GraphicsLayout) -> *mut ::graphics_linear_layout::GraphicsLinearLayout;
  pub fn qt_widgets_c_QGraphicsLinearLayout_G_dynamic_cast_QGraphicsLinearLayout_ptr_QGraphicsLayoutItem(ptr: *mut ::graphics_layout_item::GraphicsLayoutItem) -> *mut ::graphics_linear_layout::GraphicsLinearLayout;
  pub fn qt_widgets_c_QGraphicsLinearLayout_G_static_cast_QGraphicsLayoutItem_ptr(ptr: *mut ::graphics_linear_layout::GraphicsLinearLayout) -> *mut ::graphics_layout_item::GraphicsLayoutItem;
  pub fn qt_widgets_c_QGraphicsLinearLayout_G_static_cast_QGraphicsLayout_ptr(ptr: *mut ::graphics_linear_layout::GraphicsLinearLayout) -> *mut ::graphics_layout::GraphicsLayout;
  pub fn qt_widgets_c_QGraphicsLinearLayout_G_static_cast_QGraphicsLinearLayout_ptr_QGraphicsLayout(ptr: *mut ::graphics_layout::GraphicsLayout) -> *mut ::graphics_linear_layout::GraphicsLinearLayout;
  pub fn qt_widgets_c_QGraphicsLinearLayout_G_static_cast_QGraphicsLinearLayout_ptr_QGraphicsLayoutItem(ptr: *mut ::graphics_layout_item::GraphicsLayoutItem) -> *mut ::graphics_linear_layout::GraphicsLinearLayout;
  pub fn qt_widgets_c_QGraphicsLinearLayout_addItem(this_ptr: *mut ::graphics_linear_layout::GraphicsLinearLayout, item: *mut ::graphics_layout_item::GraphicsLayoutItem);
  pub fn qt_widgets_c_QGraphicsLinearLayout_addStretch_no_args(this_ptr: *mut ::graphics_linear_layout::GraphicsLinearLayout);
  pub fn qt_widgets_c_QGraphicsLinearLayout_addStretch_stretch(this_ptr: *mut ::graphics_linear_layout::GraphicsLinearLayout, stretch: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsLinearLayout_count(this_ptr: *const ::graphics_linear_layout::GraphicsLinearLayout) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsLinearLayout_delete(this_ptr: *mut ::graphics_linear_layout::GraphicsLinearLayout);
  pub fn qt_widgets_c_QGraphicsLinearLayout_dump_indent(this_ptr: *const ::graphics_linear_layout::GraphicsLinearLayout, indent: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsLinearLayout_dump_no_args(this_ptr: *const ::graphics_linear_layout::GraphicsLinearLayout);
  pub fn qt_widgets_c_QGraphicsLinearLayout_insertItem(this_ptr: *mut ::graphics_linear_layout::GraphicsLinearLayout, index: ::libc::c_int, item: *mut ::graphics_layout_item::GraphicsLayoutItem);
  pub fn qt_widgets_c_QGraphicsLinearLayout_insertStretch_index(this_ptr: *mut ::graphics_linear_layout::GraphicsLinearLayout, index: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsLinearLayout_insertStretch_index_stretch(this_ptr: *mut ::graphics_linear_layout::GraphicsLinearLayout, index: ::libc::c_int, stretch: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsLinearLayout_invalidate(this_ptr: *mut ::graphics_linear_layout::GraphicsLinearLayout);
  pub fn qt_widgets_c_QGraphicsLinearLayout_itemAt(this_ptr: *const ::graphics_linear_layout::GraphicsLinearLayout, index: ::libc::c_int) -> *mut ::graphics_layout_item::GraphicsLayoutItem;
  pub fn qt_widgets_c_QGraphicsLinearLayout_itemSpacing(this_ptr: *const ::graphics_linear_layout::GraphicsLinearLayout, index: ::libc::c_int) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsLinearLayout_new_no_args() -> *mut ::graphics_linear_layout::GraphicsLinearLayout;
  pub fn qt_widgets_c_QGraphicsLinearLayout_new_orientation(orientation: *const ::qt_core::qt::Orientation) -> *mut ::graphics_linear_layout::GraphicsLinearLayout;
  pub fn qt_widgets_c_QGraphicsLinearLayout_new_orientation_parent(orientation: *const ::qt_core::qt::Orientation, parent: *mut ::graphics_layout_item::GraphicsLayoutItem) -> *mut ::graphics_linear_layout::GraphicsLinearLayout;
  pub fn qt_widgets_c_QGraphicsLinearLayout_new_parent(parent: *mut ::graphics_layout_item::GraphicsLayoutItem) -> *mut ::graphics_linear_layout::GraphicsLinearLayout;
  pub fn qt_widgets_c_QGraphicsLinearLayout_removeAt(this_ptr: *mut ::graphics_linear_layout::GraphicsLinearLayout, index: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsLinearLayout_removeItem(this_ptr: *mut ::graphics_linear_layout::GraphicsLinearLayout, item: *mut ::graphics_layout_item::GraphicsLayoutItem);
  pub fn qt_widgets_c_QGraphicsLinearLayout_setGeometry(this_ptr: *mut ::graphics_linear_layout::GraphicsLinearLayout, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsLinearLayout_setItemSpacing(this_ptr: *mut ::graphics_linear_layout::GraphicsLinearLayout, index: ::libc::c_int, spacing: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsLinearLayout_setOrientation(this_ptr: *mut ::graphics_linear_layout::GraphicsLinearLayout, orientation: *const ::qt_core::qt::Orientation);
  pub fn qt_widgets_c_QGraphicsLinearLayout_setSpacing(this_ptr: *mut ::graphics_linear_layout::GraphicsLinearLayout, spacing: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsLinearLayout_setStretchFactor(this_ptr: *mut ::graphics_linear_layout::GraphicsLinearLayout, item: *mut ::graphics_layout_item::GraphicsLayoutItem, stretch: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsLinearLayout_sizeHint_to_output_which(this_ptr: *const ::graphics_linear_layout::GraphicsLinearLayout, which: *const ::qt_core::qt::SizeHint, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_widgets_c_QGraphicsLinearLayout_sizeHint_to_output_which_constraint(this_ptr: *const ::graphics_linear_layout::GraphicsLinearLayout, which: *const ::qt_core::qt::SizeHint, constraint: *const ::qt_core::size_f::SizeF, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_widgets_c_QGraphicsLinearLayout_spacing(this_ptr: *const ::graphics_linear_layout::GraphicsLinearLayout) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsLinearLayout_stretchFactor(this_ptr: *const ::graphics_linear_layout::GraphicsLinearLayout, item: *mut ::graphics_layout_item::GraphicsLayoutItem) -> ::libc::c_int;

  // Header: QGraphicsObject
  pub fn qt_widgets_c_QGraphicsObject_G_dynamic_cast_QGraphicsObject_ptr(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_object::GraphicsObject;
  pub fn qt_widgets_c_QGraphicsObject_G_static_cast_QGraphicsItem_ptr(ptr: *mut ::graphics_object::GraphicsObject) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsObject_G_static_cast_QGraphicsObject_ptr_QGraphicsItem(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_object::GraphicsObject;
  pub fn qt_widgets_c_QGraphicsObject_G_static_cast_QGraphicsObject_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::graphics_object::GraphicsObject;
  pub fn qt_widgets_c_QGraphicsObject_G_static_cast_QObject_ptr(ptr: *mut ::graphics_object::GraphicsObject) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QGraphicsObject_delete(this_ptr: *mut ::graphics_object::GraphicsObject);
  pub fn qt_widgets_c_QGraphicsObject_metaObject(this_ptr: *const ::graphics_object::GraphicsObject) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QGraphicsObject_qt_metacall(this_ptr: *mut ::graphics_object::GraphicsObject, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsObject_qt_metacast(this_ptr: *mut ::graphics_object::GraphicsObject, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QGraphicsObject_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsObject_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsObject_ungrabGesture(this_ptr: *mut ::graphics_object::GraphicsObject, type_: *const ::qt_core::qt::GestureType);

  // Header: QGraphicsOpacityEffect
  pub fn qt_widgets_c_QGraphicsOpacityEffect_G_dynamic_cast_QGraphicsOpacityEffect_ptr(ptr: *mut ::graphics_effect::GraphicsEffect) -> *mut ::graphics_opacity_effect::GraphicsOpacityEffect;
  pub fn qt_widgets_c_QGraphicsOpacityEffect_G_static_cast_QGraphicsEffect_ptr(ptr: *mut ::graphics_opacity_effect::GraphicsOpacityEffect) -> *mut ::graphics_effect::GraphicsEffect;
  pub fn qt_widgets_c_QGraphicsOpacityEffect_G_static_cast_QGraphicsOpacityEffect_ptr_QGraphicsEffect(ptr: *mut ::graphics_effect::GraphicsEffect) -> *mut ::graphics_opacity_effect::GraphicsOpacityEffect;
  pub fn qt_widgets_c_QGraphicsOpacityEffect_G_static_cast_QGraphicsOpacityEffect_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::graphics_opacity_effect::GraphicsOpacityEffect;
  pub fn qt_widgets_c_QGraphicsOpacityEffect_G_static_cast_QObject_ptr(ptr: *mut ::graphics_opacity_effect::GraphicsOpacityEffect) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QGraphicsOpacityEffect_delete(this_ptr: *mut ::graphics_opacity_effect::GraphicsOpacityEffect);
  pub fn qt_widgets_c_QGraphicsOpacityEffect_metaObject(this_ptr: *const ::graphics_opacity_effect::GraphicsOpacityEffect) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QGraphicsOpacityEffect_new_no_args() -> *mut ::graphics_opacity_effect::GraphicsOpacityEffect;
  pub fn qt_widgets_c_QGraphicsOpacityEffect_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::graphics_opacity_effect::GraphicsOpacityEffect;
  pub fn qt_widgets_c_QGraphicsOpacityEffect_opacity(this_ptr: *const ::graphics_opacity_effect::GraphicsOpacityEffect) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsOpacityEffect_opacityMask_to_output(this_ptr: *const ::graphics_opacity_effect::GraphicsOpacityEffect, output: *mut ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QGraphicsOpacityEffect_qt_metacall(this_ptr: *mut ::graphics_opacity_effect::GraphicsOpacityEffect, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsOpacityEffect_qt_metacast(this_ptr: *mut ::graphics_opacity_effect::GraphicsOpacityEffect, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QGraphicsOpacityEffect_setOpacity(this_ptr: *mut ::graphics_opacity_effect::GraphicsOpacityEffect, opacity: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsOpacityEffect_setOpacityMask(this_ptr: *mut ::graphics_opacity_effect::GraphicsOpacityEffect, mask: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QGraphicsOpacityEffect_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsOpacityEffect_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QGraphicsPathItem
  pub fn qt_widgets_c_QGraphicsPathItem_G_dynamic_cast_QGraphicsPathItem_ptr_QAbstractGraphicsShapeItem(ptr: *mut ::abstract_graphics_shape_item::AbstractGraphicsShapeItem) -> *mut ::graphics_path_item::GraphicsPathItem;
  pub fn qt_widgets_c_QGraphicsPathItem_G_dynamic_cast_QGraphicsPathItem_ptr_QGraphicsItem(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_path_item::GraphicsPathItem;
  pub fn qt_widgets_c_QGraphicsPathItem_G_static_cast_QAbstractGraphicsShapeItem_ptr(ptr: *mut ::graphics_path_item::GraphicsPathItem) -> *mut ::abstract_graphics_shape_item::AbstractGraphicsShapeItem;
  pub fn qt_widgets_c_QGraphicsPathItem_G_static_cast_QGraphicsItem_ptr(ptr: *mut ::graphics_path_item::GraphicsPathItem) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsPathItem_G_static_cast_QGraphicsPathItem_ptr_QAbstractGraphicsShapeItem(ptr: *mut ::abstract_graphics_shape_item::AbstractGraphicsShapeItem) -> *mut ::graphics_path_item::GraphicsPathItem;
  pub fn qt_widgets_c_QGraphicsPathItem_G_static_cast_QGraphicsPathItem_ptr_QGraphicsItem(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_path_item::GraphicsPathItem;
  pub fn qt_widgets_c_QGraphicsPathItem_boundingRect_to_output(this_ptr: *const ::graphics_path_item::GraphicsPathItem, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsPathItem_contains(this_ptr: *const ::graphics_path_item::GraphicsPathItem, point: *const ::qt_core::point_f::PointF) -> bool;
  pub fn qt_widgets_c_QGraphicsPathItem_delete(this_ptr: *mut ::graphics_path_item::GraphicsPathItem);
  pub fn qt_widgets_c_QGraphicsPathItem_isObscuredBy(this_ptr: *const ::graphics_path_item::GraphicsPathItem, item: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsPathItem_new_no_args() -> *mut ::graphics_path_item::GraphicsPathItem;
  pub fn qt_widgets_c_QGraphicsPathItem_new_parent(parent: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_path_item::GraphicsPathItem;
  pub fn qt_widgets_c_QGraphicsPathItem_new_path(path: *const ::qt_gui::painter_path::PainterPath) -> *mut ::graphics_path_item::GraphicsPathItem;
  pub fn qt_widgets_c_QGraphicsPathItem_new_path_parent(path: *const ::qt_gui::painter_path::PainterPath, parent: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_path_item::GraphicsPathItem;
  pub fn qt_widgets_c_QGraphicsPathItem_opaqueArea_to_output(this_ptr: *const ::graphics_path_item::GraphicsPathItem, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsPathItem_paint_painter_option(this_ptr: *mut ::graphics_path_item::GraphicsPathItem, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_graphics_item::StyleOptionGraphicsItem);
  pub fn qt_widgets_c_QGraphicsPathItem_paint_painter_option_widget(this_ptr: *mut ::graphics_path_item::GraphicsPathItem, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_graphics_item::StyleOptionGraphicsItem, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QGraphicsPathItem_path_to_output(this_ptr: *const ::graphics_path_item::GraphicsPathItem, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsPathItem_setPath(this_ptr: *mut ::graphics_path_item::GraphicsPathItem, path: *const ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsPathItem_shape_to_output(this_ptr: *const ::graphics_path_item::GraphicsPathItem, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsPathItem_type(this_ptr: *const ::graphics_path_item::GraphicsPathItem) -> ::libc::c_int;

  // Header: QGraphicsPixmapItem
  pub fn qt_widgets_c_QGraphicsPixmapItem_G_dynamic_cast_QGraphicsPixmapItem_ptr(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_pixmap_item::GraphicsPixmapItem;
  pub fn qt_widgets_c_QGraphicsPixmapItem_G_static_cast_QGraphicsItem_ptr(ptr: *mut ::graphics_pixmap_item::GraphicsPixmapItem) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsPixmapItem_G_static_cast_QGraphicsPixmapItem_ptr(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_pixmap_item::GraphicsPixmapItem;
  pub fn qt_widgets_c_QGraphicsPixmapItem_boundingRect_to_output(this_ptr: *const ::graphics_pixmap_item::GraphicsPixmapItem, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsPixmapItem_contains(this_ptr: *const ::graphics_pixmap_item::GraphicsPixmapItem, point: *const ::qt_core::point_f::PointF) -> bool;
  pub fn qt_widgets_c_QGraphicsPixmapItem_delete(this_ptr: *mut ::graphics_pixmap_item::GraphicsPixmapItem);
  pub fn qt_widgets_c_QGraphicsPixmapItem_isObscuredBy(this_ptr: *const ::graphics_pixmap_item::GraphicsPixmapItem, item: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsPixmapItem_new_no_args() -> *mut ::graphics_pixmap_item::GraphicsPixmapItem;
  pub fn qt_widgets_c_QGraphicsPixmapItem_new_parent(parent: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_pixmap_item::GraphicsPixmapItem;
  pub fn qt_widgets_c_QGraphicsPixmapItem_new_pixmap(pixmap: *const ::qt_gui::pixmap::Pixmap) -> *mut ::graphics_pixmap_item::GraphicsPixmapItem;
  pub fn qt_widgets_c_QGraphicsPixmapItem_new_pixmap_parent(pixmap: *const ::qt_gui::pixmap::Pixmap, parent: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_pixmap_item::GraphicsPixmapItem;
  pub fn qt_widgets_c_QGraphicsPixmapItem_offset_to_output(this_ptr: *const ::graphics_pixmap_item::GraphicsPixmapItem, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsPixmapItem_opaqueArea_to_output(this_ptr: *const ::graphics_pixmap_item::GraphicsPixmapItem, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsPixmapItem_paint(this_ptr: *mut ::graphics_pixmap_item::GraphicsPixmapItem, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_graphics_item::StyleOptionGraphicsItem, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QGraphicsPixmapItem_pixmap_as_ptr(this_ptr: *const ::graphics_pixmap_item::GraphicsPixmapItem) -> *mut ::qt_gui::pixmap::Pixmap;
  pub fn qt_widgets_c_QGraphicsPixmapItem_setOffset_offset(this_ptr: *mut ::graphics_pixmap_item::GraphicsPixmapItem, offset: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsPixmapItem_setOffset_x_y(this_ptr: *mut ::graphics_pixmap_item::GraphicsPixmapItem, x: ::libc::c_double, y: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsPixmapItem_setPixmap(this_ptr: *mut ::graphics_pixmap_item::GraphicsPixmapItem, pixmap: *const ::qt_gui::pixmap::Pixmap);
  pub fn qt_widgets_c_QGraphicsPixmapItem_setShapeMode(this_ptr: *mut ::graphics_pixmap_item::GraphicsPixmapItem, mode: ::graphics_pixmap_item::ShapeMode);
  pub fn qt_widgets_c_QGraphicsPixmapItem_setTransformationMode(this_ptr: *mut ::graphics_pixmap_item::GraphicsPixmapItem, mode: *const ::qt_core::qt::TransformationMode);
  pub fn qt_widgets_c_QGraphicsPixmapItem_shapeMode(this_ptr: *const ::graphics_pixmap_item::GraphicsPixmapItem) -> ::graphics_pixmap_item::ShapeMode;
  pub fn qt_widgets_c_QGraphicsPixmapItem_shape_to_output(this_ptr: *const ::graphics_pixmap_item::GraphicsPixmapItem, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsPixmapItem_type(this_ptr: *const ::graphics_pixmap_item::GraphicsPixmapItem) -> ::libc::c_int;

  // Header: QGraphicsPolygonItem
  pub fn qt_widgets_c_QGraphicsPolygonItem_G_dynamic_cast_QGraphicsPolygonItem_ptr_QAbstractGraphicsShapeItem(ptr: *mut ::abstract_graphics_shape_item::AbstractGraphicsShapeItem) -> *mut ::graphics_polygon_item::GraphicsPolygonItem;
  pub fn qt_widgets_c_QGraphicsPolygonItem_G_dynamic_cast_QGraphicsPolygonItem_ptr_QGraphicsItem(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_polygon_item::GraphicsPolygonItem;
  pub fn qt_widgets_c_QGraphicsPolygonItem_G_static_cast_QAbstractGraphicsShapeItem_ptr(ptr: *mut ::graphics_polygon_item::GraphicsPolygonItem) -> *mut ::abstract_graphics_shape_item::AbstractGraphicsShapeItem;
  pub fn qt_widgets_c_QGraphicsPolygonItem_G_static_cast_QGraphicsItem_ptr(ptr: *mut ::graphics_polygon_item::GraphicsPolygonItem) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsPolygonItem_G_static_cast_QGraphicsPolygonItem_ptr_QAbstractGraphicsShapeItem(ptr: *mut ::abstract_graphics_shape_item::AbstractGraphicsShapeItem) -> *mut ::graphics_polygon_item::GraphicsPolygonItem;
  pub fn qt_widgets_c_QGraphicsPolygonItem_G_static_cast_QGraphicsPolygonItem_ptr_QGraphicsItem(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_polygon_item::GraphicsPolygonItem;
  pub fn qt_widgets_c_QGraphicsPolygonItem_boundingRect_to_output(this_ptr: *const ::graphics_polygon_item::GraphicsPolygonItem, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsPolygonItem_contains(this_ptr: *const ::graphics_polygon_item::GraphicsPolygonItem, point: *const ::qt_core::point_f::PointF) -> bool;
  pub fn qt_widgets_c_QGraphicsPolygonItem_delete(this_ptr: *mut ::graphics_polygon_item::GraphicsPolygonItem);
  pub fn qt_widgets_c_QGraphicsPolygonItem_isObscuredBy(this_ptr: *const ::graphics_polygon_item::GraphicsPolygonItem, item: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsPolygonItem_new_no_args() -> *mut ::graphics_polygon_item::GraphicsPolygonItem;
  pub fn qt_widgets_c_QGraphicsPolygonItem_new_parent(parent: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_polygon_item::GraphicsPolygonItem;
  pub fn qt_widgets_c_QGraphicsPolygonItem_new_polygon(polygon: *const ::qt_gui::polygon_f::PolygonF) -> *mut ::graphics_polygon_item::GraphicsPolygonItem;
  pub fn qt_widgets_c_QGraphicsPolygonItem_new_polygon_parent(polygon: *const ::qt_gui::polygon_f::PolygonF, parent: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_polygon_item::GraphicsPolygonItem;
  pub fn qt_widgets_c_QGraphicsPolygonItem_opaqueArea_to_output(this_ptr: *const ::graphics_polygon_item::GraphicsPolygonItem, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsPolygonItem_paint_painter_option(this_ptr: *mut ::graphics_polygon_item::GraphicsPolygonItem, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_graphics_item::StyleOptionGraphicsItem);
  pub fn qt_widgets_c_QGraphicsPolygonItem_paint_painter_option_widget(this_ptr: *mut ::graphics_polygon_item::GraphicsPolygonItem, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_graphics_item::StyleOptionGraphicsItem, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QGraphicsPolygonItem_polygon_to_output(this_ptr: *const ::graphics_polygon_item::GraphicsPolygonItem, output: *mut ::qt_gui::polygon_f::PolygonF);
  pub fn qt_widgets_c_QGraphicsPolygonItem_setFillRule(this_ptr: *mut ::graphics_polygon_item::GraphicsPolygonItem, rule: *const ::qt_core::qt::FillRule);
  pub fn qt_widgets_c_QGraphicsPolygonItem_setPolygon(this_ptr: *mut ::graphics_polygon_item::GraphicsPolygonItem, polygon: *const ::qt_gui::polygon_f::PolygonF);
  pub fn qt_widgets_c_QGraphicsPolygonItem_shape_to_output(this_ptr: *const ::graphics_polygon_item::GraphicsPolygonItem, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsPolygonItem_type(this_ptr: *const ::graphics_polygon_item::GraphicsPolygonItem) -> ::libc::c_int;

  // Header: QGraphicsProxyWidget
  pub fn qt_widgets_c_QGraphicsProxyWidget_G_dynamic_cast_QGraphicsProxyWidget_ptr_QGraphicsItem(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_proxy_widget::GraphicsProxyWidget;
  pub fn qt_widgets_c_QGraphicsProxyWidget_G_dynamic_cast_QGraphicsProxyWidget_ptr_QGraphicsLayoutItem(ptr: *mut ::graphics_layout_item::GraphicsLayoutItem) -> *mut ::graphics_proxy_widget::GraphicsProxyWidget;
  pub fn qt_widgets_c_QGraphicsProxyWidget_G_dynamic_cast_QGraphicsProxyWidget_ptr_QGraphicsObject(ptr: *mut ::graphics_object::GraphicsObject) -> *mut ::graphics_proxy_widget::GraphicsProxyWidget;
  pub fn qt_widgets_c_QGraphicsProxyWidget_G_dynamic_cast_QGraphicsProxyWidget_ptr_QGraphicsWidget(ptr: *mut ::graphics_widget::GraphicsWidget) -> *mut ::graphics_proxy_widget::GraphicsProxyWidget;
  pub fn qt_widgets_c_QGraphicsProxyWidget_G_static_cast_QGraphicsItem_ptr(ptr: *mut ::graphics_proxy_widget::GraphicsProxyWidget) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsProxyWidget_G_static_cast_QGraphicsLayoutItem_ptr(ptr: *mut ::graphics_proxy_widget::GraphicsProxyWidget) -> *mut ::graphics_layout_item::GraphicsLayoutItem;
  pub fn qt_widgets_c_QGraphicsProxyWidget_G_static_cast_QGraphicsObject_ptr(ptr: *mut ::graphics_proxy_widget::GraphicsProxyWidget) -> *mut ::graphics_object::GraphicsObject;
  pub fn qt_widgets_c_QGraphicsProxyWidget_G_static_cast_QGraphicsProxyWidget_ptr_QGraphicsItem(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_proxy_widget::GraphicsProxyWidget;
  pub fn qt_widgets_c_QGraphicsProxyWidget_G_static_cast_QGraphicsProxyWidget_ptr_QGraphicsLayoutItem(ptr: *mut ::graphics_layout_item::GraphicsLayoutItem) -> *mut ::graphics_proxy_widget::GraphicsProxyWidget;
  pub fn qt_widgets_c_QGraphicsProxyWidget_G_static_cast_QGraphicsProxyWidget_ptr_QGraphicsObject(ptr: *mut ::graphics_object::GraphicsObject) -> *mut ::graphics_proxy_widget::GraphicsProxyWidget;
  pub fn qt_widgets_c_QGraphicsProxyWidget_G_static_cast_QGraphicsProxyWidget_ptr_QGraphicsWidget(ptr: *mut ::graphics_widget::GraphicsWidget) -> *mut ::graphics_proxy_widget::GraphicsProxyWidget;
  pub fn qt_widgets_c_QGraphicsProxyWidget_G_static_cast_QGraphicsProxyWidget_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::graphics_proxy_widget::GraphicsProxyWidget;
  pub fn qt_widgets_c_QGraphicsProxyWidget_G_static_cast_QGraphicsWidget_ptr(ptr: *mut ::graphics_proxy_widget::GraphicsProxyWidget) -> *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QGraphicsProxyWidget_G_static_cast_QObject_ptr(ptr: *mut ::graphics_proxy_widget::GraphicsProxyWidget) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QGraphicsProxyWidget_createProxyForChildWidget(this_ptr: *mut ::graphics_proxy_widget::GraphicsProxyWidget, child: *mut ::widget::Widget) -> *mut ::graphics_proxy_widget::GraphicsProxyWidget;
  pub fn qt_widgets_c_QGraphicsProxyWidget_delete(this_ptr: *mut ::graphics_proxy_widget::GraphicsProxyWidget);
  pub fn qt_widgets_c_QGraphicsProxyWidget_metaObject(this_ptr: *const ::graphics_proxy_widget::GraphicsProxyWidget) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QGraphicsProxyWidget_paint(this_ptr: *mut ::graphics_proxy_widget::GraphicsProxyWidget, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_graphics_item::StyleOptionGraphicsItem, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QGraphicsProxyWidget_qt_metacall(this_ptr: *mut ::graphics_proxy_widget::GraphicsProxyWidget, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsProxyWidget_qt_metacast(this_ptr: *mut ::graphics_proxy_widget::GraphicsProxyWidget, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QGraphicsProxyWidget_setGeometry(this_ptr: *mut ::graphics_proxy_widget::GraphicsProxyWidget, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsProxyWidget_setWidget(this_ptr: *mut ::graphics_proxy_widget::GraphicsProxyWidget, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QGraphicsProxyWidget_subWidgetRect_to_output(this_ptr: *const ::graphics_proxy_widget::GraphicsProxyWidget, widget: *const ::widget::Widget, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsProxyWidget_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsProxyWidget_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsProxyWidget_type(this_ptr: *const ::graphics_proxy_widget::GraphicsProxyWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsProxyWidget_widget(this_ptr: *const ::graphics_proxy_widget::GraphicsProxyWidget) -> *mut ::widget::Widget;

  // Header: QGraphicsRectItem
  pub fn qt_widgets_c_QGraphicsRectItem_G_dynamic_cast_QGraphicsRectItem_ptr_QAbstractGraphicsShapeItem(ptr: *mut ::abstract_graphics_shape_item::AbstractGraphicsShapeItem) -> *mut ::graphics_rect_item::GraphicsRectItem;
  pub fn qt_widgets_c_QGraphicsRectItem_G_dynamic_cast_QGraphicsRectItem_ptr_QGraphicsItem(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_rect_item::GraphicsRectItem;
  pub fn qt_widgets_c_QGraphicsRectItem_G_static_cast_QAbstractGraphicsShapeItem_ptr(ptr: *mut ::graphics_rect_item::GraphicsRectItem) -> *mut ::abstract_graphics_shape_item::AbstractGraphicsShapeItem;
  pub fn qt_widgets_c_QGraphicsRectItem_G_static_cast_QGraphicsItem_ptr(ptr: *mut ::graphics_rect_item::GraphicsRectItem) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsRectItem_G_static_cast_QGraphicsRectItem_ptr_QAbstractGraphicsShapeItem(ptr: *mut ::abstract_graphics_shape_item::AbstractGraphicsShapeItem) -> *mut ::graphics_rect_item::GraphicsRectItem;
  pub fn qt_widgets_c_QGraphicsRectItem_G_static_cast_QGraphicsRectItem_ptr_QGraphicsItem(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_rect_item::GraphicsRectItem;
  pub fn qt_widgets_c_QGraphicsRectItem_boundingRect_to_output(this_ptr: *const ::graphics_rect_item::GraphicsRectItem, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsRectItem_contains(this_ptr: *const ::graphics_rect_item::GraphicsRectItem, point: *const ::qt_core::point_f::PointF) -> bool;
  pub fn qt_widgets_c_QGraphicsRectItem_delete(this_ptr: *mut ::graphics_rect_item::GraphicsRectItem);
  pub fn qt_widgets_c_QGraphicsRectItem_isObscuredBy(this_ptr: *const ::graphics_rect_item::GraphicsRectItem, item: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsRectItem_new_no_args() -> *mut ::graphics_rect_item::GraphicsRectItem;
  pub fn qt_widgets_c_QGraphicsRectItem_new_parent(parent: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_rect_item::GraphicsRectItem;
  pub fn qt_widgets_c_QGraphicsRectItem_new_rect(rect: *const ::qt_core::rect_f::RectF) -> *mut ::graphics_rect_item::GraphicsRectItem;
  pub fn qt_widgets_c_QGraphicsRectItem_new_rect_parent(rect: *const ::qt_core::rect_f::RectF, parent: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_rect_item::GraphicsRectItem;
  pub fn qt_widgets_c_QGraphicsRectItem_new_x_y_w_h(x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double) -> *mut ::graphics_rect_item::GraphicsRectItem;
  pub fn qt_widgets_c_QGraphicsRectItem_new_x_y_w_h_parent(x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, parent: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_rect_item::GraphicsRectItem;
  pub fn qt_widgets_c_QGraphicsRectItem_opaqueArea_to_output(this_ptr: *const ::graphics_rect_item::GraphicsRectItem, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsRectItem_paint_painter_option(this_ptr: *mut ::graphics_rect_item::GraphicsRectItem, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_graphics_item::StyleOptionGraphicsItem);
  pub fn qt_widgets_c_QGraphicsRectItem_paint_painter_option_widget(this_ptr: *mut ::graphics_rect_item::GraphicsRectItem, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_graphics_item::StyleOptionGraphicsItem, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QGraphicsRectItem_rect_to_output(this_ptr: *const ::graphics_rect_item::GraphicsRectItem, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsRectItem_setRect_rect(this_ptr: *mut ::graphics_rect_item::GraphicsRectItem, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsRectItem_setRect_x_y_w_h(this_ptr: *mut ::graphics_rect_item::GraphicsRectItem, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsRectItem_shape_to_output(this_ptr: *const ::graphics_rect_item::GraphicsRectItem, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsRectItem_type(this_ptr: *const ::graphics_rect_item::GraphicsRectItem) -> ::libc::c_int;

  // Header: QGraphicsRotation
  pub fn qt_widgets_c_QGraphicsRotation_G_dynamic_cast_QGraphicsRotation_ptr(ptr: *mut ::graphics_transform::GraphicsTransform) -> *mut ::graphics_rotation::GraphicsRotation;
  pub fn qt_widgets_c_QGraphicsRotation_G_static_cast_QGraphicsRotation_ptr_QGraphicsTransform(ptr: *mut ::graphics_transform::GraphicsTransform) -> *mut ::graphics_rotation::GraphicsRotation;
  pub fn qt_widgets_c_QGraphicsRotation_G_static_cast_QGraphicsRotation_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::graphics_rotation::GraphicsRotation;
  pub fn qt_widgets_c_QGraphicsRotation_G_static_cast_QGraphicsTransform_ptr(ptr: *mut ::graphics_rotation::GraphicsRotation) -> *mut ::graphics_transform::GraphicsTransform;
  pub fn qt_widgets_c_QGraphicsRotation_G_static_cast_QObject_ptr(ptr: *mut ::graphics_rotation::GraphicsRotation) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QGraphicsRotation_angle(this_ptr: *const ::graphics_rotation::GraphicsRotation) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsRotation_applyTo(this_ptr: *const ::graphics_rotation::GraphicsRotation, matrix: *mut ::qt_gui::matrix_4x4::Matrix4X4);
  pub fn qt_widgets_c_QGraphicsRotation_axis_as_ptr(this_ptr: *const ::graphics_rotation::GraphicsRotation) -> *mut ::qt_gui::vector_3d::Vector3D;
  pub fn qt_widgets_c_QGraphicsRotation_delete(this_ptr: *mut ::graphics_rotation::GraphicsRotation);
  pub fn qt_widgets_c_QGraphicsRotation_metaObject(this_ptr: *const ::graphics_rotation::GraphicsRotation) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QGraphicsRotation_new_no_args() -> *mut ::graphics_rotation::GraphicsRotation;
  pub fn qt_widgets_c_QGraphicsRotation_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::graphics_rotation::GraphicsRotation;
  pub fn qt_widgets_c_QGraphicsRotation_origin_as_ptr(this_ptr: *const ::graphics_rotation::GraphicsRotation) -> *mut ::qt_gui::vector_3d::Vector3D;
  pub fn qt_widgets_c_QGraphicsRotation_qt_metacall(this_ptr: *mut ::graphics_rotation::GraphicsRotation, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsRotation_qt_metacast(this_ptr: *mut ::graphics_rotation::GraphicsRotation, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QGraphicsRotation_setAngle(this_ptr: *mut ::graphics_rotation::GraphicsRotation, arg1: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsRotation_setAxis_QVector3D(this_ptr: *mut ::graphics_rotation::GraphicsRotation, axis: *const ::qt_gui::vector_3d::Vector3D);
  pub fn qt_widgets_c_QGraphicsRotation_setAxis_Qt_Axis(this_ptr: *mut ::graphics_rotation::GraphicsRotation, axis: *const ::qt_core::qt::Axis);
  pub fn qt_widgets_c_QGraphicsRotation_setOrigin(this_ptr: *mut ::graphics_rotation::GraphicsRotation, point: *const ::qt_gui::vector_3d::Vector3D);
  pub fn qt_widgets_c_QGraphicsRotation_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsRotation_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QGraphicsScale
  pub fn qt_widgets_c_QGraphicsScale_G_dynamic_cast_QGraphicsScale_ptr(ptr: *mut ::graphics_transform::GraphicsTransform) -> *mut ::graphics_scale::GraphicsScale;
  pub fn qt_widgets_c_QGraphicsScale_G_static_cast_QGraphicsScale_ptr_QGraphicsTransform(ptr: *mut ::graphics_transform::GraphicsTransform) -> *mut ::graphics_scale::GraphicsScale;
  pub fn qt_widgets_c_QGraphicsScale_G_static_cast_QGraphicsScale_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::graphics_scale::GraphicsScale;
  pub fn qt_widgets_c_QGraphicsScale_G_static_cast_QGraphicsTransform_ptr(ptr: *mut ::graphics_scale::GraphicsScale) -> *mut ::graphics_transform::GraphicsTransform;
  pub fn qt_widgets_c_QGraphicsScale_G_static_cast_QObject_ptr(ptr: *mut ::graphics_scale::GraphicsScale) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QGraphicsScale_applyTo(this_ptr: *const ::graphics_scale::GraphicsScale, matrix: *mut ::qt_gui::matrix_4x4::Matrix4X4);
  pub fn qt_widgets_c_QGraphicsScale_delete(this_ptr: *mut ::graphics_scale::GraphicsScale);
  pub fn qt_widgets_c_QGraphicsScale_metaObject(this_ptr: *const ::graphics_scale::GraphicsScale) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QGraphicsScale_new_no_args() -> *mut ::graphics_scale::GraphicsScale;
  pub fn qt_widgets_c_QGraphicsScale_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::graphics_scale::GraphicsScale;
  pub fn qt_widgets_c_QGraphicsScale_origin_as_ptr(this_ptr: *const ::graphics_scale::GraphicsScale) -> *mut ::qt_gui::vector_3d::Vector3D;
  pub fn qt_widgets_c_QGraphicsScale_qt_metacall(this_ptr: *mut ::graphics_scale::GraphicsScale, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsScale_qt_metacast(this_ptr: *mut ::graphics_scale::GraphicsScale, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QGraphicsScale_setOrigin(this_ptr: *mut ::graphics_scale::GraphicsScale, point: *const ::qt_gui::vector_3d::Vector3D);
  pub fn qt_widgets_c_QGraphicsScale_setXScale(this_ptr: *mut ::graphics_scale::GraphicsScale, arg1: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsScale_setYScale(this_ptr: *mut ::graphics_scale::GraphicsScale, arg1: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsScale_setZScale(this_ptr: *mut ::graphics_scale::GraphicsScale, arg1: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsScale_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsScale_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsScale_xScale(this_ptr: *const ::graphics_scale::GraphicsScale) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsScale_yScale(this_ptr: *const ::graphics_scale::GraphicsScale) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsScale_zScale(this_ptr: *const ::graphics_scale::GraphicsScale) -> ::libc::c_double;

  // Header: QGraphicsScene
  pub fn qt_widgets_c_QGraphicsScene_G_static_cast_QGraphicsScene_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::graphics_scene::GraphicsScene;
  pub fn qt_widgets_c_QGraphicsScene_G_static_cast_QObject_ptr(ptr: *mut ::graphics_scene::GraphicsScene) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QGraphicsScene_activePanel(this_ptr: *const ::graphics_scene::GraphicsScene) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsScene_activeWindow(this_ptr: *const ::graphics_scene::GraphicsScene) -> *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QGraphicsScene_addEllipse_rect(this_ptr: *mut ::graphics_scene::GraphicsScene, rect: *const ::qt_core::rect_f::RectF) -> *mut ::graphics_ellipse_item::GraphicsEllipseItem;
  pub fn qt_widgets_c_QGraphicsScene_addEllipse_rect_pen(this_ptr: *mut ::graphics_scene::GraphicsScene, rect: *const ::qt_core::rect_f::RectF, pen: *const ::qt_gui::pen::Pen) -> *mut ::graphics_ellipse_item::GraphicsEllipseItem;
  pub fn qt_widgets_c_QGraphicsScene_addEllipse_rect_pen_brush(this_ptr: *mut ::graphics_scene::GraphicsScene, rect: *const ::qt_core::rect_f::RectF, pen: *const ::qt_gui::pen::Pen, brush: *const ::qt_gui::brush::Brush) -> *mut ::graphics_ellipse_item::GraphicsEllipseItem;
  pub fn qt_widgets_c_QGraphicsScene_addEllipse_x_y_w_h(this_ptr: *mut ::graphics_scene::GraphicsScene, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double) -> *mut ::graphics_ellipse_item::GraphicsEllipseItem;
  pub fn qt_widgets_c_QGraphicsScene_addEllipse_x_y_w_h_pen(this_ptr: *mut ::graphics_scene::GraphicsScene, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, pen: *const ::qt_gui::pen::Pen) -> *mut ::graphics_ellipse_item::GraphicsEllipseItem;
  pub fn qt_widgets_c_QGraphicsScene_addEllipse_x_y_w_h_pen_brush(this_ptr: *mut ::graphics_scene::GraphicsScene, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, pen: *const ::qt_gui::pen::Pen, brush: *const ::qt_gui::brush::Brush) -> *mut ::graphics_ellipse_item::GraphicsEllipseItem;
  pub fn qt_widgets_c_QGraphicsScene_addItem(this_ptr: *mut ::graphics_scene::GraphicsScene, item: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsScene_addLine_line(this_ptr: *mut ::graphics_scene::GraphicsScene, line: *const ::qt_core::line_f::LineF) -> *mut ::graphics_line_item::GraphicsLineItem;
  pub fn qt_widgets_c_QGraphicsScene_addLine_line_pen(this_ptr: *mut ::graphics_scene::GraphicsScene, line: *const ::qt_core::line_f::LineF, pen: *const ::qt_gui::pen::Pen) -> *mut ::graphics_line_item::GraphicsLineItem;
  pub fn qt_widgets_c_QGraphicsScene_addLine_x1_y1_x2_y2(this_ptr: *mut ::graphics_scene::GraphicsScene, x1: ::libc::c_double, y1: ::libc::c_double, x2: ::libc::c_double, y2: ::libc::c_double) -> *mut ::graphics_line_item::GraphicsLineItem;
  pub fn qt_widgets_c_QGraphicsScene_addLine_x1_y1_x2_y2_pen(this_ptr: *mut ::graphics_scene::GraphicsScene, x1: ::libc::c_double, y1: ::libc::c_double, x2: ::libc::c_double, y2: ::libc::c_double, pen: *const ::qt_gui::pen::Pen) -> *mut ::graphics_line_item::GraphicsLineItem;
  pub fn qt_widgets_c_QGraphicsScene_addPath_path(this_ptr: *mut ::graphics_scene::GraphicsScene, path: *const ::qt_gui::painter_path::PainterPath) -> *mut ::graphics_path_item::GraphicsPathItem;
  pub fn qt_widgets_c_QGraphicsScene_addPath_path_pen(this_ptr: *mut ::graphics_scene::GraphicsScene, path: *const ::qt_gui::painter_path::PainterPath, pen: *const ::qt_gui::pen::Pen) -> *mut ::graphics_path_item::GraphicsPathItem;
  pub fn qt_widgets_c_QGraphicsScene_addPath_path_pen_brush(this_ptr: *mut ::graphics_scene::GraphicsScene, path: *const ::qt_gui::painter_path::PainterPath, pen: *const ::qt_gui::pen::Pen, brush: *const ::qt_gui::brush::Brush) -> *mut ::graphics_path_item::GraphicsPathItem;
  pub fn qt_widgets_c_QGraphicsScene_addPixmap(this_ptr: *mut ::graphics_scene::GraphicsScene, pixmap: *const ::qt_gui::pixmap::Pixmap) -> *mut ::graphics_pixmap_item::GraphicsPixmapItem;
  pub fn qt_widgets_c_QGraphicsScene_addPolygon_polygon(this_ptr: *mut ::graphics_scene::GraphicsScene, polygon: *const ::qt_gui::polygon_f::PolygonF) -> *mut ::graphics_polygon_item::GraphicsPolygonItem;
  pub fn qt_widgets_c_QGraphicsScene_addPolygon_polygon_pen(this_ptr: *mut ::graphics_scene::GraphicsScene, polygon: *const ::qt_gui::polygon_f::PolygonF, pen: *const ::qt_gui::pen::Pen) -> *mut ::graphics_polygon_item::GraphicsPolygonItem;
  pub fn qt_widgets_c_QGraphicsScene_addPolygon_polygon_pen_brush(this_ptr: *mut ::graphics_scene::GraphicsScene, polygon: *const ::qt_gui::polygon_f::PolygonF, pen: *const ::qt_gui::pen::Pen, brush: *const ::qt_gui::brush::Brush) -> *mut ::graphics_polygon_item::GraphicsPolygonItem;
  pub fn qt_widgets_c_QGraphicsScene_addRect_rect(this_ptr: *mut ::graphics_scene::GraphicsScene, rect: *const ::qt_core::rect_f::RectF) -> *mut ::graphics_rect_item::GraphicsRectItem;
  pub fn qt_widgets_c_QGraphicsScene_addRect_rect_pen(this_ptr: *mut ::graphics_scene::GraphicsScene, rect: *const ::qt_core::rect_f::RectF, pen: *const ::qt_gui::pen::Pen) -> *mut ::graphics_rect_item::GraphicsRectItem;
  pub fn qt_widgets_c_QGraphicsScene_addRect_rect_pen_brush(this_ptr: *mut ::graphics_scene::GraphicsScene, rect: *const ::qt_core::rect_f::RectF, pen: *const ::qt_gui::pen::Pen, brush: *const ::qt_gui::brush::Brush) -> *mut ::graphics_rect_item::GraphicsRectItem;
  pub fn qt_widgets_c_QGraphicsScene_addRect_x_y_w_h(this_ptr: *mut ::graphics_scene::GraphicsScene, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double) -> *mut ::graphics_rect_item::GraphicsRectItem;
  pub fn qt_widgets_c_QGraphicsScene_addRect_x_y_w_h_pen(this_ptr: *mut ::graphics_scene::GraphicsScene, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, pen: *const ::qt_gui::pen::Pen) -> *mut ::graphics_rect_item::GraphicsRectItem;
  pub fn qt_widgets_c_QGraphicsScene_addRect_x_y_w_h_pen_brush(this_ptr: *mut ::graphics_scene::GraphicsScene, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, pen: *const ::qt_gui::pen::Pen, brush: *const ::qt_gui::brush::Brush) -> *mut ::graphics_rect_item::GraphicsRectItem;
  pub fn qt_widgets_c_QGraphicsScene_addSimpleText_text(this_ptr: *mut ::graphics_scene::GraphicsScene, text: *const ::qt_core::string::String) -> *mut ::graphics_simple_text_item::GraphicsSimpleTextItem;
  pub fn qt_widgets_c_QGraphicsScene_addSimpleText_text_font(this_ptr: *mut ::graphics_scene::GraphicsScene, text: *const ::qt_core::string::String, font: *const ::qt_gui::font::Font) -> *mut ::graphics_simple_text_item::GraphicsSimpleTextItem;
  pub fn qt_widgets_c_QGraphicsScene_addText_text(this_ptr: *mut ::graphics_scene::GraphicsScene, text: *const ::qt_core::string::String) -> *mut ::graphics_text_item::GraphicsTextItem;
  pub fn qt_widgets_c_QGraphicsScene_addText_text_font(this_ptr: *mut ::graphics_scene::GraphicsScene, text: *const ::qt_core::string::String, font: *const ::qt_gui::font::Font) -> *mut ::graphics_text_item::GraphicsTextItem;
  pub fn qt_widgets_c_QGraphicsScene_advance(this_ptr: *mut ::graphics_scene::GraphicsScene);
  pub fn qt_widgets_c_QGraphicsScene_backgroundBrush_to_output(this_ptr: *const ::graphics_scene::GraphicsScene, output: *mut ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QGraphicsScene_bspTreeDepth(this_ptr: *const ::graphics_scene::GraphicsScene) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsScene_clear(this_ptr: *mut ::graphics_scene::GraphicsScene);
  pub fn qt_widgets_c_QGraphicsScene_clearFocus(this_ptr: *mut ::graphics_scene::GraphicsScene);
  pub fn qt_widgets_c_QGraphicsScene_clearSelection(this_ptr: *mut ::graphics_scene::GraphicsScene);
  pub fn qt_widgets_c_QGraphicsScene_collidingItems_to_output_item(this_ptr: *const ::graphics_scene::GraphicsScene, item: *const ::graphics_item::GraphicsItem, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsScene_collidingItems_to_output_item_mode(this_ptr: *const ::graphics_scene::GraphicsScene, item: *const ::graphics_item::GraphicsItem, mode: *const ::qt_core::qt::ItemSelectionMode, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsScene_createItemGroup(this_ptr: *mut ::graphics_scene::GraphicsScene, items: *const ::list::ListGraphicsItemMutPtr) -> *mut ::graphics_item_group::GraphicsItemGroup;
  pub fn qt_widgets_c_QGraphicsScene_delete(this_ptr: *mut ::graphics_scene::GraphicsScene);
  pub fn qt_widgets_c_QGraphicsScene_destroyItemGroup(this_ptr: *mut ::graphics_scene::GraphicsScene, group: *mut ::graphics_item_group::GraphicsItemGroup);
  pub fn qt_widgets_c_QGraphicsScene_focusItem(this_ptr: *const ::graphics_scene::GraphicsScene) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsScene_font_to_output(this_ptr: *const ::graphics_scene::GraphicsScene, output: *mut ::qt_gui::font::Font);
  pub fn qt_widgets_c_QGraphicsScene_foregroundBrush_to_output(this_ptr: *const ::graphics_scene::GraphicsScene, output: *mut ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QGraphicsScene_hasFocus(this_ptr: *const ::graphics_scene::GraphicsScene) -> bool;
  pub fn qt_widgets_c_QGraphicsScene_height(this_ptr: *const ::graphics_scene::GraphicsScene) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsScene_inputMethodQuery_to_output(this_ptr: *const ::graphics_scene::GraphicsScene, query: *const ::qt_core::qt::InputMethodQuery, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QGraphicsScene_invalidate_no_args(this_ptr: *mut ::graphics_scene::GraphicsScene);
  pub fn qt_widgets_c_QGraphicsScene_invalidate_rect(this_ptr: *mut ::graphics_scene::GraphicsScene, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsScene_invalidate_rect_layers(this_ptr: *mut ::graphics_scene::GraphicsScene, rect: *const ::qt_core::rect_f::RectF, layers: ::libc::c_uint);
  pub fn qt_widgets_c_QGraphicsScene_invalidate_x_y_w_h(this_ptr: *mut ::graphics_scene::GraphicsScene, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsScene_invalidate_x_y_w_h_layers(this_ptr: *mut ::graphics_scene::GraphicsScene, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, layers: ::libc::c_uint);
  pub fn qt_widgets_c_QGraphicsScene_isActive(this_ptr: *const ::graphics_scene::GraphicsScene) -> bool;
  pub fn qt_widgets_c_QGraphicsScene_isSortCacheEnabled(this_ptr: *const ::graphics_scene::GraphicsScene) -> bool;
  pub fn qt_widgets_c_QGraphicsScene_itemAt_pos_deviceTransform(this_ptr: *const ::graphics_scene::GraphicsScene, pos: *const ::qt_core::point_f::PointF, deviceTransform: *const ::qt_gui::transform::Transform) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsScene_itemAt_x_y_deviceTransform(this_ptr: *const ::graphics_scene::GraphicsScene, x: ::libc::c_double, y: ::libc::c_double, deviceTransform: *const ::qt_gui::transform::Transform) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsScene_itemIndexMethod(this_ptr: *const ::graphics_scene::GraphicsScene) -> ::graphics_scene::ItemIndexMethod;
  pub fn qt_widgets_c_QGraphicsScene_itemsBoundingRect_to_output(this_ptr: *const ::graphics_scene::GraphicsScene, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsScene_items_to_output_no_args(this_ptr: *const ::graphics_scene::GraphicsScene, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsScene_items_to_output_order(this_ptr: *const ::graphics_scene::GraphicsScene, order: *const ::qt_core::qt::SortOrder, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsScene_items_to_output_path(this_ptr: *const ::graphics_scene::GraphicsScene, path: *const ::qt_gui::painter_path::PainterPath, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsScene_items_to_output_path_mode(this_ptr: *const ::graphics_scene::GraphicsScene, path: *const ::qt_gui::painter_path::PainterPath, mode: *const ::qt_core::qt::ItemSelectionMode, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsScene_items_to_output_path_mode_order(this_ptr: *const ::graphics_scene::GraphicsScene, path: *const ::qt_gui::painter_path::PainterPath, mode: *const ::qt_core::qt::ItemSelectionMode, order: *const ::qt_core::qt::SortOrder, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsScene_items_to_output_path_mode_order_deviceTransform(this_ptr: *const ::graphics_scene::GraphicsScene, path: *const ::qt_gui::painter_path::PainterPath, mode: *const ::qt_core::qt::ItemSelectionMode, order: *const ::qt_core::qt::SortOrder, deviceTransform: *const ::qt_gui::transform::Transform, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsScene_items_to_output_polygon(this_ptr: *const ::graphics_scene::GraphicsScene, polygon: *const ::qt_gui::polygon_f::PolygonF, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsScene_items_to_output_polygon_mode(this_ptr: *const ::graphics_scene::GraphicsScene, polygon: *const ::qt_gui::polygon_f::PolygonF, mode: *const ::qt_core::qt::ItemSelectionMode, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsScene_items_to_output_polygon_mode_order(this_ptr: *const ::graphics_scene::GraphicsScene, polygon: *const ::qt_gui::polygon_f::PolygonF, mode: *const ::qt_core::qt::ItemSelectionMode, order: *const ::qt_core::qt::SortOrder, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsScene_items_to_output_polygon_mode_order_deviceTransform(this_ptr: *const ::graphics_scene::GraphicsScene, polygon: *const ::qt_gui::polygon_f::PolygonF, mode: *const ::qt_core::qt::ItemSelectionMode, order: *const ::qt_core::qt::SortOrder, deviceTransform: *const ::qt_gui::transform::Transform, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsScene_items_to_output_pos(this_ptr: *const ::graphics_scene::GraphicsScene, pos: *const ::qt_core::point_f::PointF, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsScene_items_to_output_pos_mode(this_ptr: *const ::graphics_scene::GraphicsScene, pos: *const ::qt_core::point_f::PointF, mode: *const ::qt_core::qt::ItemSelectionMode, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsScene_items_to_output_pos_mode_order(this_ptr: *const ::graphics_scene::GraphicsScene, pos: *const ::qt_core::point_f::PointF, mode: *const ::qt_core::qt::ItemSelectionMode, order: *const ::qt_core::qt::SortOrder, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsScene_items_to_output_pos_mode_order_deviceTransform(this_ptr: *const ::graphics_scene::GraphicsScene, pos: *const ::qt_core::point_f::PointF, mode: *const ::qt_core::qt::ItemSelectionMode, order: *const ::qt_core::qt::SortOrder, deviceTransform: *const ::qt_gui::transform::Transform, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsScene_items_to_output_rect(this_ptr: *const ::graphics_scene::GraphicsScene, rect: *const ::qt_core::rect_f::RectF, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsScene_items_to_output_rect_mode(this_ptr: *const ::graphics_scene::GraphicsScene, rect: *const ::qt_core::rect_f::RectF, mode: *const ::qt_core::qt::ItemSelectionMode, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsScene_items_to_output_rect_mode_order(this_ptr: *const ::graphics_scene::GraphicsScene, rect: *const ::qt_core::rect_f::RectF, mode: *const ::qt_core::qt::ItemSelectionMode, order: *const ::qt_core::qt::SortOrder, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsScene_items_to_output_rect_mode_order_deviceTransform(this_ptr: *const ::graphics_scene::GraphicsScene, rect: *const ::qt_core::rect_f::RectF, mode: *const ::qt_core::qt::ItemSelectionMode, order: *const ::qt_core::qt::SortOrder, deviceTransform: *const ::qt_gui::transform::Transform, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsScene_items_to_output_x_y_w_h_mode_order(this_ptr: *const ::graphics_scene::GraphicsScene, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, mode: *const ::qt_core::qt::ItemSelectionMode, order: *const ::qt_core::qt::SortOrder, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsScene_items_to_output_x_y_w_h_mode_order_deviceTransform(this_ptr: *const ::graphics_scene::GraphicsScene, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, mode: *const ::qt_core::qt::ItemSelectionMode, order: *const ::qt_core::qt::SortOrder, deviceTransform: *const ::qt_gui::transform::Transform, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsScene_metaObject(this_ptr: *const ::graphics_scene::GraphicsScene) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QGraphicsScene_minimumRenderSize(this_ptr: *const ::graphics_scene::GraphicsScene) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsScene_mouseGrabberItem(this_ptr: *const ::graphics_scene::GraphicsScene) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsScene_new_no_args() -> *mut ::graphics_scene::GraphicsScene;
  pub fn qt_widgets_c_QGraphicsScene_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::graphics_scene::GraphicsScene;
  pub fn qt_widgets_c_QGraphicsScene_new_sceneRect(sceneRect: *const ::qt_core::rect_f::RectF) -> *mut ::graphics_scene::GraphicsScene;
  pub fn qt_widgets_c_QGraphicsScene_new_sceneRect_parent(sceneRect: *const ::qt_core::rect_f::RectF, parent: *mut ::qt_core::object::Object) -> *mut ::graphics_scene::GraphicsScene;
  pub fn qt_widgets_c_QGraphicsScene_new_x_y_width_height(x: ::libc::c_double, y: ::libc::c_double, width: ::libc::c_double, height: ::libc::c_double) -> *mut ::graphics_scene::GraphicsScene;
  pub fn qt_widgets_c_QGraphicsScene_new_x_y_width_height_parent(x: ::libc::c_double, y: ::libc::c_double, width: ::libc::c_double, height: ::libc::c_double, parent: *mut ::qt_core::object::Object) -> *mut ::graphics_scene::GraphicsScene;
  pub fn qt_widgets_c_QGraphicsScene_palette_to_output(this_ptr: *const ::graphics_scene::GraphicsScene, output: *mut ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QGraphicsScene_qt_metacall(this_ptr: *mut ::graphics_scene::GraphicsScene, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsScene_qt_metacast(this_ptr: *mut ::graphics_scene::GraphicsScene, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QGraphicsScene_removeItem(this_ptr: *mut ::graphics_scene::GraphicsScene, item: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsScene_render_painter(this_ptr: *mut ::graphics_scene::GraphicsScene, painter: *mut ::qt_gui::painter::Painter);
  pub fn qt_widgets_c_QGraphicsScene_render_painter_target(this_ptr: *mut ::graphics_scene::GraphicsScene, painter: *mut ::qt_gui::painter::Painter, target: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsScene_render_painter_target_source(this_ptr: *mut ::graphics_scene::GraphicsScene, painter: *mut ::qt_gui::painter::Painter, target: *const ::qt_core::rect_f::RectF, source: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsScene_render_painter_target_source_aspectRatioMode(this_ptr: *mut ::graphics_scene::GraphicsScene, painter: *mut ::qt_gui::painter::Painter, target: *const ::qt_core::rect_f::RectF, source: *const ::qt_core::rect_f::RectF, aspectRatioMode: *const ::qt_core::qt::AspectRatioMode);
  pub fn qt_widgets_c_QGraphicsScene_sceneRect_to_output(this_ptr: *const ::graphics_scene::GraphicsScene, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsScene_selectedItems_to_output(this_ptr: *const ::graphics_scene::GraphicsScene, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsScene_selectionArea_to_output(this_ptr: *const ::graphics_scene::GraphicsScene, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsScene_sendEvent(this_ptr: *mut ::graphics_scene::GraphicsScene, item: *mut ::graphics_item::GraphicsItem, event: *mut ::qt_core::event::Event) -> bool;
  pub fn qt_widgets_c_QGraphicsScene_setActivePanel(this_ptr: *mut ::graphics_scene::GraphicsScene, item: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsScene_setActiveWindow(this_ptr: *mut ::graphics_scene::GraphicsScene, widget: *mut ::graphics_widget::GraphicsWidget);
  pub fn qt_widgets_c_QGraphicsScene_setBackgroundBrush(this_ptr: *mut ::graphics_scene::GraphicsScene, brush: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QGraphicsScene_setBspTreeDepth(this_ptr: *mut ::graphics_scene::GraphicsScene, depth: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsScene_setFocusItem_item(this_ptr: *mut ::graphics_scene::GraphicsScene, item: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsScene_setFocusItem_item_focusReason(this_ptr: *mut ::graphics_scene::GraphicsScene, item: *mut ::graphics_item::GraphicsItem, focusReason: *const ::qt_core::qt::FocusReason);
  pub fn qt_widgets_c_QGraphicsScene_setFocus_focusReason(this_ptr: *mut ::graphics_scene::GraphicsScene, focusReason: *const ::qt_core::qt::FocusReason);
  pub fn qt_widgets_c_QGraphicsScene_setFocus_no_args(this_ptr: *mut ::graphics_scene::GraphicsScene);
  pub fn qt_widgets_c_QGraphicsScene_setFont(this_ptr: *mut ::graphics_scene::GraphicsScene, font: *const ::qt_gui::font::Font);
  pub fn qt_widgets_c_QGraphicsScene_setForegroundBrush(this_ptr: *mut ::graphics_scene::GraphicsScene, brush: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QGraphicsScene_setItemIndexMethod(this_ptr: *mut ::graphics_scene::GraphicsScene, method: ::graphics_scene::ItemIndexMethod);
  pub fn qt_widgets_c_QGraphicsScene_setMinimumRenderSize(this_ptr: *mut ::graphics_scene::GraphicsScene, minSize: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsScene_setPalette(this_ptr: *mut ::graphics_scene::GraphicsScene, palette: *const ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QGraphicsScene_setSceneRect_rect(this_ptr: *mut ::graphics_scene::GraphicsScene, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsScene_setSceneRect_x_y_w_h(this_ptr: *mut ::graphics_scene::GraphicsScene, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsScene_setSelectionArea_path(this_ptr: *mut ::graphics_scene::GraphicsScene, path: *const ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsScene_setSelectionArea_path_deviceTransform(this_ptr: *mut ::graphics_scene::GraphicsScene, path: *const ::qt_gui::painter_path::PainterPath, deviceTransform: *const ::qt_gui::transform::Transform);
  pub fn qt_widgets_c_QGraphicsScene_setSelectionArea_path_mode(this_ptr: *mut ::graphics_scene::GraphicsScene, path: *const ::qt_gui::painter_path::PainterPath, mode: *const ::qt_core::qt::ItemSelectionMode);
  pub fn qt_widgets_c_QGraphicsScene_setSelectionArea_path_mode_deviceTransform(this_ptr: *mut ::graphics_scene::GraphicsScene, path: *const ::qt_gui::painter_path::PainterPath, mode: *const ::qt_core::qt::ItemSelectionMode, deviceTransform: *const ::qt_gui::transform::Transform);
  pub fn qt_widgets_c_QGraphicsScene_setSelectionArea_path_selectionOperation(this_ptr: *mut ::graphics_scene::GraphicsScene, path: *const ::qt_gui::painter_path::PainterPath, selectionOperation: *const ::qt_core::qt::ItemSelectionOperation);
  pub fn qt_widgets_c_QGraphicsScene_setSelectionArea_path_selectionOperation_mode(this_ptr: *mut ::graphics_scene::GraphicsScene, path: *const ::qt_gui::painter_path::PainterPath, selectionOperation: *const ::qt_core::qt::ItemSelectionOperation, mode: *const ::qt_core::qt::ItemSelectionMode);
  pub fn qt_widgets_c_QGraphicsScene_setSelectionArea_path_selectionOperation_mode_deviceTransform(this_ptr: *mut ::graphics_scene::GraphicsScene, path: *const ::qt_gui::painter_path::PainterPath, selectionOperation: *const ::qt_core::qt::ItemSelectionOperation, mode: *const ::qt_core::qt::ItemSelectionMode, deviceTransform: *const ::qt_gui::transform::Transform);
  pub fn qt_widgets_c_QGraphicsScene_setSortCacheEnabled(this_ptr: *mut ::graphics_scene::GraphicsScene, enabled: bool);
  pub fn qt_widgets_c_QGraphicsScene_setStickyFocus(this_ptr: *mut ::graphics_scene::GraphicsScene, enabled: bool);
  pub fn qt_widgets_c_QGraphicsScene_setStyle(this_ptr: *mut ::graphics_scene::GraphicsScene, style: *mut ::style::Style);
  pub fn qt_widgets_c_QGraphicsScene_stickyFocus(this_ptr: *const ::graphics_scene::GraphicsScene) -> bool;
  pub fn qt_widgets_c_QGraphicsScene_style(this_ptr: *const ::graphics_scene::GraphicsScene) -> *mut ::style::Style;
  pub fn qt_widgets_c_QGraphicsScene_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsScene_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsScene_update_no_args(this_ptr: *mut ::graphics_scene::GraphicsScene);
  pub fn qt_widgets_c_QGraphicsScene_update_rect(this_ptr: *mut ::graphics_scene::GraphicsScene, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsScene_update_x_y_w_h(this_ptr: *mut ::graphics_scene::GraphicsScene, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsScene_views_to_output(this_ptr: *const ::graphics_scene::GraphicsScene, output: *mut ::list::ListGraphicsViewMutPtr);
  pub fn qt_widgets_c_QGraphicsScene_width(this_ptr: *const ::graphics_scene::GraphicsScene) -> ::libc::c_double;

  // Header: QGraphicsSceneContextMenuEvent
  pub fn qt_widgets_c_QGraphicsSceneContextMenuEvent_G_dynamic_cast_QGraphicsSceneContextMenuEvent_ptr(ptr: *mut ::graphics_scene_event::GraphicsSceneEvent) -> *mut ::graphics_scene_context_menu_event::GraphicsSceneContextMenuEvent;
  pub fn qt_widgets_c_QGraphicsSceneContextMenuEvent_G_static_cast_QEvent_ptr(ptr: *mut ::graphics_scene_context_menu_event::GraphicsSceneContextMenuEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_widgets_c_QGraphicsSceneContextMenuEvent_G_static_cast_QGraphicsSceneContextMenuEvent_ptr_QEvent(ptr: *mut ::qt_core::event::Event) -> *mut ::graphics_scene_context_menu_event::GraphicsSceneContextMenuEvent;
  pub fn qt_widgets_c_QGraphicsSceneContextMenuEvent_G_static_cast_QGraphicsSceneContextMenuEvent_ptr_QGraphicsSceneEvent(ptr: *mut ::graphics_scene_event::GraphicsSceneEvent) -> *mut ::graphics_scene_context_menu_event::GraphicsSceneContextMenuEvent;
  pub fn qt_widgets_c_QGraphicsSceneContextMenuEvent_G_static_cast_QGraphicsSceneEvent_ptr(ptr: *mut ::graphics_scene_context_menu_event::GraphicsSceneContextMenuEvent) -> *mut ::graphics_scene_event::GraphicsSceneEvent;
  pub fn qt_widgets_c_QGraphicsSceneContextMenuEvent_delete(this_ptr: *mut ::graphics_scene_context_menu_event::GraphicsSceneContextMenuEvent);
  pub fn qt_widgets_c_QGraphicsSceneContextMenuEvent_new_no_args() -> *mut ::graphics_scene_context_menu_event::GraphicsSceneContextMenuEvent;
  pub fn qt_widgets_c_QGraphicsSceneContextMenuEvent_new_type(type_: ::qt_core::event::Type) -> *mut ::graphics_scene_context_menu_event::GraphicsSceneContextMenuEvent;
  pub fn qt_widgets_c_QGraphicsSceneContextMenuEvent_pos_to_output(this_ptr: *const ::graphics_scene_context_menu_event::GraphicsSceneContextMenuEvent, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneContextMenuEvent_reason(this_ptr: *const ::graphics_scene_context_menu_event::GraphicsSceneContextMenuEvent) -> ::graphics_scene_context_menu_event::Reason;
  pub fn qt_widgets_c_QGraphicsSceneContextMenuEvent_scenePos_to_output(this_ptr: *const ::graphics_scene_context_menu_event::GraphicsSceneContextMenuEvent, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneContextMenuEvent_screenPos_to_output(this_ptr: *const ::graphics_scene_context_menu_event::GraphicsSceneContextMenuEvent, output: *mut ::qt_core::point::Point);
  pub fn qt_widgets_c_QGraphicsSceneContextMenuEvent_setPos(this_ptr: *mut ::graphics_scene_context_menu_event::GraphicsSceneContextMenuEvent, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneContextMenuEvent_setReason(this_ptr: *mut ::graphics_scene_context_menu_event::GraphicsSceneContextMenuEvent, reason: ::graphics_scene_context_menu_event::Reason);
  pub fn qt_widgets_c_QGraphicsSceneContextMenuEvent_setScenePos(this_ptr: *mut ::graphics_scene_context_menu_event::GraphicsSceneContextMenuEvent, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneContextMenuEvent_setScreenPos(this_ptr: *mut ::graphics_scene_context_menu_event::GraphicsSceneContextMenuEvent, pos: *const ::qt_core::point::Point);

  // Header: QGraphicsSceneDragDropEvent
  pub fn qt_widgets_c_QGraphicsSceneDragDropEvent_G_dynamic_cast_QGraphicsSceneDragDropEvent_ptr(ptr: *mut ::graphics_scene_event::GraphicsSceneEvent) -> *mut ::graphics_scene_drag_drop_event::GraphicsSceneDragDropEvent;
  pub fn qt_widgets_c_QGraphicsSceneDragDropEvent_G_static_cast_QEvent_ptr(ptr: *mut ::graphics_scene_drag_drop_event::GraphicsSceneDragDropEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_widgets_c_QGraphicsSceneDragDropEvent_G_static_cast_QGraphicsSceneDragDropEvent_ptr_QEvent(ptr: *mut ::qt_core::event::Event) -> *mut ::graphics_scene_drag_drop_event::GraphicsSceneDragDropEvent;
  pub fn qt_widgets_c_QGraphicsSceneDragDropEvent_G_static_cast_QGraphicsSceneDragDropEvent_ptr_QGraphicsSceneEvent(ptr: *mut ::graphics_scene_event::GraphicsSceneEvent) -> *mut ::graphics_scene_drag_drop_event::GraphicsSceneDragDropEvent;
  pub fn qt_widgets_c_QGraphicsSceneDragDropEvent_G_static_cast_QGraphicsSceneEvent_ptr(ptr: *mut ::graphics_scene_drag_drop_event::GraphicsSceneDragDropEvent) -> *mut ::graphics_scene_event::GraphicsSceneEvent;
  pub fn qt_widgets_c_QGraphicsSceneDragDropEvent_acceptProposedAction(this_ptr: *mut ::graphics_scene_drag_drop_event::GraphicsSceneDragDropEvent);
  pub fn qt_widgets_c_QGraphicsSceneDragDropEvent_delete(this_ptr: *mut ::graphics_scene_drag_drop_event::GraphicsSceneDragDropEvent);
  pub fn qt_widgets_c_QGraphicsSceneDragDropEvent_mimeData(this_ptr: *const ::graphics_scene_drag_drop_event::GraphicsSceneDragDropEvent) -> *const ::qt_core::mime_data::MimeData;
  pub fn qt_widgets_c_QGraphicsSceneDragDropEvent_new_no_args() -> *mut ::graphics_scene_drag_drop_event::GraphicsSceneDragDropEvent;
  pub fn qt_widgets_c_QGraphicsSceneDragDropEvent_new_type(type_: ::qt_core::event::Type) -> *mut ::graphics_scene_drag_drop_event::GraphicsSceneDragDropEvent;
  pub fn qt_widgets_c_QGraphicsSceneDragDropEvent_pos_to_output(this_ptr: *const ::graphics_scene_drag_drop_event::GraphicsSceneDragDropEvent, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneDragDropEvent_scenePos_to_output(this_ptr: *const ::graphics_scene_drag_drop_event::GraphicsSceneDragDropEvent, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneDragDropEvent_screenPos_to_output(this_ptr: *const ::graphics_scene_drag_drop_event::GraphicsSceneDragDropEvent, output: *mut ::qt_core::point::Point);
  pub fn qt_widgets_c_QGraphicsSceneDragDropEvent_setDropAction(this_ptr: *mut ::graphics_scene_drag_drop_event::GraphicsSceneDragDropEvent, action: *const ::qt_core::qt::DropAction);
  pub fn qt_widgets_c_QGraphicsSceneDragDropEvent_setMimeData(this_ptr: *mut ::graphics_scene_drag_drop_event::GraphicsSceneDragDropEvent, data: *const ::qt_core::mime_data::MimeData);
  pub fn qt_widgets_c_QGraphicsSceneDragDropEvent_setPos(this_ptr: *mut ::graphics_scene_drag_drop_event::GraphicsSceneDragDropEvent, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneDragDropEvent_setProposedAction(this_ptr: *mut ::graphics_scene_drag_drop_event::GraphicsSceneDragDropEvent, action: *const ::qt_core::qt::DropAction);
  pub fn qt_widgets_c_QGraphicsSceneDragDropEvent_setScenePos(this_ptr: *mut ::graphics_scene_drag_drop_event::GraphicsSceneDragDropEvent, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneDragDropEvent_setScreenPos(this_ptr: *mut ::graphics_scene_drag_drop_event::GraphicsSceneDragDropEvent, pos: *const ::qt_core::point::Point);
  pub fn qt_widgets_c_QGraphicsSceneDragDropEvent_setSource(this_ptr: *mut ::graphics_scene_drag_drop_event::GraphicsSceneDragDropEvent, source: *mut ::widget::Widget);
  pub fn qt_widgets_c_QGraphicsSceneDragDropEvent_source(this_ptr: *const ::graphics_scene_drag_drop_event::GraphicsSceneDragDropEvent) -> *mut ::widget::Widget;

  // Header: QGraphicsSceneEvent
  pub fn qt_widgets_c_QGraphicsSceneEvent_G_static_cast_QEvent_ptr(ptr: *mut ::graphics_scene_event::GraphicsSceneEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_widgets_c_QGraphicsSceneEvent_G_static_cast_QGraphicsSceneEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::graphics_scene_event::GraphicsSceneEvent;
  pub fn qt_widgets_c_QGraphicsSceneEvent_delete(this_ptr: *mut ::graphics_scene_event::GraphicsSceneEvent);
  pub fn qt_widgets_c_QGraphicsSceneEvent_new(type_: ::qt_core::event::Type) -> *mut ::graphics_scene_event::GraphicsSceneEvent;
  pub fn qt_widgets_c_QGraphicsSceneEvent_setWidget(this_ptr: *mut ::graphics_scene_event::GraphicsSceneEvent, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QGraphicsSceneEvent_widget(this_ptr: *const ::graphics_scene_event::GraphicsSceneEvent) -> *mut ::widget::Widget;

  // Header: QGraphicsSceneHelpEvent
  pub fn qt_widgets_c_QGraphicsSceneHelpEvent_G_dynamic_cast_QGraphicsSceneHelpEvent_ptr(ptr: *mut ::graphics_scene_event::GraphicsSceneEvent) -> *mut ::graphics_scene_help_event::GraphicsSceneHelpEvent;
  pub fn qt_widgets_c_QGraphicsSceneHelpEvent_G_static_cast_QEvent_ptr(ptr: *mut ::graphics_scene_help_event::GraphicsSceneHelpEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_widgets_c_QGraphicsSceneHelpEvent_G_static_cast_QGraphicsSceneEvent_ptr(ptr: *mut ::graphics_scene_help_event::GraphicsSceneHelpEvent) -> *mut ::graphics_scene_event::GraphicsSceneEvent;
  pub fn qt_widgets_c_QGraphicsSceneHelpEvent_G_static_cast_QGraphicsSceneHelpEvent_ptr_QEvent(ptr: *mut ::qt_core::event::Event) -> *mut ::graphics_scene_help_event::GraphicsSceneHelpEvent;
  pub fn qt_widgets_c_QGraphicsSceneHelpEvent_G_static_cast_QGraphicsSceneHelpEvent_ptr_QGraphicsSceneEvent(ptr: *mut ::graphics_scene_event::GraphicsSceneEvent) -> *mut ::graphics_scene_help_event::GraphicsSceneHelpEvent;
  pub fn qt_widgets_c_QGraphicsSceneHelpEvent_delete(this_ptr: *mut ::graphics_scene_help_event::GraphicsSceneHelpEvent);
  pub fn qt_widgets_c_QGraphicsSceneHelpEvent_new_no_args() -> *mut ::graphics_scene_help_event::GraphicsSceneHelpEvent;
  pub fn qt_widgets_c_QGraphicsSceneHelpEvent_new_type(type_: ::qt_core::event::Type) -> *mut ::graphics_scene_help_event::GraphicsSceneHelpEvent;
  pub fn qt_widgets_c_QGraphicsSceneHelpEvent_scenePos_to_output(this_ptr: *const ::graphics_scene_help_event::GraphicsSceneHelpEvent, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneHelpEvent_screenPos_to_output(this_ptr: *const ::graphics_scene_help_event::GraphicsSceneHelpEvent, output: *mut ::qt_core::point::Point);
  pub fn qt_widgets_c_QGraphicsSceneHelpEvent_setScenePos(this_ptr: *mut ::graphics_scene_help_event::GraphicsSceneHelpEvent, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneHelpEvent_setScreenPos(this_ptr: *mut ::graphics_scene_help_event::GraphicsSceneHelpEvent, pos: *const ::qt_core::point::Point);

  // Header: QGraphicsSceneHoverEvent
  pub fn qt_widgets_c_QGraphicsSceneHoverEvent_G_dynamic_cast_QGraphicsSceneHoverEvent_ptr(ptr: *mut ::graphics_scene_event::GraphicsSceneEvent) -> *mut ::graphics_scene_hover_event::GraphicsSceneHoverEvent;
  pub fn qt_widgets_c_QGraphicsSceneHoverEvent_G_static_cast_QEvent_ptr(ptr: *mut ::graphics_scene_hover_event::GraphicsSceneHoverEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_widgets_c_QGraphicsSceneHoverEvent_G_static_cast_QGraphicsSceneEvent_ptr(ptr: *mut ::graphics_scene_hover_event::GraphicsSceneHoverEvent) -> *mut ::graphics_scene_event::GraphicsSceneEvent;
  pub fn qt_widgets_c_QGraphicsSceneHoverEvent_G_static_cast_QGraphicsSceneHoverEvent_ptr_QEvent(ptr: *mut ::qt_core::event::Event) -> *mut ::graphics_scene_hover_event::GraphicsSceneHoverEvent;
  pub fn qt_widgets_c_QGraphicsSceneHoverEvent_G_static_cast_QGraphicsSceneHoverEvent_ptr_QGraphicsSceneEvent(ptr: *mut ::graphics_scene_event::GraphicsSceneEvent) -> *mut ::graphics_scene_hover_event::GraphicsSceneHoverEvent;
  pub fn qt_widgets_c_QGraphicsSceneHoverEvent_delete(this_ptr: *mut ::graphics_scene_hover_event::GraphicsSceneHoverEvent);
  pub fn qt_widgets_c_QGraphicsSceneHoverEvent_lastPos_to_output(this_ptr: *const ::graphics_scene_hover_event::GraphicsSceneHoverEvent, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneHoverEvent_lastScenePos_to_output(this_ptr: *const ::graphics_scene_hover_event::GraphicsSceneHoverEvent, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneHoverEvent_lastScreenPos_to_output(this_ptr: *const ::graphics_scene_hover_event::GraphicsSceneHoverEvent, output: *mut ::qt_core::point::Point);
  pub fn qt_widgets_c_QGraphicsSceneHoverEvent_new_no_args() -> *mut ::graphics_scene_hover_event::GraphicsSceneHoverEvent;
  pub fn qt_widgets_c_QGraphicsSceneHoverEvent_new_type(type_: ::qt_core::event::Type) -> *mut ::graphics_scene_hover_event::GraphicsSceneHoverEvent;
  pub fn qt_widgets_c_QGraphicsSceneHoverEvent_pos_to_output(this_ptr: *const ::graphics_scene_hover_event::GraphicsSceneHoverEvent, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneHoverEvent_scenePos_to_output(this_ptr: *const ::graphics_scene_hover_event::GraphicsSceneHoverEvent, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneHoverEvent_screenPos_to_output(this_ptr: *const ::graphics_scene_hover_event::GraphicsSceneHoverEvent, output: *mut ::qt_core::point::Point);
  pub fn qt_widgets_c_QGraphicsSceneHoverEvent_setLastPos(this_ptr: *mut ::graphics_scene_hover_event::GraphicsSceneHoverEvent, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneHoverEvent_setLastScenePos(this_ptr: *mut ::graphics_scene_hover_event::GraphicsSceneHoverEvent, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneHoverEvent_setLastScreenPos(this_ptr: *mut ::graphics_scene_hover_event::GraphicsSceneHoverEvent, pos: *const ::qt_core::point::Point);
  pub fn qt_widgets_c_QGraphicsSceneHoverEvent_setPos(this_ptr: *mut ::graphics_scene_hover_event::GraphicsSceneHoverEvent, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneHoverEvent_setScenePos(this_ptr: *mut ::graphics_scene_hover_event::GraphicsSceneHoverEvent, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneHoverEvent_setScreenPos(this_ptr: *mut ::graphics_scene_hover_event::GraphicsSceneHoverEvent, pos: *const ::qt_core::point::Point);

  // Header: QGraphicsSceneMouseEvent
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_G_dynamic_cast_QGraphicsSceneMouseEvent_ptr(ptr: *mut ::graphics_scene_event::GraphicsSceneEvent) -> *mut ::graphics_scene_mouse_event::GraphicsSceneMouseEvent;
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_G_static_cast_QEvent_ptr(ptr: *mut ::graphics_scene_mouse_event::GraphicsSceneMouseEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_G_static_cast_QGraphicsSceneEvent_ptr(ptr: *mut ::graphics_scene_mouse_event::GraphicsSceneMouseEvent) -> *mut ::graphics_scene_event::GraphicsSceneEvent;
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_G_static_cast_QGraphicsSceneMouseEvent_ptr_QEvent(ptr: *mut ::qt_core::event::Event) -> *mut ::graphics_scene_mouse_event::GraphicsSceneMouseEvent;
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_G_static_cast_QGraphicsSceneMouseEvent_ptr_QGraphicsSceneEvent(ptr: *mut ::graphics_scene_event::GraphicsSceneEvent) -> *mut ::graphics_scene_mouse_event::GraphicsSceneMouseEvent;
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_buttonDownPos_to_output(this_ptr: *const ::graphics_scene_mouse_event::GraphicsSceneMouseEvent, button: *const ::qt_core::qt::MouseButton, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_buttonDownScenePos_to_output(this_ptr: *const ::graphics_scene_mouse_event::GraphicsSceneMouseEvent, button: *const ::qt_core::qt::MouseButton, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_buttonDownScreenPos_to_output(this_ptr: *const ::graphics_scene_mouse_event::GraphicsSceneMouseEvent, button: *const ::qt_core::qt::MouseButton, output: *mut ::qt_core::point::Point);
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_delete(this_ptr: *mut ::graphics_scene_mouse_event::GraphicsSceneMouseEvent);
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_lastPos_to_output(this_ptr: *const ::graphics_scene_mouse_event::GraphicsSceneMouseEvent, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_lastScenePos_to_output(this_ptr: *const ::graphics_scene_mouse_event::GraphicsSceneMouseEvent, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_lastScreenPos_to_output(this_ptr: *const ::graphics_scene_mouse_event::GraphicsSceneMouseEvent, output: *mut ::qt_core::point::Point);
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_new_no_args() -> *mut ::graphics_scene_mouse_event::GraphicsSceneMouseEvent;
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_new_type(type_: ::qt_core::event::Type) -> *mut ::graphics_scene_mouse_event::GraphicsSceneMouseEvent;
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_pos_to_output(this_ptr: *const ::graphics_scene_mouse_event::GraphicsSceneMouseEvent, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_scenePos_to_output(this_ptr: *const ::graphics_scene_mouse_event::GraphicsSceneMouseEvent, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_screenPos_to_output(this_ptr: *const ::graphics_scene_mouse_event::GraphicsSceneMouseEvent, output: *mut ::qt_core::point::Point);
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_setButton(this_ptr: *mut ::graphics_scene_mouse_event::GraphicsSceneMouseEvent, button: *const ::qt_core::qt::MouseButton);
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_setButtonDownPos(this_ptr: *mut ::graphics_scene_mouse_event::GraphicsSceneMouseEvent, button: *const ::qt_core::qt::MouseButton, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_setButtonDownScenePos(this_ptr: *mut ::graphics_scene_mouse_event::GraphicsSceneMouseEvent, button: *const ::qt_core::qt::MouseButton, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_setButtonDownScreenPos(this_ptr: *mut ::graphics_scene_mouse_event::GraphicsSceneMouseEvent, button: *const ::qt_core::qt::MouseButton, pos: *const ::qt_core::point::Point);
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_setLastPos(this_ptr: *mut ::graphics_scene_mouse_event::GraphicsSceneMouseEvent, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_setLastScenePos(this_ptr: *mut ::graphics_scene_mouse_event::GraphicsSceneMouseEvent, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_setLastScreenPos(this_ptr: *mut ::graphics_scene_mouse_event::GraphicsSceneMouseEvent, pos: *const ::qt_core::point::Point);
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_setPos(this_ptr: *mut ::graphics_scene_mouse_event::GraphicsSceneMouseEvent, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_setScenePos(this_ptr: *mut ::graphics_scene_mouse_event::GraphicsSceneMouseEvent, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_setScreenPos(this_ptr: *mut ::graphics_scene_mouse_event::GraphicsSceneMouseEvent, pos: *const ::qt_core::point::Point);
  pub fn qt_widgets_c_QGraphicsSceneMouseEvent_setSource(this_ptr: *mut ::graphics_scene_mouse_event::GraphicsSceneMouseEvent, source: *const ::qt_core::qt::MouseEventSource);

  // Header: QGraphicsSceneMoveEvent
  pub fn qt_widgets_c_QGraphicsSceneMoveEvent_G_dynamic_cast_QGraphicsSceneMoveEvent_ptr(ptr: *mut ::graphics_scene_event::GraphicsSceneEvent) -> *mut ::graphics_scene_move_event::GraphicsSceneMoveEvent;
  pub fn qt_widgets_c_QGraphicsSceneMoveEvent_G_static_cast_QEvent_ptr(ptr: *mut ::graphics_scene_move_event::GraphicsSceneMoveEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_widgets_c_QGraphicsSceneMoveEvent_G_static_cast_QGraphicsSceneEvent_ptr(ptr: *mut ::graphics_scene_move_event::GraphicsSceneMoveEvent) -> *mut ::graphics_scene_event::GraphicsSceneEvent;
  pub fn qt_widgets_c_QGraphicsSceneMoveEvent_G_static_cast_QGraphicsSceneMoveEvent_ptr_QEvent(ptr: *mut ::qt_core::event::Event) -> *mut ::graphics_scene_move_event::GraphicsSceneMoveEvent;
  pub fn qt_widgets_c_QGraphicsSceneMoveEvent_G_static_cast_QGraphicsSceneMoveEvent_ptr_QGraphicsSceneEvent(ptr: *mut ::graphics_scene_event::GraphicsSceneEvent) -> *mut ::graphics_scene_move_event::GraphicsSceneMoveEvent;
  pub fn qt_widgets_c_QGraphicsSceneMoveEvent_delete(this_ptr: *mut ::graphics_scene_move_event::GraphicsSceneMoveEvent);
  pub fn qt_widgets_c_QGraphicsSceneMoveEvent_new() -> *mut ::graphics_scene_move_event::GraphicsSceneMoveEvent;
  pub fn qt_widgets_c_QGraphicsSceneMoveEvent_newPos_to_output(this_ptr: *const ::graphics_scene_move_event::GraphicsSceneMoveEvent, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneMoveEvent_oldPos_to_output(this_ptr: *const ::graphics_scene_move_event::GraphicsSceneMoveEvent, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneMoveEvent_setNewPos(this_ptr: *mut ::graphics_scene_move_event::GraphicsSceneMoveEvent, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneMoveEvent_setOldPos(this_ptr: *mut ::graphics_scene_move_event::GraphicsSceneMoveEvent, pos: *const ::qt_core::point_f::PointF);

  // Header: QGraphicsSceneResizeEvent
  pub fn qt_widgets_c_QGraphicsSceneResizeEvent_G_dynamic_cast_QGraphicsSceneResizeEvent_ptr(ptr: *mut ::graphics_scene_event::GraphicsSceneEvent) -> *mut ::graphics_scene_resize_event::GraphicsSceneResizeEvent;
  pub fn qt_widgets_c_QGraphicsSceneResizeEvent_G_static_cast_QEvent_ptr(ptr: *mut ::graphics_scene_resize_event::GraphicsSceneResizeEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_widgets_c_QGraphicsSceneResizeEvent_G_static_cast_QGraphicsSceneEvent_ptr(ptr: *mut ::graphics_scene_resize_event::GraphicsSceneResizeEvent) -> *mut ::graphics_scene_event::GraphicsSceneEvent;
  pub fn qt_widgets_c_QGraphicsSceneResizeEvent_G_static_cast_QGraphicsSceneResizeEvent_ptr_QEvent(ptr: *mut ::qt_core::event::Event) -> *mut ::graphics_scene_resize_event::GraphicsSceneResizeEvent;
  pub fn qt_widgets_c_QGraphicsSceneResizeEvent_G_static_cast_QGraphicsSceneResizeEvent_ptr_QGraphicsSceneEvent(ptr: *mut ::graphics_scene_event::GraphicsSceneEvent) -> *mut ::graphics_scene_resize_event::GraphicsSceneResizeEvent;
  pub fn qt_widgets_c_QGraphicsSceneResizeEvent_delete(this_ptr: *mut ::graphics_scene_resize_event::GraphicsSceneResizeEvent);
  pub fn qt_widgets_c_QGraphicsSceneResizeEvent_new() -> *mut ::graphics_scene_resize_event::GraphicsSceneResizeEvent;
  pub fn qt_widgets_c_QGraphicsSceneResizeEvent_newSize_to_output(this_ptr: *const ::graphics_scene_resize_event::GraphicsSceneResizeEvent, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_widgets_c_QGraphicsSceneResizeEvent_oldSize_to_output(this_ptr: *const ::graphics_scene_resize_event::GraphicsSceneResizeEvent, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_widgets_c_QGraphicsSceneResizeEvent_setNewSize(this_ptr: *mut ::graphics_scene_resize_event::GraphicsSceneResizeEvent, size: *const ::qt_core::size_f::SizeF);
  pub fn qt_widgets_c_QGraphicsSceneResizeEvent_setOldSize(this_ptr: *mut ::graphics_scene_resize_event::GraphicsSceneResizeEvent, size: *const ::qt_core::size_f::SizeF);

  // Header: QGraphicsSceneWheelEvent
  pub fn qt_widgets_c_QGraphicsSceneWheelEvent_G_dynamic_cast_QGraphicsSceneWheelEvent_ptr(ptr: *mut ::graphics_scene_event::GraphicsSceneEvent) -> *mut ::graphics_scene_wheel_event::GraphicsSceneWheelEvent;
  pub fn qt_widgets_c_QGraphicsSceneWheelEvent_G_static_cast_QEvent_ptr(ptr: *mut ::graphics_scene_wheel_event::GraphicsSceneWheelEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_widgets_c_QGraphicsSceneWheelEvent_G_static_cast_QGraphicsSceneEvent_ptr(ptr: *mut ::graphics_scene_wheel_event::GraphicsSceneWheelEvent) -> *mut ::graphics_scene_event::GraphicsSceneEvent;
  pub fn qt_widgets_c_QGraphicsSceneWheelEvent_G_static_cast_QGraphicsSceneWheelEvent_ptr_QEvent(ptr: *mut ::qt_core::event::Event) -> *mut ::graphics_scene_wheel_event::GraphicsSceneWheelEvent;
  pub fn qt_widgets_c_QGraphicsSceneWheelEvent_G_static_cast_QGraphicsSceneWheelEvent_ptr_QGraphicsSceneEvent(ptr: *mut ::graphics_scene_event::GraphicsSceneEvent) -> *mut ::graphics_scene_wheel_event::GraphicsSceneWheelEvent;
  pub fn qt_widgets_c_QGraphicsSceneWheelEvent_delete(this_ptr: *mut ::graphics_scene_wheel_event::GraphicsSceneWheelEvent);
  pub fn qt_widgets_c_QGraphicsSceneWheelEvent_delta(this_ptr: *const ::graphics_scene_wheel_event::GraphicsSceneWheelEvent) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsSceneWheelEvent_new_no_args() -> *mut ::graphics_scene_wheel_event::GraphicsSceneWheelEvent;
  pub fn qt_widgets_c_QGraphicsSceneWheelEvent_new_type(type_: ::qt_core::event::Type) -> *mut ::graphics_scene_wheel_event::GraphicsSceneWheelEvent;
  pub fn qt_widgets_c_QGraphicsSceneWheelEvent_pos_to_output(this_ptr: *const ::graphics_scene_wheel_event::GraphicsSceneWheelEvent, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneWheelEvent_scenePos_to_output(this_ptr: *const ::graphics_scene_wheel_event::GraphicsSceneWheelEvent, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneWheelEvent_screenPos_to_output(this_ptr: *const ::graphics_scene_wheel_event::GraphicsSceneWheelEvent, output: *mut ::qt_core::point::Point);
  pub fn qt_widgets_c_QGraphicsSceneWheelEvent_setDelta(this_ptr: *mut ::graphics_scene_wheel_event::GraphicsSceneWheelEvent, delta: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsSceneWheelEvent_setOrientation(this_ptr: *mut ::graphics_scene_wheel_event::GraphicsSceneWheelEvent, orientation: *const ::qt_core::qt::Orientation);
  pub fn qt_widgets_c_QGraphicsSceneWheelEvent_setPos(this_ptr: *mut ::graphics_scene_wheel_event::GraphicsSceneWheelEvent, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneWheelEvent_setScenePos(this_ptr: *mut ::graphics_scene_wheel_event::GraphicsSceneWheelEvent, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsSceneWheelEvent_setScreenPos(this_ptr: *mut ::graphics_scene_wheel_event::GraphicsSceneWheelEvent, pos: *const ::qt_core::point::Point);

  // Header: QGraphicsSimpleTextItem
  pub fn qt_widgets_c_QGraphicsSimpleTextItem_G_dynamic_cast_QGraphicsSimpleTextItem_ptr_QAbstractGraphicsShapeItem(ptr: *mut ::abstract_graphics_shape_item::AbstractGraphicsShapeItem) -> *mut ::graphics_simple_text_item::GraphicsSimpleTextItem;
  pub fn qt_widgets_c_QGraphicsSimpleTextItem_G_dynamic_cast_QGraphicsSimpleTextItem_ptr_QGraphicsItem(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_simple_text_item::GraphicsSimpleTextItem;
  pub fn qt_widgets_c_QGraphicsSimpleTextItem_G_static_cast_QAbstractGraphicsShapeItem_ptr(ptr: *mut ::graphics_simple_text_item::GraphicsSimpleTextItem) -> *mut ::abstract_graphics_shape_item::AbstractGraphicsShapeItem;
  pub fn qt_widgets_c_QGraphicsSimpleTextItem_G_static_cast_QGraphicsItem_ptr(ptr: *mut ::graphics_simple_text_item::GraphicsSimpleTextItem) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsSimpleTextItem_G_static_cast_QGraphicsSimpleTextItem_ptr_QAbstractGraphicsShapeItem(ptr: *mut ::abstract_graphics_shape_item::AbstractGraphicsShapeItem) -> *mut ::graphics_simple_text_item::GraphicsSimpleTextItem;
  pub fn qt_widgets_c_QGraphicsSimpleTextItem_G_static_cast_QGraphicsSimpleTextItem_ptr_QGraphicsItem(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_simple_text_item::GraphicsSimpleTextItem;
  pub fn qt_widgets_c_QGraphicsSimpleTextItem_boundingRect_to_output(this_ptr: *const ::graphics_simple_text_item::GraphicsSimpleTextItem, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsSimpleTextItem_contains(this_ptr: *const ::graphics_simple_text_item::GraphicsSimpleTextItem, point: *const ::qt_core::point_f::PointF) -> bool;
  pub fn qt_widgets_c_QGraphicsSimpleTextItem_delete(this_ptr: *mut ::graphics_simple_text_item::GraphicsSimpleTextItem);
  pub fn qt_widgets_c_QGraphicsSimpleTextItem_font_to_output(this_ptr: *const ::graphics_simple_text_item::GraphicsSimpleTextItem, output: *mut ::qt_gui::font::Font);
  pub fn qt_widgets_c_QGraphicsSimpleTextItem_isObscuredBy(this_ptr: *const ::graphics_simple_text_item::GraphicsSimpleTextItem, item: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsSimpleTextItem_new_no_args() -> *mut ::graphics_simple_text_item::GraphicsSimpleTextItem;
  pub fn qt_widgets_c_QGraphicsSimpleTextItem_new_parent(parent: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_simple_text_item::GraphicsSimpleTextItem;
  pub fn qt_widgets_c_QGraphicsSimpleTextItem_new_text(text: *const ::qt_core::string::String) -> *mut ::graphics_simple_text_item::GraphicsSimpleTextItem;
  pub fn qt_widgets_c_QGraphicsSimpleTextItem_new_text_parent(text: *const ::qt_core::string::String, parent: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_simple_text_item::GraphicsSimpleTextItem;
  pub fn qt_widgets_c_QGraphicsSimpleTextItem_opaqueArea_to_output(this_ptr: *const ::graphics_simple_text_item::GraphicsSimpleTextItem, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsSimpleTextItem_paint(this_ptr: *mut ::graphics_simple_text_item::GraphicsSimpleTextItem, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_graphics_item::StyleOptionGraphicsItem, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QGraphicsSimpleTextItem_setFont(this_ptr: *mut ::graphics_simple_text_item::GraphicsSimpleTextItem, font: *const ::qt_gui::font::Font);
  pub fn qt_widgets_c_QGraphicsSimpleTextItem_setText(this_ptr: *mut ::graphics_simple_text_item::GraphicsSimpleTextItem, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsSimpleTextItem_shape_to_output(this_ptr: *const ::graphics_simple_text_item::GraphicsSimpleTextItem, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsSimpleTextItem_text_to_output(this_ptr: *const ::graphics_simple_text_item::GraphicsSimpleTextItem, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsSimpleTextItem_type(this_ptr: *const ::graphics_simple_text_item::GraphicsSimpleTextItem) -> ::libc::c_int;

  // Header: QGraphicsTextItem
  pub fn qt_widgets_c_QGraphicsTextItem_G_dynamic_cast_QGraphicsTextItem_ptr_QGraphicsItem(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_text_item::GraphicsTextItem;
  pub fn qt_widgets_c_QGraphicsTextItem_G_dynamic_cast_QGraphicsTextItem_ptr_QGraphicsObject(ptr: *mut ::graphics_object::GraphicsObject) -> *mut ::graphics_text_item::GraphicsTextItem;
  pub fn qt_widgets_c_QGraphicsTextItem_G_static_cast_QGraphicsItem_ptr(ptr: *mut ::graphics_text_item::GraphicsTextItem) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsTextItem_G_static_cast_QGraphicsObject_ptr(ptr: *mut ::graphics_text_item::GraphicsTextItem) -> *mut ::graphics_object::GraphicsObject;
  pub fn qt_widgets_c_QGraphicsTextItem_G_static_cast_QGraphicsTextItem_ptr_QGraphicsItem(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_text_item::GraphicsTextItem;
  pub fn qt_widgets_c_QGraphicsTextItem_G_static_cast_QGraphicsTextItem_ptr_QGraphicsObject(ptr: *mut ::graphics_object::GraphicsObject) -> *mut ::graphics_text_item::GraphicsTextItem;
  pub fn qt_widgets_c_QGraphicsTextItem_G_static_cast_QGraphicsTextItem_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::graphics_text_item::GraphicsTextItem;
  pub fn qt_widgets_c_QGraphicsTextItem_G_static_cast_QObject_ptr(ptr: *mut ::graphics_text_item::GraphicsTextItem) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QGraphicsTextItem_adjustSize(this_ptr: *mut ::graphics_text_item::GraphicsTextItem);
  pub fn qt_widgets_c_QGraphicsTextItem_boundingRect_to_output(this_ptr: *const ::graphics_text_item::GraphicsTextItem, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsTextItem_contains(this_ptr: *const ::graphics_text_item::GraphicsTextItem, point: *const ::qt_core::point_f::PointF) -> bool;
  pub fn qt_widgets_c_QGraphicsTextItem_defaultTextColor_to_output(this_ptr: *const ::graphics_text_item::GraphicsTextItem, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QGraphicsTextItem_delete(this_ptr: *mut ::graphics_text_item::GraphicsTextItem);
  pub fn qt_widgets_c_QGraphicsTextItem_document(this_ptr: *const ::graphics_text_item::GraphicsTextItem) -> *mut ::qt_gui::text_document::TextDocument;
  pub fn qt_widgets_c_QGraphicsTextItem_font_to_output(this_ptr: *const ::graphics_text_item::GraphicsTextItem, output: *mut ::qt_gui::font::Font);
  pub fn qt_widgets_c_QGraphicsTextItem_isObscuredBy(this_ptr: *const ::graphics_text_item::GraphicsTextItem, item: *const ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QGraphicsTextItem_metaObject(this_ptr: *const ::graphics_text_item::GraphicsTextItem) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QGraphicsTextItem_new_no_args() -> *mut ::graphics_text_item::GraphicsTextItem;
  pub fn qt_widgets_c_QGraphicsTextItem_new_parent(parent: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_text_item::GraphicsTextItem;
  pub fn qt_widgets_c_QGraphicsTextItem_new_text(text: *const ::qt_core::string::String) -> *mut ::graphics_text_item::GraphicsTextItem;
  pub fn qt_widgets_c_QGraphicsTextItem_new_text_parent(text: *const ::qt_core::string::String, parent: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_text_item::GraphicsTextItem;
  pub fn qt_widgets_c_QGraphicsTextItem_opaqueArea_to_output(this_ptr: *const ::graphics_text_item::GraphicsTextItem, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsTextItem_openExternalLinks(this_ptr: *const ::graphics_text_item::GraphicsTextItem) -> bool;
  pub fn qt_widgets_c_QGraphicsTextItem_paint(this_ptr: *mut ::graphics_text_item::GraphicsTextItem, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_graphics_item::StyleOptionGraphicsItem, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QGraphicsTextItem_qt_metacall(this_ptr: *mut ::graphics_text_item::GraphicsTextItem, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsTextItem_qt_metacast(this_ptr: *mut ::graphics_text_item::GraphicsTextItem, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QGraphicsTextItem_setDefaultTextColor(this_ptr: *mut ::graphics_text_item::GraphicsTextItem, c: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QGraphicsTextItem_setDocument(this_ptr: *mut ::graphics_text_item::GraphicsTextItem, document: *mut ::qt_gui::text_document::TextDocument);
  pub fn qt_widgets_c_QGraphicsTextItem_setFont(this_ptr: *mut ::graphics_text_item::GraphicsTextItem, font: *const ::qt_gui::font::Font);
  pub fn qt_widgets_c_QGraphicsTextItem_setHtml(this_ptr: *mut ::graphics_text_item::GraphicsTextItem, html: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsTextItem_setOpenExternalLinks(this_ptr: *mut ::graphics_text_item::GraphicsTextItem, open: bool);
  pub fn qt_widgets_c_QGraphicsTextItem_setPlainText(this_ptr: *mut ::graphics_text_item::GraphicsTextItem, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsTextItem_setTabChangesFocus(this_ptr: *mut ::graphics_text_item::GraphicsTextItem, b: bool);
  pub fn qt_widgets_c_QGraphicsTextItem_setTextCursor(this_ptr: *mut ::graphics_text_item::GraphicsTextItem, cursor: *const ::qt_gui::text_cursor::TextCursor);
  pub fn qt_widgets_c_QGraphicsTextItem_setTextWidth(this_ptr: *mut ::graphics_text_item::GraphicsTextItem, width: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsTextItem_shape_to_output(this_ptr: *const ::graphics_text_item::GraphicsTextItem, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsTextItem_tabChangesFocus(this_ptr: *const ::graphics_text_item::GraphicsTextItem) -> bool;
  pub fn qt_widgets_c_QGraphicsTextItem_textCursor_as_ptr(this_ptr: *const ::graphics_text_item::GraphicsTextItem) -> *mut ::qt_gui::text_cursor::TextCursor;
  pub fn qt_widgets_c_QGraphicsTextItem_textWidth(this_ptr: *const ::graphics_text_item::GraphicsTextItem) -> ::libc::c_double;
  pub fn qt_widgets_c_QGraphicsTextItem_toHtml_to_output(this_ptr: *const ::graphics_text_item::GraphicsTextItem, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsTextItem_toPlainText_to_output(this_ptr: *const ::graphics_text_item::GraphicsTextItem, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsTextItem_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsTextItem_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsTextItem_type(this_ptr: *const ::graphics_text_item::GraphicsTextItem) -> ::libc::c_int;

  // Header: QGraphicsTransform
  pub fn qt_widgets_c_QGraphicsTransform_G_static_cast_QGraphicsTransform_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::graphics_transform::GraphicsTransform;
  pub fn qt_widgets_c_QGraphicsTransform_G_static_cast_QObject_ptr(ptr: *mut ::graphics_transform::GraphicsTransform) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QGraphicsTransform_applyTo(this_ptr: *const ::graphics_transform::GraphicsTransform, matrix: *mut ::qt_gui::matrix_4x4::Matrix4X4);
  pub fn qt_widgets_c_QGraphicsTransform_delete(this_ptr: *mut ::graphics_transform::GraphicsTransform);
  pub fn qt_widgets_c_QGraphicsTransform_metaObject(this_ptr: *const ::graphics_transform::GraphicsTransform) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QGraphicsTransform_qt_metacall(this_ptr: *mut ::graphics_transform::GraphicsTransform, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsTransform_qt_metacast(this_ptr: *mut ::graphics_transform::GraphicsTransform, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QGraphicsTransform_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsTransform_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QGraphicsView
  pub fn qt_widgets_c_QGraphicsView_G_dynamic_cast_QGraphicsView_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QGraphicsView_G_dynamic_cast_QGraphicsView_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QGraphicsView_G_dynamic_cast_QGraphicsView_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QGraphicsView_G_static_cast_QAbstractScrollArea_ptr(ptr: *mut ::graphics_view::GraphicsView) -> *mut ::abstract_scroll_area::AbstractScrollArea;
  pub fn qt_widgets_c_QGraphicsView_G_static_cast_QFrame_ptr(ptr: *mut ::graphics_view::GraphicsView) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QGraphicsView_G_static_cast_QGraphicsView_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QGraphicsView_G_static_cast_QGraphicsView_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QGraphicsView_G_static_cast_QGraphicsView_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QGraphicsView_G_static_cast_QGraphicsView_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QGraphicsView_G_static_cast_QGraphicsView_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QGraphicsView_G_static_cast_QObject_ptr(ptr: *mut ::graphics_view::GraphicsView) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QGraphicsView_G_static_cast_QPaintDevice_ptr(ptr: *mut ::graphics_view::GraphicsView) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QGraphicsView_G_static_cast_QWidget_ptr(ptr: *mut ::graphics_view::GraphicsView) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QGraphicsView_backgroundBrush_to_output(this_ptr: *const ::graphics_view::GraphicsView, output: *mut ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QGraphicsView_cacheMode(this_ptr: *const ::graphics_view::GraphicsView) -> ::libc::c_uint;
  pub fn qt_widgets_c_QGraphicsView_centerOn_item(this_ptr: *mut ::graphics_view::GraphicsView, item: *const ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsView_centerOn_pos(this_ptr: *mut ::graphics_view::GraphicsView, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsView_centerOn_x_y(this_ptr: *mut ::graphics_view::GraphicsView, x: ::libc::c_double, y: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsView_delete(this_ptr: *mut ::graphics_view::GraphicsView);
  pub fn qt_widgets_c_QGraphicsView_dragMode(this_ptr: *const ::graphics_view::GraphicsView) -> ::graphics_view::DragMode;
  pub fn qt_widgets_c_QGraphicsView_ensureVisible_item(this_ptr: *mut ::graphics_view::GraphicsView, item: *const ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsView_ensureVisible_item_xmargin(this_ptr: *mut ::graphics_view::GraphicsView, item: *const ::graphics_item::GraphicsItem, xmargin: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsView_ensureVisible_item_xmargin_ymargin(this_ptr: *mut ::graphics_view::GraphicsView, item: *const ::graphics_item::GraphicsItem, xmargin: ::libc::c_int, ymargin: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsView_ensureVisible_rect(this_ptr: *mut ::graphics_view::GraphicsView, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsView_ensureVisible_rect_xmargin(this_ptr: *mut ::graphics_view::GraphicsView, rect: *const ::qt_core::rect_f::RectF, xmargin: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsView_ensureVisible_rect_xmargin_ymargin(this_ptr: *mut ::graphics_view::GraphicsView, rect: *const ::qt_core::rect_f::RectF, xmargin: ::libc::c_int, ymargin: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsView_ensureVisible_x_y_w_h(this_ptr: *mut ::graphics_view::GraphicsView, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsView_ensureVisible_x_y_w_h_xmargin(this_ptr: *mut ::graphics_view::GraphicsView, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, xmargin: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsView_ensureVisible_x_y_w_h_xmargin_ymargin(this_ptr: *mut ::graphics_view::GraphicsView, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, xmargin: ::libc::c_int, ymargin: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsView_fitInView_item(this_ptr: *mut ::graphics_view::GraphicsView, item: *const ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QGraphicsView_fitInView_item_aspectRadioMode(this_ptr: *mut ::graphics_view::GraphicsView, item: *const ::graphics_item::GraphicsItem, aspectRadioMode: *const ::qt_core::qt::AspectRatioMode);
  pub fn qt_widgets_c_QGraphicsView_fitInView_rect(this_ptr: *mut ::graphics_view::GraphicsView, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsView_fitInView_rect_aspectRadioMode(this_ptr: *mut ::graphics_view::GraphicsView, rect: *const ::qt_core::rect_f::RectF, aspectRadioMode: *const ::qt_core::qt::AspectRatioMode);
  pub fn qt_widgets_c_QGraphicsView_fitInView_x_y_w_h(this_ptr: *mut ::graphics_view::GraphicsView, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsView_fitInView_x_y_w_h_aspectRadioMode(this_ptr: *mut ::graphics_view::GraphicsView, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, aspectRadioMode: *const ::qt_core::qt::AspectRatioMode);
  pub fn qt_widgets_c_QGraphicsView_foregroundBrush_to_output(this_ptr: *const ::graphics_view::GraphicsView, output: *mut ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QGraphicsView_inputMethodQuery_to_output(this_ptr: *const ::graphics_view::GraphicsView, query: *const ::qt_core::qt::InputMethodQuery, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QGraphicsView_isInteractive(this_ptr: *const ::graphics_view::GraphicsView) -> bool;
  pub fn qt_widgets_c_QGraphicsView_isTransformed(this_ptr: *const ::graphics_view::GraphicsView) -> bool;
  pub fn qt_widgets_c_QGraphicsView_itemAt_pos(this_ptr: *const ::graphics_view::GraphicsView, pos: *const ::qt_core::point::Point) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsView_itemAt_x_y(this_ptr: *const ::graphics_view::GraphicsView, x: ::libc::c_int, y: ::libc::c_int) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsView_items_to_output_no_args(this_ptr: *const ::graphics_view::GraphicsView, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsView_items_to_output_path(this_ptr: *const ::graphics_view::GraphicsView, path: *const ::qt_gui::painter_path::PainterPath, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsView_items_to_output_path_mode(this_ptr: *const ::graphics_view::GraphicsView, path: *const ::qt_gui::painter_path::PainterPath, mode: *const ::qt_core::qt::ItemSelectionMode, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsView_items_to_output_polygon(this_ptr: *const ::graphics_view::GraphicsView, polygon: *const ::qt_gui::polygon::Polygon, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsView_items_to_output_polygon_mode(this_ptr: *const ::graphics_view::GraphicsView, polygon: *const ::qt_gui::polygon::Polygon, mode: *const ::qt_core::qt::ItemSelectionMode, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsView_items_to_output_pos(this_ptr: *const ::graphics_view::GraphicsView, pos: *const ::qt_core::point::Point, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsView_items_to_output_rect(this_ptr: *const ::graphics_view::GraphicsView, rect: *const ::qt_core::rect::Rect, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsView_items_to_output_rect_mode(this_ptr: *const ::graphics_view::GraphicsView, rect: *const ::qt_core::rect::Rect, mode: *const ::qt_core::qt::ItemSelectionMode, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsView_items_to_output_x_y(this_ptr: *const ::graphics_view::GraphicsView, x: ::libc::c_int, y: ::libc::c_int, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsView_items_to_output_x_y_w_h(this_ptr: *const ::graphics_view::GraphicsView, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsView_items_to_output_x_y_w_h_mode(this_ptr: *const ::graphics_view::GraphicsView, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, mode: *const ::qt_core::qt::ItemSelectionMode, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QGraphicsView_mapFromScene_to_output_path(this_ptr: *const ::graphics_view::GraphicsView, path: *const ::qt_gui::painter_path::PainterPath, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsView_mapFromScene_to_output_point(this_ptr: *const ::graphics_view::GraphicsView, point: *const ::qt_core::point_f::PointF, output: *mut ::qt_core::point::Point);
  pub fn qt_widgets_c_QGraphicsView_mapFromScene_to_output_polygon(this_ptr: *const ::graphics_view::GraphicsView, polygon: *const ::qt_gui::polygon_f::PolygonF, output: *mut ::qt_gui::polygon::Polygon);
  pub fn qt_widgets_c_QGraphicsView_mapFromScene_to_output_rect(this_ptr: *const ::graphics_view::GraphicsView, rect: *const ::qt_core::rect_f::RectF, output: *mut ::qt_gui::polygon::Polygon);
  pub fn qt_widgets_c_QGraphicsView_mapFromScene_to_output_x_y(this_ptr: *const ::graphics_view::GraphicsView, x: ::libc::c_double, y: ::libc::c_double, output: *mut ::qt_core::point::Point);
  pub fn qt_widgets_c_QGraphicsView_mapFromScene_to_output_x_y_w_h(this_ptr: *const ::graphics_view::GraphicsView, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, output: *mut ::qt_gui::polygon::Polygon);
  pub fn qt_widgets_c_QGraphicsView_mapToScene_to_output_path(this_ptr: *const ::graphics_view::GraphicsView, path: *const ::qt_gui::painter_path::PainterPath, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsView_mapToScene_to_output_point(this_ptr: *const ::graphics_view::GraphicsView, point: *const ::qt_core::point::Point, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsView_mapToScene_to_output_polygon(this_ptr: *const ::graphics_view::GraphicsView, polygon: *const ::qt_gui::polygon::Polygon, output: *mut ::qt_gui::polygon_f::PolygonF);
  pub fn qt_widgets_c_QGraphicsView_mapToScene_to_output_rect(this_ptr: *const ::graphics_view::GraphicsView, rect: *const ::qt_core::rect::Rect, output: *mut ::qt_gui::polygon_f::PolygonF);
  pub fn qt_widgets_c_QGraphicsView_mapToScene_to_output_x_y(this_ptr: *const ::graphics_view::GraphicsView, x: ::libc::c_int, y: ::libc::c_int, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QGraphicsView_mapToScene_to_output_x_y_w_h(this_ptr: *const ::graphics_view::GraphicsView, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, output: *mut ::qt_gui::polygon_f::PolygonF);
  pub fn qt_widgets_c_QGraphicsView_matrix_to_output(this_ptr: *const ::graphics_view::GraphicsView, output: *mut ::qt_gui::matrix::Matrix);
  pub fn qt_widgets_c_QGraphicsView_metaObject(this_ptr: *const ::graphics_view::GraphicsView) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QGraphicsView_new_no_args() -> *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QGraphicsView_new_parent(parent: *mut ::widget::Widget) -> *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QGraphicsView_new_scene(scene: *mut ::graphics_scene::GraphicsScene) -> *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QGraphicsView_new_scene_parent(scene: *mut ::graphics_scene::GraphicsScene, parent: *mut ::widget::Widget) -> *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QGraphicsView_optimizationFlags(this_ptr: *const ::graphics_view::GraphicsView) -> ::libc::c_uint;
  pub fn qt_widgets_c_QGraphicsView_qt_metacall(this_ptr: *mut ::graphics_view::GraphicsView, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsView_qt_metacast(this_ptr: *mut ::graphics_view::GraphicsView, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QGraphicsView_render_painter(this_ptr: *mut ::graphics_view::GraphicsView, painter: *mut ::qt_gui::painter::Painter);
  pub fn qt_widgets_c_QGraphicsView_render_painter_target(this_ptr: *mut ::graphics_view::GraphicsView, painter: *mut ::qt_gui::painter::Painter, target: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsView_render_painter_target_source(this_ptr: *mut ::graphics_view::GraphicsView, painter: *mut ::qt_gui::painter::Painter, target: *const ::qt_core::rect_f::RectF, source: *const ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QGraphicsView_render_painter_target_source_aspectRatioMode(this_ptr: *mut ::graphics_view::GraphicsView, painter: *mut ::qt_gui::painter::Painter, target: *const ::qt_core::rect_f::RectF, source: *const ::qt_core::rect::Rect, aspectRatioMode: *const ::qt_core::qt::AspectRatioMode);
  pub fn qt_widgets_c_QGraphicsView_resetCachedContent(this_ptr: *mut ::graphics_view::GraphicsView);
  pub fn qt_widgets_c_QGraphicsView_resetMatrix(this_ptr: *mut ::graphics_view::GraphicsView);
  pub fn qt_widgets_c_QGraphicsView_resetTransform(this_ptr: *mut ::graphics_view::GraphicsView);
  pub fn qt_widgets_c_QGraphicsView_resizeAnchor(this_ptr: *const ::graphics_view::GraphicsView) -> ::graphics_view::ViewportAnchor;
  pub fn qt_widgets_c_QGraphicsView_rotate(this_ptr: *mut ::graphics_view::GraphicsView, angle: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsView_rubberBandRect_to_output(this_ptr: *const ::graphics_view::GraphicsView, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QGraphicsView_scale(this_ptr: *mut ::graphics_view::GraphicsView, sx: ::libc::c_double, sy: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsView_scene(this_ptr: *const ::graphics_view::GraphicsView) -> *mut ::graphics_scene::GraphicsScene;
  pub fn qt_widgets_c_QGraphicsView_sceneRect_to_output(this_ptr: *const ::graphics_view::GraphicsView, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsView_setBackgroundBrush(this_ptr: *mut ::graphics_view::GraphicsView, brush: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QGraphicsView_setCacheMode(this_ptr: *mut ::graphics_view::GraphicsView, mode: ::libc::c_uint);
  pub fn qt_widgets_c_QGraphicsView_setDragMode(this_ptr: *mut ::graphics_view::GraphicsView, mode: ::graphics_view::DragMode);
  pub fn qt_widgets_c_QGraphicsView_setForegroundBrush(this_ptr: *mut ::graphics_view::GraphicsView, brush: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QGraphicsView_setInteractive(this_ptr: *mut ::graphics_view::GraphicsView, allowed: bool);
  pub fn qt_widgets_c_QGraphicsView_setMatrix_matrix(this_ptr: *mut ::graphics_view::GraphicsView, matrix: *const ::qt_gui::matrix::Matrix);
  pub fn qt_widgets_c_QGraphicsView_setMatrix_matrix_combine(this_ptr: *mut ::graphics_view::GraphicsView, matrix: *const ::qt_gui::matrix::Matrix, combine: bool);
  pub fn qt_widgets_c_QGraphicsView_setOptimizationFlag_flag(this_ptr: *mut ::graphics_view::GraphicsView, flag: ::graphics_view::OptimizationFlag);
  pub fn qt_widgets_c_QGraphicsView_setOptimizationFlag_flag_enabled(this_ptr: *mut ::graphics_view::GraphicsView, flag: ::graphics_view::OptimizationFlag, enabled: bool);
  pub fn qt_widgets_c_QGraphicsView_setOptimizationFlags(this_ptr: *mut ::graphics_view::GraphicsView, flags: ::libc::c_uint);
  pub fn qt_widgets_c_QGraphicsView_setRenderHint_hint(this_ptr: *mut ::graphics_view::GraphicsView, hint: *const ::qt_gui::painter::RenderHint);
  pub fn qt_widgets_c_QGraphicsView_setRenderHint_hint_enabled(this_ptr: *mut ::graphics_view::GraphicsView, hint: *const ::qt_gui::painter::RenderHint, enabled: bool);
  pub fn qt_widgets_c_QGraphicsView_setResizeAnchor(this_ptr: *mut ::graphics_view::GraphicsView, anchor: ::graphics_view::ViewportAnchor);
  pub fn qt_widgets_c_QGraphicsView_setRubberBandSelectionMode(this_ptr: *mut ::graphics_view::GraphicsView, mode: *const ::qt_core::qt::ItemSelectionMode);
  pub fn qt_widgets_c_QGraphicsView_setScene(this_ptr: *mut ::graphics_view::GraphicsView, scene: *mut ::graphics_scene::GraphicsScene);
  pub fn qt_widgets_c_QGraphicsView_setSceneRect_rect(this_ptr: *mut ::graphics_view::GraphicsView, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsView_setSceneRect_x_y_w_h(this_ptr: *mut ::graphics_view::GraphicsView, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsView_setTransform_matrix(this_ptr: *mut ::graphics_view::GraphicsView, matrix: *const ::qt_gui::transform::Transform);
  pub fn qt_widgets_c_QGraphicsView_setTransform_matrix_combine(this_ptr: *mut ::graphics_view::GraphicsView, matrix: *const ::qt_gui::transform::Transform, combine: bool);
  pub fn qt_widgets_c_QGraphicsView_setTransformationAnchor(this_ptr: *mut ::graphics_view::GraphicsView, anchor: ::graphics_view::ViewportAnchor);
  pub fn qt_widgets_c_QGraphicsView_setViewportUpdateMode(this_ptr: *mut ::graphics_view::GraphicsView, mode: ::graphics_view::ViewportUpdateMode);
  pub fn qt_widgets_c_QGraphicsView_shear(this_ptr: *mut ::graphics_view::GraphicsView, sh: ::libc::c_double, sv: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsView_sizeHint_to_output(this_ptr: *const ::graphics_view::GraphicsView, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QGraphicsView_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsView_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsView_transform_to_output(this_ptr: *const ::graphics_view::GraphicsView, output: *mut ::qt_gui::transform::Transform);
  pub fn qt_widgets_c_QGraphicsView_transformationAnchor(this_ptr: *const ::graphics_view::GraphicsView) -> ::graphics_view::ViewportAnchor;
  pub fn qt_widgets_c_QGraphicsView_translate(this_ptr: *mut ::graphics_view::GraphicsView, dx: ::libc::c_double, dy: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsView_updateScene(this_ptr: *mut ::graphics_view::GraphicsView, rects: *const ::list::ListQtCoreRectF);
  pub fn qt_widgets_c_QGraphicsView_updateSceneRect(this_ptr: *mut ::graphics_view::GraphicsView, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsView_viewportTransform_to_output(this_ptr: *const ::graphics_view::GraphicsView, output: *mut ::qt_gui::transform::Transform);
  pub fn qt_widgets_c_QGraphicsView_viewportUpdateMode(this_ptr: *const ::graphics_view::GraphicsView) -> ::graphics_view::ViewportUpdateMode;

  // Header: QGraphicsWidget
  pub fn qt_widgets_c_QGraphicsWidget_G_dynamic_cast_QGraphicsWidget_ptr_QGraphicsItem(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QGraphicsWidget_G_dynamic_cast_QGraphicsWidget_ptr_QGraphicsLayoutItem(ptr: *mut ::graphics_layout_item::GraphicsLayoutItem) -> *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QGraphicsWidget_G_dynamic_cast_QGraphicsWidget_ptr_QGraphicsObject(ptr: *mut ::graphics_object::GraphicsObject) -> *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QGraphicsWidget_G_static_cast_QGraphicsItem_ptr(ptr: *mut ::graphics_widget::GraphicsWidget) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QGraphicsWidget_G_static_cast_QGraphicsLayoutItem_ptr(ptr: *mut ::graphics_widget::GraphicsWidget) -> *mut ::graphics_layout_item::GraphicsLayoutItem;
  pub fn qt_widgets_c_QGraphicsWidget_G_static_cast_QGraphicsObject_ptr(ptr: *mut ::graphics_widget::GraphicsWidget) -> *mut ::graphics_object::GraphicsObject;
  pub fn qt_widgets_c_QGraphicsWidget_G_static_cast_QGraphicsWidget_ptr_QGraphicsItem(ptr: *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QGraphicsWidget_G_static_cast_QGraphicsWidget_ptr_QGraphicsLayoutItem(ptr: *mut ::graphics_layout_item::GraphicsLayoutItem) -> *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QGraphicsWidget_G_static_cast_QGraphicsWidget_ptr_QGraphicsObject(ptr: *mut ::graphics_object::GraphicsObject) -> *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QGraphicsWidget_G_static_cast_QGraphicsWidget_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QGraphicsWidget_G_static_cast_QObject_ptr(ptr: *mut ::graphics_widget::GraphicsWidget) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QGraphicsWidget_actions_to_output(this_ptr: *const ::graphics_widget::GraphicsWidget, output: *mut ::list::ListActionMutPtr);
  pub fn qt_widgets_c_QGraphicsWidget_addAction(this_ptr: *mut ::graphics_widget::GraphicsWidget, action: *mut ::action::Action);
  pub fn qt_widgets_c_QGraphicsWidget_addActions(this_ptr: *mut ::graphics_widget::GraphicsWidget, actions: *const ::list::ListActionMutPtr);
  pub fn qt_widgets_c_QGraphicsWidget_adjustSize(this_ptr: *mut ::graphics_widget::GraphicsWidget);
  pub fn qt_widgets_c_QGraphicsWidget_autoFillBackground(this_ptr: *const ::graphics_widget::GraphicsWidget) -> bool;
  pub fn qt_widgets_c_QGraphicsWidget_boundingRect_to_output(this_ptr: *const ::graphics_widget::GraphicsWidget, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsWidget_close(this_ptr: *mut ::graphics_widget::GraphicsWidget) -> bool;
  pub fn qt_widgets_c_QGraphicsWidget_delete(this_ptr: *mut ::graphics_widget::GraphicsWidget);
  pub fn qt_widgets_c_QGraphicsWidget_focusWidget(this_ptr: *const ::graphics_widget::GraphicsWidget) -> *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QGraphicsWidget_font_to_output(this_ptr: *const ::graphics_widget::GraphicsWidget, output: *mut ::qt_gui::font::Font);
  pub fn qt_widgets_c_QGraphicsWidget_getContentsMargins(this_ptr: *const ::graphics_widget::GraphicsWidget, left: *mut ::libc::c_double, top: *mut ::libc::c_double, right: *mut ::libc::c_double, bottom: *mut ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsWidget_getWindowFrameMargins(this_ptr: *const ::graphics_widget::GraphicsWidget, left: *mut ::libc::c_double, top: *mut ::libc::c_double, right: *mut ::libc::c_double, bottom: *mut ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsWidget_grabShortcut_sequence(this_ptr: *mut ::graphics_widget::GraphicsWidget, sequence: *const ::qt_gui::key_sequence::KeySequence) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsWidget_grabShortcut_sequence_context(this_ptr: *mut ::graphics_widget::GraphicsWidget, sequence: *const ::qt_gui::key_sequence::KeySequence, context: *const ::qt_core::qt::ShortcutContext) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsWidget_insertAction(this_ptr: *mut ::graphics_widget::GraphicsWidget, before: *mut ::action::Action, action: *mut ::action::Action);
  pub fn qt_widgets_c_QGraphicsWidget_insertActions(this_ptr: *mut ::graphics_widget::GraphicsWidget, before: *mut ::action::Action, actions: *const ::list::ListActionMutPtr);
  pub fn qt_widgets_c_QGraphicsWidget_isActiveWindow(this_ptr: *const ::graphics_widget::GraphicsWidget) -> bool;
  pub fn qt_widgets_c_QGraphicsWidget_layout(this_ptr: *const ::graphics_widget::GraphicsWidget) -> *mut ::graphics_layout::GraphicsLayout;
  pub fn qt_widgets_c_QGraphicsWidget_metaObject(this_ptr: *const ::graphics_widget::GraphicsWidget) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QGraphicsWidget_paintWindowFrame_painter_option(this_ptr: *mut ::graphics_widget::GraphicsWidget, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_graphics_item::StyleOptionGraphicsItem);
  pub fn qt_widgets_c_QGraphicsWidget_paintWindowFrame_painter_option_widget(this_ptr: *mut ::graphics_widget::GraphicsWidget, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_graphics_item::StyleOptionGraphicsItem, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QGraphicsWidget_paint_painter_option(this_ptr: *mut ::graphics_widget::GraphicsWidget, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_graphics_item::StyleOptionGraphicsItem);
  pub fn qt_widgets_c_QGraphicsWidget_paint_painter_option_widget(this_ptr: *mut ::graphics_widget::GraphicsWidget, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_graphics_item::StyleOptionGraphicsItem, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QGraphicsWidget_palette_to_output(this_ptr: *const ::graphics_widget::GraphicsWidget, output: *mut ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QGraphicsWidget_qt_metacall(this_ptr: *mut ::graphics_widget::GraphicsWidget, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsWidget_qt_metacast(this_ptr: *mut ::graphics_widget::GraphicsWidget, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QGraphicsWidget_rect_to_output(this_ptr: *const ::graphics_widget::GraphicsWidget, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsWidget_releaseShortcut(this_ptr: *mut ::graphics_widget::GraphicsWidget, id: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsWidget_removeAction(this_ptr: *mut ::graphics_widget::GraphicsWidget, action: *mut ::action::Action);
  pub fn qt_widgets_c_QGraphicsWidget_resize_size(this_ptr: *mut ::graphics_widget::GraphicsWidget, size: *const ::qt_core::size_f::SizeF);
  pub fn qt_widgets_c_QGraphicsWidget_resize_w_h(this_ptr: *mut ::graphics_widget::GraphicsWidget, w: ::libc::c_double, h: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsWidget_setAttribute_attribute(this_ptr: *mut ::graphics_widget::GraphicsWidget, attribute: *const ::qt_core::qt::WidgetAttribute);
  pub fn qt_widgets_c_QGraphicsWidget_setAttribute_attribute_on(this_ptr: *mut ::graphics_widget::GraphicsWidget, attribute: *const ::qt_core::qt::WidgetAttribute, on: bool);
  pub fn qt_widgets_c_QGraphicsWidget_setAutoFillBackground(this_ptr: *mut ::graphics_widget::GraphicsWidget, enabled: bool);
  pub fn qt_widgets_c_QGraphicsWidget_setContentsMargins(this_ptr: *mut ::graphics_widget::GraphicsWidget, left: ::libc::c_double, top: ::libc::c_double, right: ::libc::c_double, bottom: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsWidget_setFocusPolicy(this_ptr: *mut ::graphics_widget::GraphicsWidget, policy: *const ::qt_core::qt::FocusPolicy);
  pub fn qt_widgets_c_QGraphicsWidget_setFont(this_ptr: *mut ::graphics_widget::GraphicsWidget, font: *const ::qt_gui::font::Font);
  pub fn qt_widgets_c_QGraphicsWidget_setGeometry_rect(this_ptr: *mut ::graphics_widget::GraphicsWidget, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsWidget_setGeometry_x_y_w_h(this_ptr: *mut ::graphics_widget::GraphicsWidget, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsWidget_setLayout(this_ptr: *mut ::graphics_widget::GraphicsWidget, layout: *mut ::graphics_layout::GraphicsLayout);
  pub fn qt_widgets_c_QGraphicsWidget_setLayoutDirection(this_ptr: *mut ::graphics_widget::GraphicsWidget, direction: *const ::qt_core::qt::LayoutDirection);
  pub fn qt_widgets_c_QGraphicsWidget_setPalette(this_ptr: *mut ::graphics_widget::GraphicsWidget, palette: *const ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QGraphicsWidget_setShortcutAutoRepeat_id(this_ptr: *mut ::graphics_widget::GraphicsWidget, id: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsWidget_setShortcutAutoRepeat_id_enabled(this_ptr: *mut ::graphics_widget::GraphicsWidget, id: ::libc::c_int, enabled: bool);
  pub fn qt_widgets_c_QGraphicsWidget_setShortcutEnabled_id(this_ptr: *mut ::graphics_widget::GraphicsWidget, id: ::libc::c_int);
  pub fn qt_widgets_c_QGraphicsWidget_setShortcutEnabled_id_enabled(this_ptr: *mut ::graphics_widget::GraphicsWidget, id: ::libc::c_int, enabled: bool);
  pub fn qt_widgets_c_QGraphicsWidget_setStyle(this_ptr: *mut ::graphics_widget::GraphicsWidget, style: *mut ::style::Style);
  pub fn qt_widgets_c_QGraphicsWidget_setTabOrder(first: *mut ::graphics_widget::GraphicsWidget, second: *mut ::graphics_widget::GraphicsWidget);
  pub fn qt_widgets_c_QGraphicsWidget_setWindowFrameMargins(this_ptr: *mut ::graphics_widget::GraphicsWidget, left: ::libc::c_double, top: ::libc::c_double, right: ::libc::c_double, bottom: ::libc::c_double);
  pub fn qt_widgets_c_QGraphicsWidget_setWindowTitle(this_ptr: *mut ::graphics_widget::GraphicsWidget, title: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsWidget_shape_to_output(this_ptr: *const ::graphics_widget::GraphicsWidget, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QGraphicsWidget_size_to_output(this_ptr: *const ::graphics_widget::GraphicsWidget, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_widgets_c_QGraphicsWidget_style(this_ptr: *const ::graphics_widget::GraphicsWidget) -> *mut ::style::Style;
  pub fn qt_widgets_c_QGraphicsWidget_testAttribute(this_ptr: *const ::graphics_widget::GraphicsWidget, attribute: *const ::qt_core::qt::WidgetAttribute) -> bool;
  pub fn qt_widgets_c_QGraphicsWidget_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsWidget_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGraphicsWidget_type(this_ptr: *const ::graphics_widget::GraphicsWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QGraphicsWidget_unsetLayoutDirection(this_ptr: *mut ::graphics_widget::GraphicsWidget);
  pub fn qt_widgets_c_QGraphicsWidget_unsetWindowFrameMargins(this_ptr: *mut ::graphics_widget::GraphicsWidget);
  pub fn qt_widgets_c_QGraphicsWidget_windowFrameGeometry_to_output(this_ptr: *const ::graphics_widget::GraphicsWidget, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsWidget_windowFrameRect_to_output(this_ptr: *const ::graphics_widget::GraphicsWidget, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QGraphicsWidget_windowTitle_to_output(this_ptr: *const ::graphics_widget::GraphicsWidget, output: *mut ::qt_core::string::String);

  // Header: QGridLayout
  pub fn qt_widgets_c_QGridLayout_G_dynamic_cast_QGridLayout_ptr_QLayout(ptr: *mut ::layout::Layout) -> *mut ::grid_layout::GridLayout;
  pub fn qt_widgets_c_QGridLayout_G_dynamic_cast_QGridLayout_ptr_QLayoutItem(ptr: *mut ::layout_item::LayoutItem) -> *mut ::grid_layout::GridLayout;
  pub fn qt_widgets_c_QGridLayout_G_static_cast_QGridLayout_ptr_QLayout(ptr: *mut ::layout::Layout) -> *mut ::grid_layout::GridLayout;
  pub fn qt_widgets_c_QGridLayout_G_static_cast_QGridLayout_ptr_QLayoutItem(ptr: *mut ::layout_item::LayoutItem) -> *mut ::grid_layout::GridLayout;
  pub fn qt_widgets_c_QGridLayout_G_static_cast_QGridLayout_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::grid_layout::GridLayout;
  pub fn qt_widgets_c_QGridLayout_G_static_cast_QLayoutItem_ptr(ptr: *mut ::grid_layout::GridLayout) -> *mut ::layout_item::LayoutItem;
  pub fn qt_widgets_c_QGridLayout_G_static_cast_QLayout_ptr(ptr: *mut ::grid_layout::GridLayout) -> *mut ::layout::Layout;
  pub fn qt_widgets_c_QGridLayout_G_static_cast_QObject_ptr(ptr: *mut ::grid_layout::GridLayout) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QGridLayout_addWidget(this_ptr: *mut ::grid_layout::GridLayout, w: *mut ::widget::Widget);
  pub fn qt_widgets_c_QGridLayout_cellRect_to_output(this_ptr: *const ::grid_layout::GridLayout, row: ::libc::c_int, column: ::libc::c_int, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QGridLayout_columnCount(this_ptr: *const ::grid_layout::GridLayout) -> ::libc::c_int;
  pub fn qt_widgets_c_QGridLayout_columnMinimumWidth(this_ptr: *const ::grid_layout::GridLayout, column: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QGridLayout_columnStretch(this_ptr: *const ::grid_layout::GridLayout, column: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QGridLayout_count(this_ptr: *const ::grid_layout::GridLayout) -> ::libc::c_int;
  pub fn qt_widgets_c_QGridLayout_delete(this_ptr: *mut ::grid_layout::GridLayout);
  pub fn qt_widgets_c_QGridLayout_getItemPosition(this_ptr: *const ::grid_layout::GridLayout, idx: ::libc::c_int, row: *mut ::libc::c_int, column: *mut ::libc::c_int, rowSpan: *mut ::libc::c_int, columnSpan: *mut ::libc::c_int);
  pub fn qt_widgets_c_QGridLayout_hasHeightForWidth(this_ptr: *const ::grid_layout::GridLayout) -> bool;
  pub fn qt_widgets_c_QGridLayout_heightForWidth(this_ptr: *const ::grid_layout::GridLayout, arg1: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QGridLayout_horizontalSpacing(this_ptr: *const ::grid_layout::GridLayout) -> ::libc::c_int;
  pub fn qt_widgets_c_QGridLayout_invalidate(this_ptr: *mut ::grid_layout::GridLayout);
  pub fn qt_widgets_c_QGridLayout_itemAt(this_ptr: *const ::grid_layout::GridLayout, index: ::libc::c_int) -> *mut ::layout_item::LayoutItem;
  pub fn qt_widgets_c_QGridLayout_itemAtPosition(this_ptr: *const ::grid_layout::GridLayout, row: ::libc::c_int, column: ::libc::c_int) -> *mut ::layout_item::LayoutItem;
  pub fn qt_widgets_c_QGridLayout_maximumSize_to_output(this_ptr: *const ::grid_layout::GridLayout, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QGridLayout_metaObject(this_ptr: *const ::grid_layout::GridLayout) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QGridLayout_minimumHeightForWidth(this_ptr: *const ::grid_layout::GridLayout, arg1: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QGridLayout_minimumSize_to_output(this_ptr: *const ::grid_layout::GridLayout, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QGridLayout_new_no_args() -> *mut ::grid_layout::GridLayout;
  pub fn qt_widgets_c_QGridLayout_new_parent(parent: *mut ::widget::Widget) -> *mut ::grid_layout::GridLayout;
  pub fn qt_widgets_c_QGridLayout_qt_metacall(this_ptr: *mut ::grid_layout::GridLayout, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QGridLayout_qt_metacast(this_ptr: *mut ::grid_layout::GridLayout, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QGridLayout_rowCount(this_ptr: *const ::grid_layout::GridLayout) -> ::libc::c_int;
  pub fn qt_widgets_c_QGridLayout_rowMinimumHeight(this_ptr: *const ::grid_layout::GridLayout, row: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QGridLayout_rowStretch(this_ptr: *const ::grid_layout::GridLayout, row: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QGridLayout_setColumnMinimumWidth(this_ptr: *mut ::grid_layout::GridLayout, column: ::libc::c_int, minSize: ::libc::c_int);
  pub fn qt_widgets_c_QGridLayout_setColumnStretch(this_ptr: *mut ::grid_layout::GridLayout, column: ::libc::c_int, stretch: ::libc::c_int);
  pub fn qt_widgets_c_QGridLayout_setDefaultPositioning(this_ptr: *mut ::grid_layout::GridLayout, n: ::libc::c_int, orient: *const ::qt_core::qt::Orientation);
  pub fn qt_widgets_c_QGridLayout_setGeometry(this_ptr: *mut ::grid_layout::GridLayout, arg1: *const ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QGridLayout_setHorizontalSpacing(this_ptr: *mut ::grid_layout::GridLayout, spacing: ::libc::c_int);
  pub fn qt_widgets_c_QGridLayout_setOriginCorner(this_ptr: *mut ::grid_layout::GridLayout, arg1: *const ::qt_core::qt::Corner);
  pub fn qt_widgets_c_QGridLayout_setRowMinimumHeight(this_ptr: *mut ::grid_layout::GridLayout, row: ::libc::c_int, minSize: ::libc::c_int);
  pub fn qt_widgets_c_QGridLayout_setRowStretch(this_ptr: *mut ::grid_layout::GridLayout, row: ::libc::c_int, stretch: ::libc::c_int);
  pub fn qt_widgets_c_QGridLayout_setSpacing(this_ptr: *mut ::grid_layout::GridLayout, spacing: ::libc::c_int);
  pub fn qt_widgets_c_QGridLayout_setVerticalSpacing(this_ptr: *mut ::grid_layout::GridLayout, spacing: ::libc::c_int);
  pub fn qt_widgets_c_QGridLayout_sizeHint_to_output(this_ptr: *const ::grid_layout::GridLayout, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QGridLayout_spacing(this_ptr: *const ::grid_layout::GridLayout) -> ::libc::c_int;
  pub fn qt_widgets_c_QGridLayout_takeAt(this_ptr: *mut ::grid_layout::GridLayout, index: ::libc::c_int) -> *mut ::layout_item::LayoutItem;
  pub fn qt_widgets_c_QGridLayout_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGridLayout_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGridLayout_verticalSpacing(this_ptr: *const ::grid_layout::GridLayout) -> ::libc::c_int;

  // Header: QGroupBox
  pub fn qt_widgets_c_QGroupBox_G_dynamic_cast_QGroupBox_ptr(ptr: *mut ::widget::Widget) -> *mut ::group_box::GroupBox;
  pub fn qt_widgets_c_QGroupBox_G_static_cast_QGroupBox_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::group_box::GroupBox;
  pub fn qt_widgets_c_QGroupBox_G_static_cast_QGroupBox_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::group_box::GroupBox;
  pub fn qt_widgets_c_QGroupBox_G_static_cast_QGroupBox_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::group_box::GroupBox;
  pub fn qt_widgets_c_QGroupBox_G_static_cast_QObject_ptr(ptr: *mut ::group_box::GroupBox) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QGroupBox_G_static_cast_QPaintDevice_ptr(ptr: *mut ::group_box::GroupBox) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QGroupBox_G_static_cast_QWidget_ptr(ptr: *mut ::group_box::GroupBox) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QGroupBox_delete(this_ptr: *mut ::group_box::GroupBox);
  pub fn qt_widgets_c_QGroupBox_isCheckable(this_ptr: *const ::group_box::GroupBox) -> bool;
  pub fn qt_widgets_c_QGroupBox_isChecked(this_ptr: *const ::group_box::GroupBox) -> bool;
  pub fn qt_widgets_c_QGroupBox_isFlat(this_ptr: *const ::group_box::GroupBox) -> bool;
  pub fn qt_widgets_c_QGroupBox_metaObject(this_ptr: *const ::group_box::GroupBox) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QGroupBox_minimumSizeHint_to_output(this_ptr: *const ::group_box::GroupBox, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QGroupBox_new_no_args() -> *mut ::group_box::GroupBox;
  pub fn qt_widgets_c_QGroupBox_new_parent(parent: *mut ::widget::Widget) -> *mut ::group_box::GroupBox;
  pub fn qt_widgets_c_QGroupBox_new_title(title: *const ::qt_core::string::String) -> *mut ::group_box::GroupBox;
  pub fn qt_widgets_c_QGroupBox_new_title_parent(title: *const ::qt_core::string::String, parent: *mut ::widget::Widget) -> *mut ::group_box::GroupBox;
  pub fn qt_widgets_c_QGroupBox_qt_metacall(this_ptr: *mut ::group_box::GroupBox, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QGroupBox_qt_metacast(this_ptr: *mut ::group_box::GroupBox, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QGroupBox_setAlignment(this_ptr: *mut ::group_box::GroupBox, alignment: ::libc::c_int);
  pub fn qt_widgets_c_QGroupBox_setCheckable(this_ptr: *mut ::group_box::GroupBox, checkable: bool);
  pub fn qt_widgets_c_QGroupBox_setChecked(this_ptr: *mut ::group_box::GroupBox, checked: bool);
  pub fn qt_widgets_c_QGroupBox_setFlat(this_ptr: *mut ::group_box::GroupBox, flat: bool);
  pub fn qt_widgets_c_QGroupBox_setTitle(this_ptr: *mut ::group_box::GroupBox, title: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QGroupBox_title_to_output(this_ptr: *const ::group_box::GroupBox, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGroupBox_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QGroupBox_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QHBoxLayout
  pub fn qt_widgets_c_QHBoxLayout_G_dynamic_cast_QHBoxLayout_ptr_QBoxLayout(ptr: *mut ::box_layout::BoxLayout) -> *mut ::h_box_layout::HBoxLayout;
  pub fn qt_widgets_c_QHBoxLayout_G_dynamic_cast_QHBoxLayout_ptr_QLayout(ptr: *mut ::layout::Layout) -> *mut ::h_box_layout::HBoxLayout;
  pub fn qt_widgets_c_QHBoxLayout_G_dynamic_cast_QHBoxLayout_ptr_QLayoutItem(ptr: *mut ::layout_item::LayoutItem) -> *mut ::h_box_layout::HBoxLayout;
  pub fn qt_widgets_c_QHBoxLayout_G_static_cast_QBoxLayout_ptr(ptr: *mut ::h_box_layout::HBoxLayout) -> *mut ::box_layout::BoxLayout;
  pub fn qt_widgets_c_QHBoxLayout_G_static_cast_QHBoxLayout_ptr_QBoxLayout(ptr: *mut ::box_layout::BoxLayout) -> *mut ::h_box_layout::HBoxLayout;
  pub fn qt_widgets_c_QHBoxLayout_G_static_cast_QHBoxLayout_ptr_QLayout(ptr: *mut ::layout::Layout) -> *mut ::h_box_layout::HBoxLayout;
  pub fn qt_widgets_c_QHBoxLayout_G_static_cast_QHBoxLayout_ptr_QLayoutItem(ptr: *mut ::layout_item::LayoutItem) -> *mut ::h_box_layout::HBoxLayout;
  pub fn qt_widgets_c_QHBoxLayout_G_static_cast_QHBoxLayout_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::h_box_layout::HBoxLayout;
  pub fn qt_widgets_c_QHBoxLayout_G_static_cast_QLayoutItem_ptr(ptr: *mut ::h_box_layout::HBoxLayout) -> *mut ::layout_item::LayoutItem;
  pub fn qt_widgets_c_QHBoxLayout_G_static_cast_QLayout_ptr(ptr: *mut ::h_box_layout::HBoxLayout) -> *mut ::layout::Layout;
  pub fn qt_widgets_c_QHBoxLayout_G_static_cast_QObject_ptr(ptr: *mut ::h_box_layout::HBoxLayout) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QHBoxLayout_delete(this_ptr: *mut ::h_box_layout::HBoxLayout);
  pub fn qt_widgets_c_QHBoxLayout_metaObject(this_ptr: *const ::h_box_layout::HBoxLayout) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QHBoxLayout_new_no_args() -> *mut ::h_box_layout::HBoxLayout;
  pub fn qt_widgets_c_QHBoxLayout_new_parent(parent: *mut ::widget::Widget) -> *mut ::h_box_layout::HBoxLayout;
  pub fn qt_widgets_c_QHBoxLayout_qt_metacall(this_ptr: *mut ::h_box_layout::HBoxLayout, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QHBoxLayout_qt_metacast(this_ptr: *mut ::h_box_layout::HBoxLayout, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QHBoxLayout_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QHBoxLayout_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QHash
  pub fn qt_widgets_c_QHash_int_QItemEditorCreatorBase_ptr_capacity(this_ptr: *const ::hash::HashCIntItemEditorCreatorBaseMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QHash_int_QItemEditorCreatorBase_ptr_clear(this_ptr: *mut ::hash::HashCIntItemEditorCreatorBaseMutPtr);
  pub fn qt_widgets_c_QHash_int_QItemEditorCreatorBase_ptr_constructor(output: *mut ::hash::HashCIntItemEditorCreatorBaseMutPtr);
  pub fn qt_widgets_c_QHash_int_QItemEditorCreatorBase_ptr_contains(this_ptr: *const ::hash::HashCIntItemEditorCreatorBaseMutPtr, key: *const ::libc::c_int) -> bool;
  pub fn qt_widgets_c_QHash_int_QItemEditorCreatorBase_ptr_count_key(this_ptr: *const ::hash::HashCIntItemEditorCreatorBaseMutPtr, key: *const ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QHash_int_QItemEditorCreatorBase_ptr_count_no_args(this_ptr: *const ::hash::HashCIntItemEditorCreatorBaseMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QHash_int_QItemEditorCreatorBase_ptr_destructor(this_ptr: *mut ::hash::HashCIntItemEditorCreatorBaseMutPtr);
  pub fn qt_widgets_c_QHash_int_QItemEditorCreatorBase_ptr_empty(this_ptr: *const ::hash::HashCIntItemEditorCreatorBaseMutPtr) -> bool;
  pub fn qt_widgets_c_QHash_int_QItemEditorCreatorBase_ptr_isEmpty(this_ptr: *const ::hash::HashCIntItemEditorCreatorBaseMutPtr) -> bool;
  pub fn qt_widgets_c_QHash_int_QItemEditorCreatorBase_ptr_key_value(this_ptr: *const ::hash::HashCIntItemEditorCreatorBaseMutPtr, value: *const *mut ::item_editor_creator_base::ItemEditorCreatorBase) -> ::libc::c_int;
  pub fn qt_widgets_c_QHash_int_QItemEditorCreatorBase_ptr_key_value_defaultKey(this_ptr: *const ::hash::HashCIntItemEditorCreatorBaseMutPtr, value: *const *mut ::item_editor_creator_base::ItemEditorCreatorBase, defaultKey: *const ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QHash_int_QItemEditorCreatorBase_ptr_keys_to_output_no_args(this_ptr: *const ::hash::HashCIntItemEditorCreatorBaseMutPtr, output: *mut ::qt_core::list::ListCInt);
  pub fn qt_widgets_c_QHash_int_QItemEditorCreatorBase_ptr_keys_to_output_value(this_ptr: *const ::hash::HashCIntItemEditorCreatorBaseMutPtr, value: *const *mut ::item_editor_creator_base::ItemEditorCreatorBase, output: *mut ::qt_core::list::ListCInt);
  pub fn qt_widgets_c_QHash_int_QItemEditorCreatorBase_ptr_operator_index(this_ptr: *mut ::hash::HashCIntItemEditorCreatorBaseMutPtr, key: *const ::libc::c_int) -> *mut *mut ::item_editor_creator_base::ItemEditorCreatorBase;
  pub fn qt_widgets_c_QHash_int_QItemEditorCreatorBase_ptr_operator_index_const(this_ptr: *const ::hash::HashCIntItemEditorCreatorBaseMutPtr, key: *const ::libc::c_int) -> *mut ::item_editor_creator_base::ItemEditorCreatorBase;
  pub fn qt_widgets_c_QHash_int_QItemEditorCreatorBase_ptr_remove(this_ptr: *mut ::hash::HashCIntItemEditorCreatorBaseMutPtr, key: *const ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QHash_int_QItemEditorCreatorBase_ptr_reserve(this_ptr: *mut ::hash::HashCIntItemEditorCreatorBaseMutPtr, size: ::libc::c_int);
  pub fn qt_widgets_c_QHash_int_QItemEditorCreatorBase_ptr_size(this_ptr: *const ::hash::HashCIntItemEditorCreatorBaseMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QHash_int_QItemEditorCreatorBase_ptr_squeeze(this_ptr: *mut ::hash::HashCIntItemEditorCreatorBaseMutPtr);
  pub fn qt_widgets_c_QHash_int_QItemEditorCreatorBase_ptr_take(this_ptr: *mut ::hash::HashCIntItemEditorCreatorBaseMutPtr, key: *const ::libc::c_int) -> *mut ::item_editor_creator_base::ItemEditorCreatorBase;
  pub fn qt_widgets_c_QHash_int_QItemEditorCreatorBase_ptr_uniqueKeys_to_output(this_ptr: *const ::hash::HashCIntItemEditorCreatorBaseMutPtr, output: *mut ::qt_core::list::ListCInt);
  pub fn qt_widgets_c_QHash_int_QItemEditorCreatorBase_ptr_value_key(this_ptr: *const ::hash::HashCIntItemEditorCreatorBaseMutPtr, key: *const ::libc::c_int) -> *mut ::item_editor_creator_base::ItemEditorCreatorBase;
  pub fn qt_widgets_c_QHash_int_QItemEditorCreatorBase_ptr_value_key_defaultValue(this_ptr: *const ::hash::HashCIntItemEditorCreatorBaseMutPtr, key: *const ::libc::c_int, defaultValue: *const *mut ::item_editor_creator_base::ItemEditorCreatorBase) -> *mut ::item_editor_creator_base::ItemEditorCreatorBase;

  // Header: QHeaderView
  pub fn qt_widgets_c_QHeaderView_G_dynamic_cast_QHeaderView_ptr_QAbstractItemView(ptr: *mut ::abstract_item_view::AbstractItemView) -> *mut ::header_view::HeaderView;
  pub fn qt_widgets_c_QHeaderView_G_dynamic_cast_QHeaderView_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::header_view::HeaderView;
  pub fn qt_widgets_c_QHeaderView_G_dynamic_cast_QHeaderView_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::header_view::HeaderView;
  pub fn qt_widgets_c_QHeaderView_G_dynamic_cast_QHeaderView_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::header_view::HeaderView;
  pub fn qt_widgets_c_QHeaderView_G_static_cast_QAbstractItemView_ptr(ptr: *mut ::header_view::HeaderView) -> *mut ::abstract_item_view::AbstractItemView;
  pub fn qt_widgets_c_QHeaderView_G_static_cast_QAbstractScrollArea_ptr(ptr: *mut ::header_view::HeaderView) -> *mut ::abstract_scroll_area::AbstractScrollArea;
  pub fn qt_widgets_c_QHeaderView_G_static_cast_QFrame_ptr(ptr: *mut ::header_view::HeaderView) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QHeaderView_G_static_cast_QHeaderView_ptr_QAbstractItemView(ptr: *mut ::abstract_item_view::AbstractItemView) -> *mut ::header_view::HeaderView;
  pub fn qt_widgets_c_QHeaderView_G_static_cast_QHeaderView_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::header_view::HeaderView;
  pub fn qt_widgets_c_QHeaderView_G_static_cast_QHeaderView_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::header_view::HeaderView;
  pub fn qt_widgets_c_QHeaderView_G_static_cast_QHeaderView_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::header_view::HeaderView;
  pub fn qt_widgets_c_QHeaderView_G_static_cast_QHeaderView_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::header_view::HeaderView;
  pub fn qt_widgets_c_QHeaderView_G_static_cast_QHeaderView_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::header_view::HeaderView;
  pub fn qt_widgets_c_QHeaderView_G_static_cast_QObject_ptr(ptr: *mut ::header_view::HeaderView) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QHeaderView_G_static_cast_QPaintDevice_ptr(ptr: *mut ::header_view::HeaderView) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QHeaderView_G_static_cast_QWidget_ptr(ptr: *mut ::header_view::HeaderView) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QHeaderView_cascadingSectionResizes(this_ptr: *const ::header_view::HeaderView) -> bool;
  pub fn qt_widgets_c_QHeaderView_count(this_ptr: *const ::header_view::HeaderView) -> ::libc::c_int;
  pub fn qt_widgets_c_QHeaderView_defaultSectionSize(this_ptr: *const ::header_view::HeaderView) -> ::libc::c_int;
  pub fn qt_widgets_c_QHeaderView_delete(this_ptr: *mut ::header_view::HeaderView);
  pub fn qt_widgets_c_QHeaderView_doItemsLayout(this_ptr: *mut ::header_view::HeaderView);
  pub fn qt_widgets_c_QHeaderView_headerDataChanged(this_ptr: *mut ::header_view::HeaderView, orientation: *const ::qt_core::qt::Orientation, logicalFirst: ::libc::c_int, logicalLast: ::libc::c_int);
  pub fn qt_widgets_c_QHeaderView_hiddenSectionCount(this_ptr: *const ::header_view::HeaderView) -> ::libc::c_int;
  pub fn qt_widgets_c_QHeaderView_hideSection(this_ptr: *mut ::header_view::HeaderView, logicalIndex: ::libc::c_int);
  pub fn qt_widgets_c_QHeaderView_highlightSections(this_ptr: *const ::header_view::HeaderView) -> bool;
  pub fn qt_widgets_c_QHeaderView_isSectionHidden(this_ptr: *const ::header_view::HeaderView, logicalIndex: ::libc::c_int) -> bool;
  pub fn qt_widgets_c_QHeaderView_isSortIndicatorShown(this_ptr: *const ::header_view::HeaderView) -> bool;
  pub fn qt_widgets_c_QHeaderView_length(this_ptr: *const ::header_view::HeaderView) -> ::libc::c_int;
  pub fn qt_widgets_c_QHeaderView_logicalIndex(this_ptr: *const ::header_view::HeaderView, visualIndex: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QHeaderView_logicalIndexAt_pos(this_ptr: *const ::header_view::HeaderView, pos: *const ::qt_core::point::Point) -> ::libc::c_int;
  pub fn qt_widgets_c_QHeaderView_logicalIndexAt_position(this_ptr: *const ::header_view::HeaderView, position: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QHeaderView_logicalIndexAt_x_y(this_ptr: *const ::header_view::HeaderView, x: ::libc::c_int, y: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QHeaderView_maximumSectionSize(this_ptr: *const ::header_view::HeaderView) -> ::libc::c_int;
  pub fn qt_widgets_c_QHeaderView_metaObject(this_ptr: *const ::header_view::HeaderView) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QHeaderView_minimumSectionSize(this_ptr: *const ::header_view::HeaderView) -> ::libc::c_int;
  pub fn qt_widgets_c_QHeaderView_moveSection(this_ptr: *mut ::header_view::HeaderView, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QHeaderView_new_orientation(orientation: *const ::qt_core::qt::Orientation) -> *mut ::header_view::HeaderView;
  pub fn qt_widgets_c_QHeaderView_new_orientation_parent(orientation: *const ::qt_core::qt::Orientation, parent: *mut ::widget::Widget) -> *mut ::header_view::HeaderView;
  pub fn qt_widgets_c_QHeaderView_offset(this_ptr: *const ::header_view::HeaderView) -> ::libc::c_int;
  pub fn qt_widgets_c_QHeaderView_qt_metacall(this_ptr: *mut ::header_view::HeaderView, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QHeaderView_qt_metacast(this_ptr: *mut ::header_view::HeaderView, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QHeaderView_reset(this_ptr: *mut ::header_view::HeaderView);
  pub fn qt_widgets_c_QHeaderView_resetDefaultSectionSize(this_ptr: *mut ::header_view::HeaderView);
  pub fn qt_widgets_c_QHeaderView_resizeContentsPrecision(this_ptr: *const ::header_view::HeaderView) -> ::libc::c_int;
  pub fn qt_widgets_c_QHeaderView_resizeSection(this_ptr: *mut ::header_view::HeaderView, logicalIndex: ::libc::c_int, size: ::libc::c_int);
  pub fn qt_widgets_c_QHeaderView_resizeSections(this_ptr: *mut ::header_view::HeaderView, mode: *const ::header_view::ResizeMode);
  pub fn qt_widgets_c_QHeaderView_restoreState(this_ptr: *mut ::header_view::HeaderView, state: *const ::qt_core::byte_array::ByteArray) -> bool;
  pub fn qt_widgets_c_QHeaderView_saveState_to_output(this_ptr: *const ::header_view::HeaderView, output: *mut ::qt_core::byte_array::ByteArray);
  pub fn qt_widgets_c_QHeaderView_sectionPosition(this_ptr: *const ::header_view::HeaderView, logicalIndex: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QHeaderView_sectionResizeMode(this_ptr: *const ::header_view::HeaderView, logicalIndex: ::libc::c_int) -> ::header_view::ResizeMode;
  pub fn qt_widgets_c_QHeaderView_sectionSize(this_ptr: *const ::header_view::HeaderView, logicalIndex: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QHeaderView_sectionSizeHint(this_ptr: *const ::header_view::HeaderView, logicalIndex: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QHeaderView_sectionViewportPosition(this_ptr: *const ::header_view::HeaderView, logicalIndex: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QHeaderView_sectionsClickable(this_ptr: *const ::header_view::HeaderView) -> bool;
  pub fn qt_widgets_c_QHeaderView_sectionsHidden(this_ptr: *const ::header_view::HeaderView) -> bool;
  pub fn qt_widgets_c_QHeaderView_sectionsMovable(this_ptr: *const ::header_view::HeaderView) -> bool;
  pub fn qt_widgets_c_QHeaderView_sectionsMoved(this_ptr: *const ::header_view::HeaderView) -> bool;
  pub fn qt_widgets_c_QHeaderView_setCascadingSectionResizes(this_ptr: *mut ::header_view::HeaderView, enable: bool);
  pub fn qt_widgets_c_QHeaderView_setDefaultSectionSize(this_ptr: *mut ::header_view::HeaderView, size: ::libc::c_int);
  pub fn qt_widgets_c_QHeaderView_setHighlightSections(this_ptr: *mut ::header_view::HeaderView, highlight: bool);
  pub fn qt_widgets_c_QHeaderView_setMaximumSectionSize(this_ptr: *mut ::header_view::HeaderView, size: ::libc::c_int);
  pub fn qt_widgets_c_QHeaderView_setMinimumSectionSize(this_ptr: *mut ::header_view::HeaderView, size: ::libc::c_int);
  pub fn qt_widgets_c_QHeaderView_setModel(this_ptr: *mut ::header_view::HeaderView, model: *mut ::qt_core::abstract_item_model::AbstractItemModel);
  pub fn qt_widgets_c_QHeaderView_setOffset(this_ptr: *mut ::header_view::HeaderView, offset: ::libc::c_int);
  pub fn qt_widgets_c_QHeaderView_setOffsetToLastSection(this_ptr: *mut ::header_view::HeaderView);
  pub fn qt_widgets_c_QHeaderView_setOffsetToSectionPosition(this_ptr: *mut ::header_view::HeaderView, visualIndex: ::libc::c_int);
  pub fn qt_widgets_c_QHeaderView_setResizeContentsPrecision(this_ptr: *mut ::header_view::HeaderView, precision: ::libc::c_int);
  pub fn qt_widgets_c_QHeaderView_setSectionHidden(this_ptr: *mut ::header_view::HeaderView, logicalIndex: ::libc::c_int, hide: bool);
  pub fn qt_widgets_c_QHeaderView_setSectionResizeMode_logicalIndex_mode(this_ptr: *mut ::header_view::HeaderView, logicalIndex: ::libc::c_int, mode: ::header_view::ResizeMode);
  pub fn qt_widgets_c_QHeaderView_setSectionResizeMode_mode(this_ptr: *mut ::header_view::HeaderView, mode: ::header_view::ResizeMode);
  pub fn qt_widgets_c_QHeaderView_setSectionsClickable(this_ptr: *mut ::header_view::HeaderView, clickable: bool);
  pub fn qt_widgets_c_QHeaderView_setSectionsMovable(this_ptr: *mut ::header_view::HeaderView, movable: bool);
  pub fn qt_widgets_c_QHeaderView_setSortIndicator(this_ptr: *mut ::header_view::HeaderView, logicalIndex: ::libc::c_int, order: *const ::qt_core::qt::SortOrder);
  pub fn qt_widgets_c_QHeaderView_setSortIndicatorShown(this_ptr: *mut ::header_view::HeaderView, show: bool);
  pub fn qt_widgets_c_QHeaderView_setStretchLastSection(this_ptr: *mut ::header_view::HeaderView, stretch: bool);
  pub fn qt_widgets_c_QHeaderView_setVisible(this_ptr: *mut ::header_view::HeaderView, v: bool);
  pub fn qt_widgets_c_QHeaderView_showSection(this_ptr: *mut ::header_view::HeaderView, logicalIndex: ::libc::c_int);
  pub fn qt_widgets_c_QHeaderView_sizeHint_to_output(this_ptr: *const ::header_view::HeaderView, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QHeaderView_sortIndicatorSection(this_ptr: *const ::header_view::HeaderView) -> ::libc::c_int;
  pub fn qt_widgets_c_QHeaderView_stretchLastSection(this_ptr: *const ::header_view::HeaderView) -> bool;
  pub fn qt_widgets_c_QHeaderView_stretchSectionCount(this_ptr: *const ::header_view::HeaderView) -> ::libc::c_int;
  pub fn qt_widgets_c_QHeaderView_swapSections(this_ptr: *mut ::header_view::HeaderView, first: ::libc::c_int, second: ::libc::c_int);
  pub fn qt_widgets_c_QHeaderView_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QHeaderView_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QHeaderView_visualIndex(this_ptr: *const ::header_view::HeaderView, logicalIndex: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QHeaderView_visualIndexAt(this_ptr: *const ::header_view::HeaderView, position: ::libc::c_int) -> ::libc::c_int;

  // Header: QInputDialog
  pub fn qt_widgets_c_QInputDialog_G_dynamic_cast_QInputDialog_ptr_QDialog(ptr: *mut ::dialog::Dialog) -> *mut ::input_dialog::InputDialog;
  pub fn qt_widgets_c_QInputDialog_G_dynamic_cast_QInputDialog_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::input_dialog::InputDialog;
  pub fn qt_widgets_c_QInputDialog_G_static_cast_QDialog_ptr(ptr: *mut ::input_dialog::InputDialog) -> *mut ::dialog::Dialog;
  pub fn qt_widgets_c_QInputDialog_G_static_cast_QInputDialog_ptr_QDialog(ptr: *mut ::dialog::Dialog) -> *mut ::input_dialog::InputDialog;
  pub fn qt_widgets_c_QInputDialog_G_static_cast_QInputDialog_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::input_dialog::InputDialog;
  pub fn qt_widgets_c_QInputDialog_G_static_cast_QInputDialog_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::input_dialog::InputDialog;
  pub fn qt_widgets_c_QInputDialog_G_static_cast_QInputDialog_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::input_dialog::InputDialog;
  pub fn qt_widgets_c_QInputDialog_G_static_cast_QObject_ptr(ptr: *mut ::input_dialog::InputDialog) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QInputDialog_G_static_cast_QPaintDevice_ptr(ptr: *mut ::input_dialog::InputDialog) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QInputDialog_G_static_cast_QWidget_ptr(ptr: *mut ::input_dialog::InputDialog) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QInputDialog_cancelButtonText_to_output(this_ptr: *const ::input_dialog::InputDialog, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QInputDialog_comboBoxItems_to_output(this_ptr: *const ::input_dialog::InputDialog, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QInputDialog_delete(this_ptr: *mut ::input_dialog::InputDialog);
  pub fn qt_widgets_c_QInputDialog_done(this_ptr: *mut ::input_dialog::InputDialog, result: ::libc::c_int);
  pub fn qt_widgets_c_QInputDialog_doubleDecimals(this_ptr: *const ::input_dialog::InputDialog) -> ::libc::c_int;
  pub fn qt_widgets_c_QInputDialog_doubleMaximum(this_ptr: *const ::input_dialog::InputDialog) -> ::libc::c_double;
  pub fn qt_widgets_c_QInputDialog_doubleMinimum(this_ptr: *const ::input_dialog::InputDialog) -> ::libc::c_double;
  pub fn qt_widgets_c_QInputDialog_doubleValue(this_ptr: *const ::input_dialog::InputDialog) -> ::libc::c_double;
  pub fn qt_widgets_c_QInputDialog_inputMode(this_ptr: *const ::input_dialog::InputDialog) -> ::input_dialog::InputMode;
  pub fn qt_widgets_c_QInputDialog_intMaximum(this_ptr: *const ::input_dialog::InputDialog) -> ::libc::c_int;
  pub fn qt_widgets_c_QInputDialog_intMinimum(this_ptr: *const ::input_dialog::InputDialog) -> ::libc::c_int;
  pub fn qt_widgets_c_QInputDialog_intStep(this_ptr: *const ::input_dialog::InputDialog) -> ::libc::c_int;
  pub fn qt_widgets_c_QInputDialog_intValue(this_ptr: *const ::input_dialog::InputDialog) -> ::libc::c_int;
  pub fn qt_widgets_c_QInputDialog_isComboBoxEditable(this_ptr: *const ::input_dialog::InputDialog) -> bool;
  pub fn qt_widgets_c_QInputDialog_labelText_to_output(this_ptr: *const ::input_dialog::InputDialog, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QInputDialog_metaObject(this_ptr: *const ::input_dialog::InputDialog) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QInputDialog_minimumSizeHint_to_output(this_ptr: *const ::input_dialog::InputDialog, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QInputDialog_okButtonText_to_output(this_ptr: *const ::input_dialog::InputDialog, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QInputDialog_open(this_ptr: *mut ::input_dialog::InputDialog, receiver: *mut ::qt_core::object::Object, member: *const ::libc::c_char);
  pub fn qt_widgets_c_QInputDialog_options(this_ptr: *const ::input_dialog::InputDialog) -> ::libc::c_uint;
  pub fn qt_widgets_c_QInputDialog_qt_metacall(this_ptr: *mut ::input_dialog::InputDialog, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QInputDialog_qt_metacast(this_ptr: *mut ::input_dialog::InputDialog, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QInputDialog_setCancelButtonText(this_ptr: *mut ::input_dialog::InputDialog, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QInputDialog_setComboBoxEditable(this_ptr: *mut ::input_dialog::InputDialog, editable: bool);
  pub fn qt_widgets_c_QInputDialog_setComboBoxItems(this_ptr: *mut ::input_dialog::InputDialog, items: *const ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QInputDialog_setDoubleDecimals(this_ptr: *mut ::input_dialog::InputDialog, decimals: ::libc::c_int);
  pub fn qt_widgets_c_QInputDialog_setDoubleMaximum(this_ptr: *mut ::input_dialog::InputDialog, max: ::libc::c_double);
  pub fn qt_widgets_c_QInputDialog_setDoubleMinimum(this_ptr: *mut ::input_dialog::InputDialog, min: ::libc::c_double);
  pub fn qt_widgets_c_QInputDialog_setDoubleRange(this_ptr: *mut ::input_dialog::InputDialog, min: ::libc::c_double, max: ::libc::c_double);
  pub fn qt_widgets_c_QInputDialog_setDoubleValue(this_ptr: *mut ::input_dialog::InputDialog, value: ::libc::c_double);
  pub fn qt_widgets_c_QInputDialog_setInputMode(this_ptr: *mut ::input_dialog::InputDialog, mode: ::input_dialog::InputMode);
  pub fn qt_widgets_c_QInputDialog_setIntMaximum(this_ptr: *mut ::input_dialog::InputDialog, max: ::libc::c_int);
  pub fn qt_widgets_c_QInputDialog_setIntMinimum(this_ptr: *mut ::input_dialog::InputDialog, min: ::libc::c_int);
  pub fn qt_widgets_c_QInputDialog_setIntRange(this_ptr: *mut ::input_dialog::InputDialog, min: ::libc::c_int, max: ::libc::c_int);
  pub fn qt_widgets_c_QInputDialog_setIntStep(this_ptr: *mut ::input_dialog::InputDialog, step: ::libc::c_int);
  pub fn qt_widgets_c_QInputDialog_setIntValue(this_ptr: *mut ::input_dialog::InputDialog, value: ::libc::c_int);
  pub fn qt_widgets_c_QInputDialog_setLabelText(this_ptr: *mut ::input_dialog::InputDialog, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QInputDialog_setOkButtonText(this_ptr: *mut ::input_dialog::InputDialog, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QInputDialog_setOption_option(this_ptr: *mut ::input_dialog::InputDialog, option: ::input_dialog::InputDialogOption);
  pub fn qt_widgets_c_QInputDialog_setOption_option_on(this_ptr: *mut ::input_dialog::InputDialog, option: ::input_dialog::InputDialogOption, on: bool);
  pub fn qt_widgets_c_QInputDialog_setOptions(this_ptr: *mut ::input_dialog::InputDialog, options: ::libc::c_uint);
  pub fn qt_widgets_c_QInputDialog_setTextEchoMode(this_ptr: *mut ::input_dialog::InputDialog, mode: *const ::line_edit::EchoMode);
  pub fn qt_widgets_c_QInputDialog_setTextValue(this_ptr: *mut ::input_dialog::InputDialog, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QInputDialog_setVisible(this_ptr: *mut ::input_dialog::InputDialog, visible: bool);
  pub fn qt_widgets_c_QInputDialog_sizeHint_to_output(this_ptr: *const ::input_dialog::InputDialog, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QInputDialog_testOption(this_ptr: *const ::input_dialog::InputDialog, option: ::input_dialog::InputDialogOption) -> bool;
  pub fn qt_widgets_c_QInputDialog_textValue_to_output(this_ptr: *const ::input_dialog::InputDialog, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QInputDialog_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QInputDialog_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QItemDelegate
  pub fn qt_widgets_c_QItemDelegate_G_dynamic_cast_QItemDelegate_ptr(ptr: *mut ::abstract_item_delegate::AbstractItemDelegate) -> *mut ::item_delegate::ItemDelegate;
  pub fn qt_widgets_c_QItemDelegate_G_static_cast_QAbstractItemDelegate_ptr(ptr: *mut ::item_delegate::ItemDelegate) -> *mut ::abstract_item_delegate::AbstractItemDelegate;
  pub fn qt_widgets_c_QItemDelegate_G_static_cast_QItemDelegate_ptr_QAbstractItemDelegate(ptr: *mut ::abstract_item_delegate::AbstractItemDelegate) -> *mut ::item_delegate::ItemDelegate;
  pub fn qt_widgets_c_QItemDelegate_G_static_cast_QItemDelegate_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::item_delegate::ItemDelegate;
  pub fn qt_widgets_c_QItemDelegate_G_static_cast_QObject_ptr(ptr: *mut ::item_delegate::ItemDelegate) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QItemDelegate_createEditor(this_ptr: *const ::item_delegate::ItemDelegate, parent: *mut ::widget::Widget, option: *const ::style_option_view_item::StyleOptionViewItem, index: *const ::qt_core::model_index::ModelIndex) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QItemDelegate_delete(this_ptr: *mut ::item_delegate::ItemDelegate);
  pub fn qt_widgets_c_QItemDelegate_hasClipping(this_ptr: *const ::item_delegate::ItemDelegate) -> bool;
  pub fn qt_widgets_c_QItemDelegate_itemEditorFactory(this_ptr: *const ::item_delegate::ItemDelegate) -> *mut ::item_editor_factory::ItemEditorFactory;
  pub fn qt_widgets_c_QItemDelegate_metaObject(this_ptr: *const ::item_delegate::ItemDelegate) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QItemDelegate_new_no_args() -> *mut ::item_delegate::ItemDelegate;
  pub fn qt_widgets_c_QItemDelegate_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::item_delegate::ItemDelegate;
  pub fn qt_widgets_c_QItemDelegate_paint(this_ptr: *const ::item_delegate::ItemDelegate, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_view_item::StyleOptionViewItem, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QItemDelegate_qt_metacall(this_ptr: *mut ::item_delegate::ItemDelegate, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QItemDelegate_qt_metacast(this_ptr: *mut ::item_delegate::ItemDelegate, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QItemDelegate_setClipping(this_ptr: *mut ::item_delegate::ItemDelegate, clip: bool);
  pub fn qt_widgets_c_QItemDelegate_setEditorData(this_ptr: *const ::item_delegate::ItemDelegate, editor: *mut ::widget::Widget, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QItemDelegate_setItemEditorFactory(this_ptr: *mut ::item_delegate::ItemDelegate, factory: *mut ::item_editor_factory::ItemEditorFactory);
  pub fn qt_widgets_c_QItemDelegate_setModelData(this_ptr: *const ::item_delegate::ItemDelegate, editor: *mut ::widget::Widget, model: *mut ::qt_core::abstract_item_model::AbstractItemModel, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QItemDelegate_sizeHint_to_output(this_ptr: *const ::item_delegate::ItemDelegate, option: *const ::style_option_view_item::StyleOptionViewItem, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QItemDelegate_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QItemDelegate_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QItemDelegate_updateEditorGeometry(this_ptr: *const ::item_delegate::ItemDelegate, editor: *mut ::widget::Widget, option: *const ::style_option_view_item::StyleOptionViewItem, index: *const ::qt_core::model_index::ModelIndex);

  // Header: QItemEditorCreatorBase
  pub fn qt_widgets_c_QItemEditorCreatorBase_createWidget(this_ptr: *const ::item_editor_creator_base::ItemEditorCreatorBase, parent: *mut ::widget::Widget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QItemEditorCreatorBase_delete(this_ptr: *mut ::item_editor_creator_base::ItemEditorCreatorBase);
  pub fn qt_widgets_c_QItemEditorCreatorBase_valuePropertyName_to_output(this_ptr: *const ::item_editor_creator_base::ItemEditorCreatorBase, output: *mut ::qt_core::byte_array::ByteArray);

  // Header: QItemEditorFactory
  pub fn qt_widgets_c_QItemEditorFactory_createEditor(this_ptr: *const ::item_editor_factory::ItemEditorFactory, userType: ::libc::c_int, parent: *mut ::widget::Widget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QItemEditorFactory_defaultFactory() -> *const ::item_editor_factory::ItemEditorFactory;
  pub fn qt_widgets_c_QItemEditorFactory_delete(this_ptr: *mut ::item_editor_factory::ItemEditorFactory);
  pub fn qt_widgets_c_QItemEditorFactory_new() -> *mut ::item_editor_factory::ItemEditorFactory;
  pub fn qt_widgets_c_QItemEditorFactory_registerEditor(this_ptr: *mut ::item_editor_factory::ItemEditorFactory, userType: ::libc::c_int, creator: *mut ::item_editor_creator_base::ItemEditorCreatorBase);
  pub fn qt_widgets_c_QItemEditorFactory_setDefaultFactory(factory: *mut ::item_editor_factory::ItemEditorFactory);
  pub fn qt_widgets_c_QItemEditorFactory_valuePropertyName_to_output(this_ptr: *const ::item_editor_factory::ItemEditorFactory, userType: ::libc::c_int, output: *mut ::qt_core::byte_array::ByteArray);

  // Header: QKeyEventTransition
  pub fn qt_widgets_c_QKeyEventTransition_G_static_cast_QAbstractTransition_ptr(ptr: *mut ::key_event_transition::KeyEventTransition) -> *mut ::qt_core::abstract_transition::AbstractTransition;
  pub fn qt_widgets_c_QKeyEventTransition_G_static_cast_QEventTransition_ptr(ptr: *mut ::key_event_transition::KeyEventTransition) -> *mut ::qt_core::event_transition::EventTransition;
  pub fn qt_widgets_c_QKeyEventTransition_G_static_cast_QKeyEventTransition_ptr_QAbstractTransition(ptr: *mut ::qt_core::abstract_transition::AbstractTransition) -> *mut ::key_event_transition::KeyEventTransition;
  pub fn qt_widgets_c_QKeyEventTransition_G_static_cast_QKeyEventTransition_ptr_QEventTransition(ptr: *mut ::qt_core::event_transition::EventTransition) -> *mut ::key_event_transition::KeyEventTransition;
  pub fn qt_widgets_c_QKeyEventTransition_G_static_cast_QKeyEventTransition_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::key_event_transition::KeyEventTransition;
  pub fn qt_widgets_c_QKeyEventTransition_G_static_cast_QObject_ptr(ptr: *mut ::key_event_transition::KeyEventTransition) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QKeyEventTransition_delete(this_ptr: *mut ::key_event_transition::KeyEventTransition);
  pub fn qt_widgets_c_QKeyEventTransition_key(this_ptr: *const ::key_event_transition::KeyEventTransition) -> ::libc::c_int;
  pub fn qt_widgets_c_QKeyEventTransition_metaObject(this_ptr: *const ::key_event_transition::KeyEventTransition) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QKeyEventTransition_new_no_args() -> *mut ::key_event_transition::KeyEventTransition;
  pub fn qt_widgets_c_QKeyEventTransition_new_object_type_key(object: *mut ::qt_core::object::Object, type_: *const ::qt_core::event::Type, key: ::libc::c_int) -> *mut ::key_event_transition::KeyEventTransition;
  pub fn qt_widgets_c_QKeyEventTransition_new_object_type_key_sourceState(object: *mut ::qt_core::object::Object, type_: *const ::qt_core::event::Type, key: ::libc::c_int, sourceState: *mut ::qt_core::state::State) -> *mut ::key_event_transition::KeyEventTransition;
  pub fn qt_widgets_c_QKeyEventTransition_new_sourceState(sourceState: *mut ::qt_core::state::State) -> *mut ::key_event_transition::KeyEventTransition;
  pub fn qt_widgets_c_QKeyEventTransition_qt_metacall(this_ptr: *mut ::key_event_transition::KeyEventTransition, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QKeyEventTransition_qt_metacast(this_ptr: *mut ::key_event_transition::KeyEventTransition, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QKeyEventTransition_setKey(this_ptr: *mut ::key_event_transition::KeyEventTransition, key: ::libc::c_int);
  pub fn qt_widgets_c_QKeyEventTransition_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QKeyEventTransition_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QKeySequenceEdit
  pub fn qt_widgets_c_QKeySequenceEdit_G_dynamic_cast_QKeySequenceEdit_ptr(ptr: *mut ::widget::Widget) -> *mut ::key_sequence_edit::KeySequenceEdit;
  pub fn qt_widgets_c_QKeySequenceEdit_G_static_cast_QKeySequenceEdit_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::key_sequence_edit::KeySequenceEdit;
  pub fn qt_widgets_c_QKeySequenceEdit_G_static_cast_QKeySequenceEdit_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::key_sequence_edit::KeySequenceEdit;
  pub fn qt_widgets_c_QKeySequenceEdit_G_static_cast_QKeySequenceEdit_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::key_sequence_edit::KeySequenceEdit;
  pub fn qt_widgets_c_QKeySequenceEdit_G_static_cast_QObject_ptr(ptr: *mut ::key_sequence_edit::KeySequenceEdit) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QKeySequenceEdit_G_static_cast_QPaintDevice_ptr(ptr: *mut ::key_sequence_edit::KeySequenceEdit) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QKeySequenceEdit_G_static_cast_QWidget_ptr(ptr: *mut ::key_sequence_edit::KeySequenceEdit) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QKeySequenceEdit_clear(this_ptr: *mut ::key_sequence_edit::KeySequenceEdit);
  pub fn qt_widgets_c_QKeySequenceEdit_delete(this_ptr: *mut ::key_sequence_edit::KeySequenceEdit);
  pub fn qt_widgets_c_QKeySequenceEdit_keySequence_to_output(this_ptr: *const ::key_sequence_edit::KeySequenceEdit, output: *mut ::qt_gui::key_sequence::KeySequence);
  pub fn qt_widgets_c_QKeySequenceEdit_metaObject(this_ptr: *const ::key_sequence_edit::KeySequenceEdit) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QKeySequenceEdit_new_keySequence(keySequence: *const ::qt_gui::key_sequence::KeySequence) -> *mut ::key_sequence_edit::KeySequenceEdit;
  pub fn qt_widgets_c_QKeySequenceEdit_new_keySequence_parent(keySequence: *const ::qt_gui::key_sequence::KeySequence, parent: *mut ::widget::Widget) -> *mut ::key_sequence_edit::KeySequenceEdit;
  pub fn qt_widgets_c_QKeySequenceEdit_new_no_args() -> *mut ::key_sequence_edit::KeySequenceEdit;
  pub fn qt_widgets_c_QKeySequenceEdit_new_parent(parent: *mut ::widget::Widget) -> *mut ::key_sequence_edit::KeySequenceEdit;
  pub fn qt_widgets_c_QKeySequenceEdit_qt_metacall(this_ptr: *mut ::key_sequence_edit::KeySequenceEdit, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QKeySequenceEdit_qt_metacast(this_ptr: *mut ::key_sequence_edit::KeySequenceEdit, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QKeySequenceEdit_setKeySequence(this_ptr: *mut ::key_sequence_edit::KeySequenceEdit, keySequence: *const ::qt_gui::key_sequence::KeySequence);
  pub fn qt_widgets_c_QKeySequenceEdit_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QKeySequenceEdit_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QLCDNumber
  pub fn qt_widgets_c_QLCDNumber_G_dynamic_cast_QLCDNumber_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::l_c_d_number::LCDNumber;
  pub fn qt_widgets_c_QLCDNumber_G_dynamic_cast_QLCDNumber_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::l_c_d_number::LCDNumber;
  pub fn qt_widgets_c_QLCDNumber_G_static_cast_QFrame_ptr(ptr: *mut ::l_c_d_number::LCDNumber) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QLCDNumber_G_static_cast_QLCDNumber_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::l_c_d_number::LCDNumber;
  pub fn qt_widgets_c_QLCDNumber_G_static_cast_QLCDNumber_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::l_c_d_number::LCDNumber;
  pub fn qt_widgets_c_QLCDNumber_G_static_cast_QLCDNumber_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::l_c_d_number::LCDNumber;
  pub fn qt_widgets_c_QLCDNumber_G_static_cast_QLCDNumber_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::l_c_d_number::LCDNumber;
  pub fn qt_widgets_c_QLCDNumber_G_static_cast_QObject_ptr(ptr: *mut ::l_c_d_number::LCDNumber) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QLCDNumber_G_static_cast_QPaintDevice_ptr(ptr: *mut ::l_c_d_number::LCDNumber) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QLCDNumber_G_static_cast_QWidget_ptr(ptr: *mut ::l_c_d_number::LCDNumber) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QLCDNumber_checkOverflow_double(this_ptr: *const ::l_c_d_number::LCDNumber, num: ::libc::c_double) -> bool;
  pub fn qt_widgets_c_QLCDNumber_checkOverflow_int(this_ptr: *const ::l_c_d_number::LCDNumber, num: ::libc::c_int) -> bool;
  pub fn qt_widgets_c_QLCDNumber_delete(this_ptr: *mut ::l_c_d_number::LCDNumber);
  pub fn qt_widgets_c_QLCDNumber_digitCount(this_ptr: *const ::l_c_d_number::LCDNumber) -> ::libc::c_int;
  pub fn qt_widgets_c_QLCDNumber_display_QString(this_ptr: *mut ::l_c_d_number::LCDNumber, str: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QLCDNumber_display_double(this_ptr: *mut ::l_c_d_number::LCDNumber, num: ::libc::c_double);
  pub fn qt_widgets_c_QLCDNumber_display_int(this_ptr: *mut ::l_c_d_number::LCDNumber, num: ::libc::c_int);
  pub fn qt_widgets_c_QLCDNumber_intValue(this_ptr: *const ::l_c_d_number::LCDNumber) -> ::libc::c_int;
  pub fn qt_widgets_c_QLCDNumber_metaObject(this_ptr: *const ::l_c_d_number::LCDNumber) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QLCDNumber_mode(this_ptr: *const ::l_c_d_number::LCDNumber) -> ::l_c_d_number::Mode;
  pub fn qt_widgets_c_QLCDNumber_new_no_args() -> *mut ::l_c_d_number::LCDNumber;
  pub fn qt_widgets_c_QLCDNumber_new_numDigits(numDigits: ::libc::c_uint) -> *mut ::l_c_d_number::LCDNumber;
  pub fn qt_widgets_c_QLCDNumber_new_numDigits_parent(numDigits: ::libc::c_uint, parent: *mut ::widget::Widget) -> *mut ::l_c_d_number::LCDNumber;
  pub fn qt_widgets_c_QLCDNumber_new_parent(parent: *mut ::widget::Widget) -> *mut ::l_c_d_number::LCDNumber;
  pub fn qt_widgets_c_QLCDNumber_qt_metacall(this_ptr: *mut ::l_c_d_number::LCDNumber, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QLCDNumber_qt_metacast(this_ptr: *mut ::l_c_d_number::LCDNumber, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QLCDNumber_segmentStyle(this_ptr: *const ::l_c_d_number::LCDNumber) -> ::l_c_d_number::SegmentStyle;
  pub fn qt_widgets_c_QLCDNumber_setBinMode(this_ptr: *mut ::l_c_d_number::LCDNumber);
  pub fn qt_widgets_c_QLCDNumber_setDecMode(this_ptr: *mut ::l_c_d_number::LCDNumber);
  pub fn qt_widgets_c_QLCDNumber_setDigitCount(this_ptr: *mut ::l_c_d_number::LCDNumber, nDigits: ::libc::c_int);
  pub fn qt_widgets_c_QLCDNumber_setHexMode(this_ptr: *mut ::l_c_d_number::LCDNumber);
  pub fn qt_widgets_c_QLCDNumber_setMode(this_ptr: *mut ::l_c_d_number::LCDNumber, arg1: ::l_c_d_number::Mode);
  pub fn qt_widgets_c_QLCDNumber_setOctMode(this_ptr: *mut ::l_c_d_number::LCDNumber);
  pub fn qt_widgets_c_QLCDNumber_setSegmentStyle(this_ptr: *mut ::l_c_d_number::LCDNumber, arg1: ::l_c_d_number::SegmentStyle);
  pub fn qt_widgets_c_QLCDNumber_setSmallDecimalPoint(this_ptr: *mut ::l_c_d_number::LCDNumber, arg1: bool);
  pub fn qt_widgets_c_QLCDNumber_sizeHint_to_output(this_ptr: *const ::l_c_d_number::LCDNumber, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QLCDNumber_smallDecimalPoint(this_ptr: *const ::l_c_d_number::LCDNumber) -> bool;
  pub fn qt_widgets_c_QLCDNumber_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QLCDNumber_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QLCDNumber_value(this_ptr: *const ::l_c_d_number::LCDNumber) -> ::libc::c_double;

  // Header: QLabel
  pub fn qt_widgets_c_QLabel_G_dynamic_cast_QLabel_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::label::Label;
  pub fn qt_widgets_c_QLabel_G_dynamic_cast_QLabel_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::label::Label;
  pub fn qt_widgets_c_QLabel_G_static_cast_QFrame_ptr(ptr: *mut ::label::Label) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QLabel_G_static_cast_QLabel_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::label::Label;
  pub fn qt_widgets_c_QLabel_G_static_cast_QLabel_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::label::Label;
  pub fn qt_widgets_c_QLabel_G_static_cast_QLabel_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::label::Label;
  pub fn qt_widgets_c_QLabel_G_static_cast_QLabel_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::label::Label;
  pub fn qt_widgets_c_QLabel_G_static_cast_QObject_ptr(ptr: *mut ::label::Label) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QLabel_G_static_cast_QPaintDevice_ptr(ptr: *mut ::label::Label) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QLabel_G_static_cast_QWidget_ptr(ptr: *mut ::label::Label) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QLabel_buddy(this_ptr: *const ::label::Label) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QLabel_clear(this_ptr: *mut ::label::Label);
  pub fn qt_widgets_c_QLabel_delete(this_ptr: *mut ::label::Label);
  pub fn qt_widgets_c_QLabel_hasScaledContents(this_ptr: *const ::label::Label) -> bool;
  pub fn qt_widgets_c_QLabel_hasSelectedText(this_ptr: *const ::label::Label) -> bool;
  pub fn qt_widgets_c_QLabel_heightForWidth(this_ptr: *const ::label::Label, arg1: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QLabel_indent(this_ptr: *const ::label::Label) -> ::libc::c_int;
  pub fn qt_widgets_c_QLabel_margin(this_ptr: *const ::label::Label) -> ::libc::c_int;
  pub fn qt_widgets_c_QLabel_metaObject(this_ptr: *const ::label::Label) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QLabel_minimumSizeHint_to_output(this_ptr: *const ::label::Label, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QLabel_movie(this_ptr: *const ::label::Label) -> *mut ::qt_gui::movie::Movie;
  pub fn qt_widgets_c_QLabel_openExternalLinks(this_ptr: *const ::label::Label) -> bool;
  pub fn qt_widgets_c_QLabel_picture(this_ptr: *const ::label::Label) -> *const ::qt_gui::picture::Picture;
  pub fn qt_widgets_c_QLabel_pixmap(this_ptr: *const ::label::Label) -> *const ::qt_gui::pixmap::Pixmap;
  pub fn qt_widgets_c_QLabel_qt_metacall(this_ptr: *mut ::label::Label, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QLabel_qt_metacast(this_ptr: *mut ::label::Label, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QLabel_selectedText_to_output(this_ptr: *const ::label::Label, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QLabel_selectionStart(this_ptr: *const ::label::Label) -> ::libc::c_int;
  pub fn qt_widgets_c_QLabel_setBuddy(this_ptr: *mut ::label::Label, arg1: *mut ::widget::Widget);
  pub fn qt_widgets_c_QLabel_setIndent(this_ptr: *mut ::label::Label, arg1: ::libc::c_int);
  pub fn qt_widgets_c_QLabel_setMargin(this_ptr: *mut ::label::Label, arg1: ::libc::c_int);
  pub fn qt_widgets_c_QLabel_setMovie(this_ptr: *mut ::label::Label, movie: *mut ::qt_gui::movie::Movie);
  pub fn qt_widgets_c_QLabel_setNum_double(this_ptr: *mut ::label::Label, arg1: ::libc::c_double);
  pub fn qt_widgets_c_QLabel_setNum_int(this_ptr: *mut ::label::Label, arg1: ::libc::c_int);
  pub fn qt_widgets_c_QLabel_setOpenExternalLinks(this_ptr: *mut ::label::Label, open: bool);
  pub fn qt_widgets_c_QLabel_setPicture(this_ptr: *mut ::label::Label, arg1: *const ::qt_gui::picture::Picture);
  pub fn qt_widgets_c_QLabel_setPixmap(this_ptr: *mut ::label::Label, arg1: *const ::qt_gui::pixmap::Pixmap);
  pub fn qt_widgets_c_QLabel_setScaledContents(this_ptr: *mut ::label::Label, arg1: bool);
  pub fn qt_widgets_c_QLabel_setSelection(this_ptr: *mut ::label::Label, arg1: ::libc::c_int, arg2: ::libc::c_int);
  pub fn qt_widgets_c_QLabel_setText(this_ptr: *mut ::label::Label, arg1: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QLabel_setTextFormat(this_ptr: *mut ::label::Label, arg1: *const ::qt_core::qt::TextFormat);
  pub fn qt_widgets_c_QLabel_setWordWrap(this_ptr: *mut ::label::Label, on: bool);
  pub fn qt_widgets_c_QLabel_sizeHint_to_output(this_ptr: *const ::label::Label, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QLabel_text_to_output(this_ptr: *const ::label::Label, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QLabel_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QLabel_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QLabel_wordWrap(this_ptr: *const ::label::Label) -> bool;

  // Header: QLayout
  pub fn qt_widgets_c_QLayout_G_dynamic_cast_QLayout_ptr(ptr: *mut ::layout_item::LayoutItem) -> *mut ::layout::Layout;
  pub fn qt_widgets_c_QLayout_G_static_cast_QLayoutItem_ptr(ptr: *mut ::layout::Layout) -> *mut ::layout_item::LayoutItem;
  pub fn qt_widgets_c_QLayout_G_static_cast_QLayout_ptr_QLayoutItem(ptr: *mut ::layout_item::LayoutItem) -> *mut ::layout::Layout;
  pub fn qt_widgets_c_QLayout_G_static_cast_QLayout_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::layout::Layout;
  pub fn qt_widgets_c_QLayout_G_static_cast_QObject_ptr(ptr: *mut ::layout::Layout) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QLayout_activate(this_ptr: *mut ::layout::Layout) -> bool;
  pub fn qt_widgets_c_QLayout_addItem(this_ptr: *mut ::layout::Layout, arg1: *mut ::layout_item::LayoutItem);
  pub fn qt_widgets_c_QLayout_addWidget(this_ptr: *mut ::layout::Layout, w: *mut ::widget::Widget);
  pub fn qt_widgets_c_QLayout_closestAcceptableSize_to_output(w: *const ::widget::Widget, s: *const ::qt_core::size::Size, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QLayout_contentsMargins_to_output(this_ptr: *const ::layout::Layout, output: *mut ::qt_core::margins::Margins);
  pub fn qt_widgets_c_QLayout_contentsRect_to_output(this_ptr: *const ::layout::Layout, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QLayout_count(this_ptr: *const ::layout::Layout) -> ::libc::c_int;
  pub fn qt_widgets_c_QLayout_delete(this_ptr: *mut ::layout::Layout);
  pub fn qt_widgets_c_QLayout_geometry_to_output(this_ptr: *const ::layout::Layout, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QLayout_getContentsMargins(this_ptr: *const ::layout::Layout, left: *mut ::libc::c_int, top: *mut ::libc::c_int, right: *mut ::libc::c_int, bottom: *mut ::libc::c_int);
  pub fn qt_widgets_c_QLayout_indexOf(this_ptr: *const ::layout::Layout, arg1: *mut ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QLayout_invalidate(this_ptr: *mut ::layout::Layout);
  pub fn qt_widgets_c_QLayout_isEmpty(this_ptr: *const ::layout::Layout) -> bool;
  pub fn qt_widgets_c_QLayout_isEnabled(this_ptr: *const ::layout::Layout) -> bool;
  pub fn qt_widgets_c_QLayout_itemAt(this_ptr: *const ::layout::Layout, index: ::libc::c_int) -> *mut ::layout_item::LayoutItem;
  pub fn qt_widgets_c_QLayout_layout(this_ptr: *mut ::layout::Layout) -> *mut ::layout::Layout;
  pub fn qt_widgets_c_QLayout_margin(this_ptr: *const ::layout::Layout) -> ::libc::c_int;
  pub fn qt_widgets_c_QLayout_maximumSize_to_output(this_ptr: *const ::layout::Layout, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QLayout_menuBar(this_ptr: *const ::layout::Layout) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QLayout_metaObject(this_ptr: *const ::layout::Layout) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QLayout_minimumSize_to_output(this_ptr: *const ::layout::Layout, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QLayout_parentWidget(this_ptr: *const ::layout::Layout) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QLayout_qt_metacall(this_ptr: *mut ::layout::Layout, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QLayout_qt_metacast(this_ptr: *mut ::layout::Layout, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QLayout_removeItem(this_ptr: *mut ::layout::Layout, arg1: *mut ::layout_item::LayoutItem);
  pub fn qt_widgets_c_QLayout_removeWidget(this_ptr: *mut ::layout::Layout, w: *mut ::widget::Widget);
  pub fn qt_widgets_c_QLayout_setContentsMargins_left_top_right_bottom(this_ptr: *mut ::layout::Layout, left: ::libc::c_int, top: ::libc::c_int, right: ::libc::c_int, bottom: ::libc::c_int);
  pub fn qt_widgets_c_QLayout_setContentsMargins_margins(this_ptr: *mut ::layout::Layout, margins: *const ::qt_core::margins::Margins);
  pub fn qt_widgets_c_QLayout_setEnabled(this_ptr: *mut ::layout::Layout, arg1: bool);
  pub fn qt_widgets_c_QLayout_setGeometry(this_ptr: *mut ::layout::Layout, arg1: *const ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QLayout_setMargin(this_ptr: *mut ::layout::Layout, arg1: ::libc::c_int);
  pub fn qt_widgets_c_QLayout_setMenuBar(this_ptr: *mut ::layout::Layout, w: *mut ::widget::Widget);
  pub fn qt_widgets_c_QLayout_setSizeConstraint(this_ptr: *mut ::layout::Layout, arg1: ::layout::SizeConstraint);
  pub fn qt_widgets_c_QLayout_setSpacing(this_ptr: *mut ::layout::Layout, arg1: ::libc::c_int);
  pub fn qt_widgets_c_QLayout_sizeConstraint(this_ptr: *const ::layout::Layout) -> ::layout::SizeConstraint;
  pub fn qt_widgets_c_QLayout_spacing(this_ptr: *const ::layout::Layout) -> ::libc::c_int;
  pub fn qt_widgets_c_QLayout_takeAt(this_ptr: *mut ::layout::Layout, index: ::libc::c_int) -> *mut ::layout_item::LayoutItem;
  pub fn qt_widgets_c_QLayout_totalHeightForWidth(this_ptr: *const ::layout::Layout, w: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QLayout_totalMaximumSize_to_output(this_ptr: *const ::layout::Layout, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QLayout_totalMinimumSize_to_output(this_ptr: *const ::layout::Layout, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QLayout_totalSizeHint_to_output(this_ptr: *const ::layout::Layout, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QLayout_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QLayout_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QLayout_update(this_ptr: *mut ::layout::Layout);

  // Header: QLayoutItem
  pub fn qt_widgets_c_QLayoutItem_delete(this_ptr: *mut ::layout_item::LayoutItem);
  pub fn qt_widgets_c_QLayoutItem_geometry_to_output(this_ptr: *const ::layout_item::LayoutItem, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QLayoutItem_hasHeightForWidth(this_ptr: *const ::layout_item::LayoutItem) -> bool;
  pub fn qt_widgets_c_QLayoutItem_heightForWidth(this_ptr: *const ::layout_item::LayoutItem, arg1: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QLayoutItem_invalidate(this_ptr: *mut ::layout_item::LayoutItem);
  pub fn qt_widgets_c_QLayoutItem_isEmpty(this_ptr: *const ::layout_item::LayoutItem) -> bool;
  pub fn qt_widgets_c_QLayoutItem_layout(this_ptr: *mut ::layout_item::LayoutItem) -> *mut ::layout::Layout;
  pub fn qt_widgets_c_QLayoutItem_maximumSize_to_output(this_ptr: *const ::layout_item::LayoutItem, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QLayoutItem_minimumHeightForWidth(this_ptr: *const ::layout_item::LayoutItem, arg1: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QLayoutItem_minimumSize_to_output(this_ptr: *const ::layout_item::LayoutItem, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QLayoutItem_setGeometry(this_ptr: *mut ::layout_item::LayoutItem, arg1: *const ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QLayoutItem_sizeHint_to_output(this_ptr: *const ::layout_item::LayoutItem, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QLayoutItem_spacerItem(this_ptr: *mut ::layout_item::LayoutItem) -> *mut ::spacer_item::SpacerItem;
  pub fn qt_widgets_c_QLayoutItem_widget(this_ptr: *mut ::layout_item::LayoutItem) -> *mut ::widget::Widget;

  // Header: QLineEdit
  pub fn qt_widgets_c_QLineEdit_G_dynamic_cast_QLineEdit_ptr(ptr: *mut ::widget::Widget) -> *mut ::line_edit::LineEdit;
  pub fn qt_widgets_c_QLineEdit_G_static_cast_QLineEdit_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::line_edit::LineEdit;
  pub fn qt_widgets_c_QLineEdit_G_static_cast_QLineEdit_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::line_edit::LineEdit;
  pub fn qt_widgets_c_QLineEdit_G_static_cast_QLineEdit_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::line_edit::LineEdit;
  pub fn qt_widgets_c_QLineEdit_G_static_cast_QObject_ptr(ptr: *mut ::line_edit::LineEdit) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QLineEdit_G_static_cast_QPaintDevice_ptr(ptr: *mut ::line_edit::LineEdit) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QLineEdit_G_static_cast_QWidget_ptr(ptr: *mut ::line_edit::LineEdit) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QLineEdit_addAction_action_position(this_ptr: *mut ::line_edit::LineEdit, action: *mut ::action::Action, position: ::line_edit::ActionPosition);
  pub fn qt_widgets_c_QLineEdit_addAction_icon_position(this_ptr: *mut ::line_edit::LineEdit, icon: *const ::qt_gui::icon::Icon, position: ::line_edit::ActionPosition) -> *mut ::action::Action;
  pub fn qt_widgets_c_QLineEdit_backspace(this_ptr: *mut ::line_edit::LineEdit);
  pub fn qt_widgets_c_QLineEdit_clear(this_ptr: *mut ::line_edit::LineEdit);
  pub fn qt_widgets_c_QLineEdit_completer(this_ptr: *const ::line_edit::LineEdit) -> *mut ::completer::Completer;
  pub fn qt_widgets_c_QLineEdit_copy(this_ptr: *const ::line_edit::LineEdit);
  pub fn qt_widgets_c_QLineEdit_createStandardContextMenu(this_ptr: *mut ::line_edit::LineEdit) -> *mut ::menu::Menu;
  pub fn qt_widgets_c_QLineEdit_cursorBackward_mark(this_ptr: *mut ::line_edit::LineEdit, mark: bool);
  pub fn qt_widgets_c_QLineEdit_cursorBackward_mark_steps(this_ptr: *mut ::line_edit::LineEdit, mark: bool, steps: ::libc::c_int);
  pub fn qt_widgets_c_QLineEdit_cursorForward_mark(this_ptr: *mut ::line_edit::LineEdit, mark: bool);
  pub fn qt_widgets_c_QLineEdit_cursorForward_mark_steps(this_ptr: *mut ::line_edit::LineEdit, mark: bool, steps: ::libc::c_int);
  pub fn qt_widgets_c_QLineEdit_cursorPosition(this_ptr: *const ::line_edit::LineEdit) -> ::libc::c_int;
  pub fn qt_widgets_c_QLineEdit_cursorPositionAt(this_ptr: *mut ::line_edit::LineEdit, pos: *const ::qt_core::point::Point) -> ::libc::c_int;
  pub fn qt_widgets_c_QLineEdit_cursorWordBackward(this_ptr: *mut ::line_edit::LineEdit, mark: bool);
  pub fn qt_widgets_c_QLineEdit_cursorWordForward(this_ptr: *mut ::line_edit::LineEdit, mark: bool);
  pub fn qt_widgets_c_QLineEdit_cut(this_ptr: *mut ::line_edit::LineEdit);
  pub fn qt_widgets_c_QLineEdit_del(this_ptr: *mut ::line_edit::LineEdit);
  pub fn qt_widgets_c_QLineEdit_delete(this_ptr: *mut ::line_edit::LineEdit);
  pub fn qt_widgets_c_QLineEdit_deselect(this_ptr: *mut ::line_edit::LineEdit);
  pub fn qt_widgets_c_QLineEdit_displayText_to_output(this_ptr: *const ::line_edit::LineEdit, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QLineEdit_dragEnabled(this_ptr: *const ::line_edit::LineEdit) -> bool;
  pub fn qt_widgets_c_QLineEdit_echoMode(this_ptr: *const ::line_edit::LineEdit) -> ::line_edit::EchoMode;
  pub fn qt_widgets_c_QLineEdit_end(this_ptr: *mut ::line_edit::LineEdit, mark: bool);
  pub fn qt_widgets_c_QLineEdit_event(this_ptr: *mut ::line_edit::LineEdit, arg1: *mut ::qt_core::event::Event) -> bool;
  pub fn qt_widgets_c_QLineEdit_getTextMargins(this_ptr: *const ::line_edit::LineEdit, left: *mut ::libc::c_int, top: *mut ::libc::c_int, right: *mut ::libc::c_int, bottom: *mut ::libc::c_int);
  pub fn qt_widgets_c_QLineEdit_hasAcceptableInput(this_ptr: *const ::line_edit::LineEdit) -> bool;
  pub fn qt_widgets_c_QLineEdit_hasFrame(this_ptr: *const ::line_edit::LineEdit) -> bool;
  pub fn qt_widgets_c_QLineEdit_hasSelectedText(this_ptr: *const ::line_edit::LineEdit) -> bool;
  pub fn qt_widgets_c_QLineEdit_home(this_ptr: *mut ::line_edit::LineEdit, mark: bool);
  pub fn qt_widgets_c_QLineEdit_inputMask_to_output(this_ptr: *const ::line_edit::LineEdit, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QLineEdit_inputMethodQuery_to_output_arg1(this_ptr: *const ::line_edit::LineEdit, arg1: *const ::qt_core::qt::InputMethodQuery, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QLineEdit_inputMethodQuery_to_output_property_argument(this_ptr: *const ::line_edit::LineEdit, property: *const ::qt_core::qt::InputMethodQuery, argument: *const ::qt_core::variant::Variant, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QLineEdit_insert(this_ptr: *mut ::line_edit::LineEdit, arg1: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QLineEdit_isClearButtonEnabled(this_ptr: *const ::line_edit::LineEdit) -> bool;
  pub fn qt_widgets_c_QLineEdit_isModified(this_ptr: *const ::line_edit::LineEdit) -> bool;
  pub fn qt_widgets_c_QLineEdit_isReadOnly(this_ptr: *const ::line_edit::LineEdit) -> bool;
  pub fn qt_widgets_c_QLineEdit_isRedoAvailable(this_ptr: *const ::line_edit::LineEdit) -> bool;
  pub fn qt_widgets_c_QLineEdit_isUndoAvailable(this_ptr: *const ::line_edit::LineEdit) -> bool;
  pub fn qt_widgets_c_QLineEdit_maxLength(this_ptr: *const ::line_edit::LineEdit) -> ::libc::c_int;
  pub fn qt_widgets_c_QLineEdit_metaObject(this_ptr: *const ::line_edit::LineEdit) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QLineEdit_minimumSizeHint_to_output(this_ptr: *const ::line_edit::LineEdit, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QLineEdit_new_arg1(arg1: *const ::qt_core::string::String) -> *mut ::line_edit::LineEdit;
  pub fn qt_widgets_c_QLineEdit_new_arg1_parent(arg1: *const ::qt_core::string::String, parent: *mut ::widget::Widget) -> *mut ::line_edit::LineEdit;
  pub fn qt_widgets_c_QLineEdit_new_no_args() -> *mut ::line_edit::LineEdit;
  pub fn qt_widgets_c_QLineEdit_new_parent(parent: *mut ::widget::Widget) -> *mut ::line_edit::LineEdit;
  pub fn qt_widgets_c_QLineEdit_paste(this_ptr: *mut ::line_edit::LineEdit);
  pub fn qt_widgets_c_QLineEdit_placeholderText_to_output(this_ptr: *const ::line_edit::LineEdit, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QLineEdit_qt_metacall(this_ptr: *mut ::line_edit::LineEdit, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QLineEdit_qt_metacast(this_ptr: *mut ::line_edit::LineEdit, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QLineEdit_redo(this_ptr: *mut ::line_edit::LineEdit);
  pub fn qt_widgets_c_QLineEdit_selectAll(this_ptr: *mut ::line_edit::LineEdit);
  pub fn qt_widgets_c_QLineEdit_selectedText_to_output(this_ptr: *const ::line_edit::LineEdit, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QLineEdit_selectionStart(this_ptr: *const ::line_edit::LineEdit) -> ::libc::c_int;
  pub fn qt_widgets_c_QLineEdit_setClearButtonEnabled(this_ptr: *mut ::line_edit::LineEdit, enable: bool);
  pub fn qt_widgets_c_QLineEdit_setCompleter(this_ptr: *mut ::line_edit::LineEdit, completer: *mut ::completer::Completer);
  pub fn qt_widgets_c_QLineEdit_setCursorMoveStyle(this_ptr: *mut ::line_edit::LineEdit, style: *const ::qt_core::qt::CursorMoveStyle);
  pub fn qt_widgets_c_QLineEdit_setCursorPosition(this_ptr: *mut ::line_edit::LineEdit, arg1: ::libc::c_int);
  pub fn qt_widgets_c_QLineEdit_setDragEnabled(this_ptr: *mut ::line_edit::LineEdit, b: bool);
  pub fn qt_widgets_c_QLineEdit_setEchoMode(this_ptr: *mut ::line_edit::LineEdit, arg1: ::line_edit::EchoMode);
  pub fn qt_widgets_c_QLineEdit_setFrame(this_ptr: *mut ::line_edit::LineEdit, arg1: bool);
  pub fn qt_widgets_c_QLineEdit_setInputMask(this_ptr: *mut ::line_edit::LineEdit, inputMask: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QLineEdit_setMaxLength(this_ptr: *mut ::line_edit::LineEdit, arg1: ::libc::c_int);
  pub fn qt_widgets_c_QLineEdit_setModified(this_ptr: *mut ::line_edit::LineEdit, arg1: bool);
  pub fn qt_widgets_c_QLineEdit_setPlaceholderText(this_ptr: *mut ::line_edit::LineEdit, arg1: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QLineEdit_setReadOnly(this_ptr: *mut ::line_edit::LineEdit, arg1: bool);
  pub fn qt_widgets_c_QLineEdit_setSelection(this_ptr: *mut ::line_edit::LineEdit, arg1: ::libc::c_int, arg2: ::libc::c_int);
  pub fn qt_widgets_c_QLineEdit_setText(this_ptr: *mut ::line_edit::LineEdit, arg1: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QLineEdit_setTextMargins_left_top_right_bottom(this_ptr: *mut ::line_edit::LineEdit, left: ::libc::c_int, top: ::libc::c_int, right: ::libc::c_int, bottom: ::libc::c_int);
  pub fn qt_widgets_c_QLineEdit_setTextMargins_margins(this_ptr: *mut ::line_edit::LineEdit, margins: *const ::qt_core::margins::Margins);
  pub fn qt_widgets_c_QLineEdit_setValidator(this_ptr: *mut ::line_edit::LineEdit, arg1: *const ::qt_gui::validator::Validator);
  pub fn qt_widgets_c_QLineEdit_sizeHint_to_output(this_ptr: *const ::line_edit::LineEdit, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QLineEdit_textMargins_to_output(this_ptr: *const ::line_edit::LineEdit, output: *mut ::qt_core::margins::Margins);
  pub fn qt_widgets_c_QLineEdit_text_to_output(this_ptr: *const ::line_edit::LineEdit, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QLineEdit_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QLineEdit_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QLineEdit_undo(this_ptr: *mut ::line_edit::LineEdit);
  pub fn qt_widgets_c_QLineEdit_validator(this_ptr: *const ::line_edit::LineEdit) -> *const ::qt_gui::validator::Validator;

  // Header: QList
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_append_QAbstractButton(this_ptr: *mut ::list::ListAbstractButtonMutPtr, t: *const *mut ::abstract_button::AbstractButton);
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_append_QList_QAbstractButton_ptr(this_ptr: *mut ::list::ListAbstractButtonMutPtr, t: *const ::list::ListAbstractButtonMutPtr);
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_at(this_ptr: *const ::list::ListAbstractButtonMutPtr, i: ::libc::c_int) -> *const *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_back(this_ptr: *mut ::list::ListAbstractButtonMutPtr) -> *mut *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_back_const(this_ptr: *const ::list::ListAbstractButtonMutPtr) -> *const *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_clear(this_ptr: *mut ::list::ListAbstractButtonMutPtr);
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_constFirst(this_ptr: *const ::list::ListAbstractButtonMutPtr) -> *const *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_constLast(this_ptr: *const ::list::ListAbstractButtonMutPtr) -> *const *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_constructor_l(l: *const ::list::ListAbstractButtonMutPtr, output: *mut ::list::ListAbstractButtonMutPtr);
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_constructor_no_args(output: *mut ::list::ListAbstractButtonMutPtr);
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_contains(this_ptr: *const ::list::ListAbstractButtonMutPtr, t: *const *mut ::abstract_button::AbstractButton) -> bool;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_count_no_args(this_ptr: *const ::list::ListAbstractButtonMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_count_t(this_ptr: *const ::list::ListAbstractButtonMutPtr, t: *const *mut ::abstract_button::AbstractButton) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_destructor(this_ptr: *mut ::list::ListAbstractButtonMutPtr);
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_empty(this_ptr: *const ::list::ListAbstractButtonMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_endsWith(this_ptr: *const ::list::ListAbstractButtonMutPtr, t: *const *mut ::abstract_button::AbstractButton) -> bool;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_first(this_ptr: *mut ::list::ListAbstractButtonMutPtr) -> *mut *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_first_const(this_ptr: *const ::list::ListAbstractButtonMutPtr) -> *const *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_front(this_ptr: *mut ::list::ListAbstractButtonMutPtr) -> *mut *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_front_const(this_ptr: *const ::list::ListAbstractButtonMutPtr) -> *const *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_indexOf_t(this_ptr: *const ::list::ListAbstractButtonMutPtr, t: *const *mut ::abstract_button::AbstractButton) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_indexOf_t_from(this_ptr: *const ::list::ListAbstractButtonMutPtr, t: *const *mut ::abstract_button::AbstractButton, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_insert(this_ptr: *mut ::list::ListAbstractButtonMutPtr, i: ::libc::c_int, t: *const *mut ::abstract_button::AbstractButton);
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_isEmpty(this_ptr: *const ::list::ListAbstractButtonMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_last(this_ptr: *mut ::list::ListAbstractButtonMutPtr) -> *mut *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_lastIndexOf_t(this_ptr: *const ::list::ListAbstractButtonMutPtr, t: *const *mut ::abstract_button::AbstractButton) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_lastIndexOf_t_from(this_ptr: *const ::list::ListAbstractButtonMutPtr, t: *const *mut ::abstract_button::AbstractButton, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_last_const(this_ptr: *const ::list::ListAbstractButtonMutPtr) -> *const *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_length(this_ptr: *const ::list::ListAbstractButtonMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_mid_to_output_pos(this_ptr: *const ::list::ListAbstractButtonMutPtr, pos: ::libc::c_int, output: *mut ::list::ListAbstractButtonMutPtr);
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_mid_to_output_pos_length(this_ptr: *const ::list::ListAbstractButtonMutPtr, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListAbstractButtonMutPtr);
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_move(this_ptr: *mut ::list::ListAbstractButtonMutPtr, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_operator_add_assign_l(this_ptr: *mut ::list::ListAbstractButtonMutPtr, l: *const ::list::ListAbstractButtonMutPtr) -> *mut ::list::ListAbstractButtonMutPtr;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_operator_add_assign_t(this_ptr: *mut ::list::ListAbstractButtonMutPtr, t: *const *mut ::abstract_button::AbstractButton) -> *mut ::list::ListAbstractButtonMutPtr;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_operator_add_to_output(this_ptr: *const ::list::ListAbstractButtonMutPtr, l: *const ::list::ListAbstractButtonMutPtr, output: *mut ::list::ListAbstractButtonMutPtr);
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_operator_assign(this_ptr: *mut ::list::ListAbstractButtonMutPtr, l: *const ::list::ListAbstractButtonMutPtr) -> *mut ::list::ListAbstractButtonMutPtr;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_operator_eq(this_ptr: *const ::list::ListAbstractButtonMutPtr, l: *const ::list::ListAbstractButtonMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_operator_index(this_ptr: *mut ::list::ListAbstractButtonMutPtr, i: ::libc::c_int) -> *mut *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_operator_index_const(this_ptr: *const ::list::ListAbstractButtonMutPtr, i: ::libc::c_int) -> *const *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_operator_neq(this_ptr: *const ::list::ListAbstractButtonMutPtr, l: *const ::list::ListAbstractButtonMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_operator_shl_l(this_ptr: *mut ::list::ListAbstractButtonMutPtr, l: *const ::list::ListAbstractButtonMutPtr) -> *mut ::list::ListAbstractButtonMutPtr;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_operator_shl_t(this_ptr: *mut ::list::ListAbstractButtonMutPtr, t: *const *mut ::abstract_button::AbstractButton) -> *mut ::list::ListAbstractButtonMutPtr;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_pop_back(this_ptr: *mut ::list::ListAbstractButtonMutPtr);
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_pop_front(this_ptr: *mut ::list::ListAbstractButtonMutPtr);
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_prepend(this_ptr: *mut ::list::ListAbstractButtonMutPtr, t: *const *mut ::abstract_button::AbstractButton);
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_push_back(this_ptr: *mut ::list::ListAbstractButtonMutPtr, t: *const *mut ::abstract_button::AbstractButton);
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_push_front(this_ptr: *mut ::list::ListAbstractButtonMutPtr, t: *const *mut ::abstract_button::AbstractButton);
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_removeAll(this_ptr: *mut ::list::ListAbstractButtonMutPtr, t: *const *mut ::abstract_button::AbstractButton) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_removeAt(this_ptr: *mut ::list::ListAbstractButtonMutPtr, i: ::libc::c_int);
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_removeFirst(this_ptr: *mut ::list::ListAbstractButtonMutPtr);
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_removeLast(this_ptr: *mut ::list::ListAbstractButtonMutPtr);
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_removeOne(this_ptr: *mut ::list::ListAbstractButtonMutPtr, t: *const *mut ::abstract_button::AbstractButton) -> bool;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_replace(this_ptr: *mut ::list::ListAbstractButtonMutPtr, i: ::libc::c_int, t: *const *mut ::abstract_button::AbstractButton);
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_reserve(this_ptr: *mut ::list::ListAbstractButtonMutPtr, size: ::libc::c_int);
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_size(this_ptr: *const ::list::ListAbstractButtonMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_startsWith(this_ptr: *const ::list::ListAbstractButtonMutPtr, t: *const *mut ::abstract_button::AbstractButton) -> bool;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_swap_i_j(this_ptr: *mut ::list::ListAbstractButtonMutPtr, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_swap_other(this_ptr: *mut ::list::ListAbstractButtonMutPtr, other: *mut ::list::ListAbstractButtonMutPtr);
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_takeAt(this_ptr: *mut ::list::ListAbstractButtonMutPtr, i: ::libc::c_int) -> *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_takeFirst(this_ptr: *mut ::list::ListAbstractButtonMutPtr) -> *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_takeLast(this_ptr: *mut ::list::ListAbstractButtonMutPtr) -> *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_value_i(this_ptr: *const ::list::ListAbstractButtonMutPtr, i: ::libc::c_int) -> *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QList_QAbstractButton_ptr_value_i_defaultValue(this_ptr: *const ::list::ListAbstractButtonMutPtr, i: ::libc::c_int, defaultValue: *const *mut ::abstract_button::AbstractButton) -> *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QList_QAction_ptr_append_QAction(this_ptr: *mut ::list::ListActionMutPtr, t: *const *mut ::action::Action);
  pub fn qt_widgets_c_QList_QAction_ptr_append_QList_QAction_ptr(this_ptr: *mut ::list::ListActionMutPtr, t: *const ::list::ListActionMutPtr);
  pub fn qt_widgets_c_QList_QAction_ptr_at(this_ptr: *const ::list::ListActionMutPtr, i: ::libc::c_int) -> *const *mut ::action::Action;
  pub fn qt_widgets_c_QList_QAction_ptr_back(this_ptr: *mut ::list::ListActionMutPtr) -> *mut *mut ::action::Action;
  pub fn qt_widgets_c_QList_QAction_ptr_back_const(this_ptr: *const ::list::ListActionMutPtr) -> *const *mut ::action::Action;
  pub fn qt_widgets_c_QList_QAction_ptr_clear(this_ptr: *mut ::list::ListActionMutPtr);
  pub fn qt_widgets_c_QList_QAction_ptr_constFirst(this_ptr: *const ::list::ListActionMutPtr) -> *const *mut ::action::Action;
  pub fn qt_widgets_c_QList_QAction_ptr_constLast(this_ptr: *const ::list::ListActionMutPtr) -> *const *mut ::action::Action;
  pub fn qt_widgets_c_QList_QAction_ptr_constructor_l(l: *const ::list::ListActionMutPtr, output: *mut ::list::ListActionMutPtr);
  pub fn qt_widgets_c_QList_QAction_ptr_constructor_no_args(output: *mut ::list::ListActionMutPtr);
  pub fn qt_widgets_c_QList_QAction_ptr_contains(this_ptr: *const ::list::ListActionMutPtr, t: *const *mut ::action::Action) -> bool;
  pub fn qt_widgets_c_QList_QAction_ptr_count_no_args(this_ptr: *const ::list::ListActionMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QAction_ptr_count_t(this_ptr: *const ::list::ListActionMutPtr, t: *const *mut ::action::Action) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QAction_ptr_destructor(this_ptr: *mut ::list::ListActionMutPtr);
  pub fn qt_widgets_c_QList_QAction_ptr_empty(this_ptr: *const ::list::ListActionMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QAction_ptr_endsWith(this_ptr: *const ::list::ListActionMutPtr, t: *const *mut ::action::Action) -> bool;
  pub fn qt_widgets_c_QList_QAction_ptr_first(this_ptr: *mut ::list::ListActionMutPtr) -> *mut *mut ::action::Action;
  pub fn qt_widgets_c_QList_QAction_ptr_first_const(this_ptr: *const ::list::ListActionMutPtr) -> *const *mut ::action::Action;
  pub fn qt_widgets_c_QList_QAction_ptr_front(this_ptr: *mut ::list::ListActionMutPtr) -> *mut *mut ::action::Action;
  pub fn qt_widgets_c_QList_QAction_ptr_front_const(this_ptr: *const ::list::ListActionMutPtr) -> *const *mut ::action::Action;
  pub fn qt_widgets_c_QList_QAction_ptr_indexOf_t(this_ptr: *const ::list::ListActionMutPtr, t: *const *mut ::action::Action) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QAction_ptr_indexOf_t_from(this_ptr: *const ::list::ListActionMutPtr, t: *const *mut ::action::Action, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QAction_ptr_insert(this_ptr: *mut ::list::ListActionMutPtr, i: ::libc::c_int, t: *const *mut ::action::Action);
  pub fn qt_widgets_c_QList_QAction_ptr_isEmpty(this_ptr: *const ::list::ListActionMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QAction_ptr_last(this_ptr: *mut ::list::ListActionMutPtr) -> *mut *mut ::action::Action;
  pub fn qt_widgets_c_QList_QAction_ptr_lastIndexOf_t(this_ptr: *const ::list::ListActionMutPtr, t: *const *mut ::action::Action) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QAction_ptr_lastIndexOf_t_from(this_ptr: *const ::list::ListActionMutPtr, t: *const *mut ::action::Action, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QAction_ptr_last_const(this_ptr: *const ::list::ListActionMutPtr) -> *const *mut ::action::Action;
  pub fn qt_widgets_c_QList_QAction_ptr_length(this_ptr: *const ::list::ListActionMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QAction_ptr_mid_to_output_pos(this_ptr: *const ::list::ListActionMutPtr, pos: ::libc::c_int, output: *mut ::list::ListActionMutPtr);
  pub fn qt_widgets_c_QList_QAction_ptr_mid_to_output_pos_length(this_ptr: *const ::list::ListActionMutPtr, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListActionMutPtr);
  pub fn qt_widgets_c_QList_QAction_ptr_move(this_ptr: *mut ::list::ListActionMutPtr, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QList_QAction_ptr_operator_add_assign_l(this_ptr: *mut ::list::ListActionMutPtr, l: *const ::list::ListActionMutPtr) -> *mut ::list::ListActionMutPtr;
  pub fn qt_widgets_c_QList_QAction_ptr_operator_add_assign_t(this_ptr: *mut ::list::ListActionMutPtr, t: *const *mut ::action::Action) -> *mut ::list::ListActionMutPtr;
  pub fn qt_widgets_c_QList_QAction_ptr_operator_add_to_output(this_ptr: *const ::list::ListActionMutPtr, l: *const ::list::ListActionMutPtr, output: *mut ::list::ListActionMutPtr);
  pub fn qt_widgets_c_QList_QAction_ptr_operator_assign(this_ptr: *mut ::list::ListActionMutPtr, l: *const ::list::ListActionMutPtr) -> *mut ::list::ListActionMutPtr;
  pub fn qt_widgets_c_QList_QAction_ptr_operator_eq(this_ptr: *const ::list::ListActionMutPtr, l: *const ::list::ListActionMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QAction_ptr_operator_index(this_ptr: *mut ::list::ListActionMutPtr, i: ::libc::c_int) -> *mut *mut ::action::Action;
  pub fn qt_widgets_c_QList_QAction_ptr_operator_index_const(this_ptr: *const ::list::ListActionMutPtr, i: ::libc::c_int) -> *const *mut ::action::Action;
  pub fn qt_widgets_c_QList_QAction_ptr_operator_neq(this_ptr: *const ::list::ListActionMutPtr, l: *const ::list::ListActionMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QAction_ptr_operator_shl_l(this_ptr: *mut ::list::ListActionMutPtr, l: *const ::list::ListActionMutPtr) -> *mut ::list::ListActionMutPtr;
  pub fn qt_widgets_c_QList_QAction_ptr_operator_shl_t(this_ptr: *mut ::list::ListActionMutPtr, t: *const *mut ::action::Action) -> *mut ::list::ListActionMutPtr;
  pub fn qt_widgets_c_QList_QAction_ptr_pop_back(this_ptr: *mut ::list::ListActionMutPtr);
  pub fn qt_widgets_c_QList_QAction_ptr_pop_front(this_ptr: *mut ::list::ListActionMutPtr);
  pub fn qt_widgets_c_QList_QAction_ptr_prepend(this_ptr: *mut ::list::ListActionMutPtr, t: *const *mut ::action::Action);
  pub fn qt_widgets_c_QList_QAction_ptr_push_back(this_ptr: *mut ::list::ListActionMutPtr, t: *const *mut ::action::Action);
  pub fn qt_widgets_c_QList_QAction_ptr_push_front(this_ptr: *mut ::list::ListActionMutPtr, t: *const *mut ::action::Action);
  pub fn qt_widgets_c_QList_QAction_ptr_removeAll(this_ptr: *mut ::list::ListActionMutPtr, t: *const *mut ::action::Action) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QAction_ptr_removeAt(this_ptr: *mut ::list::ListActionMutPtr, i: ::libc::c_int);
  pub fn qt_widgets_c_QList_QAction_ptr_removeFirst(this_ptr: *mut ::list::ListActionMutPtr);
  pub fn qt_widgets_c_QList_QAction_ptr_removeLast(this_ptr: *mut ::list::ListActionMutPtr);
  pub fn qt_widgets_c_QList_QAction_ptr_removeOne(this_ptr: *mut ::list::ListActionMutPtr, t: *const *mut ::action::Action) -> bool;
  pub fn qt_widgets_c_QList_QAction_ptr_replace(this_ptr: *mut ::list::ListActionMutPtr, i: ::libc::c_int, t: *const *mut ::action::Action);
  pub fn qt_widgets_c_QList_QAction_ptr_reserve(this_ptr: *mut ::list::ListActionMutPtr, size: ::libc::c_int);
  pub fn qt_widgets_c_QList_QAction_ptr_size(this_ptr: *const ::list::ListActionMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QAction_ptr_startsWith(this_ptr: *const ::list::ListActionMutPtr, t: *const *mut ::action::Action) -> bool;
  pub fn qt_widgets_c_QList_QAction_ptr_swap_i_j(this_ptr: *mut ::list::ListActionMutPtr, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_widgets_c_QList_QAction_ptr_swap_other(this_ptr: *mut ::list::ListActionMutPtr, other: *mut ::list::ListActionMutPtr);
  pub fn qt_widgets_c_QList_QAction_ptr_takeAt(this_ptr: *mut ::list::ListActionMutPtr, i: ::libc::c_int) -> *mut ::action::Action;
  pub fn qt_widgets_c_QList_QAction_ptr_takeFirst(this_ptr: *mut ::list::ListActionMutPtr) -> *mut ::action::Action;
  pub fn qt_widgets_c_QList_QAction_ptr_takeLast(this_ptr: *mut ::list::ListActionMutPtr) -> *mut ::action::Action;
  pub fn qt_widgets_c_QList_QAction_ptr_value_i(this_ptr: *const ::list::ListActionMutPtr, i: ::libc::c_int) -> *mut ::action::Action;
  pub fn qt_widgets_c_QList_QAction_ptr_value_i_defaultValue(this_ptr: *const ::list::ListActionMutPtr, i: ::libc::c_int, defaultValue: *const *mut ::action::Action) -> *mut ::action::Action;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_append_QDockWidget(this_ptr: *mut ::list::ListDockWidgetMutPtr, t: *const *mut ::dock_widget::DockWidget);
  pub fn qt_widgets_c_QList_QDockWidget_ptr_append_QList_QDockWidget_ptr(this_ptr: *mut ::list::ListDockWidgetMutPtr, t: *const ::list::ListDockWidgetMutPtr);
  pub fn qt_widgets_c_QList_QDockWidget_ptr_at(this_ptr: *const ::list::ListDockWidgetMutPtr, i: ::libc::c_int) -> *const *mut ::dock_widget::DockWidget;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_back(this_ptr: *mut ::list::ListDockWidgetMutPtr) -> *mut *mut ::dock_widget::DockWidget;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_back_const(this_ptr: *const ::list::ListDockWidgetMutPtr) -> *const *mut ::dock_widget::DockWidget;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_clear(this_ptr: *mut ::list::ListDockWidgetMutPtr);
  pub fn qt_widgets_c_QList_QDockWidget_ptr_constFirst(this_ptr: *const ::list::ListDockWidgetMutPtr) -> *const *mut ::dock_widget::DockWidget;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_constLast(this_ptr: *const ::list::ListDockWidgetMutPtr) -> *const *mut ::dock_widget::DockWidget;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_constructor_l(l: *const ::list::ListDockWidgetMutPtr, output: *mut ::list::ListDockWidgetMutPtr);
  pub fn qt_widgets_c_QList_QDockWidget_ptr_constructor_no_args(output: *mut ::list::ListDockWidgetMutPtr);
  pub fn qt_widgets_c_QList_QDockWidget_ptr_contains(this_ptr: *const ::list::ListDockWidgetMutPtr, t: *const *mut ::dock_widget::DockWidget) -> bool;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_count_no_args(this_ptr: *const ::list::ListDockWidgetMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_count_t(this_ptr: *const ::list::ListDockWidgetMutPtr, t: *const *mut ::dock_widget::DockWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_destructor(this_ptr: *mut ::list::ListDockWidgetMutPtr);
  pub fn qt_widgets_c_QList_QDockWidget_ptr_empty(this_ptr: *const ::list::ListDockWidgetMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_endsWith(this_ptr: *const ::list::ListDockWidgetMutPtr, t: *const *mut ::dock_widget::DockWidget) -> bool;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_first(this_ptr: *mut ::list::ListDockWidgetMutPtr) -> *mut *mut ::dock_widget::DockWidget;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_first_const(this_ptr: *const ::list::ListDockWidgetMutPtr) -> *const *mut ::dock_widget::DockWidget;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_front(this_ptr: *mut ::list::ListDockWidgetMutPtr) -> *mut *mut ::dock_widget::DockWidget;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_front_const(this_ptr: *const ::list::ListDockWidgetMutPtr) -> *const *mut ::dock_widget::DockWidget;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_indexOf_t(this_ptr: *const ::list::ListDockWidgetMutPtr, t: *const *mut ::dock_widget::DockWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_indexOf_t_from(this_ptr: *const ::list::ListDockWidgetMutPtr, t: *const *mut ::dock_widget::DockWidget, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_insert(this_ptr: *mut ::list::ListDockWidgetMutPtr, i: ::libc::c_int, t: *const *mut ::dock_widget::DockWidget);
  pub fn qt_widgets_c_QList_QDockWidget_ptr_isEmpty(this_ptr: *const ::list::ListDockWidgetMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_last(this_ptr: *mut ::list::ListDockWidgetMutPtr) -> *mut *mut ::dock_widget::DockWidget;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_lastIndexOf_t(this_ptr: *const ::list::ListDockWidgetMutPtr, t: *const *mut ::dock_widget::DockWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_lastIndexOf_t_from(this_ptr: *const ::list::ListDockWidgetMutPtr, t: *const *mut ::dock_widget::DockWidget, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_last_const(this_ptr: *const ::list::ListDockWidgetMutPtr) -> *const *mut ::dock_widget::DockWidget;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_length(this_ptr: *const ::list::ListDockWidgetMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_mid_to_output_pos(this_ptr: *const ::list::ListDockWidgetMutPtr, pos: ::libc::c_int, output: *mut ::list::ListDockWidgetMutPtr);
  pub fn qt_widgets_c_QList_QDockWidget_ptr_mid_to_output_pos_length(this_ptr: *const ::list::ListDockWidgetMutPtr, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListDockWidgetMutPtr);
  pub fn qt_widgets_c_QList_QDockWidget_ptr_move(this_ptr: *mut ::list::ListDockWidgetMutPtr, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QList_QDockWidget_ptr_operator_add_assign_l(this_ptr: *mut ::list::ListDockWidgetMutPtr, l: *const ::list::ListDockWidgetMutPtr) -> *mut ::list::ListDockWidgetMutPtr;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_operator_add_assign_t(this_ptr: *mut ::list::ListDockWidgetMutPtr, t: *const *mut ::dock_widget::DockWidget) -> *mut ::list::ListDockWidgetMutPtr;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_operator_add_to_output(this_ptr: *const ::list::ListDockWidgetMutPtr, l: *const ::list::ListDockWidgetMutPtr, output: *mut ::list::ListDockWidgetMutPtr);
  pub fn qt_widgets_c_QList_QDockWidget_ptr_operator_assign(this_ptr: *mut ::list::ListDockWidgetMutPtr, l: *const ::list::ListDockWidgetMutPtr) -> *mut ::list::ListDockWidgetMutPtr;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_operator_eq(this_ptr: *const ::list::ListDockWidgetMutPtr, l: *const ::list::ListDockWidgetMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_operator_index(this_ptr: *mut ::list::ListDockWidgetMutPtr, i: ::libc::c_int) -> *mut *mut ::dock_widget::DockWidget;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_operator_index_const(this_ptr: *const ::list::ListDockWidgetMutPtr, i: ::libc::c_int) -> *const *mut ::dock_widget::DockWidget;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_operator_neq(this_ptr: *const ::list::ListDockWidgetMutPtr, l: *const ::list::ListDockWidgetMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_operator_shl_l(this_ptr: *mut ::list::ListDockWidgetMutPtr, l: *const ::list::ListDockWidgetMutPtr) -> *mut ::list::ListDockWidgetMutPtr;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_operator_shl_t(this_ptr: *mut ::list::ListDockWidgetMutPtr, t: *const *mut ::dock_widget::DockWidget) -> *mut ::list::ListDockWidgetMutPtr;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_pop_back(this_ptr: *mut ::list::ListDockWidgetMutPtr);
  pub fn qt_widgets_c_QList_QDockWidget_ptr_pop_front(this_ptr: *mut ::list::ListDockWidgetMutPtr);
  pub fn qt_widgets_c_QList_QDockWidget_ptr_prepend(this_ptr: *mut ::list::ListDockWidgetMutPtr, t: *const *mut ::dock_widget::DockWidget);
  pub fn qt_widgets_c_QList_QDockWidget_ptr_push_back(this_ptr: *mut ::list::ListDockWidgetMutPtr, t: *const *mut ::dock_widget::DockWidget);
  pub fn qt_widgets_c_QList_QDockWidget_ptr_push_front(this_ptr: *mut ::list::ListDockWidgetMutPtr, t: *const *mut ::dock_widget::DockWidget);
  pub fn qt_widgets_c_QList_QDockWidget_ptr_removeAll(this_ptr: *mut ::list::ListDockWidgetMutPtr, t: *const *mut ::dock_widget::DockWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_removeAt(this_ptr: *mut ::list::ListDockWidgetMutPtr, i: ::libc::c_int);
  pub fn qt_widgets_c_QList_QDockWidget_ptr_removeFirst(this_ptr: *mut ::list::ListDockWidgetMutPtr);
  pub fn qt_widgets_c_QList_QDockWidget_ptr_removeLast(this_ptr: *mut ::list::ListDockWidgetMutPtr);
  pub fn qt_widgets_c_QList_QDockWidget_ptr_removeOne(this_ptr: *mut ::list::ListDockWidgetMutPtr, t: *const *mut ::dock_widget::DockWidget) -> bool;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_replace(this_ptr: *mut ::list::ListDockWidgetMutPtr, i: ::libc::c_int, t: *const *mut ::dock_widget::DockWidget);
  pub fn qt_widgets_c_QList_QDockWidget_ptr_reserve(this_ptr: *mut ::list::ListDockWidgetMutPtr, size: ::libc::c_int);
  pub fn qt_widgets_c_QList_QDockWidget_ptr_size(this_ptr: *const ::list::ListDockWidgetMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_startsWith(this_ptr: *const ::list::ListDockWidgetMutPtr, t: *const *mut ::dock_widget::DockWidget) -> bool;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_swap_i_j(this_ptr: *mut ::list::ListDockWidgetMutPtr, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_widgets_c_QList_QDockWidget_ptr_swap_other(this_ptr: *mut ::list::ListDockWidgetMutPtr, other: *mut ::list::ListDockWidgetMutPtr);
  pub fn qt_widgets_c_QList_QDockWidget_ptr_takeAt(this_ptr: *mut ::list::ListDockWidgetMutPtr, i: ::libc::c_int) -> *mut ::dock_widget::DockWidget;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_takeFirst(this_ptr: *mut ::list::ListDockWidgetMutPtr) -> *mut ::dock_widget::DockWidget;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_takeLast(this_ptr: *mut ::list::ListDockWidgetMutPtr) -> *mut ::dock_widget::DockWidget;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_value_i(this_ptr: *const ::list::ListDockWidgetMutPtr, i: ::libc::c_int) -> *mut ::dock_widget::DockWidget;
  pub fn qt_widgets_c_QList_QDockWidget_ptr_value_i_defaultValue(this_ptr: *const ::list::ListDockWidgetMutPtr, i: ::libc::c_int, defaultValue: *const *mut ::dock_widget::DockWidget) -> *mut ::dock_widget::DockWidget;
  pub fn qt_widgets_c_QList_QGesture_ptr_append_QGesture(this_ptr: *mut ::list::ListGestureMutPtr, t: *const *mut ::gesture::Gesture);
  pub fn qt_widgets_c_QList_QGesture_ptr_append_QList_QGesture_ptr(this_ptr: *mut ::list::ListGestureMutPtr, t: *const ::list::ListGestureMutPtr);
  pub fn qt_widgets_c_QList_QGesture_ptr_at(this_ptr: *const ::list::ListGestureMutPtr, i: ::libc::c_int) -> *const *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QList_QGesture_ptr_back(this_ptr: *mut ::list::ListGestureMutPtr) -> *mut *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QList_QGesture_ptr_back_const(this_ptr: *const ::list::ListGestureMutPtr) -> *const *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QList_QGesture_ptr_clear(this_ptr: *mut ::list::ListGestureMutPtr);
  pub fn qt_widgets_c_QList_QGesture_ptr_constFirst(this_ptr: *const ::list::ListGestureMutPtr) -> *const *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QList_QGesture_ptr_constLast(this_ptr: *const ::list::ListGestureMutPtr) -> *const *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QList_QGesture_ptr_constructor_l(l: *const ::list::ListGestureMutPtr, output: *mut ::list::ListGestureMutPtr);
  pub fn qt_widgets_c_QList_QGesture_ptr_constructor_no_args(output: *mut ::list::ListGestureMutPtr);
  pub fn qt_widgets_c_QList_QGesture_ptr_contains(this_ptr: *const ::list::ListGestureMutPtr, t: *const *mut ::gesture::Gesture) -> bool;
  pub fn qt_widgets_c_QList_QGesture_ptr_count_no_args(this_ptr: *const ::list::ListGestureMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGesture_ptr_count_t(this_ptr: *const ::list::ListGestureMutPtr, t: *const *mut ::gesture::Gesture) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGesture_ptr_destructor(this_ptr: *mut ::list::ListGestureMutPtr);
  pub fn qt_widgets_c_QList_QGesture_ptr_empty(this_ptr: *const ::list::ListGestureMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QGesture_ptr_endsWith(this_ptr: *const ::list::ListGestureMutPtr, t: *const *mut ::gesture::Gesture) -> bool;
  pub fn qt_widgets_c_QList_QGesture_ptr_first(this_ptr: *mut ::list::ListGestureMutPtr) -> *mut *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QList_QGesture_ptr_first_const(this_ptr: *const ::list::ListGestureMutPtr) -> *const *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QList_QGesture_ptr_front(this_ptr: *mut ::list::ListGestureMutPtr) -> *mut *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QList_QGesture_ptr_front_const(this_ptr: *const ::list::ListGestureMutPtr) -> *const *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QList_QGesture_ptr_indexOf_t(this_ptr: *const ::list::ListGestureMutPtr, t: *const *mut ::gesture::Gesture) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGesture_ptr_indexOf_t_from(this_ptr: *const ::list::ListGestureMutPtr, t: *const *mut ::gesture::Gesture, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGesture_ptr_insert(this_ptr: *mut ::list::ListGestureMutPtr, i: ::libc::c_int, t: *const *mut ::gesture::Gesture);
  pub fn qt_widgets_c_QList_QGesture_ptr_isEmpty(this_ptr: *const ::list::ListGestureMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QGesture_ptr_last(this_ptr: *mut ::list::ListGestureMutPtr) -> *mut *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QList_QGesture_ptr_lastIndexOf_t(this_ptr: *const ::list::ListGestureMutPtr, t: *const *mut ::gesture::Gesture) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGesture_ptr_lastIndexOf_t_from(this_ptr: *const ::list::ListGestureMutPtr, t: *const *mut ::gesture::Gesture, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGesture_ptr_last_const(this_ptr: *const ::list::ListGestureMutPtr) -> *const *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QList_QGesture_ptr_length(this_ptr: *const ::list::ListGestureMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGesture_ptr_mid_to_output_pos(this_ptr: *const ::list::ListGestureMutPtr, pos: ::libc::c_int, output: *mut ::list::ListGestureMutPtr);
  pub fn qt_widgets_c_QList_QGesture_ptr_mid_to_output_pos_length(this_ptr: *const ::list::ListGestureMutPtr, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListGestureMutPtr);
  pub fn qt_widgets_c_QList_QGesture_ptr_move(this_ptr: *mut ::list::ListGestureMutPtr, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QList_QGesture_ptr_operator_add_assign_l(this_ptr: *mut ::list::ListGestureMutPtr, l: *const ::list::ListGestureMutPtr) -> *mut ::list::ListGestureMutPtr;
  pub fn qt_widgets_c_QList_QGesture_ptr_operator_add_assign_t(this_ptr: *mut ::list::ListGestureMutPtr, t: *const *mut ::gesture::Gesture) -> *mut ::list::ListGestureMutPtr;
  pub fn qt_widgets_c_QList_QGesture_ptr_operator_add_to_output(this_ptr: *const ::list::ListGestureMutPtr, l: *const ::list::ListGestureMutPtr, output: *mut ::list::ListGestureMutPtr);
  pub fn qt_widgets_c_QList_QGesture_ptr_operator_assign(this_ptr: *mut ::list::ListGestureMutPtr, l: *const ::list::ListGestureMutPtr) -> *mut ::list::ListGestureMutPtr;
  pub fn qt_widgets_c_QList_QGesture_ptr_operator_eq(this_ptr: *const ::list::ListGestureMutPtr, l: *const ::list::ListGestureMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QGesture_ptr_operator_index(this_ptr: *mut ::list::ListGestureMutPtr, i: ::libc::c_int) -> *mut *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QList_QGesture_ptr_operator_index_const(this_ptr: *const ::list::ListGestureMutPtr, i: ::libc::c_int) -> *const *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QList_QGesture_ptr_operator_neq(this_ptr: *const ::list::ListGestureMutPtr, l: *const ::list::ListGestureMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QGesture_ptr_operator_shl_l(this_ptr: *mut ::list::ListGestureMutPtr, l: *const ::list::ListGestureMutPtr) -> *mut ::list::ListGestureMutPtr;
  pub fn qt_widgets_c_QList_QGesture_ptr_operator_shl_t(this_ptr: *mut ::list::ListGestureMutPtr, t: *const *mut ::gesture::Gesture) -> *mut ::list::ListGestureMutPtr;
  pub fn qt_widgets_c_QList_QGesture_ptr_pop_back(this_ptr: *mut ::list::ListGestureMutPtr);
  pub fn qt_widgets_c_QList_QGesture_ptr_pop_front(this_ptr: *mut ::list::ListGestureMutPtr);
  pub fn qt_widgets_c_QList_QGesture_ptr_prepend(this_ptr: *mut ::list::ListGestureMutPtr, t: *const *mut ::gesture::Gesture);
  pub fn qt_widgets_c_QList_QGesture_ptr_push_back(this_ptr: *mut ::list::ListGestureMutPtr, t: *const *mut ::gesture::Gesture);
  pub fn qt_widgets_c_QList_QGesture_ptr_push_front(this_ptr: *mut ::list::ListGestureMutPtr, t: *const *mut ::gesture::Gesture);
  pub fn qt_widgets_c_QList_QGesture_ptr_removeAll(this_ptr: *mut ::list::ListGestureMutPtr, t: *const *mut ::gesture::Gesture) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGesture_ptr_removeAt(this_ptr: *mut ::list::ListGestureMutPtr, i: ::libc::c_int);
  pub fn qt_widgets_c_QList_QGesture_ptr_removeFirst(this_ptr: *mut ::list::ListGestureMutPtr);
  pub fn qt_widgets_c_QList_QGesture_ptr_removeLast(this_ptr: *mut ::list::ListGestureMutPtr);
  pub fn qt_widgets_c_QList_QGesture_ptr_removeOne(this_ptr: *mut ::list::ListGestureMutPtr, t: *const *mut ::gesture::Gesture) -> bool;
  pub fn qt_widgets_c_QList_QGesture_ptr_replace(this_ptr: *mut ::list::ListGestureMutPtr, i: ::libc::c_int, t: *const *mut ::gesture::Gesture);
  pub fn qt_widgets_c_QList_QGesture_ptr_reserve(this_ptr: *mut ::list::ListGestureMutPtr, size: ::libc::c_int);
  pub fn qt_widgets_c_QList_QGesture_ptr_size(this_ptr: *const ::list::ListGestureMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGesture_ptr_startsWith(this_ptr: *const ::list::ListGestureMutPtr, t: *const *mut ::gesture::Gesture) -> bool;
  pub fn qt_widgets_c_QList_QGesture_ptr_swap_i_j(this_ptr: *mut ::list::ListGestureMutPtr, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_widgets_c_QList_QGesture_ptr_swap_other(this_ptr: *mut ::list::ListGestureMutPtr, other: *mut ::list::ListGestureMutPtr);
  pub fn qt_widgets_c_QList_QGesture_ptr_takeAt(this_ptr: *mut ::list::ListGestureMutPtr, i: ::libc::c_int) -> *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QList_QGesture_ptr_takeFirst(this_ptr: *mut ::list::ListGestureMutPtr) -> *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QList_QGesture_ptr_takeLast(this_ptr: *mut ::list::ListGestureMutPtr) -> *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QList_QGesture_ptr_value_i(this_ptr: *const ::list::ListGestureMutPtr, i: ::libc::c_int) -> *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QList_QGesture_ptr_value_i_defaultValue(this_ptr: *const ::list::ListGestureMutPtr, i: ::libc::c_int, defaultValue: *const *mut ::gesture::Gesture) -> *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_append_QGraphicsItem(this_ptr: *mut ::list::ListGraphicsItemMutPtr, t: *const *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_append_QList_QGraphicsItem_ptr(this_ptr: *mut ::list::ListGraphicsItemMutPtr, t: *const ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_at(this_ptr: *const ::list::ListGraphicsItemMutPtr, i: ::libc::c_int) -> *const *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_back(this_ptr: *mut ::list::ListGraphicsItemMutPtr) -> *mut *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_back_const(this_ptr: *const ::list::ListGraphicsItemMutPtr) -> *const *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_clear(this_ptr: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_constFirst(this_ptr: *const ::list::ListGraphicsItemMutPtr) -> *const *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_constLast(this_ptr: *const ::list::ListGraphicsItemMutPtr) -> *const *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_constructor_l(l: *const ::list::ListGraphicsItemMutPtr, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_constructor_no_args(output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_contains(this_ptr: *const ::list::ListGraphicsItemMutPtr, t: *const *mut ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_count_no_args(this_ptr: *const ::list::ListGraphicsItemMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_count_t(this_ptr: *const ::list::ListGraphicsItemMutPtr, t: *const *mut ::graphics_item::GraphicsItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_destructor(this_ptr: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_empty(this_ptr: *const ::list::ListGraphicsItemMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_endsWith(this_ptr: *const ::list::ListGraphicsItemMutPtr, t: *const *mut ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_first(this_ptr: *mut ::list::ListGraphicsItemMutPtr) -> *mut *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_first_const(this_ptr: *const ::list::ListGraphicsItemMutPtr) -> *const *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_front(this_ptr: *mut ::list::ListGraphicsItemMutPtr) -> *mut *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_front_const(this_ptr: *const ::list::ListGraphicsItemMutPtr) -> *const *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_indexOf_t(this_ptr: *const ::list::ListGraphicsItemMutPtr, t: *const *mut ::graphics_item::GraphicsItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_indexOf_t_from(this_ptr: *const ::list::ListGraphicsItemMutPtr, t: *const *mut ::graphics_item::GraphicsItem, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_insert(this_ptr: *mut ::list::ListGraphicsItemMutPtr, i: ::libc::c_int, t: *const *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_isEmpty(this_ptr: *const ::list::ListGraphicsItemMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_last(this_ptr: *mut ::list::ListGraphicsItemMutPtr) -> *mut *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_lastIndexOf_t(this_ptr: *const ::list::ListGraphicsItemMutPtr, t: *const *mut ::graphics_item::GraphicsItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_lastIndexOf_t_from(this_ptr: *const ::list::ListGraphicsItemMutPtr, t: *const *mut ::graphics_item::GraphicsItem, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_last_const(this_ptr: *const ::list::ListGraphicsItemMutPtr) -> *const *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_length(this_ptr: *const ::list::ListGraphicsItemMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_mid_to_output_pos(this_ptr: *const ::list::ListGraphicsItemMutPtr, pos: ::libc::c_int, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_mid_to_output_pos_length(this_ptr: *const ::list::ListGraphicsItemMutPtr, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_move(this_ptr: *mut ::list::ListGraphicsItemMutPtr, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_operator_add_assign_l(this_ptr: *mut ::list::ListGraphicsItemMutPtr, l: *const ::list::ListGraphicsItemMutPtr) -> *mut ::list::ListGraphicsItemMutPtr;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_operator_add_assign_t(this_ptr: *mut ::list::ListGraphicsItemMutPtr, t: *const *mut ::graphics_item::GraphicsItem) -> *mut ::list::ListGraphicsItemMutPtr;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_operator_add_to_output(this_ptr: *const ::list::ListGraphicsItemMutPtr, l: *const ::list::ListGraphicsItemMutPtr, output: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_operator_assign(this_ptr: *mut ::list::ListGraphicsItemMutPtr, l: *const ::list::ListGraphicsItemMutPtr) -> *mut ::list::ListGraphicsItemMutPtr;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_operator_eq(this_ptr: *const ::list::ListGraphicsItemMutPtr, l: *const ::list::ListGraphicsItemMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_operator_index(this_ptr: *mut ::list::ListGraphicsItemMutPtr, i: ::libc::c_int) -> *mut *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_operator_index_const(this_ptr: *const ::list::ListGraphicsItemMutPtr, i: ::libc::c_int) -> *const *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_operator_neq(this_ptr: *const ::list::ListGraphicsItemMutPtr, l: *const ::list::ListGraphicsItemMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_operator_shl_l(this_ptr: *mut ::list::ListGraphicsItemMutPtr, l: *const ::list::ListGraphicsItemMutPtr) -> *mut ::list::ListGraphicsItemMutPtr;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_operator_shl_t(this_ptr: *mut ::list::ListGraphicsItemMutPtr, t: *const *mut ::graphics_item::GraphicsItem) -> *mut ::list::ListGraphicsItemMutPtr;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_pop_back(this_ptr: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_pop_front(this_ptr: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_prepend(this_ptr: *mut ::list::ListGraphicsItemMutPtr, t: *const *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_push_back(this_ptr: *mut ::list::ListGraphicsItemMutPtr, t: *const *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_push_front(this_ptr: *mut ::list::ListGraphicsItemMutPtr, t: *const *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_removeAll(this_ptr: *mut ::list::ListGraphicsItemMutPtr, t: *const *mut ::graphics_item::GraphicsItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_removeAt(this_ptr: *mut ::list::ListGraphicsItemMutPtr, i: ::libc::c_int);
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_removeFirst(this_ptr: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_removeLast(this_ptr: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_removeOne(this_ptr: *mut ::list::ListGraphicsItemMutPtr, t: *const *mut ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_replace(this_ptr: *mut ::list::ListGraphicsItemMutPtr, i: ::libc::c_int, t: *const *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_reserve(this_ptr: *mut ::list::ListGraphicsItemMutPtr, size: ::libc::c_int);
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_size(this_ptr: *const ::list::ListGraphicsItemMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_startsWith(this_ptr: *const ::list::ListGraphicsItemMutPtr, t: *const *mut ::graphics_item::GraphicsItem) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_swap_i_j(this_ptr: *mut ::list::ListGraphicsItemMutPtr, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_swap_other(this_ptr: *mut ::list::ListGraphicsItemMutPtr, other: *mut ::list::ListGraphicsItemMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_takeAt(this_ptr: *mut ::list::ListGraphicsItemMutPtr, i: ::libc::c_int) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_takeFirst(this_ptr: *mut ::list::ListGraphicsItemMutPtr) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_takeLast(this_ptr: *mut ::list::ListGraphicsItemMutPtr) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_value_i(this_ptr: *const ::list::ListGraphicsItemMutPtr, i: ::libc::c_int) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QList_QGraphicsItem_ptr_value_i_defaultValue(this_ptr: *const ::list::ListGraphicsItemMutPtr, i: ::libc::c_int, defaultValue: *const *mut ::graphics_item::GraphicsItem) -> *mut ::graphics_item::GraphicsItem;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_append_QGraphicsTransform(this_ptr: *mut ::list::ListGraphicsTransformMutPtr, t: *const *mut ::graphics_transform::GraphicsTransform);
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_append_QList_QGraphicsTransform_ptr(this_ptr: *mut ::list::ListGraphicsTransformMutPtr, t: *const ::list::ListGraphicsTransformMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_at(this_ptr: *const ::list::ListGraphicsTransformMutPtr, i: ::libc::c_int) -> *const *mut ::graphics_transform::GraphicsTransform;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_back(this_ptr: *mut ::list::ListGraphicsTransformMutPtr) -> *mut *mut ::graphics_transform::GraphicsTransform;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_back_const(this_ptr: *const ::list::ListGraphicsTransformMutPtr) -> *const *mut ::graphics_transform::GraphicsTransform;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_clear(this_ptr: *mut ::list::ListGraphicsTransformMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_constFirst(this_ptr: *const ::list::ListGraphicsTransformMutPtr) -> *const *mut ::graphics_transform::GraphicsTransform;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_constLast(this_ptr: *const ::list::ListGraphicsTransformMutPtr) -> *const *mut ::graphics_transform::GraphicsTransform;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_constructor_l(l: *const ::list::ListGraphicsTransformMutPtr, output: *mut ::list::ListGraphicsTransformMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_constructor_no_args(output: *mut ::list::ListGraphicsTransformMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_contains(this_ptr: *const ::list::ListGraphicsTransformMutPtr, t: *const *mut ::graphics_transform::GraphicsTransform) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_count_no_args(this_ptr: *const ::list::ListGraphicsTransformMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_count_t(this_ptr: *const ::list::ListGraphicsTransformMutPtr, t: *const *mut ::graphics_transform::GraphicsTransform) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_destructor(this_ptr: *mut ::list::ListGraphicsTransformMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_empty(this_ptr: *const ::list::ListGraphicsTransformMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_endsWith(this_ptr: *const ::list::ListGraphicsTransformMutPtr, t: *const *mut ::graphics_transform::GraphicsTransform) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_first(this_ptr: *mut ::list::ListGraphicsTransformMutPtr) -> *mut *mut ::graphics_transform::GraphicsTransform;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_first_const(this_ptr: *const ::list::ListGraphicsTransformMutPtr) -> *const *mut ::graphics_transform::GraphicsTransform;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_front(this_ptr: *mut ::list::ListGraphicsTransformMutPtr) -> *mut *mut ::graphics_transform::GraphicsTransform;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_front_const(this_ptr: *const ::list::ListGraphicsTransformMutPtr) -> *const *mut ::graphics_transform::GraphicsTransform;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_indexOf_t(this_ptr: *const ::list::ListGraphicsTransformMutPtr, t: *const *mut ::graphics_transform::GraphicsTransform) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_indexOf_t_from(this_ptr: *const ::list::ListGraphicsTransformMutPtr, t: *const *mut ::graphics_transform::GraphicsTransform, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_insert(this_ptr: *mut ::list::ListGraphicsTransformMutPtr, i: ::libc::c_int, t: *const *mut ::graphics_transform::GraphicsTransform);
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_isEmpty(this_ptr: *const ::list::ListGraphicsTransformMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_last(this_ptr: *mut ::list::ListGraphicsTransformMutPtr) -> *mut *mut ::graphics_transform::GraphicsTransform;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_lastIndexOf_t(this_ptr: *const ::list::ListGraphicsTransformMutPtr, t: *const *mut ::graphics_transform::GraphicsTransform) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_lastIndexOf_t_from(this_ptr: *const ::list::ListGraphicsTransformMutPtr, t: *const *mut ::graphics_transform::GraphicsTransform, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_last_const(this_ptr: *const ::list::ListGraphicsTransformMutPtr) -> *const *mut ::graphics_transform::GraphicsTransform;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_length(this_ptr: *const ::list::ListGraphicsTransformMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_mid_to_output_pos(this_ptr: *const ::list::ListGraphicsTransformMutPtr, pos: ::libc::c_int, output: *mut ::list::ListGraphicsTransformMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_mid_to_output_pos_length(this_ptr: *const ::list::ListGraphicsTransformMutPtr, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListGraphicsTransformMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_move(this_ptr: *mut ::list::ListGraphicsTransformMutPtr, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_operator_add_assign_l(this_ptr: *mut ::list::ListGraphicsTransformMutPtr, l: *const ::list::ListGraphicsTransformMutPtr) -> *mut ::list::ListGraphicsTransformMutPtr;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_operator_add_assign_t(this_ptr: *mut ::list::ListGraphicsTransformMutPtr, t: *const *mut ::graphics_transform::GraphicsTransform) -> *mut ::list::ListGraphicsTransformMutPtr;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_operator_add_to_output(this_ptr: *const ::list::ListGraphicsTransformMutPtr, l: *const ::list::ListGraphicsTransformMutPtr, output: *mut ::list::ListGraphicsTransformMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_operator_assign(this_ptr: *mut ::list::ListGraphicsTransformMutPtr, l: *const ::list::ListGraphicsTransformMutPtr) -> *mut ::list::ListGraphicsTransformMutPtr;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_operator_eq(this_ptr: *const ::list::ListGraphicsTransformMutPtr, l: *const ::list::ListGraphicsTransformMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_operator_index(this_ptr: *mut ::list::ListGraphicsTransformMutPtr, i: ::libc::c_int) -> *mut *mut ::graphics_transform::GraphicsTransform;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_operator_index_const(this_ptr: *const ::list::ListGraphicsTransformMutPtr, i: ::libc::c_int) -> *const *mut ::graphics_transform::GraphicsTransform;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_operator_neq(this_ptr: *const ::list::ListGraphicsTransformMutPtr, l: *const ::list::ListGraphicsTransformMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_operator_shl_l(this_ptr: *mut ::list::ListGraphicsTransformMutPtr, l: *const ::list::ListGraphicsTransformMutPtr) -> *mut ::list::ListGraphicsTransformMutPtr;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_operator_shl_t(this_ptr: *mut ::list::ListGraphicsTransformMutPtr, t: *const *mut ::graphics_transform::GraphicsTransform) -> *mut ::list::ListGraphicsTransformMutPtr;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_pop_back(this_ptr: *mut ::list::ListGraphicsTransformMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_pop_front(this_ptr: *mut ::list::ListGraphicsTransformMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_prepend(this_ptr: *mut ::list::ListGraphicsTransformMutPtr, t: *const *mut ::graphics_transform::GraphicsTransform);
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_push_back(this_ptr: *mut ::list::ListGraphicsTransformMutPtr, t: *const *mut ::graphics_transform::GraphicsTransform);
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_push_front(this_ptr: *mut ::list::ListGraphicsTransformMutPtr, t: *const *mut ::graphics_transform::GraphicsTransform);
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_removeAll(this_ptr: *mut ::list::ListGraphicsTransformMutPtr, t: *const *mut ::graphics_transform::GraphicsTransform) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_removeAt(this_ptr: *mut ::list::ListGraphicsTransformMutPtr, i: ::libc::c_int);
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_removeFirst(this_ptr: *mut ::list::ListGraphicsTransformMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_removeLast(this_ptr: *mut ::list::ListGraphicsTransformMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_removeOne(this_ptr: *mut ::list::ListGraphicsTransformMutPtr, t: *const *mut ::graphics_transform::GraphicsTransform) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_replace(this_ptr: *mut ::list::ListGraphicsTransformMutPtr, i: ::libc::c_int, t: *const *mut ::graphics_transform::GraphicsTransform);
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_reserve(this_ptr: *mut ::list::ListGraphicsTransformMutPtr, size: ::libc::c_int);
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_size(this_ptr: *const ::list::ListGraphicsTransformMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_startsWith(this_ptr: *const ::list::ListGraphicsTransformMutPtr, t: *const *mut ::graphics_transform::GraphicsTransform) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_swap_i_j(this_ptr: *mut ::list::ListGraphicsTransformMutPtr, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_swap_other(this_ptr: *mut ::list::ListGraphicsTransformMutPtr, other: *mut ::list::ListGraphicsTransformMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_takeAt(this_ptr: *mut ::list::ListGraphicsTransformMutPtr, i: ::libc::c_int) -> *mut ::graphics_transform::GraphicsTransform;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_takeFirst(this_ptr: *mut ::list::ListGraphicsTransformMutPtr) -> *mut ::graphics_transform::GraphicsTransform;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_takeLast(this_ptr: *mut ::list::ListGraphicsTransformMutPtr) -> *mut ::graphics_transform::GraphicsTransform;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_value_i(this_ptr: *const ::list::ListGraphicsTransformMutPtr, i: ::libc::c_int) -> *mut ::graphics_transform::GraphicsTransform;
  pub fn qt_widgets_c_QList_QGraphicsTransform_ptr_value_i_defaultValue(this_ptr: *const ::list::ListGraphicsTransformMutPtr, i: ::libc::c_int, defaultValue: *const *mut ::graphics_transform::GraphicsTransform) -> *mut ::graphics_transform::GraphicsTransform;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_append_QGraphicsView(this_ptr: *mut ::list::ListGraphicsViewMutPtr, t: *const *mut ::graphics_view::GraphicsView);
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_append_QList_QGraphicsView_ptr(this_ptr: *mut ::list::ListGraphicsViewMutPtr, t: *const ::list::ListGraphicsViewMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_at(this_ptr: *const ::list::ListGraphicsViewMutPtr, i: ::libc::c_int) -> *const *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_back(this_ptr: *mut ::list::ListGraphicsViewMutPtr) -> *mut *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_back_const(this_ptr: *const ::list::ListGraphicsViewMutPtr) -> *const *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_clear(this_ptr: *mut ::list::ListGraphicsViewMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_constFirst(this_ptr: *const ::list::ListGraphicsViewMutPtr) -> *const *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_constLast(this_ptr: *const ::list::ListGraphicsViewMutPtr) -> *const *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_constructor_l(l: *const ::list::ListGraphicsViewMutPtr, output: *mut ::list::ListGraphicsViewMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_constructor_no_args(output: *mut ::list::ListGraphicsViewMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_contains(this_ptr: *const ::list::ListGraphicsViewMutPtr, t: *const *mut ::graphics_view::GraphicsView) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_count_no_args(this_ptr: *const ::list::ListGraphicsViewMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_count_t(this_ptr: *const ::list::ListGraphicsViewMutPtr, t: *const *mut ::graphics_view::GraphicsView) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_destructor(this_ptr: *mut ::list::ListGraphicsViewMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_empty(this_ptr: *const ::list::ListGraphicsViewMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_endsWith(this_ptr: *const ::list::ListGraphicsViewMutPtr, t: *const *mut ::graphics_view::GraphicsView) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_first(this_ptr: *mut ::list::ListGraphicsViewMutPtr) -> *mut *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_first_const(this_ptr: *const ::list::ListGraphicsViewMutPtr) -> *const *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_front(this_ptr: *mut ::list::ListGraphicsViewMutPtr) -> *mut *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_front_const(this_ptr: *const ::list::ListGraphicsViewMutPtr) -> *const *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_indexOf_t(this_ptr: *const ::list::ListGraphicsViewMutPtr, t: *const *mut ::graphics_view::GraphicsView) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_indexOf_t_from(this_ptr: *const ::list::ListGraphicsViewMutPtr, t: *const *mut ::graphics_view::GraphicsView, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_insert(this_ptr: *mut ::list::ListGraphicsViewMutPtr, i: ::libc::c_int, t: *const *mut ::graphics_view::GraphicsView);
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_isEmpty(this_ptr: *const ::list::ListGraphicsViewMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_last(this_ptr: *mut ::list::ListGraphicsViewMutPtr) -> *mut *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_lastIndexOf_t(this_ptr: *const ::list::ListGraphicsViewMutPtr, t: *const *mut ::graphics_view::GraphicsView) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_lastIndexOf_t_from(this_ptr: *const ::list::ListGraphicsViewMutPtr, t: *const *mut ::graphics_view::GraphicsView, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_last_const(this_ptr: *const ::list::ListGraphicsViewMutPtr) -> *const *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_length(this_ptr: *const ::list::ListGraphicsViewMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_mid_to_output_pos(this_ptr: *const ::list::ListGraphicsViewMutPtr, pos: ::libc::c_int, output: *mut ::list::ListGraphicsViewMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_mid_to_output_pos_length(this_ptr: *const ::list::ListGraphicsViewMutPtr, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListGraphicsViewMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_move(this_ptr: *mut ::list::ListGraphicsViewMutPtr, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_operator_add_assign_l(this_ptr: *mut ::list::ListGraphicsViewMutPtr, l: *const ::list::ListGraphicsViewMutPtr) -> *mut ::list::ListGraphicsViewMutPtr;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_operator_add_assign_t(this_ptr: *mut ::list::ListGraphicsViewMutPtr, t: *const *mut ::graphics_view::GraphicsView) -> *mut ::list::ListGraphicsViewMutPtr;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_operator_add_to_output(this_ptr: *const ::list::ListGraphicsViewMutPtr, l: *const ::list::ListGraphicsViewMutPtr, output: *mut ::list::ListGraphicsViewMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_operator_assign(this_ptr: *mut ::list::ListGraphicsViewMutPtr, l: *const ::list::ListGraphicsViewMutPtr) -> *mut ::list::ListGraphicsViewMutPtr;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_operator_eq(this_ptr: *const ::list::ListGraphicsViewMutPtr, l: *const ::list::ListGraphicsViewMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_operator_index(this_ptr: *mut ::list::ListGraphicsViewMutPtr, i: ::libc::c_int) -> *mut *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_operator_index_const(this_ptr: *const ::list::ListGraphicsViewMutPtr, i: ::libc::c_int) -> *const *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_operator_neq(this_ptr: *const ::list::ListGraphicsViewMutPtr, l: *const ::list::ListGraphicsViewMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_operator_shl_l(this_ptr: *mut ::list::ListGraphicsViewMutPtr, l: *const ::list::ListGraphicsViewMutPtr) -> *mut ::list::ListGraphicsViewMutPtr;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_operator_shl_t(this_ptr: *mut ::list::ListGraphicsViewMutPtr, t: *const *mut ::graphics_view::GraphicsView) -> *mut ::list::ListGraphicsViewMutPtr;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_pop_back(this_ptr: *mut ::list::ListGraphicsViewMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_pop_front(this_ptr: *mut ::list::ListGraphicsViewMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_prepend(this_ptr: *mut ::list::ListGraphicsViewMutPtr, t: *const *mut ::graphics_view::GraphicsView);
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_push_back(this_ptr: *mut ::list::ListGraphicsViewMutPtr, t: *const *mut ::graphics_view::GraphicsView);
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_push_front(this_ptr: *mut ::list::ListGraphicsViewMutPtr, t: *const *mut ::graphics_view::GraphicsView);
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_removeAll(this_ptr: *mut ::list::ListGraphicsViewMutPtr, t: *const *mut ::graphics_view::GraphicsView) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_removeAt(this_ptr: *mut ::list::ListGraphicsViewMutPtr, i: ::libc::c_int);
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_removeFirst(this_ptr: *mut ::list::ListGraphicsViewMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_removeLast(this_ptr: *mut ::list::ListGraphicsViewMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_removeOne(this_ptr: *mut ::list::ListGraphicsViewMutPtr, t: *const *mut ::graphics_view::GraphicsView) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_replace(this_ptr: *mut ::list::ListGraphicsViewMutPtr, i: ::libc::c_int, t: *const *mut ::graphics_view::GraphicsView);
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_reserve(this_ptr: *mut ::list::ListGraphicsViewMutPtr, size: ::libc::c_int);
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_size(this_ptr: *const ::list::ListGraphicsViewMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_startsWith(this_ptr: *const ::list::ListGraphicsViewMutPtr, t: *const *mut ::graphics_view::GraphicsView) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_swap_i_j(this_ptr: *mut ::list::ListGraphicsViewMutPtr, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_swap_other(this_ptr: *mut ::list::ListGraphicsViewMutPtr, other: *mut ::list::ListGraphicsViewMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_takeAt(this_ptr: *mut ::list::ListGraphicsViewMutPtr, i: ::libc::c_int) -> *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_takeFirst(this_ptr: *mut ::list::ListGraphicsViewMutPtr) -> *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_takeLast(this_ptr: *mut ::list::ListGraphicsViewMutPtr) -> *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_value_i(this_ptr: *const ::list::ListGraphicsViewMutPtr, i: ::libc::c_int) -> *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QList_QGraphicsView_ptr_value_i_defaultValue(this_ptr: *const ::list::ListGraphicsViewMutPtr, i: ::libc::c_int, defaultValue: *const *mut ::graphics_view::GraphicsView) -> *mut ::graphics_view::GraphicsView;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_append_QGraphicsWidget(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr, t: *const *mut ::graphics_widget::GraphicsWidget);
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_append_QList_QGraphicsWidget_ptr(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr, t: *const ::list::ListGraphicsWidgetMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_at(this_ptr: *const ::list::ListGraphicsWidgetMutPtr, i: ::libc::c_int) -> *const *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_back(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr) -> *mut *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_back_const(this_ptr: *const ::list::ListGraphicsWidgetMutPtr) -> *const *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_clear(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_constFirst(this_ptr: *const ::list::ListGraphicsWidgetMutPtr) -> *const *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_constLast(this_ptr: *const ::list::ListGraphicsWidgetMutPtr) -> *const *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_constructor_l(l: *const ::list::ListGraphicsWidgetMutPtr, output: *mut ::list::ListGraphicsWidgetMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_constructor_no_args(output: *mut ::list::ListGraphicsWidgetMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_contains(this_ptr: *const ::list::ListGraphicsWidgetMutPtr, t: *const *mut ::graphics_widget::GraphicsWidget) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_count_no_args(this_ptr: *const ::list::ListGraphicsWidgetMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_count_t(this_ptr: *const ::list::ListGraphicsWidgetMutPtr, t: *const *mut ::graphics_widget::GraphicsWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_destructor(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_empty(this_ptr: *const ::list::ListGraphicsWidgetMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_endsWith(this_ptr: *const ::list::ListGraphicsWidgetMutPtr, t: *const *mut ::graphics_widget::GraphicsWidget) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_first(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr) -> *mut *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_first_const(this_ptr: *const ::list::ListGraphicsWidgetMutPtr) -> *const *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_front(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr) -> *mut *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_front_const(this_ptr: *const ::list::ListGraphicsWidgetMutPtr) -> *const *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_indexOf_t(this_ptr: *const ::list::ListGraphicsWidgetMutPtr, t: *const *mut ::graphics_widget::GraphicsWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_indexOf_t_from(this_ptr: *const ::list::ListGraphicsWidgetMutPtr, t: *const *mut ::graphics_widget::GraphicsWidget, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_insert(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr, i: ::libc::c_int, t: *const *mut ::graphics_widget::GraphicsWidget);
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_isEmpty(this_ptr: *const ::list::ListGraphicsWidgetMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_last(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr) -> *mut *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_lastIndexOf_t(this_ptr: *const ::list::ListGraphicsWidgetMutPtr, t: *const *mut ::graphics_widget::GraphicsWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_lastIndexOf_t_from(this_ptr: *const ::list::ListGraphicsWidgetMutPtr, t: *const *mut ::graphics_widget::GraphicsWidget, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_last_const(this_ptr: *const ::list::ListGraphicsWidgetMutPtr) -> *const *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_length(this_ptr: *const ::list::ListGraphicsWidgetMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_mid_to_output_pos(this_ptr: *const ::list::ListGraphicsWidgetMutPtr, pos: ::libc::c_int, output: *mut ::list::ListGraphicsWidgetMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_mid_to_output_pos_length(this_ptr: *const ::list::ListGraphicsWidgetMutPtr, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListGraphicsWidgetMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_move(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_operator_add_assign_l(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr, l: *const ::list::ListGraphicsWidgetMutPtr) -> *mut ::list::ListGraphicsWidgetMutPtr;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_operator_add_assign_t(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr, t: *const *mut ::graphics_widget::GraphicsWidget) -> *mut ::list::ListGraphicsWidgetMutPtr;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_operator_add_to_output(this_ptr: *const ::list::ListGraphicsWidgetMutPtr, l: *const ::list::ListGraphicsWidgetMutPtr, output: *mut ::list::ListGraphicsWidgetMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_operator_assign(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr, l: *const ::list::ListGraphicsWidgetMutPtr) -> *mut ::list::ListGraphicsWidgetMutPtr;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_operator_eq(this_ptr: *const ::list::ListGraphicsWidgetMutPtr, l: *const ::list::ListGraphicsWidgetMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_operator_index(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr, i: ::libc::c_int) -> *mut *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_operator_index_const(this_ptr: *const ::list::ListGraphicsWidgetMutPtr, i: ::libc::c_int) -> *const *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_operator_neq(this_ptr: *const ::list::ListGraphicsWidgetMutPtr, l: *const ::list::ListGraphicsWidgetMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_operator_shl_l(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr, l: *const ::list::ListGraphicsWidgetMutPtr) -> *mut ::list::ListGraphicsWidgetMutPtr;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_operator_shl_t(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr, t: *const *mut ::graphics_widget::GraphicsWidget) -> *mut ::list::ListGraphicsWidgetMutPtr;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_pop_back(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_pop_front(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_prepend(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr, t: *const *mut ::graphics_widget::GraphicsWidget);
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_push_back(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr, t: *const *mut ::graphics_widget::GraphicsWidget);
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_push_front(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr, t: *const *mut ::graphics_widget::GraphicsWidget);
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_removeAll(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr, t: *const *mut ::graphics_widget::GraphicsWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_removeAt(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr, i: ::libc::c_int);
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_removeFirst(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_removeLast(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_removeOne(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr, t: *const *mut ::graphics_widget::GraphicsWidget) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_replace(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr, i: ::libc::c_int, t: *const *mut ::graphics_widget::GraphicsWidget);
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_reserve(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr, size: ::libc::c_int);
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_size(this_ptr: *const ::list::ListGraphicsWidgetMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_startsWith(this_ptr: *const ::list::ListGraphicsWidgetMutPtr, t: *const *mut ::graphics_widget::GraphicsWidget) -> bool;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_swap_i_j(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_swap_other(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr, other: *mut ::list::ListGraphicsWidgetMutPtr);
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_takeAt(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr, i: ::libc::c_int) -> *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_takeFirst(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr) -> *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_takeLast(this_ptr: *mut ::list::ListGraphicsWidgetMutPtr) -> *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_value_i(this_ptr: *const ::list::ListGraphicsWidgetMutPtr, i: ::libc::c_int) -> *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QList_QGraphicsWidget_ptr_value_i_defaultValue(this_ptr: *const ::list::ListGraphicsWidgetMutPtr, i: ::libc::c_int, defaultValue: *const *mut ::graphics_widget::GraphicsWidget) -> *mut ::graphics_widget::GraphicsWidget;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_append_QListWidgetItem(this_ptr: *mut ::list::ListListWidgetItemMutPtr, t: *const *mut ::list_widget_item::ListWidgetItem);
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_append_QList_QListWidgetItem_ptr(this_ptr: *mut ::list::ListListWidgetItemMutPtr, t: *const ::list::ListListWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_at(this_ptr: *const ::list::ListListWidgetItemMutPtr, i: ::libc::c_int) -> *const *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_back(this_ptr: *mut ::list::ListListWidgetItemMutPtr) -> *mut *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_back_const(this_ptr: *const ::list::ListListWidgetItemMutPtr) -> *const *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_clear(this_ptr: *mut ::list::ListListWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_constFirst(this_ptr: *const ::list::ListListWidgetItemMutPtr) -> *const *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_constLast(this_ptr: *const ::list::ListListWidgetItemMutPtr) -> *const *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_constructor_l(l: *const ::list::ListListWidgetItemMutPtr, output: *mut ::list::ListListWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_constructor_no_args(output: *mut ::list::ListListWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_contains(this_ptr: *const ::list::ListListWidgetItemMutPtr, t: *const *mut ::list_widget_item::ListWidgetItem) -> bool;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_count_no_args(this_ptr: *const ::list::ListListWidgetItemMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_count_t(this_ptr: *const ::list::ListListWidgetItemMutPtr, t: *const *mut ::list_widget_item::ListWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_destructor(this_ptr: *mut ::list::ListListWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_empty(this_ptr: *const ::list::ListListWidgetItemMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_endsWith(this_ptr: *const ::list::ListListWidgetItemMutPtr, t: *const *mut ::list_widget_item::ListWidgetItem) -> bool;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_first(this_ptr: *mut ::list::ListListWidgetItemMutPtr) -> *mut *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_first_const(this_ptr: *const ::list::ListListWidgetItemMutPtr) -> *const *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_front(this_ptr: *mut ::list::ListListWidgetItemMutPtr) -> *mut *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_front_const(this_ptr: *const ::list::ListListWidgetItemMutPtr) -> *const *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_indexOf_t(this_ptr: *const ::list::ListListWidgetItemMutPtr, t: *const *mut ::list_widget_item::ListWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_indexOf_t_from(this_ptr: *const ::list::ListListWidgetItemMutPtr, t: *const *mut ::list_widget_item::ListWidgetItem, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_insert(this_ptr: *mut ::list::ListListWidgetItemMutPtr, i: ::libc::c_int, t: *const *mut ::list_widget_item::ListWidgetItem);
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_isEmpty(this_ptr: *const ::list::ListListWidgetItemMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_last(this_ptr: *mut ::list::ListListWidgetItemMutPtr) -> *mut *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_lastIndexOf_t(this_ptr: *const ::list::ListListWidgetItemMutPtr, t: *const *mut ::list_widget_item::ListWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_lastIndexOf_t_from(this_ptr: *const ::list::ListListWidgetItemMutPtr, t: *const *mut ::list_widget_item::ListWidgetItem, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_last_const(this_ptr: *const ::list::ListListWidgetItemMutPtr) -> *const *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_length(this_ptr: *const ::list::ListListWidgetItemMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_mid_to_output_pos(this_ptr: *const ::list::ListListWidgetItemMutPtr, pos: ::libc::c_int, output: *mut ::list::ListListWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_mid_to_output_pos_length(this_ptr: *const ::list::ListListWidgetItemMutPtr, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListListWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_move(this_ptr: *mut ::list::ListListWidgetItemMutPtr, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_operator_add_assign_l(this_ptr: *mut ::list::ListListWidgetItemMutPtr, l: *const ::list::ListListWidgetItemMutPtr) -> *mut ::list::ListListWidgetItemMutPtr;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_operator_add_assign_t(this_ptr: *mut ::list::ListListWidgetItemMutPtr, t: *const *mut ::list_widget_item::ListWidgetItem) -> *mut ::list::ListListWidgetItemMutPtr;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_operator_add_to_output(this_ptr: *const ::list::ListListWidgetItemMutPtr, l: *const ::list::ListListWidgetItemMutPtr, output: *mut ::list::ListListWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_operator_assign(this_ptr: *mut ::list::ListListWidgetItemMutPtr, l: *const ::list::ListListWidgetItemMutPtr) -> *mut ::list::ListListWidgetItemMutPtr;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_operator_eq(this_ptr: *const ::list::ListListWidgetItemMutPtr, l: *const ::list::ListListWidgetItemMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_operator_index(this_ptr: *mut ::list::ListListWidgetItemMutPtr, i: ::libc::c_int) -> *mut *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_operator_index_const(this_ptr: *const ::list::ListListWidgetItemMutPtr, i: ::libc::c_int) -> *const *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_operator_neq(this_ptr: *const ::list::ListListWidgetItemMutPtr, l: *const ::list::ListListWidgetItemMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_operator_shl_l(this_ptr: *mut ::list::ListListWidgetItemMutPtr, l: *const ::list::ListListWidgetItemMutPtr) -> *mut ::list::ListListWidgetItemMutPtr;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_operator_shl_t(this_ptr: *mut ::list::ListListWidgetItemMutPtr, t: *const *mut ::list_widget_item::ListWidgetItem) -> *mut ::list::ListListWidgetItemMutPtr;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_pop_back(this_ptr: *mut ::list::ListListWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_pop_front(this_ptr: *mut ::list::ListListWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_prepend(this_ptr: *mut ::list::ListListWidgetItemMutPtr, t: *const *mut ::list_widget_item::ListWidgetItem);
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_push_back(this_ptr: *mut ::list::ListListWidgetItemMutPtr, t: *const *mut ::list_widget_item::ListWidgetItem);
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_push_front(this_ptr: *mut ::list::ListListWidgetItemMutPtr, t: *const *mut ::list_widget_item::ListWidgetItem);
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_removeAll(this_ptr: *mut ::list::ListListWidgetItemMutPtr, t: *const *mut ::list_widget_item::ListWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_removeAt(this_ptr: *mut ::list::ListListWidgetItemMutPtr, i: ::libc::c_int);
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_removeFirst(this_ptr: *mut ::list::ListListWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_removeLast(this_ptr: *mut ::list::ListListWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_removeOne(this_ptr: *mut ::list::ListListWidgetItemMutPtr, t: *const *mut ::list_widget_item::ListWidgetItem) -> bool;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_replace(this_ptr: *mut ::list::ListListWidgetItemMutPtr, i: ::libc::c_int, t: *const *mut ::list_widget_item::ListWidgetItem);
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_reserve(this_ptr: *mut ::list::ListListWidgetItemMutPtr, size: ::libc::c_int);
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_size(this_ptr: *const ::list::ListListWidgetItemMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_startsWith(this_ptr: *const ::list::ListListWidgetItemMutPtr, t: *const *mut ::list_widget_item::ListWidgetItem) -> bool;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_swap_i_j(this_ptr: *mut ::list::ListListWidgetItemMutPtr, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_swap_other(this_ptr: *mut ::list::ListListWidgetItemMutPtr, other: *mut ::list::ListListWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_takeAt(this_ptr: *mut ::list::ListListWidgetItemMutPtr, i: ::libc::c_int) -> *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_takeFirst(this_ptr: *mut ::list::ListListWidgetItemMutPtr) -> *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_takeLast(this_ptr: *mut ::list::ListListWidgetItemMutPtr) -> *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_value_i(this_ptr: *const ::list::ListListWidgetItemMutPtr, i: ::libc::c_int) -> *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QList_QListWidgetItem_ptr_value_i_defaultValue(this_ptr: *const ::list::ListListWidgetItemMutPtr, i: ::libc::c_int, defaultValue: *const *mut ::list_widget_item::ListWidgetItem) -> *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_append_QList_QMdiSubWindow_ptr(this_ptr: *mut ::list::ListMdiSubWindowMutPtr, t: *const ::list::ListMdiSubWindowMutPtr);
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_append_QMdiSubWindow(this_ptr: *mut ::list::ListMdiSubWindowMutPtr, t: *const *mut ::mdi_sub_window::MdiSubWindow);
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_at(this_ptr: *const ::list::ListMdiSubWindowMutPtr, i: ::libc::c_int) -> *const *mut ::mdi_sub_window::MdiSubWindow;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_back(this_ptr: *mut ::list::ListMdiSubWindowMutPtr) -> *mut *mut ::mdi_sub_window::MdiSubWindow;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_back_const(this_ptr: *const ::list::ListMdiSubWindowMutPtr) -> *const *mut ::mdi_sub_window::MdiSubWindow;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_clear(this_ptr: *mut ::list::ListMdiSubWindowMutPtr);
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_constFirst(this_ptr: *const ::list::ListMdiSubWindowMutPtr) -> *const *mut ::mdi_sub_window::MdiSubWindow;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_constLast(this_ptr: *const ::list::ListMdiSubWindowMutPtr) -> *const *mut ::mdi_sub_window::MdiSubWindow;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_constructor_l(l: *const ::list::ListMdiSubWindowMutPtr, output: *mut ::list::ListMdiSubWindowMutPtr);
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_constructor_no_args(output: *mut ::list::ListMdiSubWindowMutPtr);
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_contains(this_ptr: *const ::list::ListMdiSubWindowMutPtr, t: *const *mut ::mdi_sub_window::MdiSubWindow) -> bool;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_count_no_args(this_ptr: *const ::list::ListMdiSubWindowMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_count_t(this_ptr: *const ::list::ListMdiSubWindowMutPtr, t: *const *mut ::mdi_sub_window::MdiSubWindow) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_destructor(this_ptr: *mut ::list::ListMdiSubWindowMutPtr);
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_empty(this_ptr: *const ::list::ListMdiSubWindowMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_endsWith(this_ptr: *const ::list::ListMdiSubWindowMutPtr, t: *const *mut ::mdi_sub_window::MdiSubWindow) -> bool;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_first(this_ptr: *mut ::list::ListMdiSubWindowMutPtr) -> *mut *mut ::mdi_sub_window::MdiSubWindow;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_first_const(this_ptr: *const ::list::ListMdiSubWindowMutPtr) -> *const *mut ::mdi_sub_window::MdiSubWindow;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_front(this_ptr: *mut ::list::ListMdiSubWindowMutPtr) -> *mut *mut ::mdi_sub_window::MdiSubWindow;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_front_const(this_ptr: *const ::list::ListMdiSubWindowMutPtr) -> *const *mut ::mdi_sub_window::MdiSubWindow;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_indexOf_t(this_ptr: *const ::list::ListMdiSubWindowMutPtr, t: *const *mut ::mdi_sub_window::MdiSubWindow) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_indexOf_t_from(this_ptr: *const ::list::ListMdiSubWindowMutPtr, t: *const *mut ::mdi_sub_window::MdiSubWindow, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_insert(this_ptr: *mut ::list::ListMdiSubWindowMutPtr, i: ::libc::c_int, t: *const *mut ::mdi_sub_window::MdiSubWindow);
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_isEmpty(this_ptr: *const ::list::ListMdiSubWindowMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_last(this_ptr: *mut ::list::ListMdiSubWindowMutPtr) -> *mut *mut ::mdi_sub_window::MdiSubWindow;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_lastIndexOf_t(this_ptr: *const ::list::ListMdiSubWindowMutPtr, t: *const *mut ::mdi_sub_window::MdiSubWindow) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_lastIndexOf_t_from(this_ptr: *const ::list::ListMdiSubWindowMutPtr, t: *const *mut ::mdi_sub_window::MdiSubWindow, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_last_const(this_ptr: *const ::list::ListMdiSubWindowMutPtr) -> *const *mut ::mdi_sub_window::MdiSubWindow;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_length(this_ptr: *const ::list::ListMdiSubWindowMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_mid_to_output_pos(this_ptr: *const ::list::ListMdiSubWindowMutPtr, pos: ::libc::c_int, output: *mut ::list::ListMdiSubWindowMutPtr);
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_mid_to_output_pos_length(this_ptr: *const ::list::ListMdiSubWindowMutPtr, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListMdiSubWindowMutPtr);
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_move(this_ptr: *mut ::list::ListMdiSubWindowMutPtr, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_operator_add_assign_l(this_ptr: *mut ::list::ListMdiSubWindowMutPtr, l: *const ::list::ListMdiSubWindowMutPtr) -> *mut ::list::ListMdiSubWindowMutPtr;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_operator_add_assign_t(this_ptr: *mut ::list::ListMdiSubWindowMutPtr, t: *const *mut ::mdi_sub_window::MdiSubWindow) -> *mut ::list::ListMdiSubWindowMutPtr;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_operator_add_to_output(this_ptr: *const ::list::ListMdiSubWindowMutPtr, l: *const ::list::ListMdiSubWindowMutPtr, output: *mut ::list::ListMdiSubWindowMutPtr);
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_operator_assign(this_ptr: *mut ::list::ListMdiSubWindowMutPtr, l: *const ::list::ListMdiSubWindowMutPtr) -> *mut ::list::ListMdiSubWindowMutPtr;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_operator_eq(this_ptr: *const ::list::ListMdiSubWindowMutPtr, l: *const ::list::ListMdiSubWindowMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_operator_index(this_ptr: *mut ::list::ListMdiSubWindowMutPtr, i: ::libc::c_int) -> *mut *mut ::mdi_sub_window::MdiSubWindow;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_operator_index_const(this_ptr: *const ::list::ListMdiSubWindowMutPtr, i: ::libc::c_int) -> *const *mut ::mdi_sub_window::MdiSubWindow;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_operator_neq(this_ptr: *const ::list::ListMdiSubWindowMutPtr, l: *const ::list::ListMdiSubWindowMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_operator_shl_l(this_ptr: *mut ::list::ListMdiSubWindowMutPtr, l: *const ::list::ListMdiSubWindowMutPtr) -> *mut ::list::ListMdiSubWindowMutPtr;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_operator_shl_t(this_ptr: *mut ::list::ListMdiSubWindowMutPtr, t: *const *mut ::mdi_sub_window::MdiSubWindow) -> *mut ::list::ListMdiSubWindowMutPtr;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_pop_back(this_ptr: *mut ::list::ListMdiSubWindowMutPtr);
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_pop_front(this_ptr: *mut ::list::ListMdiSubWindowMutPtr);
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_prepend(this_ptr: *mut ::list::ListMdiSubWindowMutPtr, t: *const *mut ::mdi_sub_window::MdiSubWindow);
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_push_back(this_ptr: *mut ::list::ListMdiSubWindowMutPtr, t: *const *mut ::mdi_sub_window::MdiSubWindow);
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_push_front(this_ptr: *mut ::list::ListMdiSubWindowMutPtr, t: *const *mut ::mdi_sub_window::MdiSubWindow);
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_removeAll(this_ptr: *mut ::list::ListMdiSubWindowMutPtr, t: *const *mut ::mdi_sub_window::MdiSubWindow) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_removeAt(this_ptr: *mut ::list::ListMdiSubWindowMutPtr, i: ::libc::c_int);
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_removeFirst(this_ptr: *mut ::list::ListMdiSubWindowMutPtr);
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_removeLast(this_ptr: *mut ::list::ListMdiSubWindowMutPtr);
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_removeOne(this_ptr: *mut ::list::ListMdiSubWindowMutPtr, t: *const *mut ::mdi_sub_window::MdiSubWindow) -> bool;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_replace(this_ptr: *mut ::list::ListMdiSubWindowMutPtr, i: ::libc::c_int, t: *const *mut ::mdi_sub_window::MdiSubWindow);
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_reserve(this_ptr: *mut ::list::ListMdiSubWindowMutPtr, size: ::libc::c_int);
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_size(this_ptr: *const ::list::ListMdiSubWindowMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_startsWith(this_ptr: *const ::list::ListMdiSubWindowMutPtr, t: *const *mut ::mdi_sub_window::MdiSubWindow) -> bool;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_swap_i_j(this_ptr: *mut ::list::ListMdiSubWindowMutPtr, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_swap_other(this_ptr: *mut ::list::ListMdiSubWindowMutPtr, other: *mut ::list::ListMdiSubWindowMutPtr);
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_takeAt(this_ptr: *mut ::list::ListMdiSubWindowMutPtr, i: ::libc::c_int) -> *mut ::mdi_sub_window::MdiSubWindow;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_takeFirst(this_ptr: *mut ::list::ListMdiSubWindowMutPtr) -> *mut ::mdi_sub_window::MdiSubWindow;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_takeLast(this_ptr: *mut ::list::ListMdiSubWindowMutPtr) -> *mut ::mdi_sub_window::MdiSubWindow;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_value_i(this_ptr: *const ::list::ListMdiSubWindowMutPtr, i: ::libc::c_int) -> *mut ::mdi_sub_window::MdiSubWindow;
  pub fn qt_widgets_c_QList_QMdiSubWindow_ptr_value_i_defaultValue(this_ptr: *const ::list::ListMdiSubWindowMutPtr, i: ::libc::c_int, defaultValue: *const *mut ::mdi_sub_window::MdiSubWindow) -> *mut ::mdi_sub_window::MdiSubWindow;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_append_QList_QPair_double_QPointF(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF, t: *const ::list::ListPairPairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_append_QPair_double_QPointF(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF, t: *const ::pair::PairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_at(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF, i: ::libc::c_int) -> *const ::pair::PairCDoubleQtCorePointF;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_back(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF) -> *mut ::pair::PairCDoubleQtCorePointF;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_back_const(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF) -> *const ::pair::PairCDoubleQtCorePointF;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_clear(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_constFirst(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF) -> *const ::pair::PairCDoubleQtCorePointF;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_constLast(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF) -> *const ::pair::PairCDoubleQtCorePointF;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_constructor_l(l: *const ::list::ListPairPairCDoubleQtCorePointF, output: *mut ::list::ListPairPairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_constructor_no_args(output: *mut ::list::ListPairPairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_contains(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF, t: *const ::pair::PairCDoubleQtCorePointF) -> bool;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_count_no_args(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_count_t(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF, t: *const ::pair::PairCDoubleQtCorePointF) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_destructor(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_empty(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF) -> bool;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_endsWith(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF, t: *const ::pair::PairCDoubleQtCorePointF) -> bool;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_first(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF) -> *mut ::pair::PairCDoubleQtCorePointF;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_first_const(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF) -> *const ::pair::PairCDoubleQtCorePointF;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_front(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF) -> *mut ::pair::PairCDoubleQtCorePointF;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_front_const(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF) -> *const ::pair::PairCDoubleQtCorePointF;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_indexOf_t(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF, t: *const ::pair::PairCDoubleQtCorePointF) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_indexOf_t_from(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF, t: *const ::pair::PairCDoubleQtCorePointF, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_insert(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF, i: ::libc::c_int, t: *const ::pair::PairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_isEmpty(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF) -> bool;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_last(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF) -> *mut ::pair::PairCDoubleQtCorePointF;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_lastIndexOf_t(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF, t: *const ::pair::PairCDoubleQtCorePointF) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_lastIndexOf_t_from(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF, t: *const ::pair::PairCDoubleQtCorePointF, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_last_const(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF) -> *const ::pair::PairCDoubleQtCorePointF;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_length(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_mid_to_output_pos(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF, pos: ::libc::c_int, output: *mut ::list::ListPairPairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_mid_to_output_pos_length(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListPairPairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_move(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_operator_add_assign_l(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF, l: *const ::list::ListPairPairCDoubleQtCorePointF) -> *mut ::list::ListPairPairCDoubleQtCorePointF;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_operator_add_assign_t(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF, t: *const ::pair::PairCDoubleQtCorePointF) -> *mut ::list::ListPairPairCDoubleQtCorePointF;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_operator_add_to_output(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF, l: *const ::list::ListPairPairCDoubleQtCorePointF, output: *mut ::list::ListPairPairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_operator_assign(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF, l: *const ::list::ListPairPairCDoubleQtCorePointF) -> *mut ::list::ListPairPairCDoubleQtCorePointF;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_operator_eq(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF, l: *const ::list::ListPairPairCDoubleQtCorePointF) -> bool;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_operator_index(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF, i: ::libc::c_int) -> *mut ::pair::PairCDoubleQtCorePointF;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_operator_index_const(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF, i: ::libc::c_int) -> *const ::pair::PairCDoubleQtCorePointF;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_operator_neq(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF, l: *const ::list::ListPairPairCDoubleQtCorePointF) -> bool;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_operator_shl_l(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF, l: *const ::list::ListPairPairCDoubleQtCorePointF) -> *mut ::list::ListPairPairCDoubleQtCorePointF;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_operator_shl_t(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF, t: *const ::pair::PairCDoubleQtCorePointF) -> *mut ::list::ListPairPairCDoubleQtCorePointF;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_pop_back(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_pop_front(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_prepend(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF, t: *const ::pair::PairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_push_back(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF, t: *const ::pair::PairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_push_front(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF, t: *const ::pair::PairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_removeAll(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF, t: *const ::pair::PairCDoubleQtCorePointF) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_removeAt(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF, i: ::libc::c_int);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_removeFirst(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_removeLast(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_removeOne(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF, t: *const ::pair::PairCDoubleQtCorePointF) -> bool;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_replace(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF, i: ::libc::c_int, t: *const ::pair::PairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_reserve(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF, size: ::libc::c_int);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_size(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_startsWith(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF, t: *const ::pair::PairCDoubleQtCorePointF) -> bool;
  pub fn qt_widgets_c_QList_QPair_double_QPointF_swap_i_j(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_swap_other(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF, other: *mut ::list::ListPairPairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_takeAt_to_output(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF, i: ::libc::c_int, output: *mut ::pair::PairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_takeFirst_to_output(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF, output: *mut ::pair::PairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_takeLast_to_output(this_ptr: *mut ::list::ListPairPairCDoubleQtCorePointF, output: *mut ::pair::PairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_value_to_output_i(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF, i: ::libc::c_int, output: *mut ::pair::PairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QList_QPair_double_QPointF_value_to_output_i_defaultValue(this_ptr: *const ::list::ListPairPairCDoubleQtCorePointF, i: ::libc::c_int, defaultValue: *const ::pair::PairCDoubleQtCorePointF, output: *mut ::pair::PairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QList_QPair_double_double_append_QList_QPair_double_double(this_ptr: *mut ::list::ListPairPairCDoubleCDouble, t: *const ::list::ListPairPairCDoubleCDouble);
  pub fn qt_widgets_c_QList_QPair_double_double_append_QPair_double_double(this_ptr: *mut ::list::ListPairPairCDoubleCDouble, t: *const ::pair::PairCDoubleCDouble);
  pub fn qt_widgets_c_QList_QPair_double_double_at(this_ptr: *const ::list::ListPairPairCDoubleCDouble, i: ::libc::c_int) -> *const ::pair::PairCDoubleCDouble;
  pub fn qt_widgets_c_QList_QPair_double_double_back(this_ptr: *mut ::list::ListPairPairCDoubleCDouble) -> *mut ::pair::PairCDoubleCDouble;
  pub fn qt_widgets_c_QList_QPair_double_double_back_const(this_ptr: *const ::list::ListPairPairCDoubleCDouble) -> *const ::pair::PairCDoubleCDouble;
  pub fn qt_widgets_c_QList_QPair_double_double_clear(this_ptr: *mut ::list::ListPairPairCDoubleCDouble);
  pub fn qt_widgets_c_QList_QPair_double_double_constFirst(this_ptr: *const ::list::ListPairPairCDoubleCDouble) -> *const ::pair::PairCDoubleCDouble;
  pub fn qt_widgets_c_QList_QPair_double_double_constLast(this_ptr: *const ::list::ListPairPairCDoubleCDouble) -> *const ::pair::PairCDoubleCDouble;
  pub fn qt_widgets_c_QList_QPair_double_double_constructor_l(l: *const ::list::ListPairPairCDoubleCDouble, output: *mut ::list::ListPairPairCDoubleCDouble);
  pub fn qt_widgets_c_QList_QPair_double_double_constructor_no_args(output: *mut ::list::ListPairPairCDoubleCDouble);
  pub fn qt_widgets_c_QList_QPair_double_double_contains(this_ptr: *const ::list::ListPairPairCDoubleCDouble, t: *const ::pair::PairCDoubleCDouble) -> bool;
  pub fn qt_widgets_c_QList_QPair_double_double_count_no_args(this_ptr: *const ::list::ListPairPairCDoubleCDouble) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QPair_double_double_count_t(this_ptr: *const ::list::ListPairPairCDoubleCDouble, t: *const ::pair::PairCDoubleCDouble) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QPair_double_double_destructor(this_ptr: *mut ::list::ListPairPairCDoubleCDouble);
  pub fn qt_widgets_c_QList_QPair_double_double_empty(this_ptr: *const ::list::ListPairPairCDoubleCDouble) -> bool;
  pub fn qt_widgets_c_QList_QPair_double_double_endsWith(this_ptr: *const ::list::ListPairPairCDoubleCDouble, t: *const ::pair::PairCDoubleCDouble) -> bool;
  pub fn qt_widgets_c_QList_QPair_double_double_first(this_ptr: *mut ::list::ListPairPairCDoubleCDouble) -> *mut ::pair::PairCDoubleCDouble;
  pub fn qt_widgets_c_QList_QPair_double_double_first_const(this_ptr: *const ::list::ListPairPairCDoubleCDouble) -> *const ::pair::PairCDoubleCDouble;
  pub fn qt_widgets_c_QList_QPair_double_double_front(this_ptr: *mut ::list::ListPairPairCDoubleCDouble) -> *mut ::pair::PairCDoubleCDouble;
  pub fn qt_widgets_c_QList_QPair_double_double_front_const(this_ptr: *const ::list::ListPairPairCDoubleCDouble) -> *const ::pair::PairCDoubleCDouble;
  pub fn qt_widgets_c_QList_QPair_double_double_indexOf_t(this_ptr: *const ::list::ListPairPairCDoubleCDouble, t: *const ::pair::PairCDoubleCDouble) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QPair_double_double_indexOf_t_from(this_ptr: *const ::list::ListPairPairCDoubleCDouble, t: *const ::pair::PairCDoubleCDouble, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QPair_double_double_insert(this_ptr: *mut ::list::ListPairPairCDoubleCDouble, i: ::libc::c_int, t: *const ::pair::PairCDoubleCDouble);
  pub fn qt_widgets_c_QList_QPair_double_double_isEmpty(this_ptr: *const ::list::ListPairPairCDoubleCDouble) -> bool;
  pub fn qt_widgets_c_QList_QPair_double_double_last(this_ptr: *mut ::list::ListPairPairCDoubleCDouble) -> *mut ::pair::PairCDoubleCDouble;
  pub fn qt_widgets_c_QList_QPair_double_double_lastIndexOf_t(this_ptr: *const ::list::ListPairPairCDoubleCDouble, t: *const ::pair::PairCDoubleCDouble) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QPair_double_double_lastIndexOf_t_from(this_ptr: *const ::list::ListPairPairCDoubleCDouble, t: *const ::pair::PairCDoubleCDouble, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QPair_double_double_last_const(this_ptr: *const ::list::ListPairPairCDoubleCDouble) -> *const ::pair::PairCDoubleCDouble;
  pub fn qt_widgets_c_QList_QPair_double_double_length(this_ptr: *const ::list::ListPairPairCDoubleCDouble) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QPair_double_double_mid_to_output_pos(this_ptr: *const ::list::ListPairPairCDoubleCDouble, pos: ::libc::c_int, output: *mut ::list::ListPairPairCDoubleCDouble);
  pub fn qt_widgets_c_QList_QPair_double_double_mid_to_output_pos_length(this_ptr: *const ::list::ListPairPairCDoubleCDouble, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListPairPairCDoubleCDouble);
  pub fn qt_widgets_c_QList_QPair_double_double_move(this_ptr: *mut ::list::ListPairPairCDoubleCDouble, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QList_QPair_double_double_operator_add_assign_l(this_ptr: *mut ::list::ListPairPairCDoubleCDouble, l: *const ::list::ListPairPairCDoubleCDouble) -> *mut ::list::ListPairPairCDoubleCDouble;
  pub fn qt_widgets_c_QList_QPair_double_double_operator_add_assign_t(this_ptr: *mut ::list::ListPairPairCDoubleCDouble, t: *const ::pair::PairCDoubleCDouble) -> *mut ::list::ListPairPairCDoubleCDouble;
  pub fn qt_widgets_c_QList_QPair_double_double_operator_add_to_output(this_ptr: *const ::list::ListPairPairCDoubleCDouble, l: *const ::list::ListPairPairCDoubleCDouble, output: *mut ::list::ListPairPairCDoubleCDouble);
  pub fn qt_widgets_c_QList_QPair_double_double_operator_assign(this_ptr: *mut ::list::ListPairPairCDoubleCDouble, l: *const ::list::ListPairPairCDoubleCDouble) -> *mut ::list::ListPairPairCDoubleCDouble;
  pub fn qt_widgets_c_QList_QPair_double_double_operator_eq(this_ptr: *const ::list::ListPairPairCDoubleCDouble, l: *const ::list::ListPairPairCDoubleCDouble) -> bool;
  pub fn qt_widgets_c_QList_QPair_double_double_operator_index(this_ptr: *mut ::list::ListPairPairCDoubleCDouble, i: ::libc::c_int) -> *mut ::pair::PairCDoubleCDouble;
  pub fn qt_widgets_c_QList_QPair_double_double_operator_index_const(this_ptr: *const ::list::ListPairPairCDoubleCDouble, i: ::libc::c_int) -> *const ::pair::PairCDoubleCDouble;
  pub fn qt_widgets_c_QList_QPair_double_double_operator_neq(this_ptr: *const ::list::ListPairPairCDoubleCDouble, l: *const ::list::ListPairPairCDoubleCDouble) -> bool;
  pub fn qt_widgets_c_QList_QPair_double_double_operator_shl_l(this_ptr: *mut ::list::ListPairPairCDoubleCDouble, l: *const ::list::ListPairPairCDoubleCDouble) -> *mut ::list::ListPairPairCDoubleCDouble;
  pub fn qt_widgets_c_QList_QPair_double_double_operator_shl_t(this_ptr: *mut ::list::ListPairPairCDoubleCDouble, t: *const ::pair::PairCDoubleCDouble) -> *mut ::list::ListPairPairCDoubleCDouble;
  pub fn qt_widgets_c_QList_QPair_double_double_pop_back(this_ptr: *mut ::list::ListPairPairCDoubleCDouble);
  pub fn qt_widgets_c_QList_QPair_double_double_pop_front(this_ptr: *mut ::list::ListPairPairCDoubleCDouble);
  pub fn qt_widgets_c_QList_QPair_double_double_prepend(this_ptr: *mut ::list::ListPairPairCDoubleCDouble, t: *const ::pair::PairCDoubleCDouble);
  pub fn qt_widgets_c_QList_QPair_double_double_push_back(this_ptr: *mut ::list::ListPairPairCDoubleCDouble, t: *const ::pair::PairCDoubleCDouble);
  pub fn qt_widgets_c_QList_QPair_double_double_push_front(this_ptr: *mut ::list::ListPairPairCDoubleCDouble, t: *const ::pair::PairCDoubleCDouble);
  pub fn qt_widgets_c_QList_QPair_double_double_removeAll(this_ptr: *mut ::list::ListPairPairCDoubleCDouble, t: *const ::pair::PairCDoubleCDouble) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QPair_double_double_removeAt(this_ptr: *mut ::list::ListPairPairCDoubleCDouble, i: ::libc::c_int);
  pub fn qt_widgets_c_QList_QPair_double_double_removeFirst(this_ptr: *mut ::list::ListPairPairCDoubleCDouble);
  pub fn qt_widgets_c_QList_QPair_double_double_removeLast(this_ptr: *mut ::list::ListPairPairCDoubleCDouble);
  pub fn qt_widgets_c_QList_QPair_double_double_removeOne(this_ptr: *mut ::list::ListPairPairCDoubleCDouble, t: *const ::pair::PairCDoubleCDouble) -> bool;
  pub fn qt_widgets_c_QList_QPair_double_double_replace(this_ptr: *mut ::list::ListPairPairCDoubleCDouble, i: ::libc::c_int, t: *const ::pair::PairCDoubleCDouble);
  pub fn qt_widgets_c_QList_QPair_double_double_reserve(this_ptr: *mut ::list::ListPairPairCDoubleCDouble, size: ::libc::c_int);
  pub fn qt_widgets_c_QList_QPair_double_double_size(this_ptr: *const ::list::ListPairPairCDoubleCDouble) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QPair_double_double_startsWith(this_ptr: *const ::list::ListPairPairCDoubleCDouble, t: *const ::pair::PairCDoubleCDouble) -> bool;
  pub fn qt_widgets_c_QList_QPair_double_double_swap_i_j(this_ptr: *mut ::list::ListPairPairCDoubleCDouble, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_widgets_c_QList_QPair_double_double_swap_other(this_ptr: *mut ::list::ListPairPairCDoubleCDouble, other: *mut ::list::ListPairPairCDoubleCDouble);
  pub fn qt_widgets_c_QList_QPair_double_double_takeAt_to_output(this_ptr: *mut ::list::ListPairPairCDoubleCDouble, i: ::libc::c_int, output: *mut ::pair::PairCDoubleCDouble);
  pub fn qt_widgets_c_QList_QPair_double_double_takeFirst_to_output(this_ptr: *mut ::list::ListPairPairCDoubleCDouble, output: *mut ::pair::PairCDoubleCDouble);
  pub fn qt_widgets_c_QList_QPair_double_double_takeLast_to_output(this_ptr: *mut ::list::ListPairPairCDoubleCDouble, output: *mut ::pair::PairCDoubleCDouble);
  pub fn qt_widgets_c_QList_QPair_double_double_value_to_output_i(this_ptr: *const ::list::ListPairPairCDoubleCDouble, i: ::libc::c_int, output: *mut ::pair::PairCDoubleCDouble);
  pub fn qt_widgets_c_QList_QPair_double_double_value_to_output_i_defaultValue(this_ptr: *const ::list::ListPairPairCDoubleCDouble, i: ::libc::c_int, defaultValue: *const ::pair::PairCDoubleCDouble, output: *mut ::pair::PairCDoubleCDouble);
  pub fn qt_widgets_c_QList_QRectF_append_QList_QRectF(this_ptr: *mut ::list::ListQtCoreRectF, t: *const ::list::ListQtCoreRectF);
  pub fn qt_widgets_c_QList_QRectF_append_QRectF(this_ptr: *mut ::list::ListQtCoreRectF, t: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QList_QRectF_at(this_ptr: *const ::list::ListQtCoreRectF, i: ::libc::c_int) -> *const ::qt_core::rect_f::RectF;
  pub fn qt_widgets_c_QList_QRectF_back(this_ptr: *mut ::list::ListQtCoreRectF) -> *mut ::qt_core::rect_f::RectF;
  pub fn qt_widgets_c_QList_QRectF_back_const(this_ptr: *const ::list::ListQtCoreRectF) -> *const ::qt_core::rect_f::RectF;
  pub fn qt_widgets_c_QList_QRectF_clear(this_ptr: *mut ::list::ListQtCoreRectF);
  pub fn qt_widgets_c_QList_QRectF_constFirst(this_ptr: *const ::list::ListQtCoreRectF) -> *const ::qt_core::rect_f::RectF;
  pub fn qt_widgets_c_QList_QRectF_constLast(this_ptr: *const ::list::ListQtCoreRectF) -> *const ::qt_core::rect_f::RectF;
  pub fn qt_widgets_c_QList_QRectF_constructor_l(l: *const ::list::ListQtCoreRectF, output: *mut ::list::ListQtCoreRectF);
  pub fn qt_widgets_c_QList_QRectF_constructor_no_args(output: *mut ::list::ListQtCoreRectF);
  pub fn qt_widgets_c_QList_QRectF_contains(this_ptr: *const ::list::ListQtCoreRectF, t: *const ::qt_core::rect_f::RectF) -> bool;
  pub fn qt_widgets_c_QList_QRectF_count_no_args(this_ptr: *const ::list::ListQtCoreRectF) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QRectF_count_t(this_ptr: *const ::list::ListQtCoreRectF, t: *const ::qt_core::rect_f::RectF) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QRectF_destructor(this_ptr: *mut ::list::ListQtCoreRectF);
  pub fn qt_widgets_c_QList_QRectF_empty(this_ptr: *const ::list::ListQtCoreRectF) -> bool;
  pub fn qt_widgets_c_QList_QRectF_endsWith(this_ptr: *const ::list::ListQtCoreRectF, t: *const ::qt_core::rect_f::RectF) -> bool;
  pub fn qt_widgets_c_QList_QRectF_first(this_ptr: *mut ::list::ListQtCoreRectF) -> *mut ::qt_core::rect_f::RectF;
  pub fn qt_widgets_c_QList_QRectF_first_const(this_ptr: *const ::list::ListQtCoreRectF) -> *const ::qt_core::rect_f::RectF;
  pub fn qt_widgets_c_QList_QRectF_fromVector_to_output(vector: *const ::qt_gui::vector::VectorQtCoreRectF, output: *mut ::list::ListQtCoreRectF);
  pub fn qt_widgets_c_QList_QRectF_front(this_ptr: *mut ::list::ListQtCoreRectF) -> *mut ::qt_core::rect_f::RectF;
  pub fn qt_widgets_c_QList_QRectF_front_const(this_ptr: *const ::list::ListQtCoreRectF) -> *const ::qt_core::rect_f::RectF;
  pub fn qt_widgets_c_QList_QRectF_indexOf_t(this_ptr: *const ::list::ListQtCoreRectF, t: *const ::qt_core::rect_f::RectF) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QRectF_indexOf_t_from(this_ptr: *const ::list::ListQtCoreRectF, t: *const ::qt_core::rect_f::RectF, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QRectF_insert(this_ptr: *mut ::list::ListQtCoreRectF, i: ::libc::c_int, t: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QList_QRectF_isEmpty(this_ptr: *const ::list::ListQtCoreRectF) -> bool;
  pub fn qt_widgets_c_QList_QRectF_last(this_ptr: *mut ::list::ListQtCoreRectF) -> *mut ::qt_core::rect_f::RectF;
  pub fn qt_widgets_c_QList_QRectF_lastIndexOf_t(this_ptr: *const ::list::ListQtCoreRectF, t: *const ::qt_core::rect_f::RectF) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QRectF_lastIndexOf_t_from(this_ptr: *const ::list::ListQtCoreRectF, t: *const ::qt_core::rect_f::RectF, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QRectF_last_const(this_ptr: *const ::list::ListQtCoreRectF) -> *const ::qt_core::rect_f::RectF;
  pub fn qt_widgets_c_QList_QRectF_length(this_ptr: *const ::list::ListQtCoreRectF) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QRectF_mid_to_output_pos(this_ptr: *const ::list::ListQtCoreRectF, pos: ::libc::c_int, output: *mut ::list::ListQtCoreRectF);
  pub fn qt_widgets_c_QList_QRectF_mid_to_output_pos_length(this_ptr: *const ::list::ListQtCoreRectF, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListQtCoreRectF);
  pub fn qt_widgets_c_QList_QRectF_move(this_ptr: *mut ::list::ListQtCoreRectF, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QList_QRectF_operator_add_assign_l(this_ptr: *mut ::list::ListQtCoreRectF, l: *const ::list::ListQtCoreRectF) -> *mut ::list::ListQtCoreRectF;
  pub fn qt_widgets_c_QList_QRectF_operator_add_assign_t(this_ptr: *mut ::list::ListQtCoreRectF, t: *const ::qt_core::rect_f::RectF) -> *mut ::list::ListQtCoreRectF;
  pub fn qt_widgets_c_QList_QRectF_operator_add_to_output(this_ptr: *const ::list::ListQtCoreRectF, l: *const ::list::ListQtCoreRectF, output: *mut ::list::ListQtCoreRectF);
  pub fn qt_widgets_c_QList_QRectF_operator_assign(this_ptr: *mut ::list::ListQtCoreRectF, l: *const ::list::ListQtCoreRectF) -> *mut ::list::ListQtCoreRectF;
  pub fn qt_widgets_c_QList_QRectF_operator_eq(this_ptr: *const ::list::ListQtCoreRectF, l: *const ::list::ListQtCoreRectF) -> bool;
  pub fn qt_widgets_c_QList_QRectF_operator_index(this_ptr: *mut ::list::ListQtCoreRectF, i: ::libc::c_int) -> *mut ::qt_core::rect_f::RectF;
  pub fn qt_widgets_c_QList_QRectF_operator_index_const(this_ptr: *const ::list::ListQtCoreRectF, i: ::libc::c_int) -> *const ::qt_core::rect_f::RectF;
  pub fn qt_widgets_c_QList_QRectF_operator_neq(this_ptr: *const ::list::ListQtCoreRectF, l: *const ::list::ListQtCoreRectF) -> bool;
  pub fn qt_widgets_c_QList_QRectF_operator_shl_l(this_ptr: *mut ::list::ListQtCoreRectF, l: *const ::list::ListQtCoreRectF) -> *mut ::list::ListQtCoreRectF;
  pub fn qt_widgets_c_QList_QRectF_operator_shl_t(this_ptr: *mut ::list::ListQtCoreRectF, t: *const ::qt_core::rect_f::RectF) -> *mut ::list::ListQtCoreRectF;
  pub fn qt_widgets_c_QList_QRectF_pop_back(this_ptr: *mut ::list::ListQtCoreRectF);
  pub fn qt_widgets_c_QList_QRectF_pop_front(this_ptr: *mut ::list::ListQtCoreRectF);
  pub fn qt_widgets_c_QList_QRectF_prepend(this_ptr: *mut ::list::ListQtCoreRectF, t: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QList_QRectF_push_back(this_ptr: *mut ::list::ListQtCoreRectF, t: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QList_QRectF_push_front(this_ptr: *mut ::list::ListQtCoreRectF, t: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QList_QRectF_removeAll(this_ptr: *mut ::list::ListQtCoreRectF, t: *const ::qt_core::rect_f::RectF) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QRectF_removeAt(this_ptr: *mut ::list::ListQtCoreRectF, i: ::libc::c_int);
  pub fn qt_widgets_c_QList_QRectF_removeFirst(this_ptr: *mut ::list::ListQtCoreRectF);
  pub fn qt_widgets_c_QList_QRectF_removeLast(this_ptr: *mut ::list::ListQtCoreRectF);
  pub fn qt_widgets_c_QList_QRectF_removeOne(this_ptr: *mut ::list::ListQtCoreRectF, t: *const ::qt_core::rect_f::RectF) -> bool;
  pub fn qt_widgets_c_QList_QRectF_replace(this_ptr: *mut ::list::ListQtCoreRectF, i: ::libc::c_int, t: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QList_QRectF_reserve(this_ptr: *mut ::list::ListQtCoreRectF, size: ::libc::c_int);
  pub fn qt_widgets_c_QList_QRectF_size(this_ptr: *const ::list::ListQtCoreRectF) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QRectF_startsWith(this_ptr: *const ::list::ListQtCoreRectF, t: *const ::qt_core::rect_f::RectF) -> bool;
  pub fn qt_widgets_c_QList_QRectF_swap_i_j(this_ptr: *mut ::list::ListQtCoreRectF, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_widgets_c_QList_QRectF_swap_other(this_ptr: *mut ::list::ListQtCoreRectF, other: *mut ::list::ListQtCoreRectF);
  pub fn qt_widgets_c_QList_QRectF_takeAt_to_output(this_ptr: *mut ::list::ListQtCoreRectF, i: ::libc::c_int, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QList_QRectF_takeFirst_to_output(this_ptr: *mut ::list::ListQtCoreRectF, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QList_QRectF_takeLast_to_output(this_ptr: *mut ::list::ListQtCoreRectF, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QList_QRectF_toVector_to_output(this_ptr: *const ::list::ListQtCoreRectF, output: *mut ::qt_gui::vector::VectorQtCoreRectF);
  pub fn qt_widgets_c_QList_QRectF_value_to_output_i(this_ptr: *const ::list::ListQtCoreRectF, i: ::libc::c_int, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QList_QRectF_value_to_output_i_defaultValue(this_ptr: *const ::list::ListQtCoreRectF, i: ::libc::c_int, defaultValue: *const ::qt_core::rect_f::RectF, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QList_QScroller_ptr_append_QList_QScroller_ptr(this_ptr: *mut ::list::ListScrollerMutPtr, t: *const ::list::ListScrollerMutPtr);
  pub fn qt_widgets_c_QList_QScroller_ptr_append_QScroller(this_ptr: *mut ::list::ListScrollerMutPtr, t: *const *mut ::scroller::Scroller);
  pub fn qt_widgets_c_QList_QScroller_ptr_at(this_ptr: *const ::list::ListScrollerMutPtr, i: ::libc::c_int) -> *const *mut ::scroller::Scroller;
  pub fn qt_widgets_c_QList_QScroller_ptr_back(this_ptr: *mut ::list::ListScrollerMutPtr) -> *mut *mut ::scroller::Scroller;
  pub fn qt_widgets_c_QList_QScroller_ptr_back_const(this_ptr: *const ::list::ListScrollerMutPtr) -> *const *mut ::scroller::Scroller;
  pub fn qt_widgets_c_QList_QScroller_ptr_clear(this_ptr: *mut ::list::ListScrollerMutPtr);
  pub fn qt_widgets_c_QList_QScroller_ptr_constFirst(this_ptr: *const ::list::ListScrollerMutPtr) -> *const *mut ::scroller::Scroller;
  pub fn qt_widgets_c_QList_QScroller_ptr_constLast(this_ptr: *const ::list::ListScrollerMutPtr) -> *const *mut ::scroller::Scroller;
  pub fn qt_widgets_c_QList_QScroller_ptr_constructor_l(l: *const ::list::ListScrollerMutPtr, output: *mut ::list::ListScrollerMutPtr);
  pub fn qt_widgets_c_QList_QScroller_ptr_constructor_no_args(output: *mut ::list::ListScrollerMutPtr);
  pub fn qt_widgets_c_QList_QScroller_ptr_contains(this_ptr: *const ::list::ListScrollerMutPtr, t: *const *mut ::scroller::Scroller) -> bool;
  pub fn qt_widgets_c_QList_QScroller_ptr_count_no_args(this_ptr: *const ::list::ListScrollerMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QScroller_ptr_count_t(this_ptr: *const ::list::ListScrollerMutPtr, t: *const *mut ::scroller::Scroller) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QScroller_ptr_destructor(this_ptr: *mut ::list::ListScrollerMutPtr);
  pub fn qt_widgets_c_QList_QScroller_ptr_empty(this_ptr: *const ::list::ListScrollerMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QScroller_ptr_endsWith(this_ptr: *const ::list::ListScrollerMutPtr, t: *const *mut ::scroller::Scroller) -> bool;
  pub fn qt_widgets_c_QList_QScroller_ptr_first(this_ptr: *mut ::list::ListScrollerMutPtr) -> *mut *mut ::scroller::Scroller;
  pub fn qt_widgets_c_QList_QScroller_ptr_first_const(this_ptr: *const ::list::ListScrollerMutPtr) -> *const *mut ::scroller::Scroller;
  pub fn qt_widgets_c_QList_QScroller_ptr_front(this_ptr: *mut ::list::ListScrollerMutPtr) -> *mut *mut ::scroller::Scroller;
  pub fn qt_widgets_c_QList_QScroller_ptr_front_const(this_ptr: *const ::list::ListScrollerMutPtr) -> *const *mut ::scroller::Scroller;
  pub fn qt_widgets_c_QList_QScroller_ptr_indexOf_t(this_ptr: *const ::list::ListScrollerMutPtr, t: *const *mut ::scroller::Scroller) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QScroller_ptr_indexOf_t_from(this_ptr: *const ::list::ListScrollerMutPtr, t: *const *mut ::scroller::Scroller, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QScroller_ptr_insert(this_ptr: *mut ::list::ListScrollerMutPtr, i: ::libc::c_int, t: *const *mut ::scroller::Scroller);
  pub fn qt_widgets_c_QList_QScroller_ptr_isEmpty(this_ptr: *const ::list::ListScrollerMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QScroller_ptr_last(this_ptr: *mut ::list::ListScrollerMutPtr) -> *mut *mut ::scroller::Scroller;
  pub fn qt_widgets_c_QList_QScroller_ptr_lastIndexOf_t(this_ptr: *const ::list::ListScrollerMutPtr, t: *const *mut ::scroller::Scroller) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QScroller_ptr_lastIndexOf_t_from(this_ptr: *const ::list::ListScrollerMutPtr, t: *const *mut ::scroller::Scroller, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QScroller_ptr_last_const(this_ptr: *const ::list::ListScrollerMutPtr) -> *const *mut ::scroller::Scroller;
  pub fn qt_widgets_c_QList_QScroller_ptr_length(this_ptr: *const ::list::ListScrollerMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QScroller_ptr_mid_to_output_pos(this_ptr: *const ::list::ListScrollerMutPtr, pos: ::libc::c_int, output: *mut ::list::ListScrollerMutPtr);
  pub fn qt_widgets_c_QList_QScroller_ptr_mid_to_output_pos_length(this_ptr: *const ::list::ListScrollerMutPtr, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListScrollerMutPtr);
  pub fn qt_widgets_c_QList_QScroller_ptr_move(this_ptr: *mut ::list::ListScrollerMutPtr, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QList_QScroller_ptr_operator_add_assign_l(this_ptr: *mut ::list::ListScrollerMutPtr, l: *const ::list::ListScrollerMutPtr) -> *mut ::list::ListScrollerMutPtr;
  pub fn qt_widgets_c_QList_QScroller_ptr_operator_add_assign_t(this_ptr: *mut ::list::ListScrollerMutPtr, t: *const *mut ::scroller::Scroller) -> *mut ::list::ListScrollerMutPtr;
  pub fn qt_widgets_c_QList_QScroller_ptr_operator_add_to_output(this_ptr: *const ::list::ListScrollerMutPtr, l: *const ::list::ListScrollerMutPtr, output: *mut ::list::ListScrollerMutPtr);
  pub fn qt_widgets_c_QList_QScroller_ptr_operator_assign(this_ptr: *mut ::list::ListScrollerMutPtr, l: *const ::list::ListScrollerMutPtr) -> *mut ::list::ListScrollerMutPtr;
  pub fn qt_widgets_c_QList_QScroller_ptr_operator_eq(this_ptr: *const ::list::ListScrollerMutPtr, l: *const ::list::ListScrollerMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QScroller_ptr_operator_index(this_ptr: *mut ::list::ListScrollerMutPtr, i: ::libc::c_int) -> *mut *mut ::scroller::Scroller;
  pub fn qt_widgets_c_QList_QScroller_ptr_operator_index_const(this_ptr: *const ::list::ListScrollerMutPtr, i: ::libc::c_int) -> *const *mut ::scroller::Scroller;
  pub fn qt_widgets_c_QList_QScroller_ptr_operator_neq(this_ptr: *const ::list::ListScrollerMutPtr, l: *const ::list::ListScrollerMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QScroller_ptr_operator_shl_l(this_ptr: *mut ::list::ListScrollerMutPtr, l: *const ::list::ListScrollerMutPtr) -> *mut ::list::ListScrollerMutPtr;
  pub fn qt_widgets_c_QList_QScroller_ptr_operator_shl_t(this_ptr: *mut ::list::ListScrollerMutPtr, t: *const *mut ::scroller::Scroller) -> *mut ::list::ListScrollerMutPtr;
  pub fn qt_widgets_c_QList_QScroller_ptr_pop_back(this_ptr: *mut ::list::ListScrollerMutPtr);
  pub fn qt_widgets_c_QList_QScroller_ptr_pop_front(this_ptr: *mut ::list::ListScrollerMutPtr);
  pub fn qt_widgets_c_QList_QScroller_ptr_prepend(this_ptr: *mut ::list::ListScrollerMutPtr, t: *const *mut ::scroller::Scroller);
  pub fn qt_widgets_c_QList_QScroller_ptr_push_back(this_ptr: *mut ::list::ListScrollerMutPtr, t: *const *mut ::scroller::Scroller);
  pub fn qt_widgets_c_QList_QScroller_ptr_push_front(this_ptr: *mut ::list::ListScrollerMutPtr, t: *const *mut ::scroller::Scroller);
  pub fn qt_widgets_c_QList_QScroller_ptr_removeAll(this_ptr: *mut ::list::ListScrollerMutPtr, t: *const *mut ::scroller::Scroller) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QScroller_ptr_removeAt(this_ptr: *mut ::list::ListScrollerMutPtr, i: ::libc::c_int);
  pub fn qt_widgets_c_QList_QScroller_ptr_removeFirst(this_ptr: *mut ::list::ListScrollerMutPtr);
  pub fn qt_widgets_c_QList_QScroller_ptr_removeLast(this_ptr: *mut ::list::ListScrollerMutPtr);
  pub fn qt_widgets_c_QList_QScroller_ptr_removeOne(this_ptr: *mut ::list::ListScrollerMutPtr, t: *const *mut ::scroller::Scroller) -> bool;
  pub fn qt_widgets_c_QList_QScroller_ptr_replace(this_ptr: *mut ::list::ListScrollerMutPtr, i: ::libc::c_int, t: *const *mut ::scroller::Scroller);
  pub fn qt_widgets_c_QList_QScroller_ptr_reserve(this_ptr: *mut ::list::ListScrollerMutPtr, size: ::libc::c_int);
  pub fn qt_widgets_c_QList_QScroller_ptr_size(this_ptr: *const ::list::ListScrollerMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QScroller_ptr_startsWith(this_ptr: *const ::list::ListScrollerMutPtr, t: *const *mut ::scroller::Scroller) -> bool;
  pub fn qt_widgets_c_QList_QScroller_ptr_swap_i_j(this_ptr: *mut ::list::ListScrollerMutPtr, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_widgets_c_QList_QScroller_ptr_swap_other(this_ptr: *mut ::list::ListScrollerMutPtr, other: *mut ::list::ListScrollerMutPtr);
  pub fn qt_widgets_c_QList_QScroller_ptr_takeAt(this_ptr: *mut ::list::ListScrollerMutPtr, i: ::libc::c_int) -> *mut ::scroller::Scroller;
  pub fn qt_widgets_c_QList_QScroller_ptr_takeFirst(this_ptr: *mut ::list::ListScrollerMutPtr) -> *mut ::scroller::Scroller;
  pub fn qt_widgets_c_QList_QScroller_ptr_takeLast(this_ptr: *mut ::list::ListScrollerMutPtr) -> *mut ::scroller::Scroller;
  pub fn qt_widgets_c_QList_QScroller_ptr_value_i(this_ptr: *const ::list::ListScrollerMutPtr, i: ::libc::c_int) -> *mut ::scroller::Scroller;
  pub fn qt_widgets_c_QList_QScroller_ptr_value_i_defaultValue(this_ptr: *const ::list::ListScrollerMutPtr, i: ::libc::c_int, defaultValue: *const *mut ::scroller::Scroller) -> *mut ::scroller::Scroller;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_append_QList_QTableWidgetItem_ptr(this_ptr: *mut ::list::ListTableWidgetItemMutPtr, t: *const ::list::ListTableWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_append_QTableWidgetItem(this_ptr: *mut ::list::ListTableWidgetItemMutPtr, t: *const *mut ::table_widget_item::TableWidgetItem);
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_at(this_ptr: *const ::list::ListTableWidgetItemMutPtr, i: ::libc::c_int) -> *const *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_back(this_ptr: *mut ::list::ListTableWidgetItemMutPtr) -> *mut *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_back_const(this_ptr: *const ::list::ListTableWidgetItemMutPtr) -> *const *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_clear(this_ptr: *mut ::list::ListTableWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_constFirst(this_ptr: *const ::list::ListTableWidgetItemMutPtr) -> *const *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_constLast(this_ptr: *const ::list::ListTableWidgetItemMutPtr) -> *const *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_constructor_l(l: *const ::list::ListTableWidgetItemMutPtr, output: *mut ::list::ListTableWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_constructor_no_args(output: *mut ::list::ListTableWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_contains(this_ptr: *const ::list::ListTableWidgetItemMutPtr, t: *const *mut ::table_widget_item::TableWidgetItem) -> bool;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_count_no_args(this_ptr: *const ::list::ListTableWidgetItemMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_count_t(this_ptr: *const ::list::ListTableWidgetItemMutPtr, t: *const *mut ::table_widget_item::TableWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_destructor(this_ptr: *mut ::list::ListTableWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_empty(this_ptr: *const ::list::ListTableWidgetItemMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_endsWith(this_ptr: *const ::list::ListTableWidgetItemMutPtr, t: *const *mut ::table_widget_item::TableWidgetItem) -> bool;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_first(this_ptr: *mut ::list::ListTableWidgetItemMutPtr) -> *mut *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_first_const(this_ptr: *const ::list::ListTableWidgetItemMutPtr) -> *const *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_front(this_ptr: *mut ::list::ListTableWidgetItemMutPtr) -> *mut *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_front_const(this_ptr: *const ::list::ListTableWidgetItemMutPtr) -> *const *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_indexOf_t(this_ptr: *const ::list::ListTableWidgetItemMutPtr, t: *const *mut ::table_widget_item::TableWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_indexOf_t_from(this_ptr: *const ::list::ListTableWidgetItemMutPtr, t: *const *mut ::table_widget_item::TableWidgetItem, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_insert(this_ptr: *mut ::list::ListTableWidgetItemMutPtr, i: ::libc::c_int, t: *const *mut ::table_widget_item::TableWidgetItem);
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_isEmpty(this_ptr: *const ::list::ListTableWidgetItemMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_last(this_ptr: *mut ::list::ListTableWidgetItemMutPtr) -> *mut *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_lastIndexOf_t(this_ptr: *const ::list::ListTableWidgetItemMutPtr, t: *const *mut ::table_widget_item::TableWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_lastIndexOf_t_from(this_ptr: *const ::list::ListTableWidgetItemMutPtr, t: *const *mut ::table_widget_item::TableWidgetItem, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_last_const(this_ptr: *const ::list::ListTableWidgetItemMutPtr) -> *const *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_length(this_ptr: *const ::list::ListTableWidgetItemMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_mid_to_output_pos(this_ptr: *const ::list::ListTableWidgetItemMutPtr, pos: ::libc::c_int, output: *mut ::list::ListTableWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_mid_to_output_pos_length(this_ptr: *const ::list::ListTableWidgetItemMutPtr, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListTableWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_move(this_ptr: *mut ::list::ListTableWidgetItemMutPtr, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_operator_add_assign_l(this_ptr: *mut ::list::ListTableWidgetItemMutPtr, l: *const ::list::ListTableWidgetItemMutPtr) -> *mut ::list::ListTableWidgetItemMutPtr;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_operator_add_assign_t(this_ptr: *mut ::list::ListTableWidgetItemMutPtr, t: *const *mut ::table_widget_item::TableWidgetItem) -> *mut ::list::ListTableWidgetItemMutPtr;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_operator_add_to_output(this_ptr: *const ::list::ListTableWidgetItemMutPtr, l: *const ::list::ListTableWidgetItemMutPtr, output: *mut ::list::ListTableWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_operator_assign(this_ptr: *mut ::list::ListTableWidgetItemMutPtr, l: *const ::list::ListTableWidgetItemMutPtr) -> *mut ::list::ListTableWidgetItemMutPtr;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_operator_eq(this_ptr: *const ::list::ListTableWidgetItemMutPtr, l: *const ::list::ListTableWidgetItemMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_operator_index(this_ptr: *mut ::list::ListTableWidgetItemMutPtr, i: ::libc::c_int) -> *mut *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_operator_index_const(this_ptr: *const ::list::ListTableWidgetItemMutPtr, i: ::libc::c_int) -> *const *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_operator_neq(this_ptr: *const ::list::ListTableWidgetItemMutPtr, l: *const ::list::ListTableWidgetItemMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_operator_shl_l(this_ptr: *mut ::list::ListTableWidgetItemMutPtr, l: *const ::list::ListTableWidgetItemMutPtr) -> *mut ::list::ListTableWidgetItemMutPtr;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_operator_shl_t(this_ptr: *mut ::list::ListTableWidgetItemMutPtr, t: *const *mut ::table_widget_item::TableWidgetItem) -> *mut ::list::ListTableWidgetItemMutPtr;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_pop_back(this_ptr: *mut ::list::ListTableWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_pop_front(this_ptr: *mut ::list::ListTableWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_prepend(this_ptr: *mut ::list::ListTableWidgetItemMutPtr, t: *const *mut ::table_widget_item::TableWidgetItem);
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_push_back(this_ptr: *mut ::list::ListTableWidgetItemMutPtr, t: *const *mut ::table_widget_item::TableWidgetItem);
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_push_front(this_ptr: *mut ::list::ListTableWidgetItemMutPtr, t: *const *mut ::table_widget_item::TableWidgetItem);
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_removeAll(this_ptr: *mut ::list::ListTableWidgetItemMutPtr, t: *const *mut ::table_widget_item::TableWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_removeAt(this_ptr: *mut ::list::ListTableWidgetItemMutPtr, i: ::libc::c_int);
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_removeFirst(this_ptr: *mut ::list::ListTableWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_removeLast(this_ptr: *mut ::list::ListTableWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_removeOne(this_ptr: *mut ::list::ListTableWidgetItemMutPtr, t: *const *mut ::table_widget_item::TableWidgetItem) -> bool;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_replace(this_ptr: *mut ::list::ListTableWidgetItemMutPtr, i: ::libc::c_int, t: *const *mut ::table_widget_item::TableWidgetItem);
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_reserve(this_ptr: *mut ::list::ListTableWidgetItemMutPtr, size: ::libc::c_int);
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_size(this_ptr: *const ::list::ListTableWidgetItemMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_startsWith(this_ptr: *const ::list::ListTableWidgetItemMutPtr, t: *const *mut ::table_widget_item::TableWidgetItem) -> bool;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_swap_i_j(this_ptr: *mut ::list::ListTableWidgetItemMutPtr, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_swap_other(this_ptr: *mut ::list::ListTableWidgetItemMutPtr, other: *mut ::list::ListTableWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_takeAt(this_ptr: *mut ::list::ListTableWidgetItemMutPtr, i: ::libc::c_int) -> *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_takeFirst(this_ptr: *mut ::list::ListTableWidgetItemMutPtr) -> *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_takeLast(this_ptr: *mut ::list::ListTableWidgetItemMutPtr) -> *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_value_i(this_ptr: *const ::list::ListTableWidgetItemMutPtr, i: ::libc::c_int) -> *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QList_QTableWidgetItem_ptr_value_i_defaultValue(this_ptr: *const ::list::ListTableWidgetItemMutPtr, i: ::libc::c_int, defaultValue: *const *mut ::table_widget_item::TableWidgetItem) -> *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_append_QList_QTableWidgetSelectionRange(this_ptr: *mut ::list::ListTableWidgetSelectionRange, t: *const ::list::ListTableWidgetSelectionRange);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_append_QTableWidgetSelectionRange(this_ptr: *mut ::list::ListTableWidgetSelectionRange, t: *const ::table_widget_selection_range::TableWidgetSelectionRange);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_at(this_ptr: *const ::list::ListTableWidgetSelectionRange, i: ::libc::c_int) -> *const ::table_widget_selection_range::TableWidgetSelectionRange;
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_back(this_ptr: *mut ::list::ListTableWidgetSelectionRange) -> *mut ::table_widget_selection_range::TableWidgetSelectionRange;
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_back_const(this_ptr: *const ::list::ListTableWidgetSelectionRange) -> *const ::table_widget_selection_range::TableWidgetSelectionRange;
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_clear(this_ptr: *mut ::list::ListTableWidgetSelectionRange);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_constFirst(this_ptr: *const ::list::ListTableWidgetSelectionRange) -> *const ::table_widget_selection_range::TableWidgetSelectionRange;
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_constLast(this_ptr: *const ::list::ListTableWidgetSelectionRange) -> *const ::table_widget_selection_range::TableWidgetSelectionRange;
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_constructor_l(l: *const ::list::ListTableWidgetSelectionRange, output: *mut ::list::ListTableWidgetSelectionRange);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_constructor_no_args(output: *mut ::list::ListTableWidgetSelectionRange);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_count(this_ptr: *const ::list::ListTableWidgetSelectionRange) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_destructor(this_ptr: *mut ::list::ListTableWidgetSelectionRange);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_empty(this_ptr: *const ::list::ListTableWidgetSelectionRange) -> bool;
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_first(this_ptr: *mut ::list::ListTableWidgetSelectionRange) -> *mut ::table_widget_selection_range::TableWidgetSelectionRange;
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_first_const(this_ptr: *const ::list::ListTableWidgetSelectionRange) -> *const ::table_widget_selection_range::TableWidgetSelectionRange;
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_front(this_ptr: *mut ::list::ListTableWidgetSelectionRange) -> *mut ::table_widget_selection_range::TableWidgetSelectionRange;
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_front_const(this_ptr: *const ::list::ListTableWidgetSelectionRange) -> *const ::table_widget_selection_range::TableWidgetSelectionRange;
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_insert(this_ptr: *mut ::list::ListTableWidgetSelectionRange, i: ::libc::c_int, t: *const ::table_widget_selection_range::TableWidgetSelectionRange);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_isEmpty(this_ptr: *const ::list::ListTableWidgetSelectionRange) -> bool;
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_last(this_ptr: *mut ::list::ListTableWidgetSelectionRange) -> *mut ::table_widget_selection_range::TableWidgetSelectionRange;
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_last_const(this_ptr: *const ::list::ListTableWidgetSelectionRange) -> *const ::table_widget_selection_range::TableWidgetSelectionRange;
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_length(this_ptr: *const ::list::ListTableWidgetSelectionRange) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_mid_to_output_pos(this_ptr: *const ::list::ListTableWidgetSelectionRange, pos: ::libc::c_int, output: *mut ::list::ListTableWidgetSelectionRange);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_mid_to_output_pos_length(this_ptr: *const ::list::ListTableWidgetSelectionRange, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListTableWidgetSelectionRange);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_move(this_ptr: *mut ::list::ListTableWidgetSelectionRange, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_operator_add_assign_l(this_ptr: *mut ::list::ListTableWidgetSelectionRange, l: *const ::list::ListTableWidgetSelectionRange) -> *mut ::list::ListTableWidgetSelectionRange;
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_operator_add_assign_t(this_ptr: *mut ::list::ListTableWidgetSelectionRange, t: *const ::table_widget_selection_range::TableWidgetSelectionRange) -> *mut ::list::ListTableWidgetSelectionRange;
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_operator_add_to_output(this_ptr: *const ::list::ListTableWidgetSelectionRange, l: *const ::list::ListTableWidgetSelectionRange, output: *mut ::list::ListTableWidgetSelectionRange);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_operator_assign(this_ptr: *mut ::list::ListTableWidgetSelectionRange, l: *const ::list::ListTableWidgetSelectionRange) -> *mut ::list::ListTableWidgetSelectionRange;
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_operator_index(this_ptr: *mut ::list::ListTableWidgetSelectionRange, i: ::libc::c_int) -> *mut ::table_widget_selection_range::TableWidgetSelectionRange;
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_operator_index_const(this_ptr: *const ::list::ListTableWidgetSelectionRange, i: ::libc::c_int) -> *const ::table_widget_selection_range::TableWidgetSelectionRange;
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_operator_shl_l(this_ptr: *mut ::list::ListTableWidgetSelectionRange, l: *const ::list::ListTableWidgetSelectionRange) -> *mut ::list::ListTableWidgetSelectionRange;
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_operator_shl_t(this_ptr: *mut ::list::ListTableWidgetSelectionRange, t: *const ::table_widget_selection_range::TableWidgetSelectionRange) -> *mut ::list::ListTableWidgetSelectionRange;
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_pop_back(this_ptr: *mut ::list::ListTableWidgetSelectionRange);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_pop_front(this_ptr: *mut ::list::ListTableWidgetSelectionRange);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_prepend(this_ptr: *mut ::list::ListTableWidgetSelectionRange, t: *const ::table_widget_selection_range::TableWidgetSelectionRange);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_push_back(this_ptr: *mut ::list::ListTableWidgetSelectionRange, t: *const ::table_widget_selection_range::TableWidgetSelectionRange);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_push_front(this_ptr: *mut ::list::ListTableWidgetSelectionRange, t: *const ::table_widget_selection_range::TableWidgetSelectionRange);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_removeAt(this_ptr: *mut ::list::ListTableWidgetSelectionRange, i: ::libc::c_int);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_removeFirst(this_ptr: *mut ::list::ListTableWidgetSelectionRange);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_removeLast(this_ptr: *mut ::list::ListTableWidgetSelectionRange);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_replace(this_ptr: *mut ::list::ListTableWidgetSelectionRange, i: ::libc::c_int, t: *const ::table_widget_selection_range::TableWidgetSelectionRange);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_reserve(this_ptr: *mut ::list::ListTableWidgetSelectionRange, size: ::libc::c_int);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_size(this_ptr: *const ::list::ListTableWidgetSelectionRange) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_swap_i_j(this_ptr: *mut ::list::ListTableWidgetSelectionRange, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_swap_other(this_ptr: *mut ::list::ListTableWidgetSelectionRange, other: *mut ::list::ListTableWidgetSelectionRange);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_takeAt_to_output(this_ptr: *mut ::list::ListTableWidgetSelectionRange, i: ::libc::c_int, output: *mut ::table_widget_selection_range::TableWidgetSelectionRange);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_takeFirst_to_output(this_ptr: *mut ::list::ListTableWidgetSelectionRange, output: *mut ::table_widget_selection_range::TableWidgetSelectionRange);
  pub fn qt_widgets_c_QList_QTableWidgetSelectionRange_takeLast_to_output(this_ptr: *mut ::list::ListTableWidgetSelectionRange, output: *mut ::table_widget_selection_range::TableWidgetSelectionRange);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_append_QList_QTextEdit_ExtraSelection(this_ptr: *mut ::list::ListTextEditExtraSelection, t: *const ::list::ListTextEditExtraSelection);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_append_QTextEdit_ExtraSelection(this_ptr: *mut ::list::ListTextEditExtraSelection, t: *const ::text_edit::ExtraSelection);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_at(this_ptr: *const ::list::ListTextEditExtraSelection, i: ::libc::c_int) -> *const ::text_edit::ExtraSelection;
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_back(this_ptr: *mut ::list::ListTextEditExtraSelection) -> *mut ::text_edit::ExtraSelection;
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_back_const(this_ptr: *const ::list::ListTextEditExtraSelection) -> *const ::text_edit::ExtraSelection;
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_clear(this_ptr: *mut ::list::ListTextEditExtraSelection);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_constFirst(this_ptr: *const ::list::ListTextEditExtraSelection) -> *const ::text_edit::ExtraSelection;
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_constLast(this_ptr: *const ::list::ListTextEditExtraSelection) -> *const ::text_edit::ExtraSelection;
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_constructor_l(l: *const ::list::ListTextEditExtraSelection, output: *mut ::list::ListTextEditExtraSelection);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_constructor_no_args(output: *mut ::list::ListTextEditExtraSelection);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_count(this_ptr: *const ::list::ListTextEditExtraSelection) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_destructor(this_ptr: *mut ::list::ListTextEditExtraSelection);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_empty(this_ptr: *const ::list::ListTextEditExtraSelection) -> bool;
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_first(this_ptr: *mut ::list::ListTextEditExtraSelection) -> *mut ::text_edit::ExtraSelection;
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_first_const(this_ptr: *const ::list::ListTextEditExtraSelection) -> *const ::text_edit::ExtraSelection;
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_front(this_ptr: *mut ::list::ListTextEditExtraSelection) -> *mut ::text_edit::ExtraSelection;
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_front_const(this_ptr: *const ::list::ListTextEditExtraSelection) -> *const ::text_edit::ExtraSelection;
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_insert(this_ptr: *mut ::list::ListTextEditExtraSelection, i: ::libc::c_int, t: *const ::text_edit::ExtraSelection);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_isEmpty(this_ptr: *const ::list::ListTextEditExtraSelection) -> bool;
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_last(this_ptr: *mut ::list::ListTextEditExtraSelection) -> *mut ::text_edit::ExtraSelection;
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_last_const(this_ptr: *const ::list::ListTextEditExtraSelection) -> *const ::text_edit::ExtraSelection;
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_length(this_ptr: *const ::list::ListTextEditExtraSelection) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_mid_to_output_pos(this_ptr: *const ::list::ListTextEditExtraSelection, pos: ::libc::c_int, output: *mut ::list::ListTextEditExtraSelection);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_mid_to_output_pos_length(this_ptr: *const ::list::ListTextEditExtraSelection, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListTextEditExtraSelection);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_move(this_ptr: *mut ::list::ListTextEditExtraSelection, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_operator_add_assign_l(this_ptr: *mut ::list::ListTextEditExtraSelection, l: *const ::list::ListTextEditExtraSelection) -> *mut ::list::ListTextEditExtraSelection;
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_operator_add_assign_t(this_ptr: *mut ::list::ListTextEditExtraSelection, t: *const ::text_edit::ExtraSelection) -> *mut ::list::ListTextEditExtraSelection;
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_operator_add_to_output(this_ptr: *const ::list::ListTextEditExtraSelection, l: *const ::list::ListTextEditExtraSelection, output: *mut ::list::ListTextEditExtraSelection);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_operator_assign(this_ptr: *mut ::list::ListTextEditExtraSelection, l: *const ::list::ListTextEditExtraSelection) -> *mut ::list::ListTextEditExtraSelection;
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_operator_index(this_ptr: *mut ::list::ListTextEditExtraSelection, i: ::libc::c_int) -> *mut ::text_edit::ExtraSelection;
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_operator_index_const(this_ptr: *const ::list::ListTextEditExtraSelection, i: ::libc::c_int) -> *const ::text_edit::ExtraSelection;
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_operator_shl_l(this_ptr: *mut ::list::ListTextEditExtraSelection, l: *const ::list::ListTextEditExtraSelection) -> *mut ::list::ListTextEditExtraSelection;
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_operator_shl_t(this_ptr: *mut ::list::ListTextEditExtraSelection, t: *const ::text_edit::ExtraSelection) -> *mut ::list::ListTextEditExtraSelection;
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_pop_back(this_ptr: *mut ::list::ListTextEditExtraSelection);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_pop_front(this_ptr: *mut ::list::ListTextEditExtraSelection);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_prepend(this_ptr: *mut ::list::ListTextEditExtraSelection, t: *const ::text_edit::ExtraSelection);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_push_back(this_ptr: *mut ::list::ListTextEditExtraSelection, t: *const ::text_edit::ExtraSelection);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_push_front(this_ptr: *mut ::list::ListTextEditExtraSelection, t: *const ::text_edit::ExtraSelection);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_removeAt(this_ptr: *mut ::list::ListTextEditExtraSelection, i: ::libc::c_int);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_removeFirst(this_ptr: *mut ::list::ListTextEditExtraSelection);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_removeLast(this_ptr: *mut ::list::ListTextEditExtraSelection);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_replace(this_ptr: *mut ::list::ListTextEditExtraSelection, i: ::libc::c_int, t: *const ::text_edit::ExtraSelection);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_reserve(this_ptr: *mut ::list::ListTextEditExtraSelection, size: ::libc::c_int);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_size(this_ptr: *const ::list::ListTextEditExtraSelection) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_swap_i_j(this_ptr: *mut ::list::ListTextEditExtraSelection, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_swap_other(this_ptr: *mut ::list::ListTextEditExtraSelection, other: *mut ::list::ListTextEditExtraSelection);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_takeAt_to_output(this_ptr: *mut ::list::ListTextEditExtraSelection, i: ::libc::c_int, output: *mut ::text_edit::ExtraSelection);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_takeFirst_to_output(this_ptr: *mut ::list::ListTextEditExtraSelection, output: *mut ::text_edit::ExtraSelection);
  pub fn qt_widgets_c_QList_QTextEdit_ExtraSelection_takeLast_to_output(this_ptr: *mut ::list::ListTextEditExtraSelection, output: *mut ::text_edit::ExtraSelection);
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_append_QList_QTreeWidgetItem_ptr(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr, t: *const ::list::ListTreeWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_append_QTreeWidgetItem(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr, t: *const *mut ::tree_widget_item::TreeWidgetItem);
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_at(this_ptr: *const ::list::ListTreeWidgetItemMutPtr, i: ::libc::c_int) -> *const *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_back(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr) -> *mut *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_back_const(this_ptr: *const ::list::ListTreeWidgetItemMutPtr) -> *const *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_clear(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_constFirst(this_ptr: *const ::list::ListTreeWidgetItemMutPtr) -> *const *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_constLast(this_ptr: *const ::list::ListTreeWidgetItemMutPtr) -> *const *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_constructor_l(l: *const ::list::ListTreeWidgetItemMutPtr, output: *mut ::list::ListTreeWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_constructor_no_args(output: *mut ::list::ListTreeWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_contains(this_ptr: *const ::list::ListTreeWidgetItemMutPtr, t: *const *mut ::tree_widget_item::TreeWidgetItem) -> bool;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_count_no_args(this_ptr: *const ::list::ListTreeWidgetItemMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_count_t(this_ptr: *const ::list::ListTreeWidgetItemMutPtr, t: *const *mut ::tree_widget_item::TreeWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_destructor(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_empty(this_ptr: *const ::list::ListTreeWidgetItemMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_endsWith(this_ptr: *const ::list::ListTreeWidgetItemMutPtr, t: *const *mut ::tree_widget_item::TreeWidgetItem) -> bool;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_first(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr) -> *mut *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_first_const(this_ptr: *const ::list::ListTreeWidgetItemMutPtr) -> *const *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_front(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr) -> *mut *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_front_const(this_ptr: *const ::list::ListTreeWidgetItemMutPtr) -> *const *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_indexOf_t(this_ptr: *const ::list::ListTreeWidgetItemMutPtr, t: *const *mut ::tree_widget_item::TreeWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_indexOf_t_from(this_ptr: *const ::list::ListTreeWidgetItemMutPtr, t: *const *mut ::tree_widget_item::TreeWidgetItem, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_insert(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr, i: ::libc::c_int, t: *const *mut ::tree_widget_item::TreeWidgetItem);
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_isEmpty(this_ptr: *const ::list::ListTreeWidgetItemMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_last(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr) -> *mut *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_lastIndexOf_t(this_ptr: *const ::list::ListTreeWidgetItemMutPtr, t: *const *mut ::tree_widget_item::TreeWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_lastIndexOf_t_from(this_ptr: *const ::list::ListTreeWidgetItemMutPtr, t: *const *mut ::tree_widget_item::TreeWidgetItem, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_last_const(this_ptr: *const ::list::ListTreeWidgetItemMutPtr) -> *const *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_length(this_ptr: *const ::list::ListTreeWidgetItemMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_mid_to_output_pos(this_ptr: *const ::list::ListTreeWidgetItemMutPtr, pos: ::libc::c_int, output: *mut ::list::ListTreeWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_mid_to_output_pos_length(this_ptr: *const ::list::ListTreeWidgetItemMutPtr, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListTreeWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_move(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_operator_add_assign_l(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr, l: *const ::list::ListTreeWidgetItemMutPtr) -> *mut ::list::ListTreeWidgetItemMutPtr;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_operator_add_assign_t(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr, t: *const *mut ::tree_widget_item::TreeWidgetItem) -> *mut ::list::ListTreeWidgetItemMutPtr;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_operator_add_to_output(this_ptr: *const ::list::ListTreeWidgetItemMutPtr, l: *const ::list::ListTreeWidgetItemMutPtr, output: *mut ::list::ListTreeWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_operator_assign(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr, l: *const ::list::ListTreeWidgetItemMutPtr) -> *mut ::list::ListTreeWidgetItemMutPtr;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_operator_eq(this_ptr: *const ::list::ListTreeWidgetItemMutPtr, l: *const ::list::ListTreeWidgetItemMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_operator_index(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr, i: ::libc::c_int) -> *mut *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_operator_index_const(this_ptr: *const ::list::ListTreeWidgetItemMutPtr, i: ::libc::c_int) -> *const *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_operator_neq(this_ptr: *const ::list::ListTreeWidgetItemMutPtr, l: *const ::list::ListTreeWidgetItemMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_operator_shl_l(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr, l: *const ::list::ListTreeWidgetItemMutPtr) -> *mut ::list::ListTreeWidgetItemMutPtr;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_operator_shl_t(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr, t: *const *mut ::tree_widget_item::TreeWidgetItem) -> *mut ::list::ListTreeWidgetItemMutPtr;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_pop_back(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_pop_front(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_prepend(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr, t: *const *mut ::tree_widget_item::TreeWidgetItem);
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_push_back(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr, t: *const *mut ::tree_widget_item::TreeWidgetItem);
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_push_front(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr, t: *const *mut ::tree_widget_item::TreeWidgetItem);
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_removeAll(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr, t: *const *mut ::tree_widget_item::TreeWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_removeAt(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr, i: ::libc::c_int);
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_removeFirst(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_removeLast(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_removeOne(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr, t: *const *mut ::tree_widget_item::TreeWidgetItem) -> bool;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_replace(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr, i: ::libc::c_int, t: *const *mut ::tree_widget_item::TreeWidgetItem);
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_reserve(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr, size: ::libc::c_int);
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_size(this_ptr: *const ::list::ListTreeWidgetItemMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_startsWith(this_ptr: *const ::list::ListTreeWidgetItemMutPtr, t: *const *mut ::tree_widget_item::TreeWidgetItem) -> bool;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_swap_i_j(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_swap_other(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr, other: *mut ::list::ListTreeWidgetItemMutPtr);
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_takeAt(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr, i: ::libc::c_int) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_takeFirst(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_takeLast(this_ptr: *mut ::list::ListTreeWidgetItemMutPtr) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_value_i(this_ptr: *const ::list::ListTreeWidgetItemMutPtr, i: ::libc::c_int) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QList_QTreeWidgetItem_ptr_value_i_defaultValue(this_ptr: *const ::list::ListTreeWidgetItemMutPtr, i: ::libc::c_int, defaultValue: *const *mut ::tree_widget_item::TreeWidgetItem) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_append_QList_QUndoStack_ptr(this_ptr: *mut ::list::ListUndoStackMutPtr, t: *const ::list::ListUndoStackMutPtr);
  pub fn qt_widgets_c_QList_QUndoStack_ptr_append_QUndoStack(this_ptr: *mut ::list::ListUndoStackMutPtr, t: *const *mut ::undo_stack::UndoStack);
  pub fn qt_widgets_c_QList_QUndoStack_ptr_at(this_ptr: *const ::list::ListUndoStackMutPtr, i: ::libc::c_int) -> *const *mut ::undo_stack::UndoStack;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_back(this_ptr: *mut ::list::ListUndoStackMutPtr) -> *mut *mut ::undo_stack::UndoStack;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_back_const(this_ptr: *const ::list::ListUndoStackMutPtr) -> *const *mut ::undo_stack::UndoStack;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_clear(this_ptr: *mut ::list::ListUndoStackMutPtr);
  pub fn qt_widgets_c_QList_QUndoStack_ptr_constFirst(this_ptr: *const ::list::ListUndoStackMutPtr) -> *const *mut ::undo_stack::UndoStack;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_constLast(this_ptr: *const ::list::ListUndoStackMutPtr) -> *const *mut ::undo_stack::UndoStack;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_constructor_l(l: *const ::list::ListUndoStackMutPtr, output: *mut ::list::ListUndoStackMutPtr);
  pub fn qt_widgets_c_QList_QUndoStack_ptr_constructor_no_args(output: *mut ::list::ListUndoStackMutPtr);
  pub fn qt_widgets_c_QList_QUndoStack_ptr_contains(this_ptr: *const ::list::ListUndoStackMutPtr, t: *const *mut ::undo_stack::UndoStack) -> bool;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_count_no_args(this_ptr: *const ::list::ListUndoStackMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_count_t(this_ptr: *const ::list::ListUndoStackMutPtr, t: *const *mut ::undo_stack::UndoStack) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_destructor(this_ptr: *mut ::list::ListUndoStackMutPtr);
  pub fn qt_widgets_c_QList_QUndoStack_ptr_empty(this_ptr: *const ::list::ListUndoStackMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_endsWith(this_ptr: *const ::list::ListUndoStackMutPtr, t: *const *mut ::undo_stack::UndoStack) -> bool;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_first(this_ptr: *mut ::list::ListUndoStackMutPtr) -> *mut *mut ::undo_stack::UndoStack;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_first_const(this_ptr: *const ::list::ListUndoStackMutPtr) -> *const *mut ::undo_stack::UndoStack;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_front(this_ptr: *mut ::list::ListUndoStackMutPtr) -> *mut *mut ::undo_stack::UndoStack;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_front_const(this_ptr: *const ::list::ListUndoStackMutPtr) -> *const *mut ::undo_stack::UndoStack;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_indexOf_t(this_ptr: *const ::list::ListUndoStackMutPtr, t: *const *mut ::undo_stack::UndoStack) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_indexOf_t_from(this_ptr: *const ::list::ListUndoStackMutPtr, t: *const *mut ::undo_stack::UndoStack, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_insert(this_ptr: *mut ::list::ListUndoStackMutPtr, i: ::libc::c_int, t: *const *mut ::undo_stack::UndoStack);
  pub fn qt_widgets_c_QList_QUndoStack_ptr_isEmpty(this_ptr: *const ::list::ListUndoStackMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_last(this_ptr: *mut ::list::ListUndoStackMutPtr) -> *mut *mut ::undo_stack::UndoStack;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_lastIndexOf_t(this_ptr: *const ::list::ListUndoStackMutPtr, t: *const *mut ::undo_stack::UndoStack) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_lastIndexOf_t_from(this_ptr: *const ::list::ListUndoStackMutPtr, t: *const *mut ::undo_stack::UndoStack, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_last_const(this_ptr: *const ::list::ListUndoStackMutPtr) -> *const *mut ::undo_stack::UndoStack;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_length(this_ptr: *const ::list::ListUndoStackMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_mid_to_output_pos(this_ptr: *const ::list::ListUndoStackMutPtr, pos: ::libc::c_int, output: *mut ::list::ListUndoStackMutPtr);
  pub fn qt_widgets_c_QList_QUndoStack_ptr_mid_to_output_pos_length(this_ptr: *const ::list::ListUndoStackMutPtr, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListUndoStackMutPtr);
  pub fn qt_widgets_c_QList_QUndoStack_ptr_move(this_ptr: *mut ::list::ListUndoStackMutPtr, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QList_QUndoStack_ptr_operator_add_assign_l(this_ptr: *mut ::list::ListUndoStackMutPtr, l: *const ::list::ListUndoStackMutPtr) -> *mut ::list::ListUndoStackMutPtr;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_operator_add_assign_t(this_ptr: *mut ::list::ListUndoStackMutPtr, t: *const *mut ::undo_stack::UndoStack) -> *mut ::list::ListUndoStackMutPtr;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_operator_add_to_output(this_ptr: *const ::list::ListUndoStackMutPtr, l: *const ::list::ListUndoStackMutPtr, output: *mut ::list::ListUndoStackMutPtr);
  pub fn qt_widgets_c_QList_QUndoStack_ptr_operator_assign(this_ptr: *mut ::list::ListUndoStackMutPtr, l: *const ::list::ListUndoStackMutPtr) -> *mut ::list::ListUndoStackMutPtr;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_operator_eq(this_ptr: *const ::list::ListUndoStackMutPtr, l: *const ::list::ListUndoStackMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_operator_index(this_ptr: *mut ::list::ListUndoStackMutPtr, i: ::libc::c_int) -> *mut *mut ::undo_stack::UndoStack;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_operator_index_const(this_ptr: *const ::list::ListUndoStackMutPtr, i: ::libc::c_int) -> *const *mut ::undo_stack::UndoStack;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_operator_neq(this_ptr: *const ::list::ListUndoStackMutPtr, l: *const ::list::ListUndoStackMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_operator_shl_l(this_ptr: *mut ::list::ListUndoStackMutPtr, l: *const ::list::ListUndoStackMutPtr) -> *mut ::list::ListUndoStackMutPtr;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_operator_shl_t(this_ptr: *mut ::list::ListUndoStackMutPtr, t: *const *mut ::undo_stack::UndoStack) -> *mut ::list::ListUndoStackMutPtr;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_pop_back(this_ptr: *mut ::list::ListUndoStackMutPtr);
  pub fn qt_widgets_c_QList_QUndoStack_ptr_pop_front(this_ptr: *mut ::list::ListUndoStackMutPtr);
  pub fn qt_widgets_c_QList_QUndoStack_ptr_prepend(this_ptr: *mut ::list::ListUndoStackMutPtr, t: *const *mut ::undo_stack::UndoStack);
  pub fn qt_widgets_c_QList_QUndoStack_ptr_push_back(this_ptr: *mut ::list::ListUndoStackMutPtr, t: *const *mut ::undo_stack::UndoStack);
  pub fn qt_widgets_c_QList_QUndoStack_ptr_push_front(this_ptr: *mut ::list::ListUndoStackMutPtr, t: *const *mut ::undo_stack::UndoStack);
  pub fn qt_widgets_c_QList_QUndoStack_ptr_removeAll(this_ptr: *mut ::list::ListUndoStackMutPtr, t: *const *mut ::undo_stack::UndoStack) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_removeAt(this_ptr: *mut ::list::ListUndoStackMutPtr, i: ::libc::c_int);
  pub fn qt_widgets_c_QList_QUndoStack_ptr_removeFirst(this_ptr: *mut ::list::ListUndoStackMutPtr);
  pub fn qt_widgets_c_QList_QUndoStack_ptr_removeLast(this_ptr: *mut ::list::ListUndoStackMutPtr);
  pub fn qt_widgets_c_QList_QUndoStack_ptr_removeOne(this_ptr: *mut ::list::ListUndoStackMutPtr, t: *const *mut ::undo_stack::UndoStack) -> bool;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_replace(this_ptr: *mut ::list::ListUndoStackMutPtr, i: ::libc::c_int, t: *const *mut ::undo_stack::UndoStack);
  pub fn qt_widgets_c_QList_QUndoStack_ptr_reserve(this_ptr: *mut ::list::ListUndoStackMutPtr, size: ::libc::c_int);
  pub fn qt_widgets_c_QList_QUndoStack_ptr_size(this_ptr: *const ::list::ListUndoStackMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_startsWith(this_ptr: *const ::list::ListUndoStackMutPtr, t: *const *mut ::undo_stack::UndoStack) -> bool;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_swap_i_j(this_ptr: *mut ::list::ListUndoStackMutPtr, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_widgets_c_QList_QUndoStack_ptr_swap_other(this_ptr: *mut ::list::ListUndoStackMutPtr, other: *mut ::list::ListUndoStackMutPtr);
  pub fn qt_widgets_c_QList_QUndoStack_ptr_takeAt(this_ptr: *mut ::list::ListUndoStackMutPtr, i: ::libc::c_int) -> *mut ::undo_stack::UndoStack;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_takeFirst(this_ptr: *mut ::list::ListUndoStackMutPtr) -> *mut ::undo_stack::UndoStack;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_takeLast(this_ptr: *mut ::list::ListUndoStackMutPtr) -> *mut ::undo_stack::UndoStack;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_value_i(this_ptr: *const ::list::ListUndoStackMutPtr, i: ::libc::c_int) -> *mut ::undo_stack::UndoStack;
  pub fn qt_widgets_c_QList_QUndoStack_ptr_value_i_defaultValue(this_ptr: *const ::list::ListUndoStackMutPtr, i: ::libc::c_int, defaultValue: *const *mut ::undo_stack::UndoStack) -> *mut ::undo_stack::UndoStack;
  pub fn qt_widgets_c_QList_QWidget_ptr_append_QList_QWidget_ptr(this_ptr: *mut ::list::ListWidgetMutPtr, t: *const ::list::ListWidgetMutPtr);
  pub fn qt_widgets_c_QList_QWidget_ptr_append_QWidget(this_ptr: *mut ::list::ListWidgetMutPtr, t: *const *mut ::widget::Widget);
  pub fn qt_widgets_c_QList_QWidget_ptr_at(this_ptr: *const ::list::ListWidgetMutPtr, i: ::libc::c_int) -> *const *mut ::widget::Widget;
  pub fn qt_widgets_c_QList_QWidget_ptr_back(this_ptr: *mut ::list::ListWidgetMutPtr) -> *mut *mut ::widget::Widget;
  pub fn qt_widgets_c_QList_QWidget_ptr_back_const(this_ptr: *const ::list::ListWidgetMutPtr) -> *const *mut ::widget::Widget;
  pub fn qt_widgets_c_QList_QWidget_ptr_clear(this_ptr: *mut ::list::ListWidgetMutPtr);
  pub fn qt_widgets_c_QList_QWidget_ptr_constFirst(this_ptr: *const ::list::ListWidgetMutPtr) -> *const *mut ::widget::Widget;
  pub fn qt_widgets_c_QList_QWidget_ptr_constLast(this_ptr: *const ::list::ListWidgetMutPtr) -> *const *mut ::widget::Widget;
  pub fn qt_widgets_c_QList_QWidget_ptr_constructor_l(l: *const ::list::ListWidgetMutPtr, output: *mut ::list::ListWidgetMutPtr);
  pub fn qt_widgets_c_QList_QWidget_ptr_constructor_no_args(output: *mut ::list::ListWidgetMutPtr);
  pub fn qt_widgets_c_QList_QWidget_ptr_contains(this_ptr: *const ::list::ListWidgetMutPtr, t: *const *mut ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QList_QWidget_ptr_count_no_args(this_ptr: *const ::list::ListWidgetMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QWidget_ptr_count_t(this_ptr: *const ::list::ListWidgetMutPtr, t: *const *mut ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QWidget_ptr_destructor(this_ptr: *mut ::list::ListWidgetMutPtr);
  pub fn qt_widgets_c_QList_QWidget_ptr_empty(this_ptr: *const ::list::ListWidgetMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QWidget_ptr_endsWith(this_ptr: *const ::list::ListWidgetMutPtr, t: *const *mut ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QList_QWidget_ptr_first(this_ptr: *mut ::list::ListWidgetMutPtr) -> *mut *mut ::widget::Widget;
  pub fn qt_widgets_c_QList_QWidget_ptr_first_const(this_ptr: *const ::list::ListWidgetMutPtr) -> *const *mut ::widget::Widget;
  pub fn qt_widgets_c_QList_QWidget_ptr_front(this_ptr: *mut ::list::ListWidgetMutPtr) -> *mut *mut ::widget::Widget;
  pub fn qt_widgets_c_QList_QWidget_ptr_front_const(this_ptr: *const ::list::ListWidgetMutPtr) -> *const *mut ::widget::Widget;
  pub fn qt_widgets_c_QList_QWidget_ptr_indexOf_t(this_ptr: *const ::list::ListWidgetMutPtr, t: *const *mut ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QWidget_ptr_indexOf_t_from(this_ptr: *const ::list::ListWidgetMutPtr, t: *const *mut ::widget::Widget, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QWidget_ptr_insert(this_ptr: *mut ::list::ListWidgetMutPtr, i: ::libc::c_int, t: *const *mut ::widget::Widget);
  pub fn qt_widgets_c_QList_QWidget_ptr_isEmpty(this_ptr: *const ::list::ListWidgetMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QWidget_ptr_last(this_ptr: *mut ::list::ListWidgetMutPtr) -> *mut *mut ::widget::Widget;
  pub fn qt_widgets_c_QList_QWidget_ptr_lastIndexOf_t(this_ptr: *const ::list::ListWidgetMutPtr, t: *const *mut ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QWidget_ptr_lastIndexOf_t_from(this_ptr: *const ::list::ListWidgetMutPtr, t: *const *mut ::widget::Widget, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QWidget_ptr_last_const(this_ptr: *const ::list::ListWidgetMutPtr) -> *const *mut ::widget::Widget;
  pub fn qt_widgets_c_QList_QWidget_ptr_length(this_ptr: *const ::list::ListWidgetMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QWidget_ptr_mid_to_output_pos(this_ptr: *const ::list::ListWidgetMutPtr, pos: ::libc::c_int, output: *mut ::list::ListWidgetMutPtr);
  pub fn qt_widgets_c_QList_QWidget_ptr_mid_to_output_pos_length(this_ptr: *const ::list::ListWidgetMutPtr, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListWidgetMutPtr);
  pub fn qt_widgets_c_QList_QWidget_ptr_move(this_ptr: *mut ::list::ListWidgetMutPtr, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QList_QWidget_ptr_operator_add_assign_l(this_ptr: *mut ::list::ListWidgetMutPtr, l: *const ::list::ListWidgetMutPtr) -> *mut ::list::ListWidgetMutPtr;
  pub fn qt_widgets_c_QList_QWidget_ptr_operator_add_assign_t(this_ptr: *mut ::list::ListWidgetMutPtr, t: *const *mut ::widget::Widget) -> *mut ::list::ListWidgetMutPtr;
  pub fn qt_widgets_c_QList_QWidget_ptr_operator_add_to_output(this_ptr: *const ::list::ListWidgetMutPtr, l: *const ::list::ListWidgetMutPtr, output: *mut ::list::ListWidgetMutPtr);
  pub fn qt_widgets_c_QList_QWidget_ptr_operator_assign(this_ptr: *mut ::list::ListWidgetMutPtr, l: *const ::list::ListWidgetMutPtr) -> *mut ::list::ListWidgetMutPtr;
  pub fn qt_widgets_c_QList_QWidget_ptr_operator_eq(this_ptr: *const ::list::ListWidgetMutPtr, l: *const ::list::ListWidgetMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QWidget_ptr_operator_index(this_ptr: *mut ::list::ListWidgetMutPtr, i: ::libc::c_int) -> *mut *mut ::widget::Widget;
  pub fn qt_widgets_c_QList_QWidget_ptr_operator_index_const(this_ptr: *const ::list::ListWidgetMutPtr, i: ::libc::c_int) -> *const *mut ::widget::Widget;
  pub fn qt_widgets_c_QList_QWidget_ptr_operator_neq(this_ptr: *const ::list::ListWidgetMutPtr, l: *const ::list::ListWidgetMutPtr) -> bool;
  pub fn qt_widgets_c_QList_QWidget_ptr_operator_shl_l(this_ptr: *mut ::list::ListWidgetMutPtr, l: *const ::list::ListWidgetMutPtr) -> *mut ::list::ListWidgetMutPtr;
  pub fn qt_widgets_c_QList_QWidget_ptr_operator_shl_t(this_ptr: *mut ::list::ListWidgetMutPtr, t: *const *mut ::widget::Widget) -> *mut ::list::ListWidgetMutPtr;
  pub fn qt_widgets_c_QList_QWidget_ptr_pop_back(this_ptr: *mut ::list::ListWidgetMutPtr);
  pub fn qt_widgets_c_QList_QWidget_ptr_pop_front(this_ptr: *mut ::list::ListWidgetMutPtr);
  pub fn qt_widgets_c_QList_QWidget_ptr_prepend(this_ptr: *mut ::list::ListWidgetMutPtr, t: *const *mut ::widget::Widget);
  pub fn qt_widgets_c_QList_QWidget_ptr_push_back(this_ptr: *mut ::list::ListWidgetMutPtr, t: *const *mut ::widget::Widget);
  pub fn qt_widgets_c_QList_QWidget_ptr_push_front(this_ptr: *mut ::list::ListWidgetMutPtr, t: *const *mut ::widget::Widget);
  pub fn qt_widgets_c_QList_QWidget_ptr_removeAll(this_ptr: *mut ::list::ListWidgetMutPtr, t: *const *mut ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QWidget_ptr_removeAt(this_ptr: *mut ::list::ListWidgetMutPtr, i: ::libc::c_int);
  pub fn qt_widgets_c_QList_QWidget_ptr_removeFirst(this_ptr: *mut ::list::ListWidgetMutPtr);
  pub fn qt_widgets_c_QList_QWidget_ptr_removeLast(this_ptr: *mut ::list::ListWidgetMutPtr);
  pub fn qt_widgets_c_QList_QWidget_ptr_removeOne(this_ptr: *mut ::list::ListWidgetMutPtr, t: *const *mut ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QList_QWidget_ptr_replace(this_ptr: *mut ::list::ListWidgetMutPtr, i: ::libc::c_int, t: *const *mut ::widget::Widget);
  pub fn qt_widgets_c_QList_QWidget_ptr_reserve(this_ptr: *mut ::list::ListWidgetMutPtr, size: ::libc::c_int);
  pub fn qt_widgets_c_QList_QWidget_ptr_size(this_ptr: *const ::list::ListWidgetMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QWidget_ptr_startsWith(this_ptr: *const ::list::ListWidgetMutPtr, t: *const *mut ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QList_QWidget_ptr_swap_i_j(this_ptr: *mut ::list::ListWidgetMutPtr, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_widgets_c_QList_QWidget_ptr_swap_other(this_ptr: *mut ::list::ListWidgetMutPtr, other: *mut ::list::ListWidgetMutPtr);
  pub fn qt_widgets_c_QList_QWidget_ptr_takeAt(this_ptr: *mut ::list::ListWidgetMutPtr, i: ::libc::c_int) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QList_QWidget_ptr_takeFirst(this_ptr: *mut ::list::ListWidgetMutPtr) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QList_QWidget_ptr_takeLast(this_ptr: *mut ::list::ListWidgetMutPtr) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QList_QWidget_ptr_value_i(this_ptr: *const ::list::ListWidgetMutPtr, i: ::libc::c_int) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QList_QWidget_ptr_value_i_defaultValue(this_ptr: *const ::list::ListWidgetMutPtr, i: ::libc::c_int, defaultValue: *const *mut ::widget::Widget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_append_QList_QWizard_WizardButton(this_ptr: *mut ::list::ListWizardWizardButton, t: *const ::list::ListWizardWizardButton);
  pub fn qt_widgets_c_QList_QWizard_WizardButton_append_QWizard_WizardButton(this_ptr: *mut ::list::ListWizardWizardButton, t: *const ::wizard::WizardButton);
  pub fn qt_widgets_c_QList_QWizard_WizardButton_at(this_ptr: *const ::list::ListWizardWizardButton, i: ::libc::c_int) -> *const ::wizard::WizardButton;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_back(this_ptr: *mut ::list::ListWizardWizardButton) -> *mut ::wizard::WizardButton;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_back_const(this_ptr: *const ::list::ListWizardWizardButton) -> *const ::wizard::WizardButton;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_clear(this_ptr: *mut ::list::ListWizardWizardButton);
  pub fn qt_widgets_c_QList_QWizard_WizardButton_constFirst(this_ptr: *const ::list::ListWizardWizardButton) -> *const ::wizard::WizardButton;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_constLast(this_ptr: *const ::list::ListWizardWizardButton) -> *const ::wizard::WizardButton;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_constructor_l(l: *const ::list::ListWizardWizardButton, output: *mut ::list::ListWizardWizardButton);
  pub fn qt_widgets_c_QList_QWizard_WizardButton_constructor_no_args(output: *mut ::list::ListWizardWizardButton);
  pub fn qt_widgets_c_QList_QWizard_WizardButton_contains(this_ptr: *const ::list::ListWizardWizardButton, t: *const ::wizard::WizardButton) -> bool;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_count_no_args(this_ptr: *const ::list::ListWizardWizardButton) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_count_t(this_ptr: *const ::list::ListWizardWizardButton, t: *const ::wizard::WizardButton) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_destructor(this_ptr: *mut ::list::ListWizardWizardButton);
  pub fn qt_widgets_c_QList_QWizard_WizardButton_empty(this_ptr: *const ::list::ListWizardWizardButton) -> bool;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_endsWith(this_ptr: *const ::list::ListWizardWizardButton, t: *const ::wizard::WizardButton) -> bool;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_first(this_ptr: *mut ::list::ListWizardWizardButton) -> *mut ::wizard::WizardButton;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_first_const(this_ptr: *const ::list::ListWizardWizardButton) -> *const ::wizard::WizardButton;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_front(this_ptr: *mut ::list::ListWizardWizardButton) -> *mut ::wizard::WizardButton;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_front_const(this_ptr: *const ::list::ListWizardWizardButton) -> *const ::wizard::WizardButton;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_indexOf_t(this_ptr: *const ::list::ListWizardWizardButton, t: *const ::wizard::WizardButton) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_indexOf_t_from(this_ptr: *const ::list::ListWizardWizardButton, t: *const ::wizard::WizardButton, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_insert(this_ptr: *mut ::list::ListWizardWizardButton, i: ::libc::c_int, t: *const ::wizard::WizardButton);
  pub fn qt_widgets_c_QList_QWizard_WizardButton_isEmpty(this_ptr: *const ::list::ListWizardWizardButton) -> bool;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_last(this_ptr: *mut ::list::ListWizardWizardButton) -> *mut ::wizard::WizardButton;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_lastIndexOf_t(this_ptr: *const ::list::ListWizardWizardButton, t: *const ::wizard::WizardButton) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_lastIndexOf_t_from(this_ptr: *const ::list::ListWizardWizardButton, t: *const ::wizard::WizardButton, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_last_const(this_ptr: *const ::list::ListWizardWizardButton) -> *const ::wizard::WizardButton;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_length(this_ptr: *const ::list::ListWizardWizardButton) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_mid_to_output_pos(this_ptr: *const ::list::ListWizardWizardButton, pos: ::libc::c_int, output: *mut ::list::ListWizardWizardButton);
  pub fn qt_widgets_c_QList_QWizard_WizardButton_mid_to_output_pos_length(this_ptr: *const ::list::ListWizardWizardButton, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListWizardWizardButton);
  pub fn qt_widgets_c_QList_QWizard_WizardButton_move(this_ptr: *mut ::list::ListWizardWizardButton, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QList_QWizard_WizardButton_operator_add_assign_l(this_ptr: *mut ::list::ListWizardWizardButton, l: *const ::list::ListWizardWizardButton) -> *mut ::list::ListWizardWizardButton;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_operator_add_assign_t(this_ptr: *mut ::list::ListWizardWizardButton, t: *const ::wizard::WizardButton) -> *mut ::list::ListWizardWizardButton;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_operator_add_to_output(this_ptr: *const ::list::ListWizardWizardButton, l: *const ::list::ListWizardWizardButton, output: *mut ::list::ListWizardWizardButton);
  pub fn qt_widgets_c_QList_QWizard_WizardButton_operator_assign(this_ptr: *mut ::list::ListWizardWizardButton, l: *const ::list::ListWizardWizardButton) -> *mut ::list::ListWizardWizardButton;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_operator_eq(this_ptr: *const ::list::ListWizardWizardButton, l: *const ::list::ListWizardWizardButton) -> bool;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_operator_index(this_ptr: *mut ::list::ListWizardWizardButton, i: ::libc::c_int) -> *mut ::wizard::WizardButton;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_operator_index_const(this_ptr: *const ::list::ListWizardWizardButton, i: ::libc::c_int) -> *const ::wizard::WizardButton;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_operator_neq(this_ptr: *const ::list::ListWizardWizardButton, l: *const ::list::ListWizardWizardButton) -> bool;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_operator_shl_l(this_ptr: *mut ::list::ListWizardWizardButton, l: *const ::list::ListWizardWizardButton) -> *mut ::list::ListWizardWizardButton;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_operator_shl_t(this_ptr: *mut ::list::ListWizardWizardButton, t: *const ::wizard::WizardButton) -> *mut ::list::ListWizardWizardButton;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_pop_back(this_ptr: *mut ::list::ListWizardWizardButton);
  pub fn qt_widgets_c_QList_QWizard_WizardButton_pop_front(this_ptr: *mut ::list::ListWizardWizardButton);
  pub fn qt_widgets_c_QList_QWizard_WizardButton_prepend(this_ptr: *mut ::list::ListWizardWizardButton, t: *const ::wizard::WizardButton);
  pub fn qt_widgets_c_QList_QWizard_WizardButton_push_back(this_ptr: *mut ::list::ListWizardWizardButton, t: *const ::wizard::WizardButton);
  pub fn qt_widgets_c_QList_QWizard_WizardButton_push_front(this_ptr: *mut ::list::ListWizardWizardButton, t: *const ::wizard::WizardButton);
  pub fn qt_widgets_c_QList_QWizard_WizardButton_removeAll(this_ptr: *mut ::list::ListWizardWizardButton, t: *const ::wizard::WizardButton) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_removeAt(this_ptr: *mut ::list::ListWizardWizardButton, i: ::libc::c_int);
  pub fn qt_widgets_c_QList_QWizard_WizardButton_removeFirst(this_ptr: *mut ::list::ListWizardWizardButton);
  pub fn qt_widgets_c_QList_QWizard_WizardButton_removeLast(this_ptr: *mut ::list::ListWizardWizardButton);
  pub fn qt_widgets_c_QList_QWizard_WizardButton_removeOne(this_ptr: *mut ::list::ListWizardWizardButton, t: *const ::wizard::WizardButton) -> bool;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_replace(this_ptr: *mut ::list::ListWizardWizardButton, i: ::libc::c_int, t: *const ::wizard::WizardButton);
  pub fn qt_widgets_c_QList_QWizard_WizardButton_reserve(this_ptr: *mut ::list::ListWizardWizardButton, size: ::libc::c_int);
  pub fn qt_widgets_c_QList_QWizard_WizardButton_size(this_ptr: *const ::list::ListWizardWizardButton) -> ::libc::c_int;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_startsWith(this_ptr: *const ::list::ListWizardWizardButton, t: *const ::wizard::WizardButton) -> bool;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_swap_i_j(this_ptr: *mut ::list::ListWizardWizardButton, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_widgets_c_QList_QWizard_WizardButton_swap_other(this_ptr: *mut ::list::ListWizardWizardButton, other: *mut ::list::ListWizardWizardButton);
  pub fn qt_widgets_c_QList_QWizard_WizardButton_takeAt(this_ptr: *mut ::list::ListWizardWizardButton, i: ::libc::c_int) -> ::wizard::WizardButton;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_takeFirst(this_ptr: *mut ::list::ListWizardWizardButton) -> ::wizard::WizardButton;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_takeLast(this_ptr: *mut ::list::ListWizardWizardButton) -> ::wizard::WizardButton;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_value_i(this_ptr: *const ::list::ListWizardWizardButton, i: ::libc::c_int) -> ::wizard::WizardButton;
  pub fn qt_widgets_c_QList_QWizard_WizardButton_value_i_defaultValue(this_ptr: *const ::list::ListWizardWizardButton, i: ::libc::c_int, defaultValue: *const ::wizard::WizardButton) -> ::wizard::WizardButton;

  // Header: QListView
  pub fn qt_widgets_c_QListView_G_dynamic_cast_QListView_ptr_QAbstractItemView(ptr: *mut ::abstract_item_view::AbstractItemView) -> *mut ::list_view::ListView;
  pub fn qt_widgets_c_QListView_G_dynamic_cast_QListView_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::list_view::ListView;
  pub fn qt_widgets_c_QListView_G_dynamic_cast_QListView_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::list_view::ListView;
  pub fn qt_widgets_c_QListView_G_dynamic_cast_QListView_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::list_view::ListView;
  pub fn qt_widgets_c_QListView_G_static_cast_QAbstractItemView_ptr(ptr: *mut ::list_view::ListView) -> *mut ::abstract_item_view::AbstractItemView;
  pub fn qt_widgets_c_QListView_G_static_cast_QAbstractScrollArea_ptr(ptr: *mut ::list_view::ListView) -> *mut ::abstract_scroll_area::AbstractScrollArea;
  pub fn qt_widgets_c_QListView_G_static_cast_QFrame_ptr(ptr: *mut ::list_view::ListView) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QListView_G_static_cast_QListView_ptr_QAbstractItemView(ptr: *mut ::abstract_item_view::AbstractItemView) -> *mut ::list_view::ListView;
  pub fn qt_widgets_c_QListView_G_static_cast_QListView_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::list_view::ListView;
  pub fn qt_widgets_c_QListView_G_static_cast_QListView_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::list_view::ListView;
  pub fn qt_widgets_c_QListView_G_static_cast_QListView_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::list_view::ListView;
  pub fn qt_widgets_c_QListView_G_static_cast_QListView_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::list_view::ListView;
  pub fn qt_widgets_c_QListView_G_static_cast_QListView_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::list_view::ListView;
  pub fn qt_widgets_c_QListView_G_static_cast_QObject_ptr(ptr: *mut ::list_view::ListView) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QListView_G_static_cast_QPaintDevice_ptr(ptr: *mut ::list_view::ListView) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QListView_G_static_cast_QWidget_ptr(ptr: *mut ::list_view::ListView) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QListView_batchSize(this_ptr: *const ::list_view::ListView) -> ::libc::c_int;
  pub fn qt_widgets_c_QListView_clearPropertyFlags(this_ptr: *mut ::list_view::ListView);
  pub fn qt_widgets_c_QListView_delete(this_ptr: *mut ::list_view::ListView);
  pub fn qt_widgets_c_QListView_doItemsLayout(this_ptr: *mut ::list_view::ListView);
  pub fn qt_widgets_c_QListView_flow(this_ptr: *const ::list_view::ListView) -> ::list_view::Flow;
  pub fn qt_widgets_c_QListView_gridSize_to_output(this_ptr: *const ::list_view::ListView, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QListView_indexAt_to_output(this_ptr: *const ::list_view::ListView, p: *const ::qt_core::point::Point, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QListView_isRowHidden(this_ptr: *const ::list_view::ListView, row: ::libc::c_int) -> bool;
  pub fn qt_widgets_c_QListView_isSelectionRectVisible(this_ptr: *const ::list_view::ListView) -> bool;
  pub fn qt_widgets_c_QListView_isWrapping(this_ptr: *const ::list_view::ListView) -> bool;
  pub fn qt_widgets_c_QListView_layoutMode(this_ptr: *const ::list_view::ListView) -> ::list_view::LayoutMode;
  pub fn qt_widgets_c_QListView_metaObject(this_ptr: *const ::list_view::ListView) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QListView_modelColumn(this_ptr: *const ::list_view::ListView) -> ::libc::c_int;
  pub fn qt_widgets_c_QListView_movement(this_ptr: *const ::list_view::ListView) -> ::list_view::Movement;
  pub fn qt_widgets_c_QListView_new_no_args() -> *mut ::list_view::ListView;
  pub fn qt_widgets_c_QListView_new_parent(parent: *mut ::widget::Widget) -> *mut ::list_view::ListView;
  pub fn qt_widgets_c_QListView_qt_metacall(this_ptr: *mut ::list_view::ListView, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QListView_qt_metacast(this_ptr: *mut ::list_view::ListView, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QListView_reset(this_ptr: *mut ::list_view::ListView);
  pub fn qt_widgets_c_QListView_resizeMode(this_ptr: *const ::list_view::ListView) -> ::list_view::ResizeMode;
  pub fn qt_widgets_c_QListView_scrollTo_index(this_ptr: *mut ::list_view::ListView, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QListView_scrollTo_index_hint(this_ptr: *mut ::list_view::ListView, index: *const ::qt_core::model_index::ModelIndex, hint: ::abstract_item_view::ScrollHint);
  pub fn qt_widgets_c_QListView_setBatchSize(this_ptr: *mut ::list_view::ListView, batchSize: ::libc::c_int);
  pub fn qt_widgets_c_QListView_setFlow(this_ptr: *mut ::list_view::ListView, flow: ::list_view::Flow);
  pub fn qt_widgets_c_QListView_setGridSize(this_ptr: *mut ::list_view::ListView, size: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QListView_setLayoutMode(this_ptr: *mut ::list_view::ListView, mode: ::list_view::LayoutMode);
  pub fn qt_widgets_c_QListView_setModelColumn(this_ptr: *mut ::list_view::ListView, column: ::libc::c_int);
  pub fn qt_widgets_c_QListView_setMovement(this_ptr: *mut ::list_view::ListView, movement: ::list_view::Movement);
  pub fn qt_widgets_c_QListView_setResizeMode(this_ptr: *mut ::list_view::ListView, mode: ::list_view::ResizeMode);
  pub fn qt_widgets_c_QListView_setRootIndex(this_ptr: *mut ::list_view::ListView, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QListView_setRowHidden(this_ptr: *mut ::list_view::ListView, row: ::libc::c_int, hide: bool);
  pub fn qt_widgets_c_QListView_setSelectionRectVisible(this_ptr: *mut ::list_view::ListView, show: bool);
  pub fn qt_widgets_c_QListView_setSpacing(this_ptr: *mut ::list_view::ListView, space: ::libc::c_int);
  pub fn qt_widgets_c_QListView_setUniformItemSizes(this_ptr: *mut ::list_view::ListView, enable: bool);
  pub fn qt_widgets_c_QListView_setViewMode(this_ptr: *mut ::list_view::ListView, mode: ::list_view::ViewMode);
  pub fn qt_widgets_c_QListView_setWordWrap(this_ptr: *mut ::list_view::ListView, on: bool);
  pub fn qt_widgets_c_QListView_setWrapping(this_ptr: *mut ::list_view::ListView, enable: bool);
  pub fn qt_widgets_c_QListView_spacing(this_ptr: *const ::list_view::ListView) -> ::libc::c_int;
  pub fn qt_widgets_c_QListView_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QListView_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QListView_uniformItemSizes(this_ptr: *const ::list_view::ListView) -> bool;
  pub fn qt_widgets_c_QListView_viewMode(this_ptr: *const ::list_view::ListView) -> ::list_view::ViewMode;
  pub fn qt_widgets_c_QListView_visualRect_to_output(this_ptr: *const ::list_view::ListView, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QListView_wordWrap(this_ptr: *const ::list_view::ListView) -> bool;

  // Header: QListWidget
  pub fn qt_widgets_c_QListWidget_G_dynamic_cast_QListWidget_ptr_QAbstractItemView(ptr: *mut ::abstract_item_view::AbstractItemView) -> *mut ::list_widget::ListWidget;
  pub fn qt_widgets_c_QListWidget_G_dynamic_cast_QListWidget_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::list_widget::ListWidget;
  pub fn qt_widgets_c_QListWidget_G_dynamic_cast_QListWidget_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::list_widget::ListWidget;
  pub fn qt_widgets_c_QListWidget_G_dynamic_cast_QListWidget_ptr_QListView(ptr: *mut ::list_view::ListView) -> *mut ::list_widget::ListWidget;
  pub fn qt_widgets_c_QListWidget_G_dynamic_cast_QListWidget_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::list_widget::ListWidget;
  pub fn qt_widgets_c_QListWidget_G_operator_shl(out: *mut ::qt_core::data_stream::DataStream, item: *const ::list_widget_item::ListWidgetItem) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_widgets_c_QListWidget_G_operator_shr(in_: *mut ::qt_core::data_stream::DataStream, item: *mut ::list_widget_item::ListWidgetItem) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_widgets_c_QListWidget_G_static_cast_QAbstractItemView_ptr(ptr: *mut ::list_widget::ListWidget) -> *mut ::abstract_item_view::AbstractItemView;
  pub fn qt_widgets_c_QListWidget_G_static_cast_QAbstractScrollArea_ptr(ptr: *mut ::list_widget::ListWidget) -> *mut ::abstract_scroll_area::AbstractScrollArea;
  pub fn qt_widgets_c_QListWidget_G_static_cast_QFrame_ptr(ptr: *mut ::list_widget::ListWidget) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QListWidget_G_static_cast_QListView_ptr(ptr: *mut ::list_widget::ListWidget) -> *mut ::list_view::ListView;
  pub fn qt_widgets_c_QListWidget_G_static_cast_QListWidget_ptr_QAbstractItemView(ptr: *mut ::abstract_item_view::AbstractItemView) -> *mut ::list_widget::ListWidget;
  pub fn qt_widgets_c_QListWidget_G_static_cast_QListWidget_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::list_widget::ListWidget;
  pub fn qt_widgets_c_QListWidget_G_static_cast_QListWidget_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::list_widget::ListWidget;
  pub fn qt_widgets_c_QListWidget_G_static_cast_QListWidget_ptr_QListView(ptr: *mut ::list_view::ListView) -> *mut ::list_widget::ListWidget;
  pub fn qt_widgets_c_QListWidget_G_static_cast_QListWidget_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::list_widget::ListWidget;
  pub fn qt_widgets_c_QListWidget_G_static_cast_QListWidget_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::list_widget::ListWidget;
  pub fn qt_widgets_c_QListWidget_G_static_cast_QListWidget_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::list_widget::ListWidget;
  pub fn qt_widgets_c_QListWidget_G_static_cast_QObject_ptr(ptr: *mut ::list_widget::ListWidget) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QListWidget_G_static_cast_QPaintDevice_ptr(ptr: *mut ::list_widget::ListWidget) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QListWidget_G_static_cast_QWidget_ptr(ptr: *mut ::list_widget::ListWidget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QListWidget_addItem_item(this_ptr: *mut ::list_widget::ListWidget, item: *mut ::list_widget_item::ListWidgetItem);
  pub fn qt_widgets_c_QListWidget_addItem_label(this_ptr: *mut ::list_widget::ListWidget, label: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QListWidget_addItems(this_ptr: *mut ::list_widget::ListWidget, labels: *const ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QListWidget_clear(this_ptr: *mut ::list_widget::ListWidget);
  pub fn qt_widgets_c_QListWidget_closePersistentEditor(this_ptr: *mut ::list_widget::ListWidget, item: *mut ::list_widget_item::ListWidgetItem);
  pub fn qt_widgets_c_QListWidget_count(this_ptr: *const ::list_widget::ListWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QListWidget_currentItem(this_ptr: *const ::list_widget::ListWidget) -> *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QListWidget_currentRow(this_ptr: *const ::list_widget::ListWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QListWidget_delete(this_ptr: *mut ::list_widget::ListWidget);
  pub fn qt_widgets_c_QListWidget_dropEvent(this_ptr: *mut ::list_widget::ListWidget, event: *mut ::qt_gui::drop_event::DropEvent);
  pub fn qt_widgets_c_QListWidget_editItem(this_ptr: *mut ::list_widget::ListWidget, item: *mut ::list_widget_item::ListWidgetItem);
  pub fn qt_widgets_c_QListWidget_insertItem_row_item(this_ptr: *mut ::list_widget::ListWidget, row: ::libc::c_int, item: *mut ::list_widget_item::ListWidgetItem);
  pub fn qt_widgets_c_QListWidget_insertItem_row_label(this_ptr: *mut ::list_widget::ListWidget, row: ::libc::c_int, label: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QListWidget_insertItems(this_ptr: *mut ::list_widget::ListWidget, row: ::libc::c_int, labels: *const ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QListWidget_isItemHidden(this_ptr: *const ::list_widget::ListWidget, item: *const ::list_widget_item::ListWidgetItem) -> bool;
  pub fn qt_widgets_c_QListWidget_isItemSelected(this_ptr: *const ::list_widget::ListWidget, item: *const ::list_widget_item::ListWidgetItem) -> bool;
  pub fn qt_widgets_c_QListWidget_isSortingEnabled(this_ptr: *const ::list_widget::ListWidget) -> bool;
  pub fn qt_widgets_c_QListWidget_item(this_ptr: *const ::list_widget::ListWidget, row: ::libc::c_int) -> *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QListWidget_itemAt_p(this_ptr: *const ::list_widget::ListWidget, p: *const ::qt_core::point::Point) -> *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QListWidget_itemAt_x_y(this_ptr: *const ::list_widget::ListWidget, x: ::libc::c_int, y: ::libc::c_int) -> *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QListWidget_itemWidget(this_ptr: *const ::list_widget::ListWidget, item: *mut ::list_widget_item::ListWidgetItem) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QListWidget_metaObject(this_ptr: *const ::list_widget::ListWidget) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QListWidget_new_no_args() -> *mut ::list_widget::ListWidget;
  pub fn qt_widgets_c_QListWidget_new_parent(parent: *mut ::widget::Widget) -> *mut ::list_widget::ListWidget;
  pub fn qt_widgets_c_QListWidget_openPersistentEditor(this_ptr: *mut ::list_widget::ListWidget, item: *mut ::list_widget_item::ListWidgetItem);
  pub fn qt_widgets_c_QListWidget_qt_metacall(this_ptr: *mut ::list_widget::ListWidget, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QListWidget_qt_metacast(this_ptr: *mut ::list_widget::ListWidget, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QListWidget_removeItemWidget(this_ptr: *mut ::list_widget::ListWidget, item: *mut ::list_widget_item::ListWidgetItem);
  pub fn qt_widgets_c_QListWidget_row(this_ptr: *const ::list_widget::ListWidget, item: *const ::list_widget_item::ListWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QListWidget_scrollToItem_item(this_ptr: *mut ::list_widget::ListWidget, item: *const ::list_widget_item::ListWidgetItem);
  pub fn qt_widgets_c_QListWidget_scrollToItem_item_hint(this_ptr: *mut ::list_widget::ListWidget, item: *const ::list_widget_item::ListWidgetItem, hint: *const ::abstract_item_view::ScrollHint);
  pub fn qt_widgets_c_QListWidget_selectedItems_to_output(this_ptr: *const ::list_widget::ListWidget, output: *mut ::list::ListListWidgetItemMutPtr);
  pub fn qt_widgets_c_QListWidget_setCurrentItem(this_ptr: *mut ::list_widget::ListWidget, item: *mut ::list_widget_item::ListWidgetItem);
  pub fn qt_widgets_c_QListWidget_setCurrentRow(this_ptr: *mut ::list_widget::ListWidget, row: ::libc::c_int);
  pub fn qt_widgets_c_QListWidget_setItemHidden(this_ptr: *mut ::list_widget::ListWidget, item: *const ::list_widget_item::ListWidgetItem, hide: bool);
  pub fn qt_widgets_c_QListWidget_setItemSelected(this_ptr: *mut ::list_widget::ListWidget, item: *const ::list_widget_item::ListWidgetItem, select: bool);
  pub fn qt_widgets_c_QListWidget_setItemWidget(this_ptr: *mut ::list_widget::ListWidget, item: *mut ::list_widget_item::ListWidgetItem, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QListWidget_setSelectionModel(this_ptr: *mut ::list_widget::ListWidget, selectionModel: *mut ::qt_core::item_selection_model::ItemSelectionModel);
  pub fn qt_widgets_c_QListWidget_setSortingEnabled(this_ptr: *mut ::list_widget::ListWidget, enable: bool);
  pub fn qt_widgets_c_QListWidget_sortItems_no_args(this_ptr: *mut ::list_widget::ListWidget);
  pub fn qt_widgets_c_QListWidget_sortItems_order(this_ptr: *mut ::list_widget::ListWidget, order: *const ::qt_core::qt::SortOrder);
  pub fn qt_widgets_c_QListWidget_takeItem(this_ptr: *mut ::list_widget::ListWidget, row: ::libc::c_int) -> *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QListWidget_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QListWidget_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QListWidget_visualItemRect_to_output(this_ptr: *const ::list_widget::ListWidget, item: *const ::list_widget_item::ListWidgetItem, output: *mut ::qt_core::rect::Rect);

  // Header: QListWidgetItem
  pub fn qt_widgets_c_QListWidgetItem_backgroundColor_to_output(this_ptr: *const ::list_widget_item::ListWidgetItem, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QListWidgetItem_background_to_output(this_ptr: *const ::list_widget_item::ListWidgetItem, output: *mut ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QListWidgetItem_clone(this_ptr: *const ::list_widget_item::ListWidgetItem) -> *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QListWidgetItem_data_to_output(this_ptr: *const ::list_widget_item::ListWidgetItem, role: ::libc::c_int, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QListWidgetItem_delete(this_ptr: *mut ::list_widget_item::ListWidgetItem);
  pub fn qt_widgets_c_QListWidgetItem_font_to_output(this_ptr: *const ::list_widget_item::ListWidgetItem, output: *mut ::qt_gui::font::Font);
  pub fn qt_widgets_c_QListWidgetItem_foreground_to_output(this_ptr: *const ::list_widget_item::ListWidgetItem, output: *mut ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QListWidgetItem_icon_to_output(this_ptr: *const ::list_widget_item::ListWidgetItem, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QListWidgetItem_isHidden(this_ptr: *const ::list_widget_item::ListWidgetItem) -> bool;
  pub fn qt_widgets_c_QListWidgetItem_isSelected(this_ptr: *const ::list_widget_item::ListWidgetItem) -> bool;
  pub fn qt_widgets_c_QListWidgetItem_listWidget(this_ptr: *const ::list_widget_item::ListWidgetItem) -> *mut ::list_widget::ListWidget;
  pub fn qt_widgets_c_QListWidgetItem_new_icon_text(icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String) -> *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QListWidgetItem_new_icon_text_view(icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String, view: *mut ::list_widget::ListWidget) -> *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QListWidgetItem_new_icon_text_view_type(icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String, view: *mut ::list_widget::ListWidget, type_: ::libc::c_int) -> *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QListWidgetItem_new_no_args() -> *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QListWidgetItem_new_other(other: *const ::list_widget_item::ListWidgetItem) -> *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QListWidgetItem_new_text(text: *const ::qt_core::string::String) -> *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QListWidgetItem_new_text_view(text: *const ::qt_core::string::String, view: *mut ::list_widget::ListWidget) -> *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QListWidgetItem_new_text_view_type(text: *const ::qt_core::string::String, view: *mut ::list_widget::ListWidget, type_: ::libc::c_int) -> *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QListWidgetItem_new_view(view: *mut ::list_widget::ListWidget) -> *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QListWidgetItem_new_view_type(view: *mut ::list_widget::ListWidget, type_: ::libc::c_int) -> *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QListWidgetItem_operator_assign(this_ptr: *mut ::list_widget_item::ListWidgetItem, other: *const ::list_widget_item::ListWidgetItem) -> *mut ::list_widget_item::ListWidgetItem;
  pub fn qt_widgets_c_QListWidgetItem_operator_lt(this_ptr: *const ::list_widget_item::ListWidgetItem, other: *const ::list_widget_item::ListWidgetItem) -> bool;
  pub fn qt_widgets_c_QListWidgetItem_read(this_ptr: *mut ::list_widget_item::ListWidgetItem, in_: *mut ::qt_core::data_stream::DataStream);
  pub fn qt_widgets_c_QListWidgetItem_setBackground(this_ptr: *mut ::list_widget_item::ListWidgetItem, brush: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QListWidgetItem_setBackgroundColor(this_ptr: *mut ::list_widget_item::ListWidgetItem, color: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QListWidgetItem_setCheckState(this_ptr: *mut ::list_widget_item::ListWidgetItem, state: *const ::qt_core::qt::CheckState);
  pub fn qt_widgets_c_QListWidgetItem_setData(this_ptr: *mut ::list_widget_item::ListWidgetItem, role: ::libc::c_int, value: *const ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QListWidgetItem_setFont(this_ptr: *mut ::list_widget_item::ListWidgetItem, font: *const ::qt_gui::font::Font);
  pub fn qt_widgets_c_QListWidgetItem_setForeground(this_ptr: *mut ::list_widget_item::ListWidgetItem, brush: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QListWidgetItem_setHidden(this_ptr: *mut ::list_widget_item::ListWidgetItem, hide: bool);
  pub fn qt_widgets_c_QListWidgetItem_setIcon(this_ptr: *mut ::list_widget_item::ListWidgetItem, icon: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QListWidgetItem_setSelected(this_ptr: *mut ::list_widget_item::ListWidgetItem, select: bool);
  pub fn qt_widgets_c_QListWidgetItem_setSizeHint(this_ptr: *mut ::list_widget_item::ListWidgetItem, size: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QListWidgetItem_setStatusTip(this_ptr: *mut ::list_widget_item::ListWidgetItem, statusTip: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QListWidgetItem_setText(this_ptr: *mut ::list_widget_item::ListWidgetItem, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QListWidgetItem_setTextAlignment(this_ptr: *mut ::list_widget_item::ListWidgetItem, alignment: ::libc::c_int);
  pub fn qt_widgets_c_QListWidgetItem_setTextColor(this_ptr: *mut ::list_widget_item::ListWidgetItem, color: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QListWidgetItem_setToolTip(this_ptr: *mut ::list_widget_item::ListWidgetItem, toolTip: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QListWidgetItem_setWhatsThis(this_ptr: *mut ::list_widget_item::ListWidgetItem, whatsThis: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QListWidgetItem_sizeHint_to_output(this_ptr: *const ::list_widget_item::ListWidgetItem, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QListWidgetItem_statusTip_to_output(this_ptr: *const ::list_widget_item::ListWidgetItem, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QListWidgetItem_textAlignment(this_ptr: *const ::list_widget_item::ListWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QListWidgetItem_textColor_to_output(this_ptr: *const ::list_widget_item::ListWidgetItem, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QListWidgetItem_text_to_output(this_ptr: *const ::list_widget_item::ListWidgetItem, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QListWidgetItem_toolTip_to_output(this_ptr: *const ::list_widget_item::ListWidgetItem, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QListWidgetItem_type(this_ptr: *const ::list_widget_item::ListWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QListWidgetItem_whatsThis_to_output(this_ptr: *const ::list_widget_item::ListWidgetItem, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QListWidgetItem_write(this_ptr: *const ::list_widget_item::ListWidgetItem, out: *mut ::qt_core::data_stream::DataStream);

  // Header: QMainWindow
  pub fn qt_widgets_c_QMainWindow_G_dynamic_cast_QMainWindow_ptr(ptr: *mut ::widget::Widget) -> *mut ::main_window::MainWindow;
  pub fn qt_widgets_c_QMainWindow_G_static_cast_QMainWindow_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::main_window::MainWindow;
  pub fn qt_widgets_c_QMainWindow_G_static_cast_QMainWindow_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::main_window::MainWindow;
  pub fn qt_widgets_c_QMainWindow_G_static_cast_QMainWindow_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::main_window::MainWindow;
  pub fn qt_widgets_c_QMainWindow_G_static_cast_QObject_ptr(ptr: *mut ::main_window::MainWindow) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QMainWindow_G_static_cast_QPaintDevice_ptr(ptr: *mut ::main_window::MainWindow) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QMainWindow_G_static_cast_QWidget_ptr(ptr: *mut ::main_window::MainWindow) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QMainWindow_addDockWidget_area_dockwidget(this_ptr: *mut ::main_window::MainWindow, area: *const ::qt_core::qt::DockWidgetArea, dockwidget: *mut ::dock_widget::DockWidget);
  pub fn qt_widgets_c_QMainWindow_addDockWidget_area_dockwidget_orientation(this_ptr: *mut ::main_window::MainWindow, area: *const ::qt_core::qt::DockWidgetArea, dockwidget: *mut ::dock_widget::DockWidget, orientation: *const ::qt_core::qt::Orientation);
  pub fn qt_widgets_c_QMainWindow_addToolBarBreak_area(this_ptr: *mut ::main_window::MainWindow, area: *const ::qt_core::qt::ToolBarArea);
  pub fn qt_widgets_c_QMainWindow_addToolBarBreak_no_args(this_ptr: *mut ::main_window::MainWindow);
  pub fn qt_widgets_c_QMainWindow_addToolBar_area_toolbar(this_ptr: *mut ::main_window::MainWindow, area: *const ::qt_core::qt::ToolBarArea, toolbar: *mut ::tool_bar::ToolBar);
  pub fn qt_widgets_c_QMainWindow_addToolBar_title(this_ptr: *mut ::main_window::MainWindow, title: *const ::qt_core::string::String) -> *mut ::tool_bar::ToolBar;
  pub fn qt_widgets_c_QMainWindow_addToolBar_toolbar(this_ptr: *mut ::main_window::MainWindow, toolbar: *mut ::tool_bar::ToolBar);
  pub fn qt_widgets_c_QMainWindow_centralWidget(this_ptr: *const ::main_window::MainWindow) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QMainWindow_createPopupMenu(this_ptr: *mut ::main_window::MainWindow) -> *mut ::menu::Menu;
  pub fn qt_widgets_c_QMainWindow_delete(this_ptr: *mut ::main_window::MainWindow);
  pub fn qt_widgets_c_QMainWindow_dockOptions(this_ptr: *const ::main_window::MainWindow) -> ::libc::c_uint;
  pub fn qt_widgets_c_QMainWindow_documentMode(this_ptr: *const ::main_window::MainWindow) -> bool;
  pub fn qt_widgets_c_QMainWindow_iconSize_to_output(this_ptr: *const ::main_window::MainWindow, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QMainWindow_insertToolBar(this_ptr: *mut ::main_window::MainWindow, before: *mut ::tool_bar::ToolBar, toolbar: *mut ::tool_bar::ToolBar);
  pub fn qt_widgets_c_QMainWindow_insertToolBarBreak(this_ptr: *mut ::main_window::MainWindow, before: *mut ::tool_bar::ToolBar);
  pub fn qt_widgets_c_QMainWindow_isAnimated(this_ptr: *const ::main_window::MainWindow) -> bool;
  pub fn qt_widgets_c_QMainWindow_isDockNestingEnabled(this_ptr: *const ::main_window::MainWindow) -> bool;
  pub fn qt_widgets_c_QMainWindow_isSeparator(this_ptr: *const ::main_window::MainWindow, pos: *const ::qt_core::point::Point) -> bool;
  pub fn qt_widgets_c_QMainWindow_menuBar(this_ptr: *const ::main_window::MainWindow) -> *mut ::menu_bar::MenuBar;
  pub fn qt_widgets_c_QMainWindow_menuWidget(this_ptr: *const ::main_window::MainWindow) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QMainWindow_metaObject(this_ptr: *const ::main_window::MainWindow) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QMainWindow_qt_metacall(this_ptr: *mut ::main_window::MainWindow, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QMainWindow_qt_metacast(this_ptr: *mut ::main_window::MainWindow, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QMainWindow_removeDockWidget(this_ptr: *mut ::main_window::MainWindow, dockwidget: *mut ::dock_widget::DockWidget);
  pub fn qt_widgets_c_QMainWindow_removeToolBar(this_ptr: *mut ::main_window::MainWindow, toolbar: *mut ::tool_bar::ToolBar);
  pub fn qt_widgets_c_QMainWindow_removeToolBarBreak(this_ptr: *mut ::main_window::MainWindow, before: *mut ::tool_bar::ToolBar);
  pub fn qt_widgets_c_QMainWindow_resizeDocks(this_ptr: *mut ::main_window::MainWindow, docks: *const ::list::ListDockWidgetMutPtr, sizes: *const ::qt_core::list::ListCInt, orientation: *const ::qt_core::qt::Orientation);
  pub fn qt_widgets_c_QMainWindow_restoreDockWidget(this_ptr: *mut ::main_window::MainWindow, dockwidget: *mut ::dock_widget::DockWidget) -> bool;
  pub fn qt_widgets_c_QMainWindow_restoreState_state(this_ptr: *mut ::main_window::MainWindow, state: *const ::qt_core::byte_array::ByteArray) -> bool;
  pub fn qt_widgets_c_QMainWindow_restoreState_state_version(this_ptr: *mut ::main_window::MainWindow, state: *const ::qt_core::byte_array::ByteArray, version: ::libc::c_int) -> bool;
  pub fn qt_widgets_c_QMainWindow_saveState_to_output_no_args(this_ptr: *const ::main_window::MainWindow, output: *mut ::qt_core::byte_array::ByteArray);
  pub fn qt_widgets_c_QMainWindow_saveState_to_output_version(this_ptr: *const ::main_window::MainWindow, version: ::libc::c_int, output: *mut ::qt_core::byte_array::ByteArray);
  pub fn qt_widgets_c_QMainWindow_setAnimated(this_ptr: *mut ::main_window::MainWindow, enabled: bool);
  pub fn qt_widgets_c_QMainWindow_setCentralWidget(this_ptr: *mut ::main_window::MainWindow, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QMainWindow_setCorner(this_ptr: *mut ::main_window::MainWindow, corner: *const ::qt_core::qt::Corner, area: *const ::qt_core::qt::DockWidgetArea);
  pub fn qt_widgets_c_QMainWindow_setDockNestingEnabled(this_ptr: *mut ::main_window::MainWindow, enabled: bool);
  pub fn qt_widgets_c_QMainWindow_setDockOptions(this_ptr: *mut ::main_window::MainWindow, options: ::libc::c_uint);
  pub fn qt_widgets_c_QMainWindow_setDocumentMode(this_ptr: *mut ::main_window::MainWindow, enabled: bool);
  pub fn qt_widgets_c_QMainWindow_setIconSize(this_ptr: *mut ::main_window::MainWindow, iconSize: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QMainWindow_setMenuBar(this_ptr: *mut ::main_window::MainWindow, menubar: *mut ::menu_bar::MenuBar);
  pub fn qt_widgets_c_QMainWindow_setMenuWidget(this_ptr: *mut ::main_window::MainWindow, menubar: *mut ::widget::Widget);
  pub fn qt_widgets_c_QMainWindow_setStatusBar(this_ptr: *mut ::main_window::MainWindow, statusbar: *mut ::status_bar::StatusBar);
  pub fn qt_widgets_c_QMainWindow_setTabShape(this_ptr: *mut ::main_window::MainWindow, tabShape: *const ::tab_widget::TabShape);
  pub fn qt_widgets_c_QMainWindow_setToolButtonStyle(this_ptr: *mut ::main_window::MainWindow, toolButtonStyle: *const ::qt_core::qt::ToolButtonStyle);
  pub fn qt_widgets_c_QMainWindow_setUnifiedTitleAndToolBarOnMac(this_ptr: *mut ::main_window::MainWindow, set: bool);
  pub fn qt_widgets_c_QMainWindow_splitDockWidget(this_ptr: *mut ::main_window::MainWindow, after: *mut ::dock_widget::DockWidget, dockwidget: *mut ::dock_widget::DockWidget, orientation: *const ::qt_core::qt::Orientation);
  pub fn qt_widgets_c_QMainWindow_statusBar(this_ptr: *const ::main_window::MainWindow) -> *mut ::status_bar::StatusBar;
  pub fn qt_widgets_c_QMainWindow_tabifiedDockWidgets_to_output(this_ptr: *const ::main_window::MainWindow, dockwidget: *mut ::dock_widget::DockWidget, output: *mut ::list::ListDockWidgetMutPtr);
  pub fn qt_widgets_c_QMainWindow_tabifyDockWidget(this_ptr: *mut ::main_window::MainWindow, first: *mut ::dock_widget::DockWidget, second: *mut ::dock_widget::DockWidget);
  pub fn qt_widgets_c_QMainWindow_takeCentralWidget(this_ptr: *mut ::main_window::MainWindow) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QMainWindow_toolBarBreak(this_ptr: *const ::main_window::MainWindow, toolbar: *mut ::tool_bar::ToolBar) -> bool;
  pub fn qt_widgets_c_QMainWindow_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QMainWindow_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QMainWindow_unifiedTitleAndToolBarOnMac(this_ptr: *const ::main_window::MainWindow) -> bool;

  // Header: QMap
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_clear(this_ptr: *mut ::map::MapQtCoreDateQtGuiTextCharFormat);
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_constructor_no_args(output: *mut ::map::MapQtCoreDateQtGuiTextCharFormat);
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_constructor_other(other: *const ::map::MapQtCoreDateQtGuiTextCharFormat, output: *mut ::map::MapQtCoreDateQtGuiTextCharFormat);
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_contains(this_ptr: *const ::map::MapQtCoreDateQtGuiTextCharFormat, key: *const ::qt_core::date::Date) -> bool;
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_count_key(this_ptr: *const ::map::MapQtCoreDateQtGuiTextCharFormat, key: *const ::qt_core::date::Date) -> ::libc::c_int;
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_count_no_args(this_ptr: *const ::map::MapQtCoreDateQtGuiTextCharFormat) -> ::libc::c_int;
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_destructor(this_ptr: *mut ::map::MapQtCoreDateQtGuiTextCharFormat);
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_empty(this_ptr: *const ::map::MapQtCoreDateQtGuiTextCharFormat) -> bool;
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_first(this_ptr: *mut ::map::MapQtCoreDateQtGuiTextCharFormat) -> *mut ::qt_gui::text_char_format::TextCharFormat;
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_firstKey(this_ptr: *const ::map::MapQtCoreDateQtGuiTextCharFormat) -> *const ::qt_core::date::Date;
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_first_const(this_ptr: *const ::map::MapQtCoreDateQtGuiTextCharFormat) -> *const ::qt_gui::text_char_format::TextCharFormat;
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_isEmpty(this_ptr: *const ::map::MapQtCoreDateQtGuiTextCharFormat) -> bool;
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_key_to_output_value(this_ptr: *const ::map::MapQtCoreDateQtGuiTextCharFormat, value: *const ::qt_gui::text_char_format::TextCharFormat, output: *mut ::qt_core::date::Date);
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_key_to_output_value_defaultKey(this_ptr: *const ::map::MapQtCoreDateQtGuiTextCharFormat, value: *const ::qt_gui::text_char_format::TextCharFormat, defaultKey: *const ::qt_core::date::Date, output: *mut ::qt_core::date::Date);
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_last(this_ptr: *mut ::map::MapQtCoreDateQtGuiTextCharFormat) -> *mut ::qt_gui::text_char_format::TextCharFormat;
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_lastKey(this_ptr: *const ::map::MapQtCoreDateQtGuiTextCharFormat) -> *const ::qt_core::date::Date;
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_last_const(this_ptr: *const ::map::MapQtCoreDateQtGuiTextCharFormat) -> *const ::qt_gui::text_char_format::TextCharFormat;
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_operator_assign(this_ptr: *mut ::map::MapQtCoreDateQtGuiTextCharFormat, other: *const ::map::MapQtCoreDateQtGuiTextCharFormat) -> *mut ::map::MapQtCoreDateQtGuiTextCharFormat;
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_operator_eq(this_ptr: *const ::map::MapQtCoreDateQtGuiTextCharFormat, other: *const ::map::MapQtCoreDateQtGuiTextCharFormat) -> bool;
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_operator_index(this_ptr: *mut ::map::MapQtCoreDateQtGuiTextCharFormat, key: *const ::qt_core::date::Date) -> *mut ::qt_gui::text_char_format::TextCharFormat;
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_operator_index_to_output(this_ptr: *const ::map::MapQtCoreDateQtGuiTextCharFormat, key: *const ::qt_core::date::Date, output: *mut ::qt_gui::text_char_format::TextCharFormat);
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_operator_neq(this_ptr: *const ::map::MapQtCoreDateQtGuiTextCharFormat, other: *const ::map::MapQtCoreDateQtGuiTextCharFormat) -> bool;
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_remove(this_ptr: *mut ::map::MapQtCoreDateQtGuiTextCharFormat, key: *const ::qt_core::date::Date) -> ::libc::c_int;
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_size(this_ptr: *const ::map::MapQtCoreDateQtGuiTextCharFormat) -> ::libc::c_int;
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_swap(this_ptr: *mut ::map::MapQtCoreDateQtGuiTextCharFormat, other: *mut ::map::MapQtCoreDateQtGuiTextCharFormat);
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_take_to_output(this_ptr: *mut ::map::MapQtCoreDateQtGuiTextCharFormat, key: *const ::qt_core::date::Date, output: *mut ::qt_gui::text_char_format::TextCharFormat);
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_unite(this_ptr: *mut ::map::MapQtCoreDateQtGuiTextCharFormat, other: *const ::map::MapQtCoreDateQtGuiTextCharFormat) -> *mut ::map::MapQtCoreDateQtGuiTextCharFormat;
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_value_to_output_key(this_ptr: *const ::map::MapQtCoreDateQtGuiTextCharFormat, key: *const ::qt_core::date::Date, output: *mut ::qt_gui::text_char_format::TextCharFormat);
  pub fn qt_widgets_c_QMap_QDate_QTextCharFormat_value_to_output_key_defaultValue(this_ptr: *const ::map::MapQtCoreDateQtGuiTextCharFormat, key: *const ::qt_core::date::Date, defaultValue: *const ::qt_gui::text_char_format::TextCharFormat, output: *mut ::qt_gui::text_char_format::TextCharFormat);
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_clear(this_ptr: *mut ::map::MapQtCoreQtGestureTypeWidgetMutPtr);
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_constructor_no_args(output: *mut ::map::MapQtCoreQtGestureTypeWidgetMutPtr);
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_constructor_other(other: *const ::map::MapQtCoreQtGestureTypeWidgetMutPtr, output: *mut ::map::MapQtCoreQtGestureTypeWidgetMutPtr);
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_contains(this_ptr: *const ::map::MapQtCoreQtGestureTypeWidgetMutPtr, key: *const ::qt_core::qt::GestureType) -> bool;
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_count_key(this_ptr: *const ::map::MapQtCoreQtGestureTypeWidgetMutPtr, key: *const ::qt_core::qt::GestureType) -> ::libc::c_int;
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_count_no_args(this_ptr: *const ::map::MapQtCoreQtGestureTypeWidgetMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_destructor(this_ptr: *mut ::map::MapQtCoreQtGestureTypeWidgetMutPtr);
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_empty(this_ptr: *const ::map::MapQtCoreQtGestureTypeWidgetMutPtr) -> bool;
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_first(this_ptr: *mut ::map::MapQtCoreQtGestureTypeWidgetMutPtr) -> *mut *mut ::widget::Widget;
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_firstKey(this_ptr: *const ::map::MapQtCoreQtGestureTypeWidgetMutPtr) -> *const ::qt_core::qt::GestureType;
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_first_const(this_ptr: *const ::map::MapQtCoreQtGestureTypeWidgetMutPtr) -> *const *mut ::widget::Widget;
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_isEmpty(this_ptr: *const ::map::MapQtCoreQtGestureTypeWidgetMutPtr) -> bool;
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_key_value(this_ptr: *const ::map::MapQtCoreQtGestureTypeWidgetMutPtr, value: *const *mut ::widget::Widget) -> ::qt_core::qt::GestureType;
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_key_value_defaultKey(this_ptr: *const ::map::MapQtCoreQtGestureTypeWidgetMutPtr, value: *const *mut ::widget::Widget, defaultKey: *const ::qt_core::qt::GestureType) -> ::qt_core::qt::GestureType;
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_last(this_ptr: *mut ::map::MapQtCoreQtGestureTypeWidgetMutPtr) -> *mut *mut ::widget::Widget;
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_lastKey(this_ptr: *const ::map::MapQtCoreQtGestureTypeWidgetMutPtr) -> *const ::qt_core::qt::GestureType;
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_last_const(this_ptr: *const ::map::MapQtCoreQtGestureTypeWidgetMutPtr) -> *const *mut ::widget::Widget;
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_operator_assign(this_ptr: *mut ::map::MapQtCoreQtGestureTypeWidgetMutPtr, other: *const ::map::MapQtCoreQtGestureTypeWidgetMutPtr) -> *mut ::map::MapQtCoreQtGestureTypeWidgetMutPtr;
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_operator_eq(this_ptr: *const ::map::MapQtCoreQtGestureTypeWidgetMutPtr, other: *const ::map::MapQtCoreQtGestureTypeWidgetMutPtr) -> bool;
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_operator_index(this_ptr: *mut ::map::MapQtCoreQtGestureTypeWidgetMutPtr, key: *const ::qt_core::qt::GestureType) -> *mut *mut ::widget::Widget;
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_operator_index_const(this_ptr: *const ::map::MapQtCoreQtGestureTypeWidgetMutPtr, key: *const ::qt_core::qt::GestureType) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_operator_neq(this_ptr: *const ::map::MapQtCoreQtGestureTypeWidgetMutPtr, other: *const ::map::MapQtCoreQtGestureTypeWidgetMutPtr) -> bool;
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_remove(this_ptr: *mut ::map::MapQtCoreQtGestureTypeWidgetMutPtr, key: *const ::qt_core::qt::GestureType) -> ::libc::c_int;
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_size(this_ptr: *const ::map::MapQtCoreQtGestureTypeWidgetMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_swap(this_ptr: *mut ::map::MapQtCoreQtGestureTypeWidgetMutPtr, other: *mut ::map::MapQtCoreQtGestureTypeWidgetMutPtr);
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_take(this_ptr: *mut ::map::MapQtCoreQtGestureTypeWidgetMutPtr, key: *const ::qt_core::qt::GestureType) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_unite(this_ptr: *mut ::map::MapQtCoreQtGestureTypeWidgetMutPtr, other: *const ::map::MapQtCoreQtGestureTypeWidgetMutPtr) -> *mut ::map::MapQtCoreQtGestureTypeWidgetMutPtr;
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_value_key(this_ptr: *const ::map::MapQtCoreQtGestureTypeWidgetMutPtr, key: *const ::qt_core::qt::GestureType) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_value_key_defaultValue(this_ptr: *const ::map::MapQtCoreQtGestureTypeWidgetMutPtr, key: *const ::qt_core::qt::GestureType, defaultValue: *const *mut ::widget::Widget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_values_to_output_key(this_ptr: *const ::map::MapQtCoreQtGestureTypeWidgetMutPtr, key: *const ::qt_core::qt::GestureType, output: *mut ::list::ListWidgetMutPtr);
  pub fn qt_widgets_c_QMap_Qt_GestureType_QWidget_ptr_values_to_output_no_args(this_ptr: *const ::map::MapQtCoreQtGestureTypeWidgetMutPtr, output: *mut ::list::ListWidgetMutPtr);
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_clear(this_ptr: *mut ::map::MapQtCoreQtGestureTypeBool);
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_constructor_no_args(output: *mut ::map::MapQtCoreQtGestureTypeBool);
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_constructor_other(other: *const ::map::MapQtCoreQtGestureTypeBool, output: *mut ::map::MapQtCoreQtGestureTypeBool);
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_contains(this_ptr: *const ::map::MapQtCoreQtGestureTypeBool, key: *const ::qt_core::qt::GestureType) -> bool;
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_count_key(this_ptr: *const ::map::MapQtCoreQtGestureTypeBool, key: *const ::qt_core::qt::GestureType) -> ::libc::c_int;
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_count_no_args(this_ptr: *const ::map::MapQtCoreQtGestureTypeBool) -> ::libc::c_int;
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_destructor(this_ptr: *mut ::map::MapQtCoreQtGestureTypeBool);
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_empty(this_ptr: *const ::map::MapQtCoreQtGestureTypeBool) -> bool;
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_first(this_ptr: *mut ::map::MapQtCoreQtGestureTypeBool) -> *mut bool;
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_firstKey(this_ptr: *const ::map::MapQtCoreQtGestureTypeBool) -> *const ::qt_core::qt::GestureType;
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_first_const(this_ptr: *const ::map::MapQtCoreQtGestureTypeBool) -> *const bool;
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_isEmpty(this_ptr: *const ::map::MapQtCoreQtGestureTypeBool) -> bool;
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_key_value(this_ptr: *const ::map::MapQtCoreQtGestureTypeBool, value: *const bool) -> ::qt_core::qt::GestureType;
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_key_value_defaultKey(this_ptr: *const ::map::MapQtCoreQtGestureTypeBool, value: *const bool, defaultKey: *const ::qt_core::qt::GestureType) -> ::qt_core::qt::GestureType;
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_last(this_ptr: *mut ::map::MapQtCoreQtGestureTypeBool) -> *mut bool;
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_lastKey(this_ptr: *const ::map::MapQtCoreQtGestureTypeBool) -> *const ::qt_core::qt::GestureType;
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_last_const(this_ptr: *const ::map::MapQtCoreQtGestureTypeBool) -> *const bool;
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_operator_assign(this_ptr: *mut ::map::MapQtCoreQtGestureTypeBool, other: *const ::map::MapQtCoreQtGestureTypeBool) -> *mut ::map::MapQtCoreQtGestureTypeBool;
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_operator_eq(this_ptr: *const ::map::MapQtCoreQtGestureTypeBool, other: *const ::map::MapQtCoreQtGestureTypeBool) -> bool;
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_operator_index(this_ptr: *mut ::map::MapQtCoreQtGestureTypeBool, key: *const ::qt_core::qt::GestureType) -> *mut bool;
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_operator_index_const(this_ptr: *const ::map::MapQtCoreQtGestureTypeBool, key: *const ::qt_core::qt::GestureType) -> bool;
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_operator_neq(this_ptr: *const ::map::MapQtCoreQtGestureTypeBool, other: *const ::map::MapQtCoreQtGestureTypeBool) -> bool;
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_remove(this_ptr: *mut ::map::MapQtCoreQtGestureTypeBool, key: *const ::qt_core::qt::GestureType) -> ::libc::c_int;
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_size(this_ptr: *const ::map::MapQtCoreQtGestureTypeBool) -> ::libc::c_int;
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_swap(this_ptr: *mut ::map::MapQtCoreQtGestureTypeBool, other: *mut ::map::MapQtCoreQtGestureTypeBool);
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_take(this_ptr: *mut ::map::MapQtCoreQtGestureTypeBool, key: *const ::qt_core::qt::GestureType) -> bool;
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_unite(this_ptr: *mut ::map::MapQtCoreQtGestureTypeBool, other: *const ::map::MapQtCoreQtGestureTypeBool) -> *mut ::map::MapQtCoreQtGestureTypeBool;
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_value_key(this_ptr: *const ::map::MapQtCoreQtGestureTypeBool, key: *const ::qt_core::qt::GestureType) -> bool;
  pub fn qt_widgets_c_QMap_Qt_GestureType_bool_value_key_defaultValue(this_ptr: *const ::map::MapQtCoreQtGestureTypeBool, key: *const ::qt_core::qt::GestureType, defaultValue: *const bool) -> bool;

  // Header: QMdiArea
  pub fn qt_widgets_c_QMdiArea_G_dynamic_cast_QMdiArea_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::mdi_area::MdiArea;
  pub fn qt_widgets_c_QMdiArea_G_dynamic_cast_QMdiArea_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::mdi_area::MdiArea;
  pub fn qt_widgets_c_QMdiArea_G_dynamic_cast_QMdiArea_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::mdi_area::MdiArea;
  pub fn qt_widgets_c_QMdiArea_G_static_cast_QAbstractScrollArea_ptr(ptr: *mut ::mdi_area::MdiArea) -> *mut ::abstract_scroll_area::AbstractScrollArea;
  pub fn qt_widgets_c_QMdiArea_G_static_cast_QFrame_ptr(ptr: *mut ::mdi_area::MdiArea) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QMdiArea_G_static_cast_QMdiArea_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::mdi_area::MdiArea;
  pub fn qt_widgets_c_QMdiArea_G_static_cast_QMdiArea_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::mdi_area::MdiArea;
  pub fn qt_widgets_c_QMdiArea_G_static_cast_QMdiArea_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::mdi_area::MdiArea;
  pub fn qt_widgets_c_QMdiArea_G_static_cast_QMdiArea_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::mdi_area::MdiArea;
  pub fn qt_widgets_c_QMdiArea_G_static_cast_QMdiArea_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::mdi_area::MdiArea;
  pub fn qt_widgets_c_QMdiArea_G_static_cast_QObject_ptr(ptr: *mut ::mdi_area::MdiArea) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QMdiArea_G_static_cast_QPaintDevice_ptr(ptr: *mut ::mdi_area::MdiArea) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QMdiArea_G_static_cast_QWidget_ptr(ptr: *mut ::mdi_area::MdiArea) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QMdiArea_activateNextSubWindow(this_ptr: *mut ::mdi_area::MdiArea);
  pub fn qt_widgets_c_QMdiArea_activatePreviousSubWindow(this_ptr: *mut ::mdi_area::MdiArea);
  pub fn qt_widgets_c_QMdiArea_activationOrder(this_ptr: *const ::mdi_area::MdiArea) -> ::mdi_area::WindowOrder;
  pub fn qt_widgets_c_QMdiArea_activeSubWindow(this_ptr: *const ::mdi_area::MdiArea) -> *mut ::mdi_sub_window::MdiSubWindow;
  pub fn qt_widgets_c_QMdiArea_background_to_output(this_ptr: *const ::mdi_area::MdiArea, output: *mut ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QMdiArea_cascadeSubWindows(this_ptr: *mut ::mdi_area::MdiArea);
  pub fn qt_widgets_c_QMdiArea_closeActiveSubWindow(this_ptr: *mut ::mdi_area::MdiArea);
  pub fn qt_widgets_c_QMdiArea_closeAllSubWindows(this_ptr: *mut ::mdi_area::MdiArea);
  pub fn qt_widgets_c_QMdiArea_currentSubWindow(this_ptr: *const ::mdi_area::MdiArea) -> *mut ::mdi_sub_window::MdiSubWindow;
  pub fn qt_widgets_c_QMdiArea_delete(this_ptr: *mut ::mdi_area::MdiArea);
  pub fn qt_widgets_c_QMdiArea_documentMode(this_ptr: *const ::mdi_area::MdiArea) -> bool;
  pub fn qt_widgets_c_QMdiArea_metaObject(this_ptr: *const ::mdi_area::MdiArea) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QMdiArea_minimumSizeHint_to_output(this_ptr: *const ::mdi_area::MdiArea, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QMdiArea_new_no_args() -> *mut ::mdi_area::MdiArea;
  pub fn qt_widgets_c_QMdiArea_new_parent(parent: *mut ::widget::Widget) -> *mut ::mdi_area::MdiArea;
  pub fn qt_widgets_c_QMdiArea_qt_metacall(this_ptr: *mut ::mdi_area::MdiArea, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QMdiArea_qt_metacast(this_ptr: *mut ::mdi_area::MdiArea, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QMdiArea_removeSubWindow(this_ptr: *mut ::mdi_area::MdiArea, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QMdiArea_setActivationOrder(this_ptr: *mut ::mdi_area::MdiArea, order: ::mdi_area::WindowOrder);
  pub fn qt_widgets_c_QMdiArea_setActiveSubWindow(this_ptr: *mut ::mdi_area::MdiArea, window: *mut ::mdi_sub_window::MdiSubWindow);
  pub fn qt_widgets_c_QMdiArea_setBackground(this_ptr: *mut ::mdi_area::MdiArea, background: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QMdiArea_setDocumentMode(this_ptr: *mut ::mdi_area::MdiArea, enabled: bool);
  pub fn qt_widgets_c_QMdiArea_setOption_option(this_ptr: *mut ::mdi_area::MdiArea, option: ::mdi_area::AreaOption);
  pub fn qt_widgets_c_QMdiArea_setOption_option_on(this_ptr: *mut ::mdi_area::MdiArea, option: ::mdi_area::AreaOption, on: bool);
  pub fn qt_widgets_c_QMdiArea_setTabPosition(this_ptr: *mut ::mdi_area::MdiArea, position: *const ::tab_widget::TabPosition);
  pub fn qt_widgets_c_QMdiArea_setTabShape(this_ptr: *mut ::mdi_area::MdiArea, shape: *const ::tab_widget::TabShape);
  pub fn qt_widgets_c_QMdiArea_setTabsClosable(this_ptr: *mut ::mdi_area::MdiArea, closable: bool);
  pub fn qt_widgets_c_QMdiArea_setTabsMovable(this_ptr: *mut ::mdi_area::MdiArea, movable: bool);
  pub fn qt_widgets_c_QMdiArea_setViewMode(this_ptr: *mut ::mdi_area::MdiArea, mode: ::mdi_area::ViewMode);
  pub fn qt_widgets_c_QMdiArea_sizeHint_to_output(this_ptr: *const ::mdi_area::MdiArea, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QMdiArea_subWindowList_to_output_no_args(this_ptr: *const ::mdi_area::MdiArea, output: *mut ::list::ListMdiSubWindowMutPtr);
  pub fn qt_widgets_c_QMdiArea_subWindowList_to_output_order(this_ptr: *const ::mdi_area::MdiArea, order: ::mdi_area::WindowOrder, output: *mut ::list::ListMdiSubWindowMutPtr);
  pub fn qt_widgets_c_QMdiArea_tabsClosable(this_ptr: *const ::mdi_area::MdiArea) -> bool;
  pub fn qt_widgets_c_QMdiArea_tabsMovable(this_ptr: *const ::mdi_area::MdiArea) -> bool;
  pub fn qt_widgets_c_QMdiArea_testOption(this_ptr: *const ::mdi_area::MdiArea, opton: ::mdi_area::AreaOption) -> bool;
  pub fn qt_widgets_c_QMdiArea_tileSubWindows(this_ptr: *mut ::mdi_area::MdiArea);
  pub fn qt_widgets_c_QMdiArea_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QMdiArea_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QMdiArea_viewMode(this_ptr: *const ::mdi_area::MdiArea) -> ::mdi_area::ViewMode;

  // Header: QMdiSubWindow
  pub fn qt_widgets_c_QMdiSubWindow_G_dynamic_cast_QMdiSubWindow_ptr(ptr: *mut ::widget::Widget) -> *mut ::mdi_sub_window::MdiSubWindow;
  pub fn qt_widgets_c_QMdiSubWindow_G_static_cast_QMdiSubWindow_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::mdi_sub_window::MdiSubWindow;
  pub fn qt_widgets_c_QMdiSubWindow_G_static_cast_QMdiSubWindow_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::mdi_sub_window::MdiSubWindow;
  pub fn qt_widgets_c_QMdiSubWindow_G_static_cast_QMdiSubWindow_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::mdi_sub_window::MdiSubWindow;
  pub fn qt_widgets_c_QMdiSubWindow_G_static_cast_QObject_ptr(ptr: *mut ::mdi_sub_window::MdiSubWindow) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QMdiSubWindow_G_static_cast_QPaintDevice_ptr(ptr: *mut ::mdi_sub_window::MdiSubWindow) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QMdiSubWindow_G_static_cast_QWidget_ptr(ptr: *mut ::mdi_sub_window::MdiSubWindow) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QMdiSubWindow_delete(this_ptr: *mut ::mdi_sub_window::MdiSubWindow);
  pub fn qt_widgets_c_QMdiSubWindow_isShaded(this_ptr: *const ::mdi_sub_window::MdiSubWindow) -> bool;
  pub fn qt_widgets_c_QMdiSubWindow_keyboardPageStep(this_ptr: *const ::mdi_sub_window::MdiSubWindow) -> ::libc::c_int;
  pub fn qt_widgets_c_QMdiSubWindow_keyboardSingleStep(this_ptr: *const ::mdi_sub_window::MdiSubWindow) -> ::libc::c_int;
  pub fn qt_widgets_c_QMdiSubWindow_maximizedButtonsWidget(this_ptr: *const ::mdi_sub_window::MdiSubWindow) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QMdiSubWindow_maximizedSystemMenuIconWidget(this_ptr: *const ::mdi_sub_window::MdiSubWindow) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QMdiSubWindow_mdiArea(this_ptr: *const ::mdi_sub_window::MdiSubWindow) -> *mut ::mdi_area::MdiArea;
  pub fn qt_widgets_c_QMdiSubWindow_metaObject(this_ptr: *const ::mdi_sub_window::MdiSubWindow) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QMdiSubWindow_minimumSizeHint_to_output(this_ptr: *const ::mdi_sub_window::MdiSubWindow, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QMdiSubWindow_qt_metacall(this_ptr: *mut ::mdi_sub_window::MdiSubWindow, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QMdiSubWindow_qt_metacast(this_ptr: *mut ::mdi_sub_window::MdiSubWindow, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QMdiSubWindow_setKeyboardPageStep(this_ptr: *mut ::mdi_sub_window::MdiSubWindow, step: ::libc::c_int);
  pub fn qt_widgets_c_QMdiSubWindow_setKeyboardSingleStep(this_ptr: *mut ::mdi_sub_window::MdiSubWindow, step: ::libc::c_int);
  pub fn qt_widgets_c_QMdiSubWindow_setOption_option(this_ptr: *mut ::mdi_sub_window::MdiSubWindow, option: ::mdi_sub_window::SubWindowOption);
  pub fn qt_widgets_c_QMdiSubWindow_setOption_option_on(this_ptr: *mut ::mdi_sub_window::MdiSubWindow, option: ::mdi_sub_window::SubWindowOption, on: bool);
  pub fn qt_widgets_c_QMdiSubWindow_setSystemMenu(this_ptr: *mut ::mdi_sub_window::MdiSubWindow, systemMenu: *mut ::menu::Menu);
  pub fn qt_widgets_c_QMdiSubWindow_setWidget(this_ptr: *mut ::mdi_sub_window::MdiSubWindow, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QMdiSubWindow_showShaded(this_ptr: *mut ::mdi_sub_window::MdiSubWindow);
  pub fn qt_widgets_c_QMdiSubWindow_showSystemMenu(this_ptr: *mut ::mdi_sub_window::MdiSubWindow);
  pub fn qt_widgets_c_QMdiSubWindow_sizeHint_to_output(this_ptr: *const ::mdi_sub_window::MdiSubWindow, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QMdiSubWindow_systemMenu(this_ptr: *const ::mdi_sub_window::MdiSubWindow) -> *mut ::menu::Menu;
  pub fn qt_widgets_c_QMdiSubWindow_testOption(this_ptr: *const ::mdi_sub_window::MdiSubWindow, arg1: ::mdi_sub_window::SubWindowOption) -> bool;
  pub fn qt_widgets_c_QMdiSubWindow_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QMdiSubWindow_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QMdiSubWindow_widget(this_ptr: *const ::mdi_sub_window::MdiSubWindow) -> *mut ::widget::Widget;

  // Header: QMenu
  pub fn qt_widgets_c_QMenu_G_dynamic_cast_QMenu_ptr(ptr: *mut ::widget::Widget) -> *mut ::menu::Menu;
  pub fn qt_widgets_c_QMenu_G_qt_mac_set_dock_menu(menu: *mut ::menu::Menu);
  pub fn qt_widgets_c_QMenu_G_static_cast_QMenu_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::menu::Menu;
  pub fn qt_widgets_c_QMenu_G_static_cast_QMenu_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::menu::Menu;
  pub fn qt_widgets_c_QMenu_G_static_cast_QMenu_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::menu::Menu;
  pub fn qt_widgets_c_QMenu_G_static_cast_QObject_ptr(ptr: *mut ::menu::Menu) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QMenu_G_static_cast_QPaintDevice_ptr(ptr: *mut ::menu::Menu) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QMenu_G_static_cast_QWidget_ptr(ptr: *mut ::menu::Menu) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QMenu_actionAt(this_ptr: *const ::menu::Menu, arg1: *const ::qt_core::point::Point) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenu_actionGeometry_to_output(this_ptr: *const ::menu::Menu, arg1: *mut ::action::Action, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QMenu_activeAction(this_ptr: *const ::menu::Menu) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenu_addAction_icon_text(this_ptr: *mut ::menu::Menu, icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenu_addAction_icon_text_receiver_member(this_ptr: *mut ::menu::Menu, icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String, receiver: *const ::qt_core::object::Object, member: *const ::libc::c_char) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenu_addAction_icon_text_receiver_member_shortcut(this_ptr: *mut ::menu::Menu, icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String, receiver: *const ::qt_core::object::Object, member: *const ::libc::c_char, shortcut: *const ::qt_gui::key_sequence::KeySequence) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenu_addAction_text(this_ptr: *mut ::menu::Menu, text: *const ::qt_core::string::String) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenu_addAction_text_receiver_member(this_ptr: *mut ::menu::Menu, text: *const ::qt_core::string::String, receiver: *const ::qt_core::object::Object, member: *const ::libc::c_char) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenu_addAction_text_receiver_member_shortcut(this_ptr: *mut ::menu::Menu, text: *const ::qt_core::string::String, receiver: *const ::qt_core::object::Object, member: *const ::libc::c_char, shortcut: *const ::qt_gui::key_sequence::KeySequence) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenu_addMenu_icon_title(this_ptr: *mut ::menu::Menu, icon: *const ::qt_gui::icon::Icon, title: *const ::qt_core::string::String) -> *mut ::menu::Menu;
  pub fn qt_widgets_c_QMenu_addMenu_menu(this_ptr: *mut ::menu::Menu, menu: *mut ::menu::Menu) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenu_addMenu_title(this_ptr: *mut ::menu::Menu, title: *const ::qt_core::string::String) -> *mut ::menu::Menu;
  pub fn qt_widgets_c_QMenu_addSection_icon_text(this_ptr: *mut ::menu::Menu, icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenu_addSection_text(this_ptr: *mut ::menu::Menu, text: *const ::qt_core::string::String) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenu_addSeparator(this_ptr: *mut ::menu::Menu) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenu_clear(this_ptr: *mut ::menu::Menu);
  pub fn qt_widgets_c_QMenu_defaultAction(this_ptr: *const ::menu::Menu) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenu_delete(this_ptr: *mut ::menu::Menu);
  pub fn qt_widgets_c_QMenu_exec_actions_pos(actions: *const ::list::ListActionMutPtr, pos: *const ::qt_core::point::Point) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenu_exec_actions_pos_at(actions: *const ::list::ListActionMutPtr, pos: *const ::qt_core::point::Point, at: *mut ::action::Action) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenu_exec_actions_pos_at_parent(actions: *const ::list::ListActionMutPtr, pos: *const ::qt_core::point::Point, at: *mut ::action::Action, parent: *mut ::widget::Widget) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenu_exec_no_args(this_ptr: *mut ::menu::Menu) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenu_exec_pos(this_ptr: *mut ::menu::Menu, pos: *const ::qt_core::point::Point) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenu_exec_pos_at(this_ptr: *mut ::menu::Menu, pos: *const ::qt_core::point::Point, at: *mut ::action::Action) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenu_hideTearOffMenu(this_ptr: *mut ::menu::Menu);
  pub fn qt_widgets_c_QMenu_icon_to_output(this_ptr: *const ::menu::Menu, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QMenu_insertMenu(this_ptr: *mut ::menu::Menu, before: *mut ::action::Action, menu: *mut ::menu::Menu) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenu_insertSection_before_icon_text(this_ptr: *mut ::menu::Menu, before: *mut ::action::Action, icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenu_insertSection_before_text(this_ptr: *mut ::menu::Menu, before: *mut ::action::Action, text: *const ::qt_core::string::String) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenu_insertSeparator(this_ptr: *mut ::menu::Menu, before: *mut ::action::Action) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenu_isEmpty(this_ptr: *const ::menu::Menu) -> bool;
  pub fn qt_widgets_c_QMenu_isTearOffEnabled(this_ptr: *const ::menu::Menu) -> bool;
  pub fn qt_widgets_c_QMenu_isTearOffMenuVisible(this_ptr: *const ::menu::Menu) -> bool;
  pub fn qt_widgets_c_QMenu_menuAction(this_ptr: *const ::menu::Menu) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenu_metaObject(this_ptr: *const ::menu::Menu) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QMenu_new_no_args() -> *mut ::menu::Menu;
  pub fn qt_widgets_c_QMenu_new_parent(parent: *mut ::widget::Widget) -> *mut ::menu::Menu;
  pub fn qt_widgets_c_QMenu_new_title(title: *const ::qt_core::string::String) -> *mut ::menu::Menu;
  pub fn qt_widgets_c_QMenu_new_title_parent(title: *const ::qt_core::string::String, parent: *mut ::widget::Widget) -> *mut ::menu::Menu;
  pub fn qt_widgets_c_QMenu_popup_pos(this_ptr: *mut ::menu::Menu, pos: *const ::qt_core::point::Point);
  pub fn qt_widgets_c_QMenu_popup_pos_at(this_ptr: *mut ::menu::Menu, pos: *const ::qt_core::point::Point, at: *mut ::action::Action);
  pub fn qt_widgets_c_QMenu_qt_metacall(this_ptr: *mut ::menu::Menu, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QMenu_qt_metacast(this_ptr: *mut ::menu::Menu, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QMenu_separatorsCollapsible(this_ptr: *const ::menu::Menu) -> bool;
  pub fn qt_widgets_c_QMenu_setActiveAction(this_ptr: *mut ::menu::Menu, act: *mut ::action::Action);
  pub fn qt_widgets_c_QMenu_setAsDockMenu(this_ptr: *mut ::menu::Menu);
  pub fn qt_widgets_c_QMenu_setDefaultAction(this_ptr: *mut ::menu::Menu, arg1: *mut ::action::Action);
  pub fn qt_widgets_c_QMenu_setIcon(this_ptr: *mut ::menu::Menu, icon: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QMenu_setNoReplayFor(this_ptr: *mut ::menu::Menu, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QMenu_setSeparatorsCollapsible(this_ptr: *mut ::menu::Menu, collapse: bool);
  pub fn qt_widgets_c_QMenu_setTearOffEnabled(this_ptr: *mut ::menu::Menu, arg1: bool);
  pub fn qt_widgets_c_QMenu_setTitle(this_ptr: *mut ::menu::Menu, title: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QMenu_setToolTipsVisible(this_ptr: *mut ::menu::Menu, visible: bool);
  pub fn qt_widgets_c_QMenu_showTearOffMenu_no_args(this_ptr: *mut ::menu::Menu);
  pub fn qt_widgets_c_QMenu_showTearOffMenu_pos(this_ptr: *mut ::menu::Menu, pos: *const ::qt_core::point::Point);
  pub fn qt_widgets_c_QMenu_sizeHint_to_output(this_ptr: *const ::menu::Menu, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QMenu_title_to_output(this_ptr: *const ::menu::Menu, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QMenu_toolTipsVisible(this_ptr: *const ::menu::Menu) -> bool;
  pub fn qt_widgets_c_QMenu_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QMenu_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QMenuBar
  pub fn qt_widgets_c_QMenuBar_G_dynamic_cast_QMenuBar_ptr(ptr: *mut ::widget::Widget) -> *mut ::menu_bar::MenuBar;
  pub fn qt_widgets_c_QMenuBar_G_static_cast_QMenuBar_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::menu_bar::MenuBar;
  pub fn qt_widgets_c_QMenuBar_G_static_cast_QMenuBar_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::menu_bar::MenuBar;
  pub fn qt_widgets_c_QMenuBar_G_static_cast_QMenuBar_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::menu_bar::MenuBar;
  pub fn qt_widgets_c_QMenuBar_G_static_cast_QObject_ptr(ptr: *mut ::menu_bar::MenuBar) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QMenuBar_G_static_cast_QPaintDevice_ptr(ptr: *mut ::menu_bar::MenuBar) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QMenuBar_G_static_cast_QWidget_ptr(ptr: *mut ::menu_bar::MenuBar) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QMenuBar_actionAt(this_ptr: *const ::menu_bar::MenuBar, arg1: *const ::qt_core::point::Point) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenuBar_actionGeometry_to_output(this_ptr: *const ::menu_bar::MenuBar, arg1: *mut ::action::Action, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QMenuBar_activeAction(this_ptr: *const ::menu_bar::MenuBar) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenuBar_addAction_text(this_ptr: *mut ::menu_bar::MenuBar, text: *const ::qt_core::string::String) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenuBar_addAction_text_receiver_member(this_ptr: *mut ::menu_bar::MenuBar, text: *const ::qt_core::string::String, receiver: *const ::qt_core::object::Object, member: *const ::libc::c_char) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenuBar_addMenu_icon_title(this_ptr: *mut ::menu_bar::MenuBar, icon: *const ::qt_gui::icon::Icon, title: *const ::qt_core::string::String) -> *mut ::menu::Menu;
  pub fn qt_widgets_c_QMenuBar_addMenu_menu(this_ptr: *mut ::menu_bar::MenuBar, menu: *mut ::menu::Menu) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenuBar_addMenu_title(this_ptr: *mut ::menu_bar::MenuBar, title: *const ::qt_core::string::String) -> *mut ::menu::Menu;
  pub fn qt_widgets_c_QMenuBar_addSeparator(this_ptr: *mut ::menu_bar::MenuBar) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenuBar_clear(this_ptr: *mut ::menu_bar::MenuBar);
  pub fn qt_widgets_c_QMenuBar_cornerWidget_corner(this_ptr: *const ::menu_bar::MenuBar, corner: *const ::qt_core::qt::Corner) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QMenuBar_cornerWidget_no_args(this_ptr: *const ::menu_bar::MenuBar) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QMenuBar_delete(this_ptr: *mut ::menu_bar::MenuBar);
  pub fn qt_widgets_c_QMenuBar_heightForWidth(this_ptr: *const ::menu_bar::MenuBar, arg1: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QMenuBar_insertMenu(this_ptr: *mut ::menu_bar::MenuBar, before: *mut ::action::Action, menu: *mut ::menu::Menu) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenuBar_insertSeparator(this_ptr: *mut ::menu_bar::MenuBar, before: *mut ::action::Action) -> *mut ::action::Action;
  pub fn qt_widgets_c_QMenuBar_isDefaultUp(this_ptr: *const ::menu_bar::MenuBar) -> bool;
  pub fn qt_widgets_c_QMenuBar_isNativeMenuBar(this_ptr: *const ::menu_bar::MenuBar) -> bool;
  pub fn qt_widgets_c_QMenuBar_metaObject(this_ptr: *const ::menu_bar::MenuBar) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QMenuBar_minimumSizeHint_to_output(this_ptr: *const ::menu_bar::MenuBar, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QMenuBar_new_no_args() -> *mut ::menu_bar::MenuBar;
  pub fn qt_widgets_c_QMenuBar_new_parent(parent: *mut ::widget::Widget) -> *mut ::menu_bar::MenuBar;
  pub fn qt_widgets_c_QMenuBar_qt_metacall(this_ptr: *mut ::menu_bar::MenuBar, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QMenuBar_qt_metacast(this_ptr: *mut ::menu_bar::MenuBar, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QMenuBar_setActiveAction(this_ptr: *mut ::menu_bar::MenuBar, action: *mut ::action::Action);
  pub fn qt_widgets_c_QMenuBar_setCornerWidget_w(this_ptr: *mut ::menu_bar::MenuBar, w: *mut ::widget::Widget);
  pub fn qt_widgets_c_QMenuBar_setCornerWidget_w_corner(this_ptr: *mut ::menu_bar::MenuBar, w: *mut ::widget::Widget, corner: *const ::qt_core::qt::Corner);
  pub fn qt_widgets_c_QMenuBar_setDefaultUp(this_ptr: *mut ::menu_bar::MenuBar, arg1: bool);
  pub fn qt_widgets_c_QMenuBar_setNativeMenuBar(this_ptr: *mut ::menu_bar::MenuBar, nativeMenuBar: bool);
  pub fn qt_widgets_c_QMenuBar_setVisible(this_ptr: *mut ::menu_bar::MenuBar, visible: bool);
  pub fn qt_widgets_c_QMenuBar_sizeHint_to_output(this_ptr: *const ::menu_bar::MenuBar, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QMenuBar_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QMenuBar_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QMessageBox
  pub fn qt_widgets_c_QMessageBox_G_dynamic_cast_QMessageBox_ptr_QDialog(ptr: *mut ::dialog::Dialog) -> *mut ::message_box::MessageBox;
  pub fn qt_widgets_c_QMessageBox_G_dynamic_cast_QMessageBox_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::message_box::MessageBox;
  pub fn qt_widgets_c_QMessageBox_G_static_cast_QDialog_ptr(ptr: *mut ::message_box::MessageBox) -> *mut ::dialog::Dialog;
  pub fn qt_widgets_c_QMessageBox_G_static_cast_QMessageBox_ptr_QDialog(ptr: *mut ::dialog::Dialog) -> *mut ::message_box::MessageBox;
  pub fn qt_widgets_c_QMessageBox_G_static_cast_QMessageBox_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::message_box::MessageBox;
  pub fn qt_widgets_c_QMessageBox_G_static_cast_QMessageBox_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::message_box::MessageBox;
  pub fn qt_widgets_c_QMessageBox_G_static_cast_QMessageBox_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::message_box::MessageBox;
  pub fn qt_widgets_c_QMessageBox_G_static_cast_QObject_ptr(ptr: *mut ::message_box::MessageBox) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QMessageBox_G_static_cast_QPaintDevice_ptr(ptr: *mut ::message_box::MessageBox) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QMessageBox_G_static_cast_QWidget_ptr(ptr: *mut ::message_box::MessageBox) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QMessageBox_about(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QMessageBox_aboutQt_parent(parent: *mut ::widget::Widget);
  pub fn qt_widgets_c_QMessageBox_aboutQt_parent_title(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QMessageBox_addButton_button(this_ptr: *mut ::message_box::MessageBox, button: ::message_box::StandardButton) -> *mut ::push_button::PushButton;
  pub fn qt_widgets_c_QMessageBox_addButton_button_role(this_ptr: *mut ::message_box::MessageBox, button: *mut ::abstract_button::AbstractButton, role: ::message_box::ButtonRole);
  pub fn qt_widgets_c_QMessageBox_addButton_text_role(this_ptr: *mut ::message_box::MessageBox, text: *const ::qt_core::string::String, role: ::message_box::ButtonRole) -> *mut ::push_button::PushButton;
  pub fn qt_widgets_c_QMessageBox_button(this_ptr: *const ::message_box::MessageBox, which: ::message_box::StandardButton) -> *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QMessageBox_buttonRole(this_ptr: *const ::message_box::MessageBox, button: *mut ::abstract_button::AbstractButton) -> ::message_box::ButtonRole;
  pub fn qt_widgets_c_QMessageBox_buttonText_to_output(this_ptr: *const ::message_box::MessageBox, button: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QMessageBox_buttons_to_output(this_ptr: *const ::message_box::MessageBox, output: *mut ::list::ListAbstractButtonMutPtr);
  pub fn qt_widgets_c_QMessageBox_checkBox(this_ptr: *const ::message_box::MessageBox) -> *mut ::check_box::CheckBox;
  pub fn qt_widgets_c_QMessageBox_clickedButton(this_ptr: *const ::message_box::MessageBox) -> *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QMessageBox_critical_QWidget_QString_QString(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String) -> ::message_box::StandardButton;
  pub fn qt_widgets_c_QMessageBox_critical_QWidget_QString_QString_QFlags_QMessageBox_StandardButton(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, buttons: ::libc::c_uint) -> ::message_box::StandardButton;
  pub fn qt_widgets_c_QMessageBox_critical_QWidget_QString_QString_QFlags_QMessageBox_StandardButton_QMessageBox_StandardButton(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, buttons: ::libc::c_uint, defaultButton: ::message_box::StandardButton) -> ::message_box::StandardButton;
  pub fn qt_widgets_c_QMessageBox_critical_QWidget_QString_QString_QMessageBox_StandardButton_QMessageBox_StandardButton(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0: ::message_box::StandardButton, button1: ::message_box::StandardButton) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_critical_QWidget_QString_QString_QString(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0Text: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_critical_QWidget_QString_QString_QString_QString(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0Text: *const ::qt_core::string::String, button1Text: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_critical_QWidget_QString_QString_QString_QString_QString(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0Text: *const ::qt_core::string::String, button1Text: *const ::qt_core::string::String, button2Text: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_critical_QWidget_QString_QString_QString_QString_QString_int(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0Text: *const ::qt_core::string::String, button1Text: *const ::qt_core::string::String, button2Text: *const ::qt_core::string::String, defaultButtonNumber: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_critical_QWidget_QString_QString_QString_QString_QString_int_int(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0Text: *const ::qt_core::string::String, button1Text: *const ::qt_core::string::String, button2Text: *const ::qt_core::string::String, defaultButtonNumber: ::libc::c_int, escapeButtonNumber: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_critical_QWidget_QString_QString_int_int(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0: ::libc::c_int, button1: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_critical_QWidget_QString_QString_int_int_int(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0: ::libc::c_int, button1: ::libc::c_int, button2: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_defaultButton(this_ptr: *const ::message_box::MessageBox) -> *mut ::push_button::PushButton;
  pub fn qt_widgets_c_QMessageBox_delete(this_ptr: *mut ::message_box::MessageBox);
  pub fn qt_widgets_c_QMessageBox_detailedText_to_output(this_ptr: *const ::message_box::MessageBox, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QMessageBox_escapeButton(this_ptr: *const ::message_box::MessageBox) -> *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QMessageBox_icon(this_ptr: *const ::message_box::MessageBox) -> ::message_box::Icon;
  pub fn qt_widgets_c_QMessageBox_iconPixmap_as_ptr(this_ptr: *const ::message_box::MessageBox) -> *mut ::qt_gui::pixmap::Pixmap;
  pub fn qt_widgets_c_QMessageBox_information_QWidget_QString_QString(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String) -> ::message_box::StandardButton;
  pub fn qt_widgets_c_QMessageBox_information_QWidget_QString_QString_QFlags_QMessageBox_StandardButton(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, buttons: ::libc::c_uint) -> ::message_box::StandardButton;
  pub fn qt_widgets_c_QMessageBox_information_QWidget_QString_QString_QFlags_QMessageBox_StandardButton_QMessageBox_StandardButton(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, buttons: ::libc::c_uint, defaultButton: ::message_box::StandardButton) -> ::message_box::StandardButton;
  pub fn qt_widgets_c_QMessageBox_information_QWidget_QString_QString_QMessageBox_StandardButton(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0: ::message_box::StandardButton) -> ::message_box::StandardButton;
  pub fn qt_widgets_c_QMessageBox_information_QWidget_QString_QString_QMessageBox_StandardButton_QMessageBox_StandardButton(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0: ::message_box::StandardButton, button1: ::message_box::StandardButton) -> ::message_box::StandardButton;
  pub fn qt_widgets_c_QMessageBox_information_QWidget_QString_QString_QString(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0Text: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_information_QWidget_QString_QString_QString_QString(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0Text: *const ::qt_core::string::String, button1Text: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_information_QWidget_QString_QString_QString_QString_QString(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0Text: *const ::qt_core::string::String, button1Text: *const ::qt_core::string::String, button2Text: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_information_QWidget_QString_QString_QString_QString_QString_int(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0Text: *const ::qt_core::string::String, button1Text: *const ::qt_core::string::String, button2Text: *const ::qt_core::string::String, defaultButtonNumber: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_information_QWidget_QString_QString_QString_QString_QString_int_int(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0Text: *const ::qt_core::string::String, button1Text: *const ::qt_core::string::String, button2Text: *const ::qt_core::string::String, defaultButtonNumber: ::libc::c_int, escapeButtonNumber: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_information_QWidget_QString_QString_int(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_information_QWidget_QString_QString_int_int(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0: ::libc::c_int, button1: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_information_QWidget_QString_QString_int_int_int(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0: ::libc::c_int, button1: ::libc::c_int, button2: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_informativeText_to_output(this_ptr: *const ::message_box::MessageBox, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QMessageBox_metaObject(this_ptr: *const ::message_box::MessageBox) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QMessageBox_new_no_args() -> *mut ::message_box::MessageBox;
  pub fn qt_widgets_c_QMessageBox_new_parent(parent: *mut ::widget::Widget) -> *mut ::message_box::MessageBox;
  pub fn qt_widgets_c_QMessageBox_open(this_ptr: *mut ::message_box::MessageBox, receiver: *mut ::qt_core::object::Object, member: *const ::libc::c_char);
  pub fn qt_widgets_c_QMessageBox_qt_metacall(this_ptr: *mut ::message_box::MessageBox, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_qt_metacast(this_ptr: *mut ::message_box::MessageBox, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QMessageBox_question_QWidget_QString_QString(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String) -> ::message_box::StandardButton;
  pub fn qt_widgets_c_QMessageBox_question_QWidget_QString_QString_QFlags_QMessageBox_StandardButton(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, buttons: ::libc::c_uint) -> ::message_box::StandardButton;
  pub fn qt_widgets_c_QMessageBox_question_QWidget_QString_QString_QFlags_QMessageBox_StandardButton_QMessageBox_StandardButton(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, buttons: ::libc::c_uint, defaultButton: ::message_box::StandardButton) -> ::message_box::StandardButton;
  pub fn qt_widgets_c_QMessageBox_question_QWidget_QString_QString_QMessageBox_StandardButton_QMessageBox_StandardButton(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0: ::message_box::StandardButton, button1: ::message_box::StandardButton) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_question_QWidget_QString_QString_QString(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0Text: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_question_QWidget_QString_QString_QString_QString(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0Text: *const ::qt_core::string::String, button1Text: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_question_QWidget_QString_QString_QString_QString_QString(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0Text: *const ::qt_core::string::String, button1Text: *const ::qt_core::string::String, button2Text: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_question_QWidget_QString_QString_QString_QString_QString_int(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0Text: *const ::qt_core::string::String, button1Text: *const ::qt_core::string::String, button2Text: *const ::qt_core::string::String, defaultButtonNumber: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_question_QWidget_QString_QString_QString_QString_QString_int_int(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0Text: *const ::qt_core::string::String, button1Text: *const ::qt_core::string::String, button2Text: *const ::qt_core::string::String, defaultButtonNumber: ::libc::c_int, escapeButtonNumber: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_question_QWidget_QString_QString_int(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_question_QWidget_QString_QString_int_int(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0: ::libc::c_int, button1: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_question_QWidget_QString_QString_int_int_int(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0: ::libc::c_int, button1: ::libc::c_int, button2: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_removeButton(this_ptr: *mut ::message_box::MessageBox, button: *mut ::abstract_button::AbstractButton);
  pub fn qt_widgets_c_QMessageBox_setButtonText(this_ptr: *mut ::message_box::MessageBox, button: ::libc::c_int, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QMessageBox_setCheckBox(this_ptr: *mut ::message_box::MessageBox, cb: *mut ::check_box::CheckBox);
  pub fn qt_widgets_c_QMessageBox_setDefaultButton_QMessageBox_StandardButton(this_ptr: *mut ::message_box::MessageBox, button: ::message_box::StandardButton);
  pub fn qt_widgets_c_QMessageBox_setDefaultButton_QPushButton(this_ptr: *mut ::message_box::MessageBox, button: *mut ::push_button::PushButton);
  pub fn qt_widgets_c_QMessageBox_setDetailedText(this_ptr: *mut ::message_box::MessageBox, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QMessageBox_setEscapeButton_QAbstractButton(this_ptr: *mut ::message_box::MessageBox, button: *mut ::abstract_button::AbstractButton);
  pub fn qt_widgets_c_QMessageBox_setEscapeButton_QMessageBox_StandardButton(this_ptr: *mut ::message_box::MessageBox, button: ::message_box::StandardButton);
  pub fn qt_widgets_c_QMessageBox_setIcon(this_ptr: *mut ::message_box::MessageBox, arg1: ::message_box::Icon);
  pub fn qt_widgets_c_QMessageBox_setIconPixmap(this_ptr: *mut ::message_box::MessageBox, pixmap: *const ::qt_gui::pixmap::Pixmap);
  pub fn qt_widgets_c_QMessageBox_setInformativeText(this_ptr: *mut ::message_box::MessageBox, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QMessageBox_setStandardButtons(this_ptr: *mut ::message_box::MessageBox, buttons: ::libc::c_uint);
  pub fn qt_widgets_c_QMessageBox_setText(this_ptr: *mut ::message_box::MessageBox, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QMessageBox_setTextFormat(this_ptr: *mut ::message_box::MessageBox, format: *const ::qt_core::qt::TextFormat);
  pub fn qt_widgets_c_QMessageBox_setWindowModality(this_ptr: *mut ::message_box::MessageBox, windowModality: *const ::qt_core::qt::WindowModality);
  pub fn qt_widgets_c_QMessageBox_setWindowTitle(this_ptr: *mut ::message_box::MessageBox, title: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QMessageBox_standardButton(this_ptr: *const ::message_box::MessageBox, button: *mut ::abstract_button::AbstractButton) -> ::message_box::StandardButton;
  pub fn qt_widgets_c_QMessageBox_standardButtons(this_ptr: *const ::message_box::MessageBox) -> ::libc::c_uint;
  pub fn qt_widgets_c_QMessageBox_standardIcon_as_ptr(icon: ::message_box::Icon) -> *mut ::qt_gui::pixmap::Pixmap;
  pub fn qt_widgets_c_QMessageBox_text_to_output(this_ptr: *const ::message_box::MessageBox, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QMessageBox_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QMessageBox_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QMessageBox_warning_QWidget_QString_QString(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String) -> ::message_box::StandardButton;
  pub fn qt_widgets_c_QMessageBox_warning_QWidget_QString_QString_QFlags_QMessageBox_StandardButton(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, buttons: ::libc::c_uint) -> ::message_box::StandardButton;
  pub fn qt_widgets_c_QMessageBox_warning_QWidget_QString_QString_QFlags_QMessageBox_StandardButton_QMessageBox_StandardButton(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, buttons: ::libc::c_uint, defaultButton: ::message_box::StandardButton) -> ::message_box::StandardButton;
  pub fn qt_widgets_c_QMessageBox_warning_QWidget_QString_QString_QMessageBox_StandardButton_QMessageBox_StandardButton(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0: ::message_box::StandardButton, button1: ::message_box::StandardButton) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_warning_QWidget_QString_QString_QString(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0Text: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_warning_QWidget_QString_QString_QString_QString(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0Text: *const ::qt_core::string::String, button1Text: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_warning_QWidget_QString_QString_QString_QString_QString(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0Text: *const ::qt_core::string::String, button1Text: *const ::qt_core::string::String, button2Text: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_warning_QWidget_QString_QString_QString_QString_QString_int(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0Text: *const ::qt_core::string::String, button1Text: *const ::qt_core::string::String, button2Text: *const ::qt_core::string::String, defaultButtonNumber: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_warning_QWidget_QString_QString_QString_QString_QString_int_int(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0Text: *const ::qt_core::string::String, button1Text: *const ::qt_core::string::String, button2Text: *const ::qt_core::string::String, defaultButtonNumber: ::libc::c_int, escapeButtonNumber: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_warning_QWidget_QString_QString_int_int(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0: ::libc::c_int, button1: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QMessageBox_warning_QWidget_QString_QString_int_int_int(parent: *mut ::widget::Widget, title: *const ::qt_core::string::String, text: *const ::qt_core::string::String, button0: ::libc::c_int, button1: ::libc::c_int, button2: ::libc::c_int) -> ::libc::c_int;

  // Header: QMouseEventTransition
  pub fn qt_widgets_c_QMouseEventTransition_G_static_cast_QAbstractTransition_ptr(ptr: *mut ::mouse_event_transition::MouseEventTransition) -> *mut ::qt_core::abstract_transition::AbstractTransition;
  pub fn qt_widgets_c_QMouseEventTransition_G_static_cast_QEventTransition_ptr(ptr: *mut ::mouse_event_transition::MouseEventTransition) -> *mut ::qt_core::event_transition::EventTransition;
  pub fn qt_widgets_c_QMouseEventTransition_G_static_cast_QMouseEventTransition_ptr_QAbstractTransition(ptr: *mut ::qt_core::abstract_transition::AbstractTransition) -> *mut ::mouse_event_transition::MouseEventTransition;
  pub fn qt_widgets_c_QMouseEventTransition_G_static_cast_QMouseEventTransition_ptr_QEventTransition(ptr: *mut ::qt_core::event_transition::EventTransition) -> *mut ::mouse_event_transition::MouseEventTransition;
  pub fn qt_widgets_c_QMouseEventTransition_G_static_cast_QMouseEventTransition_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::mouse_event_transition::MouseEventTransition;
  pub fn qt_widgets_c_QMouseEventTransition_G_static_cast_QObject_ptr(ptr: *mut ::mouse_event_transition::MouseEventTransition) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QMouseEventTransition_delete(this_ptr: *mut ::mouse_event_transition::MouseEventTransition);
  pub fn qt_widgets_c_QMouseEventTransition_hitTestPath_to_output(this_ptr: *const ::mouse_event_transition::MouseEventTransition, output: *mut ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QMouseEventTransition_metaObject(this_ptr: *const ::mouse_event_transition::MouseEventTransition) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QMouseEventTransition_new_no_args() -> *mut ::mouse_event_transition::MouseEventTransition;
  pub fn qt_widgets_c_QMouseEventTransition_new_object_type_button(object: *mut ::qt_core::object::Object, type_: *const ::qt_core::event::Type, button: *const ::qt_core::qt::MouseButton) -> *mut ::mouse_event_transition::MouseEventTransition;
  pub fn qt_widgets_c_QMouseEventTransition_new_object_type_button_sourceState(object: *mut ::qt_core::object::Object, type_: *const ::qt_core::event::Type, button: *const ::qt_core::qt::MouseButton, sourceState: *mut ::qt_core::state::State) -> *mut ::mouse_event_transition::MouseEventTransition;
  pub fn qt_widgets_c_QMouseEventTransition_new_sourceState(sourceState: *mut ::qt_core::state::State) -> *mut ::mouse_event_transition::MouseEventTransition;
  pub fn qt_widgets_c_QMouseEventTransition_qt_metacall(this_ptr: *mut ::mouse_event_transition::MouseEventTransition, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QMouseEventTransition_qt_metacast(this_ptr: *mut ::mouse_event_transition::MouseEventTransition, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QMouseEventTransition_setButton(this_ptr: *mut ::mouse_event_transition::MouseEventTransition, button: *const ::qt_core::qt::MouseButton);
  pub fn qt_widgets_c_QMouseEventTransition_setHitTestPath(this_ptr: *mut ::mouse_event_transition::MouseEventTransition, path: *const ::qt_gui::painter_path::PainterPath);
  pub fn qt_widgets_c_QMouseEventTransition_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QMouseEventTransition_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QOpenGLWidget
  pub fn qt_widgets_c_QOpenGLWidget_G_dynamic_cast_QOpenGLWidget_ptr(ptr: *mut ::widget::Widget) -> *mut ::opengl_widget::OpenGLWidget;
  pub fn qt_widgets_c_QOpenGLWidget_G_static_cast_QObject_ptr(ptr: *mut ::opengl_widget::OpenGLWidget) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QOpenGLWidget_G_static_cast_QOpenGLWidget_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::opengl_widget::OpenGLWidget;
  pub fn qt_widgets_c_QOpenGLWidget_G_static_cast_QOpenGLWidget_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::opengl_widget::OpenGLWidget;
  pub fn qt_widgets_c_QOpenGLWidget_G_static_cast_QOpenGLWidget_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::opengl_widget::OpenGLWidget;
  pub fn qt_widgets_c_QOpenGLWidget_G_static_cast_QPaintDevice_ptr(ptr: *mut ::opengl_widget::OpenGLWidget) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QOpenGLWidget_G_static_cast_QWidget_ptr(ptr: *mut ::opengl_widget::OpenGLWidget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QOpenGLWidget_context(this_ptr: *const ::opengl_widget::OpenGLWidget) -> *mut ::qt_gui::opengl_context::OpenGLContext;
  pub fn qt_widgets_c_QOpenGLWidget_defaultFramebufferObject(this_ptr: *const ::opengl_widget::OpenGLWidget) -> u32;
  pub fn qt_widgets_c_QOpenGLWidget_delete(this_ptr: *mut ::opengl_widget::OpenGLWidget);
  pub fn qt_widgets_c_QOpenGLWidget_doneCurrent(this_ptr: *mut ::opengl_widget::OpenGLWidget);
  pub fn qt_widgets_c_QOpenGLWidget_format_to_output(this_ptr: *const ::opengl_widget::OpenGLWidget, output: *mut ::qt_gui::surface_format::SurfaceFormat);
  pub fn qt_widgets_c_QOpenGLWidget_grabFramebuffer_as_ptr(this_ptr: *mut ::opengl_widget::OpenGLWidget) -> *mut ::qt_gui::image::Image;
  pub fn qt_widgets_c_QOpenGLWidget_isValid(this_ptr: *const ::opengl_widget::OpenGLWidget) -> bool;
  pub fn qt_widgets_c_QOpenGLWidget_makeCurrent(this_ptr: *mut ::opengl_widget::OpenGLWidget);
  pub fn qt_widgets_c_QOpenGLWidget_metaObject(this_ptr: *const ::opengl_widget::OpenGLWidget) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QOpenGLWidget_qt_metacall(this_ptr: *mut ::opengl_widget::OpenGLWidget, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QOpenGLWidget_qt_metacast(this_ptr: *mut ::opengl_widget::OpenGLWidget, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QOpenGLWidget_setFormat(this_ptr: *mut ::opengl_widget::OpenGLWidget, format: *const ::qt_gui::surface_format::SurfaceFormat);
  pub fn qt_widgets_c_QOpenGLWidget_setUpdateBehavior(this_ptr: *mut ::opengl_widget::OpenGLWidget, updateBehavior: ::opengl_widget::UpdateBehavior);
  pub fn qt_widgets_c_QOpenGLWidget_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QOpenGLWidget_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QOpenGLWidget_updateBehavior(this_ptr: *const ::opengl_widget::OpenGLWidget) -> ::opengl_widget::UpdateBehavior;

  // Header: QPair
  pub fn qt_widgets_c_QPair_double_QPointF_constructor_no_args(output: *mut ::pair::PairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QPair_double_QPointF_constructor_t1_t2(t1: *const ::libc::c_double, t2: *const ::qt_core::point_f::PointF, output: *mut ::pair::PairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QPair_double_QPointF_destructor(this_ptr: *mut ::pair::PairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QPair_double_QPointF_swap(this_ptr: *mut ::pair::PairCDoubleQtCorePointF, other: *mut ::pair::PairCDoubleQtCorePointF);
  pub fn qt_widgets_c_QPair_double_double_constructor_no_args(output: *mut ::pair::PairCDoubleCDouble);
  pub fn qt_widgets_c_QPair_double_double_constructor_t1_t2(t1: *const ::libc::c_double, t2: *const ::libc::c_double, output: *mut ::pair::PairCDoubleCDouble);
  pub fn qt_widgets_c_QPair_double_double_destructor(this_ptr: *mut ::pair::PairCDoubleCDouble);
  pub fn qt_widgets_c_QPair_double_double_swap(this_ptr: *mut ::pair::PairCDoubleCDouble, other: *mut ::pair::PairCDoubleCDouble);

  // Header: QPanGesture
  pub fn qt_widgets_c_QPanGesture_G_dynamic_cast_QPanGesture_ptr(ptr: *mut ::gesture::Gesture) -> *mut ::pan_gesture::PanGesture;
  pub fn qt_widgets_c_QPanGesture_G_static_cast_QGesture_ptr(ptr: *mut ::pan_gesture::PanGesture) -> *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QPanGesture_G_static_cast_QObject_ptr(ptr: *mut ::pan_gesture::PanGesture) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QPanGesture_G_static_cast_QPanGesture_ptr_QGesture(ptr: *mut ::gesture::Gesture) -> *mut ::pan_gesture::PanGesture;
  pub fn qt_widgets_c_QPanGesture_G_static_cast_QPanGesture_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::pan_gesture::PanGesture;
  pub fn qt_widgets_c_QPanGesture_acceleration(this_ptr: *const ::pan_gesture::PanGesture) -> ::libc::c_double;
  pub fn qt_widgets_c_QPanGesture_delete(this_ptr: *mut ::pan_gesture::PanGesture);
  pub fn qt_widgets_c_QPanGesture_delta_to_output(this_ptr: *const ::pan_gesture::PanGesture, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QPanGesture_lastOffset_to_output(this_ptr: *const ::pan_gesture::PanGesture, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QPanGesture_metaObject(this_ptr: *const ::pan_gesture::PanGesture) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QPanGesture_new_no_args() -> *mut ::pan_gesture::PanGesture;
  pub fn qt_widgets_c_QPanGesture_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::pan_gesture::PanGesture;
  pub fn qt_widgets_c_QPanGesture_offset_to_output(this_ptr: *const ::pan_gesture::PanGesture, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QPanGesture_qt_metacall(this_ptr: *mut ::pan_gesture::PanGesture, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QPanGesture_qt_metacast(this_ptr: *mut ::pan_gesture::PanGesture, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QPanGesture_setAcceleration(this_ptr: *mut ::pan_gesture::PanGesture, value: ::libc::c_double);
  pub fn qt_widgets_c_QPanGesture_setLastOffset(this_ptr: *mut ::pan_gesture::PanGesture, value: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QPanGesture_setOffset(this_ptr: *mut ::pan_gesture::PanGesture, value: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QPanGesture_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QPanGesture_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QPinchGesture
  pub fn qt_widgets_c_QPinchGesture_G_dynamic_cast_QPinchGesture_ptr(ptr: *mut ::gesture::Gesture) -> *mut ::pinch_gesture::PinchGesture;
  pub fn qt_widgets_c_QPinchGesture_G_static_cast_QGesture_ptr(ptr: *mut ::pinch_gesture::PinchGesture) -> *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QPinchGesture_G_static_cast_QObject_ptr(ptr: *mut ::pinch_gesture::PinchGesture) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QPinchGesture_G_static_cast_QPinchGesture_ptr_QGesture(ptr: *mut ::gesture::Gesture) -> *mut ::pinch_gesture::PinchGesture;
  pub fn qt_widgets_c_QPinchGesture_G_static_cast_QPinchGesture_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::pinch_gesture::PinchGesture;
  pub fn qt_widgets_c_QPinchGesture_centerPoint_to_output(this_ptr: *const ::pinch_gesture::PinchGesture, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QPinchGesture_changeFlags(this_ptr: *const ::pinch_gesture::PinchGesture) -> ::libc::c_uint;
  pub fn qt_widgets_c_QPinchGesture_delete(this_ptr: *mut ::pinch_gesture::PinchGesture);
  pub fn qt_widgets_c_QPinchGesture_lastCenterPoint_to_output(this_ptr: *const ::pinch_gesture::PinchGesture, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QPinchGesture_lastRotationAngle(this_ptr: *const ::pinch_gesture::PinchGesture) -> ::libc::c_double;
  pub fn qt_widgets_c_QPinchGesture_lastScaleFactor(this_ptr: *const ::pinch_gesture::PinchGesture) -> ::libc::c_double;
  pub fn qt_widgets_c_QPinchGesture_metaObject(this_ptr: *const ::pinch_gesture::PinchGesture) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QPinchGesture_new_no_args() -> *mut ::pinch_gesture::PinchGesture;
  pub fn qt_widgets_c_QPinchGesture_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::pinch_gesture::PinchGesture;
  pub fn qt_widgets_c_QPinchGesture_qt_metacall(this_ptr: *mut ::pinch_gesture::PinchGesture, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QPinchGesture_qt_metacast(this_ptr: *mut ::pinch_gesture::PinchGesture, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QPinchGesture_rotationAngle(this_ptr: *const ::pinch_gesture::PinchGesture) -> ::libc::c_double;
  pub fn qt_widgets_c_QPinchGesture_scaleFactor(this_ptr: *const ::pinch_gesture::PinchGesture) -> ::libc::c_double;
  pub fn qt_widgets_c_QPinchGesture_setCenterPoint(this_ptr: *mut ::pinch_gesture::PinchGesture, value: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QPinchGesture_setChangeFlags(this_ptr: *mut ::pinch_gesture::PinchGesture, value: ::libc::c_uint);
  pub fn qt_widgets_c_QPinchGesture_setLastCenterPoint(this_ptr: *mut ::pinch_gesture::PinchGesture, value: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QPinchGesture_setLastRotationAngle(this_ptr: *mut ::pinch_gesture::PinchGesture, value: ::libc::c_double);
  pub fn qt_widgets_c_QPinchGesture_setLastScaleFactor(this_ptr: *mut ::pinch_gesture::PinchGesture, value: ::libc::c_double);
  pub fn qt_widgets_c_QPinchGesture_setRotationAngle(this_ptr: *mut ::pinch_gesture::PinchGesture, value: ::libc::c_double);
  pub fn qt_widgets_c_QPinchGesture_setScaleFactor(this_ptr: *mut ::pinch_gesture::PinchGesture, value: ::libc::c_double);
  pub fn qt_widgets_c_QPinchGesture_setStartCenterPoint(this_ptr: *mut ::pinch_gesture::PinchGesture, value: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QPinchGesture_setTotalChangeFlags(this_ptr: *mut ::pinch_gesture::PinchGesture, value: ::libc::c_uint);
  pub fn qt_widgets_c_QPinchGesture_setTotalRotationAngle(this_ptr: *mut ::pinch_gesture::PinchGesture, value: ::libc::c_double);
  pub fn qt_widgets_c_QPinchGesture_setTotalScaleFactor(this_ptr: *mut ::pinch_gesture::PinchGesture, value: ::libc::c_double);
  pub fn qt_widgets_c_QPinchGesture_startCenterPoint_to_output(this_ptr: *const ::pinch_gesture::PinchGesture, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QPinchGesture_totalChangeFlags(this_ptr: *const ::pinch_gesture::PinchGesture) -> ::libc::c_uint;
  pub fn qt_widgets_c_QPinchGesture_totalRotationAngle(this_ptr: *const ::pinch_gesture::PinchGesture) -> ::libc::c_double;
  pub fn qt_widgets_c_QPinchGesture_totalScaleFactor(this_ptr: *const ::pinch_gesture::PinchGesture) -> ::libc::c_double;
  pub fn qt_widgets_c_QPinchGesture_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QPinchGesture_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QPlainTextDocumentLayout
  pub fn qt_widgets_c_QPlainTextDocumentLayout_G_static_cast_QAbstractTextDocumentLayout_ptr(ptr: *mut ::plain_text_document_layout::PlainTextDocumentLayout) -> *mut ::qt_gui::abstract_text_document_layout::AbstractTextDocumentLayout;
  pub fn qt_widgets_c_QPlainTextDocumentLayout_G_static_cast_QObject_ptr(ptr: *mut ::plain_text_document_layout::PlainTextDocumentLayout) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QPlainTextDocumentLayout_G_static_cast_QPlainTextDocumentLayout_ptr_QAbstractTextDocumentLayout(ptr: *mut ::qt_gui::abstract_text_document_layout::AbstractTextDocumentLayout) -> *mut ::plain_text_document_layout::PlainTextDocumentLayout;
  pub fn qt_widgets_c_QPlainTextDocumentLayout_G_static_cast_QPlainTextDocumentLayout_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::plain_text_document_layout::PlainTextDocumentLayout;
  pub fn qt_widgets_c_QPlainTextDocumentLayout_blockBoundingRect_to_output(this_ptr: *const ::plain_text_document_layout::PlainTextDocumentLayout, block: *const ::qt_gui::text_block::TextBlock, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QPlainTextDocumentLayout_cursorWidth(this_ptr: *const ::plain_text_document_layout::PlainTextDocumentLayout) -> ::libc::c_int;
  pub fn qt_widgets_c_QPlainTextDocumentLayout_delete(this_ptr: *mut ::plain_text_document_layout::PlainTextDocumentLayout);
  pub fn qt_widgets_c_QPlainTextDocumentLayout_documentSize_to_output(this_ptr: *const ::plain_text_document_layout::PlainTextDocumentLayout, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_widgets_c_QPlainTextDocumentLayout_draw(this_ptr: *mut ::plain_text_document_layout::PlainTextDocumentLayout, arg1: *mut ::qt_gui::painter::Painter, arg2: *const ::qt_gui::abstract_text_document_layout::PaintContext);
  pub fn qt_widgets_c_QPlainTextDocumentLayout_ensureBlockLayout(this_ptr: *const ::plain_text_document_layout::PlainTextDocumentLayout, block: *const ::qt_gui::text_block::TextBlock);
  pub fn qt_widgets_c_QPlainTextDocumentLayout_frameBoundingRect_to_output(this_ptr: *const ::plain_text_document_layout::PlainTextDocumentLayout, arg1: *mut ::qt_gui::text_frame::TextFrame, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QPlainTextDocumentLayout_hitTest(this_ptr: *const ::plain_text_document_layout::PlainTextDocumentLayout, arg1: *const ::qt_core::point_f::PointF, arg2: *const ::qt_core::qt::HitTestAccuracy) -> ::libc::c_int;
  pub fn qt_widgets_c_QPlainTextDocumentLayout_metaObject(this_ptr: *const ::plain_text_document_layout::PlainTextDocumentLayout) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QPlainTextDocumentLayout_new(document: *mut ::qt_gui::text_document::TextDocument) -> *mut ::plain_text_document_layout::PlainTextDocumentLayout;
  pub fn qt_widgets_c_QPlainTextDocumentLayout_pageCount(this_ptr: *const ::plain_text_document_layout::PlainTextDocumentLayout) -> ::libc::c_int;
  pub fn qt_widgets_c_QPlainTextDocumentLayout_qt_metacall(this_ptr: *mut ::plain_text_document_layout::PlainTextDocumentLayout, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QPlainTextDocumentLayout_qt_metacast(this_ptr: *mut ::plain_text_document_layout::PlainTextDocumentLayout, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QPlainTextDocumentLayout_requestUpdate(this_ptr: *mut ::plain_text_document_layout::PlainTextDocumentLayout);
  pub fn qt_widgets_c_QPlainTextDocumentLayout_setCursorWidth(this_ptr: *mut ::plain_text_document_layout::PlainTextDocumentLayout, width: ::libc::c_int);
  pub fn qt_widgets_c_QPlainTextDocumentLayout_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QPlainTextDocumentLayout_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QPlainTextEdit
  pub fn qt_widgets_c_QPlainTextEdit_G_dynamic_cast_QPlainTextEdit_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::plain_text_edit::PlainTextEdit;
  pub fn qt_widgets_c_QPlainTextEdit_G_dynamic_cast_QPlainTextEdit_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::plain_text_edit::PlainTextEdit;
  pub fn qt_widgets_c_QPlainTextEdit_G_dynamic_cast_QPlainTextEdit_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::plain_text_edit::PlainTextEdit;
  pub fn qt_widgets_c_QPlainTextEdit_G_static_cast_QAbstractScrollArea_ptr(ptr: *mut ::plain_text_edit::PlainTextEdit) -> *mut ::abstract_scroll_area::AbstractScrollArea;
  pub fn qt_widgets_c_QPlainTextEdit_G_static_cast_QFrame_ptr(ptr: *mut ::plain_text_edit::PlainTextEdit) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QPlainTextEdit_G_static_cast_QObject_ptr(ptr: *mut ::plain_text_edit::PlainTextEdit) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QPlainTextEdit_G_static_cast_QPaintDevice_ptr(ptr: *mut ::plain_text_edit::PlainTextEdit) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QPlainTextEdit_G_static_cast_QPlainTextEdit_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::plain_text_edit::PlainTextEdit;
  pub fn qt_widgets_c_QPlainTextEdit_G_static_cast_QPlainTextEdit_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::plain_text_edit::PlainTextEdit;
  pub fn qt_widgets_c_QPlainTextEdit_G_static_cast_QPlainTextEdit_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::plain_text_edit::PlainTextEdit;
  pub fn qt_widgets_c_QPlainTextEdit_G_static_cast_QPlainTextEdit_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::plain_text_edit::PlainTextEdit;
  pub fn qt_widgets_c_QPlainTextEdit_G_static_cast_QPlainTextEdit_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::plain_text_edit::PlainTextEdit;
  pub fn qt_widgets_c_QPlainTextEdit_G_static_cast_QWidget_ptr(ptr: *mut ::plain_text_edit::PlainTextEdit) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QPlainTextEdit_anchorAt_to_output(this_ptr: *const ::plain_text_edit::PlainTextEdit, pos: *const ::qt_core::point::Point, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QPlainTextEdit_appendHtml(this_ptr: *mut ::plain_text_edit::PlainTextEdit, html: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QPlainTextEdit_appendPlainText(this_ptr: *mut ::plain_text_edit::PlainTextEdit, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QPlainTextEdit_backgroundVisible(this_ptr: *const ::plain_text_edit::PlainTextEdit) -> bool;
  pub fn qt_widgets_c_QPlainTextEdit_blockCount(this_ptr: *const ::plain_text_edit::PlainTextEdit) -> ::libc::c_int;
  pub fn qt_widgets_c_QPlainTextEdit_canPaste(this_ptr: *const ::plain_text_edit::PlainTextEdit) -> bool;
  pub fn qt_widgets_c_QPlainTextEdit_centerCursor(this_ptr: *mut ::plain_text_edit::PlainTextEdit);
  pub fn qt_widgets_c_QPlainTextEdit_centerOnScroll(this_ptr: *const ::plain_text_edit::PlainTextEdit) -> bool;
  pub fn qt_widgets_c_QPlainTextEdit_clear(this_ptr: *mut ::plain_text_edit::PlainTextEdit);
  pub fn qt_widgets_c_QPlainTextEdit_copy(this_ptr: *mut ::plain_text_edit::PlainTextEdit);
  pub fn qt_widgets_c_QPlainTextEdit_createStandardContextMenu_no_args(this_ptr: *mut ::plain_text_edit::PlainTextEdit) -> *mut ::menu::Menu;
  pub fn qt_widgets_c_QPlainTextEdit_createStandardContextMenu_position(this_ptr: *mut ::plain_text_edit::PlainTextEdit, position: *const ::qt_core::point::Point) -> *mut ::menu::Menu;
  pub fn qt_widgets_c_QPlainTextEdit_currentCharFormat_to_output(this_ptr: *const ::plain_text_edit::PlainTextEdit, output: *mut ::qt_gui::text_char_format::TextCharFormat);
  pub fn qt_widgets_c_QPlainTextEdit_cursorForPosition_as_ptr(this_ptr: *const ::plain_text_edit::PlainTextEdit, pos: *const ::qt_core::point::Point) -> *mut ::qt_gui::text_cursor::TextCursor;
  pub fn qt_widgets_c_QPlainTextEdit_cursorRect_to_output_cursor(this_ptr: *const ::plain_text_edit::PlainTextEdit, cursor: *const ::qt_gui::text_cursor::TextCursor, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QPlainTextEdit_cursorRect_to_output_no_args(this_ptr: *const ::plain_text_edit::PlainTextEdit, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QPlainTextEdit_cursorWidth(this_ptr: *const ::plain_text_edit::PlainTextEdit) -> ::libc::c_int;
  pub fn qt_widgets_c_QPlainTextEdit_cut(this_ptr: *mut ::plain_text_edit::PlainTextEdit);
  pub fn qt_widgets_c_QPlainTextEdit_delete(this_ptr: *mut ::plain_text_edit::PlainTextEdit);
  pub fn qt_widgets_c_QPlainTextEdit_document(this_ptr: *const ::plain_text_edit::PlainTextEdit) -> *mut ::qt_gui::text_document::TextDocument;
  pub fn qt_widgets_c_QPlainTextEdit_documentTitle_to_output(this_ptr: *const ::plain_text_edit::PlainTextEdit, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QPlainTextEdit_ensureCursorVisible(this_ptr: *mut ::plain_text_edit::PlainTextEdit);
  pub fn qt_widgets_c_QPlainTextEdit_extraSelections_to_output(this_ptr: *const ::plain_text_edit::PlainTextEdit, output: *mut ::list::ListTextEditExtraSelection);
  pub fn qt_widgets_c_QPlainTextEdit_inputMethodQuery_to_output_property(this_ptr: *const ::plain_text_edit::PlainTextEdit, property: *const ::qt_core::qt::InputMethodQuery, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QPlainTextEdit_inputMethodQuery_to_output_query_argument(this_ptr: *const ::plain_text_edit::PlainTextEdit, query: *const ::qt_core::qt::InputMethodQuery, argument: *const ::qt_core::variant::Variant, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QPlainTextEdit_insertPlainText(this_ptr: *mut ::plain_text_edit::PlainTextEdit, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QPlainTextEdit_isReadOnly(this_ptr: *const ::plain_text_edit::PlainTextEdit) -> bool;
  pub fn qt_widgets_c_QPlainTextEdit_isUndoRedoEnabled(this_ptr: *const ::plain_text_edit::PlainTextEdit) -> bool;
  pub fn qt_widgets_c_QPlainTextEdit_lineWrapMode(this_ptr: *const ::plain_text_edit::PlainTextEdit) -> ::plain_text_edit::LineWrapMode;
  pub fn qt_widgets_c_QPlainTextEdit_loadResource_to_output(this_ptr: *mut ::plain_text_edit::PlainTextEdit, type_: ::libc::c_int, name: *const ::qt_core::url::Url, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QPlainTextEdit_maximumBlockCount(this_ptr: *const ::plain_text_edit::PlainTextEdit) -> ::libc::c_int;
  pub fn qt_widgets_c_QPlainTextEdit_mergeCurrentCharFormat(this_ptr: *mut ::plain_text_edit::PlainTextEdit, modifier: *const ::qt_gui::text_char_format::TextCharFormat);
  pub fn qt_widgets_c_QPlainTextEdit_metaObject(this_ptr: *const ::plain_text_edit::PlainTextEdit) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QPlainTextEdit_moveCursor_operation(this_ptr: *mut ::plain_text_edit::PlainTextEdit, operation: *const ::qt_gui::text_cursor::MoveOperation);
  pub fn qt_widgets_c_QPlainTextEdit_moveCursor_operation_mode(this_ptr: *mut ::plain_text_edit::PlainTextEdit, operation: *const ::qt_gui::text_cursor::MoveOperation, mode: *const ::qt_gui::text_cursor::MoveMode);
  pub fn qt_widgets_c_QPlainTextEdit_new_no_args() -> *mut ::plain_text_edit::PlainTextEdit;
  pub fn qt_widgets_c_QPlainTextEdit_new_parent(parent: *mut ::widget::Widget) -> *mut ::plain_text_edit::PlainTextEdit;
  pub fn qt_widgets_c_QPlainTextEdit_new_text(text: *const ::qt_core::string::String) -> *mut ::plain_text_edit::PlainTextEdit;
  pub fn qt_widgets_c_QPlainTextEdit_new_text_parent(text: *const ::qt_core::string::String, parent: *mut ::widget::Widget) -> *mut ::plain_text_edit::PlainTextEdit;
  pub fn qt_widgets_c_QPlainTextEdit_overwriteMode(this_ptr: *const ::plain_text_edit::PlainTextEdit) -> bool;
  pub fn qt_widgets_c_QPlainTextEdit_paste(this_ptr: *mut ::plain_text_edit::PlainTextEdit);
  pub fn qt_widgets_c_QPlainTextEdit_placeholderText_to_output(this_ptr: *const ::plain_text_edit::PlainTextEdit, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QPlainTextEdit_print(this_ptr: *const ::plain_text_edit::PlainTextEdit, printer: *mut ::qt_gui::paged_paint_device::PagedPaintDevice);
  pub fn qt_widgets_c_QPlainTextEdit_qt_metacall(this_ptr: *mut ::plain_text_edit::PlainTextEdit, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QPlainTextEdit_qt_metacast(this_ptr: *mut ::plain_text_edit::PlainTextEdit, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QPlainTextEdit_redo(this_ptr: *mut ::plain_text_edit::PlainTextEdit);
  pub fn qt_widgets_c_QPlainTextEdit_selectAll(this_ptr: *mut ::plain_text_edit::PlainTextEdit);
  pub fn qt_widgets_c_QPlainTextEdit_setBackgroundVisible(this_ptr: *mut ::plain_text_edit::PlainTextEdit, visible: bool);
  pub fn qt_widgets_c_QPlainTextEdit_setCenterOnScroll(this_ptr: *mut ::plain_text_edit::PlainTextEdit, enabled: bool);
  pub fn qt_widgets_c_QPlainTextEdit_setCurrentCharFormat(this_ptr: *mut ::plain_text_edit::PlainTextEdit, format: *const ::qt_gui::text_char_format::TextCharFormat);
  pub fn qt_widgets_c_QPlainTextEdit_setCursorWidth(this_ptr: *mut ::plain_text_edit::PlainTextEdit, width: ::libc::c_int);
  pub fn qt_widgets_c_QPlainTextEdit_setDocument(this_ptr: *mut ::plain_text_edit::PlainTextEdit, document: *mut ::qt_gui::text_document::TextDocument);
  pub fn qt_widgets_c_QPlainTextEdit_setDocumentTitle(this_ptr: *mut ::plain_text_edit::PlainTextEdit, title: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QPlainTextEdit_setExtraSelections(this_ptr: *mut ::plain_text_edit::PlainTextEdit, selections: *const ::list::ListTextEditExtraSelection);
  pub fn qt_widgets_c_QPlainTextEdit_setLineWrapMode(this_ptr: *mut ::plain_text_edit::PlainTextEdit, mode: ::plain_text_edit::LineWrapMode);
  pub fn qt_widgets_c_QPlainTextEdit_setMaximumBlockCount(this_ptr: *mut ::plain_text_edit::PlainTextEdit, maximum: ::libc::c_int);
  pub fn qt_widgets_c_QPlainTextEdit_setOverwriteMode(this_ptr: *mut ::plain_text_edit::PlainTextEdit, overwrite: bool);
  pub fn qt_widgets_c_QPlainTextEdit_setPlaceholderText(this_ptr: *mut ::plain_text_edit::PlainTextEdit, placeholderText: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QPlainTextEdit_setPlainText(this_ptr: *mut ::plain_text_edit::PlainTextEdit, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QPlainTextEdit_setReadOnly(this_ptr: *mut ::plain_text_edit::PlainTextEdit, ro: bool);
  pub fn qt_widgets_c_QPlainTextEdit_setTabChangesFocus(this_ptr: *mut ::plain_text_edit::PlainTextEdit, b: bool);
  pub fn qt_widgets_c_QPlainTextEdit_setTabStopWidth(this_ptr: *mut ::plain_text_edit::PlainTextEdit, width: ::libc::c_int);
  pub fn qt_widgets_c_QPlainTextEdit_setTextCursor(this_ptr: *mut ::plain_text_edit::PlainTextEdit, cursor: *const ::qt_gui::text_cursor::TextCursor);
  pub fn qt_widgets_c_QPlainTextEdit_setUndoRedoEnabled(this_ptr: *mut ::plain_text_edit::PlainTextEdit, enable: bool);
  pub fn qt_widgets_c_QPlainTextEdit_setWordWrapMode(this_ptr: *mut ::plain_text_edit::PlainTextEdit, policy: *const ::qt_gui::text_option::WrapMode);
  pub fn qt_widgets_c_QPlainTextEdit_tabChangesFocus(this_ptr: *const ::plain_text_edit::PlainTextEdit) -> bool;
  pub fn qt_widgets_c_QPlainTextEdit_tabStopWidth(this_ptr: *const ::plain_text_edit::PlainTextEdit) -> ::libc::c_int;
  pub fn qt_widgets_c_QPlainTextEdit_textCursor_as_ptr(this_ptr: *const ::plain_text_edit::PlainTextEdit) -> *mut ::qt_gui::text_cursor::TextCursor;
  pub fn qt_widgets_c_QPlainTextEdit_toPlainText_to_output(this_ptr: *const ::plain_text_edit::PlainTextEdit, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QPlainTextEdit_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QPlainTextEdit_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QPlainTextEdit_undo(this_ptr: *mut ::plain_text_edit::PlainTextEdit);
  pub fn qt_widgets_c_QPlainTextEdit_zoomIn_no_args(this_ptr: *mut ::plain_text_edit::PlainTextEdit);
  pub fn qt_widgets_c_QPlainTextEdit_zoomIn_range(this_ptr: *mut ::plain_text_edit::PlainTextEdit, range: ::libc::c_int);
  pub fn qt_widgets_c_QPlainTextEdit_zoomOut_no_args(this_ptr: *mut ::plain_text_edit::PlainTextEdit);
  pub fn qt_widgets_c_QPlainTextEdit_zoomOut_range(this_ptr: *mut ::plain_text_edit::PlainTextEdit, range: ::libc::c_int);

  // Header: QProgressBar
  pub fn qt_widgets_c_QProgressBar_G_dynamic_cast_QProgressBar_ptr(ptr: *mut ::widget::Widget) -> *mut ::progress_bar::ProgressBar;
  pub fn qt_widgets_c_QProgressBar_G_static_cast_QObject_ptr(ptr: *mut ::progress_bar::ProgressBar) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QProgressBar_G_static_cast_QPaintDevice_ptr(ptr: *mut ::progress_bar::ProgressBar) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QProgressBar_G_static_cast_QProgressBar_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::progress_bar::ProgressBar;
  pub fn qt_widgets_c_QProgressBar_G_static_cast_QProgressBar_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::progress_bar::ProgressBar;
  pub fn qt_widgets_c_QProgressBar_G_static_cast_QProgressBar_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::progress_bar::ProgressBar;
  pub fn qt_widgets_c_QProgressBar_G_static_cast_QWidget_ptr(ptr: *mut ::progress_bar::ProgressBar) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QProgressBar_delete(this_ptr: *mut ::progress_bar::ProgressBar);
  pub fn qt_widgets_c_QProgressBar_format_to_output(this_ptr: *const ::progress_bar::ProgressBar, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QProgressBar_invertedAppearance(this_ptr: *const ::progress_bar::ProgressBar) -> bool;
  pub fn qt_widgets_c_QProgressBar_isTextVisible(this_ptr: *const ::progress_bar::ProgressBar) -> bool;
  pub fn qt_widgets_c_QProgressBar_maximum(this_ptr: *const ::progress_bar::ProgressBar) -> ::libc::c_int;
  pub fn qt_widgets_c_QProgressBar_metaObject(this_ptr: *const ::progress_bar::ProgressBar) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QProgressBar_minimum(this_ptr: *const ::progress_bar::ProgressBar) -> ::libc::c_int;
  pub fn qt_widgets_c_QProgressBar_minimumSizeHint_to_output(this_ptr: *const ::progress_bar::ProgressBar, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QProgressBar_new_no_args() -> *mut ::progress_bar::ProgressBar;
  pub fn qt_widgets_c_QProgressBar_new_parent(parent: *mut ::widget::Widget) -> *mut ::progress_bar::ProgressBar;
  pub fn qt_widgets_c_QProgressBar_qt_metacall(this_ptr: *mut ::progress_bar::ProgressBar, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QProgressBar_qt_metacast(this_ptr: *mut ::progress_bar::ProgressBar, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QProgressBar_reset(this_ptr: *mut ::progress_bar::ProgressBar);
  pub fn qt_widgets_c_QProgressBar_resetFormat(this_ptr: *mut ::progress_bar::ProgressBar);
  pub fn qt_widgets_c_QProgressBar_setFormat(this_ptr: *mut ::progress_bar::ProgressBar, format: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QProgressBar_setInvertedAppearance(this_ptr: *mut ::progress_bar::ProgressBar, invert: bool);
  pub fn qt_widgets_c_QProgressBar_setMaximum(this_ptr: *mut ::progress_bar::ProgressBar, maximum: ::libc::c_int);
  pub fn qt_widgets_c_QProgressBar_setMinimum(this_ptr: *mut ::progress_bar::ProgressBar, minimum: ::libc::c_int);
  pub fn qt_widgets_c_QProgressBar_setOrientation(this_ptr: *mut ::progress_bar::ProgressBar, arg1: *const ::qt_core::qt::Orientation);
  pub fn qt_widgets_c_QProgressBar_setRange(this_ptr: *mut ::progress_bar::ProgressBar, minimum: ::libc::c_int, maximum: ::libc::c_int);
  pub fn qt_widgets_c_QProgressBar_setTextDirection(this_ptr: *mut ::progress_bar::ProgressBar, textDirection: *const ::progress_bar::Direction);
  pub fn qt_widgets_c_QProgressBar_setTextVisible(this_ptr: *mut ::progress_bar::ProgressBar, visible: bool);
  pub fn qt_widgets_c_QProgressBar_setValue(this_ptr: *mut ::progress_bar::ProgressBar, value: ::libc::c_int);
  pub fn qt_widgets_c_QProgressBar_sizeHint_to_output(this_ptr: *const ::progress_bar::ProgressBar, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QProgressBar_text_to_output(this_ptr: *const ::progress_bar::ProgressBar, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QProgressBar_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QProgressBar_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QProgressBar_value(this_ptr: *const ::progress_bar::ProgressBar) -> ::libc::c_int;

  // Header: QProgressDialog
  pub fn qt_widgets_c_QProgressDialog_G_dynamic_cast_QProgressDialog_ptr_QDialog(ptr: *mut ::dialog::Dialog) -> *mut ::progress_dialog::ProgressDialog;
  pub fn qt_widgets_c_QProgressDialog_G_dynamic_cast_QProgressDialog_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::progress_dialog::ProgressDialog;
  pub fn qt_widgets_c_QProgressDialog_G_static_cast_QDialog_ptr(ptr: *mut ::progress_dialog::ProgressDialog) -> *mut ::dialog::Dialog;
  pub fn qt_widgets_c_QProgressDialog_G_static_cast_QObject_ptr(ptr: *mut ::progress_dialog::ProgressDialog) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QProgressDialog_G_static_cast_QPaintDevice_ptr(ptr: *mut ::progress_dialog::ProgressDialog) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QProgressDialog_G_static_cast_QProgressDialog_ptr_QDialog(ptr: *mut ::dialog::Dialog) -> *mut ::progress_dialog::ProgressDialog;
  pub fn qt_widgets_c_QProgressDialog_G_static_cast_QProgressDialog_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::progress_dialog::ProgressDialog;
  pub fn qt_widgets_c_QProgressDialog_G_static_cast_QProgressDialog_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::progress_dialog::ProgressDialog;
  pub fn qt_widgets_c_QProgressDialog_G_static_cast_QProgressDialog_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::progress_dialog::ProgressDialog;
  pub fn qt_widgets_c_QProgressDialog_G_static_cast_QWidget_ptr(ptr: *mut ::progress_dialog::ProgressDialog) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QProgressDialog_autoClose(this_ptr: *const ::progress_dialog::ProgressDialog) -> bool;
  pub fn qt_widgets_c_QProgressDialog_autoReset(this_ptr: *const ::progress_dialog::ProgressDialog) -> bool;
  pub fn qt_widgets_c_QProgressDialog_cancel(this_ptr: *mut ::progress_dialog::ProgressDialog);
  pub fn qt_widgets_c_QProgressDialog_delete(this_ptr: *mut ::progress_dialog::ProgressDialog);
  pub fn qt_widgets_c_QProgressDialog_labelText_to_output(this_ptr: *const ::progress_dialog::ProgressDialog, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QProgressDialog_maximum(this_ptr: *const ::progress_dialog::ProgressDialog) -> ::libc::c_int;
  pub fn qt_widgets_c_QProgressDialog_metaObject(this_ptr: *const ::progress_dialog::ProgressDialog) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QProgressDialog_minimum(this_ptr: *const ::progress_dialog::ProgressDialog) -> ::libc::c_int;
  pub fn qt_widgets_c_QProgressDialog_minimumDuration(this_ptr: *const ::progress_dialog::ProgressDialog) -> ::libc::c_int;
  pub fn qt_widgets_c_QProgressDialog_open(this_ptr: *mut ::progress_dialog::ProgressDialog, receiver: *mut ::qt_core::object::Object, member: *const ::libc::c_char);
  pub fn qt_widgets_c_QProgressDialog_qt_metacall(this_ptr: *mut ::progress_dialog::ProgressDialog, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QProgressDialog_qt_metacast(this_ptr: *mut ::progress_dialog::ProgressDialog, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QProgressDialog_reset(this_ptr: *mut ::progress_dialog::ProgressDialog);
  pub fn qt_widgets_c_QProgressDialog_setAutoClose(this_ptr: *mut ::progress_dialog::ProgressDialog, close: bool);
  pub fn qt_widgets_c_QProgressDialog_setAutoReset(this_ptr: *mut ::progress_dialog::ProgressDialog, reset: bool);
  pub fn qt_widgets_c_QProgressDialog_setBar(this_ptr: *mut ::progress_dialog::ProgressDialog, bar: *mut ::progress_bar::ProgressBar);
  pub fn qt_widgets_c_QProgressDialog_setCancelButton(this_ptr: *mut ::progress_dialog::ProgressDialog, button: *mut ::push_button::PushButton);
  pub fn qt_widgets_c_QProgressDialog_setCancelButtonText(this_ptr: *mut ::progress_dialog::ProgressDialog, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QProgressDialog_setLabel(this_ptr: *mut ::progress_dialog::ProgressDialog, label: *mut ::label::Label);
  pub fn qt_widgets_c_QProgressDialog_setLabelText(this_ptr: *mut ::progress_dialog::ProgressDialog, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QProgressDialog_setMaximum(this_ptr: *mut ::progress_dialog::ProgressDialog, maximum: ::libc::c_int);
  pub fn qt_widgets_c_QProgressDialog_setMinimum(this_ptr: *mut ::progress_dialog::ProgressDialog, minimum: ::libc::c_int);
  pub fn qt_widgets_c_QProgressDialog_setMinimumDuration(this_ptr: *mut ::progress_dialog::ProgressDialog, ms: ::libc::c_int);
  pub fn qt_widgets_c_QProgressDialog_setRange(this_ptr: *mut ::progress_dialog::ProgressDialog, minimum: ::libc::c_int, maximum: ::libc::c_int);
  pub fn qt_widgets_c_QProgressDialog_setValue(this_ptr: *mut ::progress_dialog::ProgressDialog, progress: ::libc::c_int);
  pub fn qt_widgets_c_QProgressDialog_sizeHint_to_output(this_ptr: *const ::progress_dialog::ProgressDialog, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QProgressDialog_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QProgressDialog_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QProgressDialog_value(this_ptr: *const ::progress_dialog::ProgressDialog) -> ::libc::c_int;
  pub fn qt_widgets_c_QProgressDialog_wasCanceled(this_ptr: *const ::progress_dialog::ProgressDialog) -> bool;

  // Header: QProxyStyle
  pub fn qt_widgets_c_QProxyStyle_G_dynamic_cast_QProxyStyle_ptr_QCommonStyle(ptr: *mut ::common_style::CommonStyle) -> *mut ::proxy_style::ProxyStyle;
  pub fn qt_widgets_c_QProxyStyle_G_dynamic_cast_QProxyStyle_ptr_QStyle(ptr: *mut ::style::Style) -> *mut ::proxy_style::ProxyStyle;
  pub fn qt_widgets_c_QProxyStyle_G_static_cast_QCommonStyle_ptr(ptr: *mut ::proxy_style::ProxyStyle) -> *mut ::common_style::CommonStyle;
  pub fn qt_widgets_c_QProxyStyle_G_static_cast_QObject_ptr(ptr: *mut ::proxy_style::ProxyStyle) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QProxyStyle_G_static_cast_QProxyStyle_ptr_QCommonStyle(ptr: *mut ::common_style::CommonStyle) -> *mut ::proxy_style::ProxyStyle;
  pub fn qt_widgets_c_QProxyStyle_G_static_cast_QProxyStyle_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::proxy_style::ProxyStyle;
  pub fn qt_widgets_c_QProxyStyle_G_static_cast_QProxyStyle_ptr_QStyle(ptr: *mut ::style::Style) -> *mut ::proxy_style::ProxyStyle;
  pub fn qt_widgets_c_QProxyStyle_G_static_cast_QStyle_ptr(ptr: *mut ::proxy_style::ProxyStyle) -> *mut ::style::Style;
  pub fn qt_widgets_c_QProxyStyle_baseStyle(this_ptr: *const ::proxy_style::ProxyStyle) -> *mut ::style::Style;
  pub fn qt_widgets_c_QProxyStyle_delete(this_ptr: *mut ::proxy_style::ProxyStyle);
  pub fn qt_widgets_c_QProxyStyle_drawComplexControl_control_option_painter(this_ptr: *const ::proxy_style::ProxyStyle, control: ::style::ComplexControl, option: *const ::style_option_complex::StyleOptionComplex, painter: *mut ::qt_gui::painter::Painter);
  pub fn qt_widgets_c_QProxyStyle_drawComplexControl_control_option_painter_widget(this_ptr: *const ::proxy_style::ProxyStyle, control: ::style::ComplexControl, option: *const ::style_option_complex::StyleOptionComplex, painter: *mut ::qt_gui::painter::Painter, widget: *const ::widget::Widget);
  pub fn qt_widgets_c_QProxyStyle_drawControl_element_option_painter(this_ptr: *const ::proxy_style::ProxyStyle, element: ::style::ControlElement, option: *const ::style_option::StyleOption, painter: *mut ::qt_gui::painter::Painter);
  pub fn qt_widgets_c_QProxyStyle_drawControl_element_option_painter_widget(this_ptr: *const ::proxy_style::ProxyStyle, element: ::style::ControlElement, option: *const ::style_option::StyleOption, painter: *mut ::qt_gui::painter::Painter, widget: *const ::widget::Widget);
  pub fn qt_widgets_c_QProxyStyle_drawItemPixmap(this_ptr: *const ::proxy_style::ProxyStyle, painter: *mut ::qt_gui::painter::Painter, rect: *const ::qt_core::rect::Rect, alignment: ::libc::c_int, pixmap: *const ::qt_gui::pixmap::Pixmap);
  pub fn qt_widgets_c_QProxyStyle_drawItemText_painter_rect_flags_pal_enabled_text(this_ptr: *const ::proxy_style::ProxyStyle, painter: *mut ::qt_gui::painter::Painter, rect: *const ::qt_core::rect::Rect, flags: ::libc::c_int, pal: *const ::qt_gui::palette::Palette, enabled: bool, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QProxyStyle_drawItemText_painter_rect_flags_pal_enabled_text_textRole(this_ptr: *const ::proxy_style::ProxyStyle, painter: *mut ::qt_gui::painter::Painter, rect: *const ::qt_core::rect::Rect, flags: ::libc::c_int, pal: *const ::qt_gui::palette::Palette, enabled: bool, text: *const ::qt_core::string::String, textRole: *const ::qt_gui::palette::ColorRole);
  pub fn qt_widgets_c_QProxyStyle_drawPrimitive_element_option_painter(this_ptr: *const ::proxy_style::ProxyStyle, element: ::style::PrimitiveElement, option: *const ::style_option::StyleOption, painter: *mut ::qt_gui::painter::Painter);
  pub fn qt_widgets_c_QProxyStyle_drawPrimitive_element_option_painter_widget(this_ptr: *const ::proxy_style::ProxyStyle, element: ::style::PrimitiveElement, option: *const ::style_option::StyleOption, painter: *mut ::qt_gui::painter::Painter, widget: *const ::widget::Widget);
  pub fn qt_widgets_c_QProxyStyle_generatedIconPixmap_as_ptr(this_ptr: *const ::proxy_style::ProxyStyle, iconMode: *const ::qt_gui::icon::Mode, pixmap: *const ::qt_gui::pixmap::Pixmap, opt: *const ::style_option::StyleOption) -> *mut ::qt_gui::pixmap::Pixmap;
  pub fn qt_widgets_c_QProxyStyle_hitTestComplexControl_control_option_pos(this_ptr: *const ::proxy_style::ProxyStyle, control: ::style::ComplexControl, option: *const ::style_option_complex::StyleOptionComplex, pos: *const ::qt_core::point::Point) -> ::style::SubControl;
  pub fn qt_widgets_c_QProxyStyle_hitTestComplexControl_control_option_pos_widget(this_ptr: *const ::proxy_style::ProxyStyle, control: ::style::ComplexControl, option: *const ::style_option_complex::StyleOptionComplex, pos: *const ::qt_core::point::Point, widget: *const ::widget::Widget) -> ::style::SubControl;
  pub fn qt_widgets_c_QProxyStyle_itemPixmapRect_to_output(this_ptr: *const ::proxy_style::ProxyStyle, r: *const ::qt_core::rect::Rect, flags: ::libc::c_int, pixmap: *const ::qt_gui::pixmap::Pixmap, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QProxyStyle_itemTextRect_to_output(this_ptr: *const ::proxy_style::ProxyStyle, fm: *const ::qt_gui::font_metrics::FontMetrics, r: *const ::qt_core::rect::Rect, flags: ::libc::c_int, enabled: bool, text: *const ::qt_core::string::String, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QProxyStyle_layoutSpacing_control1_control2_orientation(this_ptr: *const ::proxy_style::ProxyStyle, control1: *const ::size_policy::ControlType, control2: *const ::size_policy::ControlType, orientation: *const ::qt_core::qt::Orientation) -> ::libc::c_int;
  pub fn qt_widgets_c_QProxyStyle_layoutSpacing_control1_control2_orientation_option(this_ptr: *const ::proxy_style::ProxyStyle, control1: *const ::size_policy::ControlType, control2: *const ::size_policy::ControlType, orientation: *const ::qt_core::qt::Orientation, option: *const ::style_option::StyleOption) -> ::libc::c_int;
  pub fn qt_widgets_c_QProxyStyle_layoutSpacing_control1_control2_orientation_option_widget(this_ptr: *const ::proxy_style::ProxyStyle, control1: *const ::size_policy::ControlType, control2: *const ::size_policy::ControlType, orientation: *const ::qt_core::qt::Orientation, option: *const ::style_option::StyleOption, widget: *const ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QProxyStyle_metaObject(this_ptr: *const ::proxy_style::ProxyStyle) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QProxyStyle_new_key(key: *const ::qt_core::string::String) -> *mut ::proxy_style::ProxyStyle;
  pub fn qt_widgets_c_QProxyStyle_new_no_args() -> *mut ::proxy_style::ProxyStyle;
  pub fn qt_widgets_c_QProxyStyle_new_style(style: *mut ::style::Style) -> *mut ::proxy_style::ProxyStyle;
  pub fn qt_widgets_c_QProxyStyle_pixelMetric_metric(this_ptr: *const ::proxy_style::ProxyStyle, metric: ::style::PixelMetric) -> ::libc::c_int;
  pub fn qt_widgets_c_QProxyStyle_pixelMetric_metric_option(this_ptr: *const ::proxy_style::ProxyStyle, metric: ::style::PixelMetric, option: *const ::style_option::StyleOption) -> ::libc::c_int;
  pub fn qt_widgets_c_QProxyStyle_pixelMetric_metric_option_widget(this_ptr: *const ::proxy_style::ProxyStyle, metric: ::style::PixelMetric, option: *const ::style_option::StyleOption, widget: *const ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QProxyStyle_polish_app(this_ptr: *mut ::proxy_style::ProxyStyle, app: *mut ::application::Application);
  pub fn qt_widgets_c_QProxyStyle_polish_pal(this_ptr: *mut ::proxy_style::ProxyStyle, pal: *mut ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QProxyStyle_polish_widget(this_ptr: *mut ::proxy_style::ProxyStyle, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QProxyStyle_qt_metacall(this_ptr: *mut ::proxy_style::ProxyStyle, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QProxyStyle_qt_metacast(this_ptr: *mut ::proxy_style::ProxyStyle, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QProxyStyle_setBaseStyle(this_ptr: *mut ::proxy_style::ProxyStyle, style: *mut ::style::Style);
  pub fn qt_widgets_c_QProxyStyle_sizeFromContents_to_output(this_ptr: *const ::proxy_style::ProxyStyle, type_: ::style::ContentsType, option: *const ::style_option::StyleOption, size: *const ::qt_core::size::Size, widget: *const ::widget::Widget, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QProxyStyle_standardIcon_to_output_standardIcon(this_ptr: *const ::proxy_style::ProxyStyle, standardIcon: ::style::StandardPixmap, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QProxyStyle_standardIcon_to_output_standardIcon_option(this_ptr: *const ::proxy_style::ProxyStyle, standardIcon: ::style::StandardPixmap, option: *const ::style_option::StyleOption, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QProxyStyle_standardIcon_to_output_standardIcon_option_widget(this_ptr: *const ::proxy_style::ProxyStyle, standardIcon: ::style::StandardPixmap, option: *const ::style_option::StyleOption, widget: *const ::widget::Widget, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QProxyStyle_standardPalette_to_output(this_ptr: *const ::proxy_style::ProxyStyle, output: *mut ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QProxyStyle_standardPixmap_as_ptr_standardPixmap_opt(this_ptr: *const ::proxy_style::ProxyStyle, standardPixmap: ::style::StandardPixmap, opt: *const ::style_option::StyleOption) -> *mut ::qt_gui::pixmap::Pixmap;
  pub fn qt_widgets_c_QProxyStyle_standardPixmap_as_ptr_standardPixmap_opt_widget(this_ptr: *const ::proxy_style::ProxyStyle, standardPixmap: ::style::StandardPixmap, opt: *const ::style_option::StyleOption, widget: *const ::widget::Widget) -> *mut ::qt_gui::pixmap::Pixmap;
  pub fn qt_widgets_c_QProxyStyle_styleHint_hint(this_ptr: *const ::proxy_style::ProxyStyle, hint: ::style::StyleHint) -> ::libc::c_int;
  pub fn qt_widgets_c_QProxyStyle_styleHint_hint_option(this_ptr: *const ::proxy_style::ProxyStyle, hint: ::style::StyleHint, option: *const ::style_option::StyleOption) -> ::libc::c_int;
  pub fn qt_widgets_c_QProxyStyle_styleHint_hint_option_widget(this_ptr: *const ::proxy_style::ProxyStyle, hint: ::style::StyleHint, option: *const ::style_option::StyleOption, widget: *const ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QProxyStyle_styleHint_hint_option_widget_returnData(this_ptr: *const ::proxy_style::ProxyStyle, hint: ::style::StyleHint, option: *const ::style_option::StyleOption, widget: *const ::widget::Widget, returnData: *mut ::style_hint_return::StyleHintReturn) -> ::libc::c_int;
  pub fn qt_widgets_c_QProxyStyle_subControlRect_to_output(this_ptr: *const ::proxy_style::ProxyStyle, cc: ::style::ComplexControl, opt: *const ::style_option_complex::StyleOptionComplex, sc: ::style::SubControl, widget: *const ::widget::Widget, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QProxyStyle_subElementRect_to_output(this_ptr: *const ::proxy_style::ProxyStyle, element: ::style::SubElement, option: *const ::style_option::StyleOption, widget: *const ::widget::Widget, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QProxyStyle_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QProxyStyle_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QProxyStyle_unpolish_app(this_ptr: *mut ::proxy_style::ProxyStyle, app: *mut ::application::Application);
  pub fn qt_widgets_c_QProxyStyle_unpolish_widget(this_ptr: *mut ::proxy_style::ProxyStyle, widget: *mut ::widget::Widget);

  // Header: QPushButton
  pub fn qt_widgets_c_QPushButton_G_dynamic_cast_QPushButton_ptr_QAbstractButton(ptr: *mut ::abstract_button::AbstractButton) -> *mut ::push_button::PushButton;
  pub fn qt_widgets_c_QPushButton_G_dynamic_cast_QPushButton_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::push_button::PushButton;
  pub fn qt_widgets_c_QPushButton_G_static_cast_QAbstractButton_ptr(ptr: *mut ::push_button::PushButton) -> *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QPushButton_G_static_cast_QObject_ptr(ptr: *mut ::push_button::PushButton) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QPushButton_G_static_cast_QPaintDevice_ptr(ptr: *mut ::push_button::PushButton) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QPushButton_G_static_cast_QPushButton_ptr_QAbstractButton(ptr: *mut ::abstract_button::AbstractButton) -> *mut ::push_button::PushButton;
  pub fn qt_widgets_c_QPushButton_G_static_cast_QPushButton_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::push_button::PushButton;
  pub fn qt_widgets_c_QPushButton_G_static_cast_QPushButton_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::push_button::PushButton;
  pub fn qt_widgets_c_QPushButton_G_static_cast_QPushButton_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::push_button::PushButton;
  pub fn qt_widgets_c_QPushButton_G_static_cast_QWidget_ptr(ptr: *mut ::push_button::PushButton) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QPushButton_autoDefault(this_ptr: *const ::push_button::PushButton) -> bool;
  pub fn qt_widgets_c_QPushButton_delete(this_ptr: *mut ::push_button::PushButton);
  pub fn qt_widgets_c_QPushButton_isDefault(this_ptr: *const ::push_button::PushButton) -> bool;
  pub fn qt_widgets_c_QPushButton_isFlat(this_ptr: *const ::push_button::PushButton) -> bool;
  pub fn qt_widgets_c_QPushButton_menu(this_ptr: *const ::push_button::PushButton) -> *mut ::menu::Menu;
  pub fn qt_widgets_c_QPushButton_metaObject(this_ptr: *const ::push_button::PushButton) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QPushButton_minimumSizeHint_to_output(this_ptr: *const ::push_button::PushButton, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QPushButton_new_icon_text(icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String) -> *mut ::push_button::PushButton;
  pub fn qt_widgets_c_QPushButton_new_icon_text_parent(icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String, parent: *mut ::widget::Widget) -> *mut ::push_button::PushButton;
  pub fn qt_widgets_c_QPushButton_new_no_args() -> *mut ::push_button::PushButton;
  pub fn qt_widgets_c_QPushButton_new_parent(parent: *mut ::widget::Widget) -> *mut ::push_button::PushButton;
  pub fn qt_widgets_c_QPushButton_new_text(text: *const ::qt_core::string::String) -> *mut ::push_button::PushButton;
  pub fn qt_widgets_c_QPushButton_new_text_parent(text: *const ::qt_core::string::String, parent: *mut ::widget::Widget) -> *mut ::push_button::PushButton;
  pub fn qt_widgets_c_QPushButton_qt_metacall(this_ptr: *mut ::push_button::PushButton, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QPushButton_qt_metacast(this_ptr: *mut ::push_button::PushButton, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QPushButton_setAutoDefault(this_ptr: *mut ::push_button::PushButton, arg1: bool);
  pub fn qt_widgets_c_QPushButton_setDefault(this_ptr: *mut ::push_button::PushButton, arg1: bool);
  pub fn qt_widgets_c_QPushButton_setFlat(this_ptr: *mut ::push_button::PushButton, arg1: bool);
  pub fn qt_widgets_c_QPushButton_setMenu(this_ptr: *mut ::push_button::PushButton, menu: *mut ::menu::Menu);
  pub fn qt_widgets_c_QPushButton_showMenu(this_ptr: *mut ::push_button::PushButton);
  pub fn qt_widgets_c_QPushButton_sizeHint_to_output(this_ptr: *const ::push_button::PushButton, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QPushButton_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QPushButton_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QRadioButton
  pub fn qt_widgets_c_QRadioButton_G_dynamic_cast_QRadioButton_ptr_QAbstractButton(ptr: *mut ::abstract_button::AbstractButton) -> *mut ::radio_button::RadioButton;
  pub fn qt_widgets_c_QRadioButton_G_dynamic_cast_QRadioButton_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::radio_button::RadioButton;
  pub fn qt_widgets_c_QRadioButton_G_static_cast_QAbstractButton_ptr(ptr: *mut ::radio_button::RadioButton) -> *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QRadioButton_G_static_cast_QObject_ptr(ptr: *mut ::radio_button::RadioButton) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QRadioButton_G_static_cast_QPaintDevice_ptr(ptr: *mut ::radio_button::RadioButton) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QRadioButton_G_static_cast_QRadioButton_ptr_QAbstractButton(ptr: *mut ::abstract_button::AbstractButton) -> *mut ::radio_button::RadioButton;
  pub fn qt_widgets_c_QRadioButton_G_static_cast_QRadioButton_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::radio_button::RadioButton;
  pub fn qt_widgets_c_QRadioButton_G_static_cast_QRadioButton_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::radio_button::RadioButton;
  pub fn qt_widgets_c_QRadioButton_G_static_cast_QRadioButton_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::radio_button::RadioButton;
  pub fn qt_widgets_c_QRadioButton_G_static_cast_QWidget_ptr(ptr: *mut ::radio_button::RadioButton) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QRadioButton_delete(this_ptr: *mut ::radio_button::RadioButton);
  pub fn qt_widgets_c_QRadioButton_metaObject(this_ptr: *const ::radio_button::RadioButton) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QRadioButton_minimumSizeHint_to_output(this_ptr: *const ::radio_button::RadioButton, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QRadioButton_new_no_args() -> *mut ::radio_button::RadioButton;
  pub fn qt_widgets_c_QRadioButton_new_parent(parent: *mut ::widget::Widget) -> *mut ::radio_button::RadioButton;
  pub fn qt_widgets_c_QRadioButton_new_text(text: *const ::qt_core::string::String) -> *mut ::radio_button::RadioButton;
  pub fn qt_widgets_c_QRadioButton_new_text_parent(text: *const ::qt_core::string::String, parent: *mut ::widget::Widget) -> *mut ::radio_button::RadioButton;
  pub fn qt_widgets_c_QRadioButton_qt_metacall(this_ptr: *mut ::radio_button::RadioButton, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QRadioButton_qt_metacast(this_ptr: *mut ::radio_button::RadioButton, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QRadioButton_sizeHint_to_output(this_ptr: *const ::radio_button::RadioButton, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QRadioButton_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QRadioButton_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QRubberBand
  pub fn qt_widgets_c_QRubberBand_G_dynamic_cast_QRubberBand_ptr(ptr: *mut ::widget::Widget) -> *mut ::rubber_band::RubberBand;
  pub fn qt_widgets_c_QRubberBand_G_static_cast_QObject_ptr(ptr: *mut ::rubber_band::RubberBand) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QRubberBand_G_static_cast_QPaintDevice_ptr(ptr: *mut ::rubber_band::RubberBand) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QRubberBand_G_static_cast_QRubberBand_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::rubber_band::RubberBand;
  pub fn qt_widgets_c_QRubberBand_G_static_cast_QRubberBand_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::rubber_band::RubberBand;
  pub fn qt_widgets_c_QRubberBand_G_static_cast_QRubberBand_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::rubber_band::RubberBand;
  pub fn qt_widgets_c_QRubberBand_G_static_cast_QWidget_ptr(ptr: *mut ::rubber_band::RubberBand) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QRubberBand_delete(this_ptr: *mut ::rubber_band::RubberBand);
  pub fn qt_widgets_c_QRubberBand_metaObject(this_ptr: *const ::rubber_band::RubberBand) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QRubberBand_move_p(this_ptr: *mut ::rubber_band::RubberBand, p: *const ::qt_core::point::Point);
  pub fn qt_widgets_c_QRubberBand_move_x_y(this_ptr: *mut ::rubber_band::RubberBand, x: ::libc::c_int, y: ::libc::c_int);
  pub fn qt_widgets_c_QRubberBand_new_arg1(arg1: ::rubber_band::Shape) -> *mut ::rubber_band::RubberBand;
  pub fn qt_widgets_c_QRubberBand_new_arg1_arg2(arg1: ::rubber_band::Shape, arg2: *mut ::widget::Widget) -> *mut ::rubber_band::RubberBand;
  pub fn qt_widgets_c_QRubberBand_qt_metacall(this_ptr: *mut ::rubber_band::RubberBand, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QRubberBand_qt_metacast(this_ptr: *mut ::rubber_band::RubberBand, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QRubberBand_resize_s(this_ptr: *mut ::rubber_band::RubberBand, s: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QRubberBand_resize_w_h(this_ptr: *mut ::rubber_band::RubberBand, w: ::libc::c_int, h: ::libc::c_int);
  pub fn qt_widgets_c_QRubberBand_setGeometry_r(this_ptr: *mut ::rubber_band::RubberBand, r: *const ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QRubberBand_setGeometry_x_y_w_h(this_ptr: *mut ::rubber_band::RubberBand, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int);
  pub fn qt_widgets_c_QRubberBand_shape(this_ptr: *const ::rubber_band::RubberBand) -> ::rubber_band::Shape;
  pub fn qt_widgets_c_QRubberBand_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QRubberBand_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QScrollArea
  pub fn qt_widgets_c_QScrollArea_G_dynamic_cast_QScrollArea_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::scroll_area::ScrollArea;
  pub fn qt_widgets_c_QScrollArea_G_dynamic_cast_QScrollArea_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::scroll_area::ScrollArea;
  pub fn qt_widgets_c_QScrollArea_G_dynamic_cast_QScrollArea_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::scroll_area::ScrollArea;
  pub fn qt_widgets_c_QScrollArea_G_static_cast_QAbstractScrollArea_ptr(ptr: *mut ::scroll_area::ScrollArea) -> *mut ::abstract_scroll_area::AbstractScrollArea;
  pub fn qt_widgets_c_QScrollArea_G_static_cast_QFrame_ptr(ptr: *mut ::scroll_area::ScrollArea) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QScrollArea_G_static_cast_QObject_ptr(ptr: *mut ::scroll_area::ScrollArea) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QScrollArea_G_static_cast_QPaintDevice_ptr(ptr: *mut ::scroll_area::ScrollArea) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QScrollArea_G_static_cast_QScrollArea_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::scroll_area::ScrollArea;
  pub fn qt_widgets_c_QScrollArea_G_static_cast_QScrollArea_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::scroll_area::ScrollArea;
  pub fn qt_widgets_c_QScrollArea_G_static_cast_QScrollArea_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::scroll_area::ScrollArea;
  pub fn qt_widgets_c_QScrollArea_G_static_cast_QScrollArea_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::scroll_area::ScrollArea;
  pub fn qt_widgets_c_QScrollArea_G_static_cast_QScrollArea_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::scroll_area::ScrollArea;
  pub fn qt_widgets_c_QScrollArea_G_static_cast_QWidget_ptr(ptr: *mut ::scroll_area::ScrollArea) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QScrollArea_delete(this_ptr: *mut ::scroll_area::ScrollArea);
  pub fn qt_widgets_c_QScrollArea_ensureVisible_x_y(this_ptr: *mut ::scroll_area::ScrollArea, x: ::libc::c_int, y: ::libc::c_int);
  pub fn qt_widgets_c_QScrollArea_ensureVisible_x_y_xmargin(this_ptr: *mut ::scroll_area::ScrollArea, x: ::libc::c_int, y: ::libc::c_int, xmargin: ::libc::c_int);
  pub fn qt_widgets_c_QScrollArea_ensureVisible_x_y_xmargin_ymargin(this_ptr: *mut ::scroll_area::ScrollArea, x: ::libc::c_int, y: ::libc::c_int, xmargin: ::libc::c_int, ymargin: ::libc::c_int);
  pub fn qt_widgets_c_QScrollArea_ensureWidgetVisible_childWidget(this_ptr: *mut ::scroll_area::ScrollArea, childWidget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QScrollArea_ensureWidgetVisible_childWidget_xmargin(this_ptr: *mut ::scroll_area::ScrollArea, childWidget: *mut ::widget::Widget, xmargin: ::libc::c_int);
  pub fn qt_widgets_c_QScrollArea_ensureWidgetVisible_childWidget_xmargin_ymargin(this_ptr: *mut ::scroll_area::ScrollArea, childWidget: *mut ::widget::Widget, xmargin: ::libc::c_int, ymargin: ::libc::c_int);
  pub fn qt_widgets_c_QScrollArea_focusNextPrevChild(this_ptr: *mut ::scroll_area::ScrollArea, next: bool) -> bool;
  pub fn qt_widgets_c_QScrollArea_metaObject(this_ptr: *const ::scroll_area::ScrollArea) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QScrollArea_new_no_args() -> *mut ::scroll_area::ScrollArea;
  pub fn qt_widgets_c_QScrollArea_new_parent(parent: *mut ::widget::Widget) -> *mut ::scroll_area::ScrollArea;
  pub fn qt_widgets_c_QScrollArea_qt_metacall(this_ptr: *mut ::scroll_area::ScrollArea, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QScrollArea_qt_metacast(this_ptr: *mut ::scroll_area::ScrollArea, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QScrollArea_setWidget(this_ptr: *mut ::scroll_area::ScrollArea, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QScrollArea_setWidgetResizable(this_ptr: *mut ::scroll_area::ScrollArea, resizable: bool);
  pub fn qt_widgets_c_QScrollArea_sizeHint_to_output(this_ptr: *const ::scroll_area::ScrollArea, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QScrollArea_takeWidget(this_ptr: *mut ::scroll_area::ScrollArea) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QScrollArea_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QScrollArea_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QScrollArea_widget(this_ptr: *const ::scroll_area::ScrollArea) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QScrollArea_widgetResizable(this_ptr: *const ::scroll_area::ScrollArea) -> bool;

  // Header: QScrollBar
  pub fn qt_widgets_c_QScrollBar_G_dynamic_cast_QScrollBar_ptr_QAbstractSlider(ptr: *mut ::abstract_slider::AbstractSlider) -> *mut ::scroll_bar::ScrollBar;
  pub fn qt_widgets_c_QScrollBar_G_dynamic_cast_QScrollBar_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::scroll_bar::ScrollBar;
  pub fn qt_widgets_c_QScrollBar_G_static_cast_QAbstractSlider_ptr(ptr: *mut ::scroll_bar::ScrollBar) -> *mut ::abstract_slider::AbstractSlider;
  pub fn qt_widgets_c_QScrollBar_G_static_cast_QObject_ptr(ptr: *mut ::scroll_bar::ScrollBar) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QScrollBar_G_static_cast_QPaintDevice_ptr(ptr: *mut ::scroll_bar::ScrollBar) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QScrollBar_G_static_cast_QScrollBar_ptr_QAbstractSlider(ptr: *mut ::abstract_slider::AbstractSlider) -> *mut ::scroll_bar::ScrollBar;
  pub fn qt_widgets_c_QScrollBar_G_static_cast_QScrollBar_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::scroll_bar::ScrollBar;
  pub fn qt_widgets_c_QScrollBar_G_static_cast_QScrollBar_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::scroll_bar::ScrollBar;
  pub fn qt_widgets_c_QScrollBar_G_static_cast_QScrollBar_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::scroll_bar::ScrollBar;
  pub fn qt_widgets_c_QScrollBar_G_static_cast_QWidget_ptr(ptr: *mut ::scroll_bar::ScrollBar) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QScrollBar_delete(this_ptr: *mut ::scroll_bar::ScrollBar);
  pub fn qt_widgets_c_QScrollBar_event(this_ptr: *mut ::scroll_bar::ScrollBar, event: *mut ::qt_core::event::Event) -> bool;
  pub fn qt_widgets_c_QScrollBar_metaObject(this_ptr: *const ::scroll_bar::ScrollBar) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QScrollBar_new_arg1(arg1: *const ::qt_core::qt::Orientation) -> *mut ::scroll_bar::ScrollBar;
  pub fn qt_widgets_c_QScrollBar_new_arg1_parent(arg1: *const ::qt_core::qt::Orientation, parent: *mut ::widget::Widget) -> *mut ::scroll_bar::ScrollBar;
  pub fn qt_widgets_c_QScrollBar_new_no_args() -> *mut ::scroll_bar::ScrollBar;
  pub fn qt_widgets_c_QScrollBar_new_parent(parent: *mut ::widget::Widget) -> *mut ::scroll_bar::ScrollBar;
  pub fn qt_widgets_c_QScrollBar_qt_metacall(this_ptr: *mut ::scroll_bar::ScrollBar, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QScrollBar_qt_metacast(this_ptr: *mut ::scroll_bar::ScrollBar, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QScrollBar_sizeHint_to_output(this_ptr: *const ::scroll_bar::ScrollBar, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QScrollBar_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QScrollBar_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QScroller
  pub fn qt_widgets_c_QScroller_G_static_cast_QObject_ptr(ptr: *mut ::scroller::Scroller) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QScroller_G_static_cast_QScroller_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::scroller::Scroller;
  pub fn qt_widgets_c_QScroller_activeScrollers_to_output(output: *mut ::list::ListScrollerMutPtr);
  pub fn qt_widgets_c_QScroller_ensureVisible_rect_xmargin_ymargin(this_ptr: *mut ::scroller::Scroller, rect: *const ::qt_core::rect_f::RectF, xmargin: ::libc::c_double, ymargin: ::libc::c_double);
  pub fn qt_widgets_c_QScroller_ensureVisible_rect_xmargin_ymargin_scrollTime(this_ptr: *mut ::scroller::Scroller, rect: *const ::qt_core::rect_f::RectF, xmargin: ::libc::c_double, ymargin: ::libc::c_double, scrollTime: ::libc::c_int);
  pub fn qt_widgets_c_QScroller_finalPosition_to_output(this_ptr: *const ::scroller::Scroller, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QScroller_handleInput_input_position(this_ptr: *mut ::scroller::Scroller, input: ::scroller::Input, position: *const ::qt_core::point_f::PointF) -> bool;
  pub fn qt_widgets_c_QScroller_handleInput_input_position_timestamp(this_ptr: *mut ::scroller::Scroller, input: ::scroller::Input, position: *const ::qt_core::point_f::PointF, timestamp: i64) -> bool;
  pub fn qt_widgets_c_QScroller_hasScroller(target: *mut ::qt_core::object::Object) -> bool;
  pub fn qt_widgets_c_QScroller_metaObject(this_ptr: *const ::scroller::Scroller) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QScroller_pixelPerMeter_to_output(this_ptr: *const ::scroller::Scroller, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QScroller_qt_metacall(this_ptr: *mut ::scroller::Scroller, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QScroller_qt_metacast(this_ptr: *mut ::scroller::Scroller, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QScroller_resendPrepareEvent(this_ptr: *mut ::scroller::Scroller);
  pub fn qt_widgets_c_QScroller_scrollTo_pos(this_ptr: *mut ::scroller::Scroller, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QScroller_scrollTo_pos_scrollTime(this_ptr: *mut ::scroller::Scroller, pos: *const ::qt_core::point_f::PointF, scrollTime: ::libc::c_int);
  pub fn qt_widgets_c_QScroller_scrollerProperties_as_ptr(this_ptr: *const ::scroller::Scroller) -> *mut ::scroller_properties::ScrollerProperties;
  pub fn qt_widgets_c_QScroller_scroller_QObject_ptr(target: *mut ::qt_core::object::Object) -> *mut ::scroller::Scroller;
  pub fn qt_widgets_c_QScroller_scroller_const_QObject_ptr(target: *const ::qt_core::object::Object) -> *const ::scroller::Scroller;
  pub fn qt_widgets_c_QScroller_setScrollerProperties(this_ptr: *mut ::scroller::Scroller, prop: *const ::scroller_properties::ScrollerProperties);
  pub fn qt_widgets_c_QScroller_setSnapPositionsX_first_interval(this_ptr: *mut ::scroller::Scroller, first: ::libc::c_double, interval: ::libc::c_double);
  pub fn qt_widgets_c_QScroller_setSnapPositionsX_positions(this_ptr: *mut ::scroller::Scroller, positions: *const ::qt_gui::list::ListCDouble);
  pub fn qt_widgets_c_QScroller_setSnapPositionsY_first_interval(this_ptr: *mut ::scroller::Scroller, first: ::libc::c_double, interval: ::libc::c_double);
  pub fn qt_widgets_c_QScroller_setSnapPositionsY_positions(this_ptr: *mut ::scroller::Scroller, positions: *const ::qt_gui::list::ListCDouble);
  pub fn qt_widgets_c_QScroller_state(this_ptr: *const ::scroller::Scroller) -> ::scroller::State;
  pub fn qt_widgets_c_QScroller_stop(this_ptr: *mut ::scroller::Scroller);
  pub fn qt_widgets_c_QScroller_target(this_ptr: *const ::scroller::Scroller) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QScroller_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QScroller_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QScroller_ungrabGesture(target: *mut ::qt_core::object::Object);
  pub fn qt_widgets_c_QScroller_velocity_to_output(this_ptr: *const ::scroller::Scroller, output: *mut ::qt_core::point_f::PointF);

  // Header: QScrollerProperties
  pub fn qt_widgets_c_QScrollerProperties_delete(this_ptr: *mut ::scroller_properties::ScrollerProperties);
  pub fn qt_widgets_c_QScrollerProperties_new_no_args() -> *mut ::scroller_properties::ScrollerProperties;
  pub fn qt_widgets_c_QScrollerProperties_new_sp(sp: *const ::scroller_properties::ScrollerProperties) -> *mut ::scroller_properties::ScrollerProperties;
  pub fn qt_widgets_c_QScrollerProperties_operator_assign(this_ptr: *mut ::scroller_properties::ScrollerProperties, sp: *const ::scroller_properties::ScrollerProperties) -> *mut ::scroller_properties::ScrollerProperties;
  pub fn qt_widgets_c_QScrollerProperties_operator_eq(this_ptr: *const ::scroller_properties::ScrollerProperties, sp: *const ::scroller_properties::ScrollerProperties) -> bool;
  pub fn qt_widgets_c_QScrollerProperties_operator_neq(this_ptr: *const ::scroller_properties::ScrollerProperties, sp: *const ::scroller_properties::ScrollerProperties) -> bool;
  pub fn qt_widgets_c_QScrollerProperties_scrollMetric_to_output(this_ptr: *const ::scroller_properties::ScrollerProperties, metric: ::scroller_properties::ScrollMetric, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QScrollerProperties_setDefaultScrollerProperties(sp: *const ::scroller_properties::ScrollerProperties);
  pub fn qt_widgets_c_QScrollerProperties_setScrollMetric(this_ptr: *mut ::scroller_properties::ScrollerProperties, metric: ::scroller_properties::ScrollMetric, value: *const ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QScrollerProperties_unsetDefaultScrollerProperties();

  // Header: QShortcut
  pub fn qt_widgets_c_QShortcut_G_static_cast_QObject_ptr(ptr: *mut ::shortcut::Shortcut) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QShortcut_G_static_cast_QShortcut_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::shortcut::Shortcut;
  pub fn qt_widgets_c_QShortcut_autoRepeat(this_ptr: *const ::shortcut::Shortcut) -> bool;
  pub fn qt_widgets_c_QShortcut_delete(this_ptr: *mut ::shortcut::Shortcut);
  pub fn qt_widgets_c_QShortcut_id(this_ptr: *const ::shortcut::Shortcut) -> ::libc::c_int;
  pub fn qt_widgets_c_QShortcut_isEnabled(this_ptr: *const ::shortcut::Shortcut) -> bool;
  pub fn qt_widgets_c_QShortcut_key_to_output(this_ptr: *const ::shortcut::Shortcut, output: *mut ::qt_gui::key_sequence::KeySequence);
  pub fn qt_widgets_c_QShortcut_metaObject(this_ptr: *const ::shortcut::Shortcut) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QShortcut_new_key_parent(key: *const ::qt_gui::key_sequence::KeySequence, parent: *mut ::widget::Widget) -> *mut ::shortcut::Shortcut;
  pub fn qt_widgets_c_QShortcut_new_key_parent_member(key: *const ::qt_gui::key_sequence::KeySequence, parent: *mut ::widget::Widget, member: *const ::libc::c_char) -> *mut ::shortcut::Shortcut;
  pub fn qt_widgets_c_QShortcut_new_key_parent_member_ambiguousMember(key: *const ::qt_gui::key_sequence::KeySequence, parent: *mut ::widget::Widget, member: *const ::libc::c_char, ambiguousMember: *const ::libc::c_char) -> *mut ::shortcut::Shortcut;
  pub fn qt_widgets_c_QShortcut_new_key_parent_member_ambiguousMember_context(key: *const ::qt_gui::key_sequence::KeySequence, parent: *mut ::widget::Widget, member: *const ::libc::c_char, ambiguousMember: *const ::libc::c_char, context: *const ::qt_core::qt::ShortcutContext) -> *mut ::shortcut::Shortcut;
  pub fn qt_widgets_c_QShortcut_new_parent(parent: *mut ::widget::Widget) -> *mut ::shortcut::Shortcut;
  pub fn qt_widgets_c_QShortcut_parentWidget(this_ptr: *const ::shortcut::Shortcut) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QShortcut_qt_metacall(this_ptr: *mut ::shortcut::Shortcut, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QShortcut_qt_metacast(this_ptr: *mut ::shortcut::Shortcut, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QShortcut_setAutoRepeat(this_ptr: *mut ::shortcut::Shortcut, on: bool);
  pub fn qt_widgets_c_QShortcut_setContext(this_ptr: *mut ::shortcut::Shortcut, context: *const ::qt_core::qt::ShortcutContext);
  pub fn qt_widgets_c_QShortcut_setEnabled(this_ptr: *mut ::shortcut::Shortcut, enable: bool);
  pub fn qt_widgets_c_QShortcut_setKey(this_ptr: *mut ::shortcut::Shortcut, key: *const ::qt_gui::key_sequence::KeySequence);
  pub fn qt_widgets_c_QShortcut_setWhatsThis(this_ptr: *mut ::shortcut::Shortcut, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QShortcut_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QShortcut_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QShortcut_whatsThis_to_output(this_ptr: *const ::shortcut::Shortcut, output: *mut ::qt_core::string::String);

  // Header: QSizeGrip
  pub fn qt_widgets_c_QSizeGrip_G_dynamic_cast_QSizeGrip_ptr(ptr: *mut ::widget::Widget) -> *mut ::size_grip::SizeGrip;
  pub fn qt_widgets_c_QSizeGrip_G_static_cast_QObject_ptr(ptr: *mut ::size_grip::SizeGrip) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QSizeGrip_G_static_cast_QPaintDevice_ptr(ptr: *mut ::size_grip::SizeGrip) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QSizeGrip_G_static_cast_QSizeGrip_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::size_grip::SizeGrip;
  pub fn qt_widgets_c_QSizeGrip_G_static_cast_QSizeGrip_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::size_grip::SizeGrip;
  pub fn qt_widgets_c_QSizeGrip_G_static_cast_QSizeGrip_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::size_grip::SizeGrip;
  pub fn qt_widgets_c_QSizeGrip_G_static_cast_QWidget_ptr(ptr: *mut ::size_grip::SizeGrip) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QSizeGrip_delete(this_ptr: *mut ::size_grip::SizeGrip);
  pub fn qt_widgets_c_QSizeGrip_metaObject(this_ptr: *const ::size_grip::SizeGrip) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QSizeGrip_new(parent: *mut ::widget::Widget) -> *mut ::size_grip::SizeGrip;
  pub fn qt_widgets_c_QSizeGrip_qt_metacall(this_ptr: *mut ::size_grip::SizeGrip, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QSizeGrip_qt_metacast(this_ptr: *mut ::size_grip::SizeGrip, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QSizeGrip_setVisible(this_ptr: *mut ::size_grip::SizeGrip, arg1: bool);
  pub fn qt_widgets_c_QSizeGrip_sizeHint_to_output(this_ptr: *const ::size_grip::SizeGrip, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QSizeGrip_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QSizeGrip_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QSizePolicy
  pub fn qt_widgets_c_QSizePolicy_G_operator_shl_to_output(dbg: *const ::qt_core::debug::Debug, arg2: *const ::size_policy::SizePolicy, output: *mut ::qt_core::debug::Debug);
  pub fn qt_widgets_c_QSizePolicy_G_qHash_key(key: *const ::size_policy::SizePolicy) -> ::libc::c_uint;
  pub fn qt_widgets_c_QSizePolicy_G_qHash_key_seed(key: *const ::size_policy::SizePolicy, seed: ::libc::c_uint) -> ::libc::c_uint;
  pub fn qt_widgets_c_QSizePolicy_constructor_horizontal_vertical(horizontal: ::size_policy::Policy, vertical: ::size_policy::Policy, output: *mut ::size_policy::SizePolicy);
  pub fn qt_widgets_c_QSizePolicy_constructor_horizontal_vertical_type(horizontal: ::size_policy::Policy, vertical: ::size_policy::Policy, type_: ::size_policy::ControlType, output: *mut ::size_policy::SizePolicy);
  pub fn qt_widgets_c_QSizePolicy_constructor_no_args(output: *mut ::size_policy::SizePolicy);
  pub fn qt_widgets_c_QSizePolicy_controlType(this_ptr: *const ::size_policy::SizePolicy) -> ::size_policy::ControlType;
  pub fn qt_widgets_c_QSizePolicy_convert_to_QVariant_to_output(this_ptr: *const ::size_policy::SizePolicy, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QSizePolicy_destructor(this_ptr: *mut ::size_policy::SizePolicy);
  pub fn qt_widgets_c_QSizePolicy_hasHeightForWidth(this_ptr: *const ::size_policy::SizePolicy) -> bool;
  pub fn qt_widgets_c_QSizePolicy_hasWidthForHeight(this_ptr: *const ::size_policy::SizePolicy) -> bool;
  pub fn qt_widgets_c_QSizePolicy_horizontalPolicy(this_ptr: *const ::size_policy::SizePolicy) -> ::size_policy::Policy;
  pub fn qt_widgets_c_QSizePolicy_horizontalStretch(this_ptr: *const ::size_policy::SizePolicy) -> ::libc::c_int;
  pub fn qt_widgets_c_QSizePolicy_operator_eq(this_ptr: *const ::size_policy::SizePolicy, s: *const ::size_policy::SizePolicy) -> bool;
  pub fn qt_widgets_c_QSizePolicy_operator_neq(this_ptr: *const ::size_policy::SizePolicy, s: *const ::size_policy::SizePolicy) -> bool;
  pub fn qt_widgets_c_QSizePolicy_retainSizeWhenHidden(this_ptr: *const ::size_policy::SizePolicy) -> bool;
  pub fn qt_widgets_c_QSizePolicy_setControlType(this_ptr: *mut ::size_policy::SizePolicy, type_: ::size_policy::ControlType);
  pub fn qt_widgets_c_QSizePolicy_setHeightForWidth(this_ptr: *mut ::size_policy::SizePolicy, b: bool);
  pub fn qt_widgets_c_QSizePolicy_setHorizontalPolicy(this_ptr: *mut ::size_policy::SizePolicy, d: ::size_policy::Policy);
  pub fn qt_widgets_c_QSizePolicy_setHorizontalStretch(this_ptr: *mut ::size_policy::SizePolicy, stretchFactor: ::libc::c_int);
  pub fn qt_widgets_c_QSizePolicy_setRetainSizeWhenHidden(this_ptr: *mut ::size_policy::SizePolicy, retainSize: bool);
  pub fn qt_widgets_c_QSizePolicy_setVerticalPolicy(this_ptr: *mut ::size_policy::SizePolicy, d: ::size_policy::Policy);
  pub fn qt_widgets_c_QSizePolicy_setVerticalStretch(this_ptr: *mut ::size_policy::SizePolicy, stretchFactor: ::libc::c_int);
  pub fn qt_widgets_c_QSizePolicy_setWidthForHeight(this_ptr: *mut ::size_policy::SizePolicy, b: bool);
  pub fn qt_widgets_c_QSizePolicy_transpose(this_ptr: *mut ::size_policy::SizePolicy);
  pub fn qt_widgets_c_QSizePolicy_transposed_to_output(this_ptr: *const ::size_policy::SizePolicy, output: *mut ::size_policy::SizePolicy);
  pub fn qt_widgets_c_QSizePolicy_verticalPolicy(this_ptr: *const ::size_policy::SizePolicy) -> ::size_policy::Policy;
  pub fn qt_widgets_c_QSizePolicy_verticalStretch(this_ptr: *const ::size_policy::SizePolicy) -> ::libc::c_int;

  // Header: QSlider
  pub fn qt_widgets_c_QSlider_G_dynamic_cast_QSlider_ptr_QAbstractSlider(ptr: *mut ::abstract_slider::AbstractSlider) -> *mut ::slider::Slider;
  pub fn qt_widgets_c_QSlider_G_dynamic_cast_QSlider_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::slider::Slider;
  pub fn qt_widgets_c_QSlider_G_static_cast_QAbstractSlider_ptr(ptr: *mut ::slider::Slider) -> *mut ::abstract_slider::AbstractSlider;
  pub fn qt_widgets_c_QSlider_G_static_cast_QObject_ptr(ptr: *mut ::slider::Slider) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QSlider_G_static_cast_QPaintDevice_ptr(ptr: *mut ::slider::Slider) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QSlider_G_static_cast_QSlider_ptr_QAbstractSlider(ptr: *mut ::abstract_slider::AbstractSlider) -> *mut ::slider::Slider;
  pub fn qt_widgets_c_QSlider_G_static_cast_QSlider_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::slider::Slider;
  pub fn qt_widgets_c_QSlider_G_static_cast_QSlider_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::slider::Slider;
  pub fn qt_widgets_c_QSlider_G_static_cast_QSlider_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::slider::Slider;
  pub fn qt_widgets_c_QSlider_G_static_cast_QWidget_ptr(ptr: *mut ::slider::Slider) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QSlider_delete(this_ptr: *mut ::slider::Slider);
  pub fn qt_widgets_c_QSlider_event(this_ptr: *mut ::slider::Slider, event: *mut ::qt_core::event::Event) -> bool;
  pub fn qt_widgets_c_QSlider_metaObject(this_ptr: *const ::slider::Slider) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QSlider_minimumSizeHint_to_output(this_ptr: *const ::slider::Slider, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QSlider_new_no_args() -> *mut ::slider::Slider;
  pub fn qt_widgets_c_QSlider_new_orientation(orientation: *const ::qt_core::qt::Orientation) -> *mut ::slider::Slider;
  pub fn qt_widgets_c_QSlider_new_orientation_parent(orientation: *const ::qt_core::qt::Orientation, parent: *mut ::widget::Widget) -> *mut ::slider::Slider;
  pub fn qt_widgets_c_QSlider_new_parent(parent: *mut ::widget::Widget) -> *mut ::slider::Slider;
  pub fn qt_widgets_c_QSlider_qt_metacall(this_ptr: *mut ::slider::Slider, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QSlider_qt_metacast(this_ptr: *mut ::slider::Slider, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QSlider_setTickInterval(this_ptr: *mut ::slider::Slider, ti: ::libc::c_int);
  pub fn qt_widgets_c_QSlider_setTickPosition(this_ptr: *mut ::slider::Slider, position: ::slider::TickPosition);
  pub fn qt_widgets_c_QSlider_sizeHint_to_output(this_ptr: *const ::slider::Slider, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QSlider_tickInterval(this_ptr: *const ::slider::Slider) -> ::libc::c_int;
  pub fn qt_widgets_c_QSlider_tickPosition(this_ptr: *const ::slider::Slider) -> ::slider::TickPosition;
  pub fn qt_widgets_c_QSlider_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QSlider_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QSpacerItem
  pub fn qt_widgets_c_QSpacerItem_G_dynamic_cast_QSpacerItem_ptr(ptr: *mut ::layout_item::LayoutItem) -> *mut ::spacer_item::SpacerItem;
  pub fn qt_widgets_c_QSpacerItem_G_static_cast_QLayoutItem_ptr(ptr: *mut ::spacer_item::SpacerItem) -> *mut ::layout_item::LayoutItem;
  pub fn qt_widgets_c_QSpacerItem_G_static_cast_QSpacerItem_ptr(ptr: *mut ::layout_item::LayoutItem) -> *mut ::spacer_item::SpacerItem;
  pub fn qt_widgets_c_QSpacerItem_changeSize_w_h(this_ptr: *mut ::spacer_item::SpacerItem, w: ::libc::c_int, h: ::libc::c_int);
  pub fn qt_widgets_c_QSpacerItem_changeSize_w_h_hData(this_ptr: *mut ::spacer_item::SpacerItem, w: ::libc::c_int, h: ::libc::c_int, hData: *const ::size_policy::Policy);
  pub fn qt_widgets_c_QSpacerItem_changeSize_w_h_hData_vData(this_ptr: *mut ::spacer_item::SpacerItem, w: ::libc::c_int, h: ::libc::c_int, hData: *const ::size_policy::Policy, vData: *const ::size_policy::Policy);
  pub fn qt_widgets_c_QSpacerItem_delete(this_ptr: *mut ::spacer_item::SpacerItem);
  pub fn qt_widgets_c_QSpacerItem_geometry_to_output(this_ptr: *const ::spacer_item::SpacerItem, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QSpacerItem_isEmpty(this_ptr: *const ::spacer_item::SpacerItem) -> bool;
  pub fn qt_widgets_c_QSpacerItem_maximumSize_to_output(this_ptr: *const ::spacer_item::SpacerItem, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QSpacerItem_minimumSize_to_output(this_ptr: *const ::spacer_item::SpacerItem, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QSpacerItem_new_w_h(w: ::libc::c_int, h: ::libc::c_int) -> *mut ::spacer_item::SpacerItem;
  pub fn qt_widgets_c_QSpacerItem_new_w_h_hData(w: ::libc::c_int, h: ::libc::c_int, hData: *const ::size_policy::Policy) -> *mut ::spacer_item::SpacerItem;
  pub fn qt_widgets_c_QSpacerItem_new_w_h_hData_vData(w: ::libc::c_int, h: ::libc::c_int, hData: *const ::size_policy::Policy, vData: *const ::size_policy::Policy) -> *mut ::spacer_item::SpacerItem;
  pub fn qt_widgets_c_QSpacerItem_setGeometry(this_ptr: *mut ::spacer_item::SpacerItem, arg1: *const ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QSpacerItem_sizeHint_to_output(this_ptr: *const ::spacer_item::SpacerItem, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QSpacerItem_sizePolicy_to_output(this_ptr: *const ::spacer_item::SpacerItem, output: *mut ::size_policy::SizePolicy);
  pub fn qt_widgets_c_QSpacerItem_spacerItem(this_ptr: *mut ::spacer_item::SpacerItem) -> *mut ::spacer_item::SpacerItem;

  // Header: QSpinBox
  pub fn qt_widgets_c_QSpinBox_G_dynamic_cast_QSpinBox_ptr_QAbstractSpinBox(ptr: *mut ::abstract_spin_box::AbstractSpinBox) -> *mut ::spin_box::SpinBox;
  pub fn qt_widgets_c_QSpinBox_G_dynamic_cast_QSpinBox_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::spin_box::SpinBox;
  pub fn qt_widgets_c_QSpinBox_G_static_cast_QAbstractSpinBox_ptr(ptr: *mut ::spin_box::SpinBox) -> *mut ::abstract_spin_box::AbstractSpinBox;
  pub fn qt_widgets_c_QSpinBox_G_static_cast_QObject_ptr(ptr: *mut ::spin_box::SpinBox) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QSpinBox_G_static_cast_QPaintDevice_ptr(ptr: *mut ::spin_box::SpinBox) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QSpinBox_G_static_cast_QSpinBox_ptr_QAbstractSpinBox(ptr: *mut ::abstract_spin_box::AbstractSpinBox) -> *mut ::spin_box::SpinBox;
  pub fn qt_widgets_c_QSpinBox_G_static_cast_QSpinBox_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::spin_box::SpinBox;
  pub fn qt_widgets_c_QSpinBox_G_static_cast_QSpinBox_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::spin_box::SpinBox;
  pub fn qt_widgets_c_QSpinBox_G_static_cast_QSpinBox_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::spin_box::SpinBox;
  pub fn qt_widgets_c_QSpinBox_G_static_cast_QWidget_ptr(ptr: *mut ::spin_box::SpinBox) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QSpinBox_cleanText_to_output(this_ptr: *const ::spin_box::SpinBox, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QSpinBox_delete(this_ptr: *mut ::spin_box::SpinBox);
  pub fn qt_widgets_c_QSpinBox_displayIntegerBase(this_ptr: *const ::spin_box::SpinBox) -> ::libc::c_int;
  pub fn qt_widgets_c_QSpinBox_maximum(this_ptr: *const ::spin_box::SpinBox) -> ::libc::c_int;
  pub fn qt_widgets_c_QSpinBox_metaObject(this_ptr: *const ::spin_box::SpinBox) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QSpinBox_minimum(this_ptr: *const ::spin_box::SpinBox) -> ::libc::c_int;
  pub fn qt_widgets_c_QSpinBox_new_no_args() -> *mut ::spin_box::SpinBox;
  pub fn qt_widgets_c_QSpinBox_new_parent(parent: *mut ::widget::Widget) -> *mut ::spin_box::SpinBox;
  pub fn qt_widgets_c_QSpinBox_prefix_to_output(this_ptr: *const ::spin_box::SpinBox, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QSpinBox_qt_metacall(this_ptr: *mut ::spin_box::SpinBox, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QSpinBox_qt_metacast(this_ptr: *mut ::spin_box::SpinBox, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QSpinBox_setDisplayIntegerBase(this_ptr: *mut ::spin_box::SpinBox, base: ::libc::c_int);
  pub fn qt_widgets_c_QSpinBox_setMaximum(this_ptr: *mut ::spin_box::SpinBox, max: ::libc::c_int);
  pub fn qt_widgets_c_QSpinBox_setMinimum(this_ptr: *mut ::spin_box::SpinBox, min: ::libc::c_int);
  pub fn qt_widgets_c_QSpinBox_setPrefix(this_ptr: *mut ::spin_box::SpinBox, prefix: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QSpinBox_setRange(this_ptr: *mut ::spin_box::SpinBox, min: ::libc::c_int, max: ::libc::c_int);
  pub fn qt_widgets_c_QSpinBox_setSingleStep(this_ptr: *mut ::spin_box::SpinBox, val: ::libc::c_int);
  pub fn qt_widgets_c_QSpinBox_setSuffix(this_ptr: *mut ::spin_box::SpinBox, suffix: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QSpinBox_setValue(this_ptr: *mut ::spin_box::SpinBox, val: ::libc::c_int);
  pub fn qt_widgets_c_QSpinBox_singleStep(this_ptr: *const ::spin_box::SpinBox) -> ::libc::c_int;
  pub fn qt_widgets_c_QSpinBox_suffix_to_output(this_ptr: *const ::spin_box::SpinBox, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QSpinBox_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QSpinBox_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QSpinBox_value(this_ptr: *const ::spin_box::SpinBox) -> ::libc::c_int;

  // Header: QSplashScreen
  pub fn qt_widgets_c_QSplashScreen_G_dynamic_cast_QSplashScreen_ptr(ptr: *mut ::widget::Widget) -> *mut ::splash_screen::SplashScreen;
  pub fn qt_widgets_c_QSplashScreen_G_static_cast_QObject_ptr(ptr: *mut ::splash_screen::SplashScreen) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QSplashScreen_G_static_cast_QPaintDevice_ptr(ptr: *mut ::splash_screen::SplashScreen) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QSplashScreen_G_static_cast_QSplashScreen_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::splash_screen::SplashScreen;
  pub fn qt_widgets_c_QSplashScreen_G_static_cast_QSplashScreen_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::splash_screen::SplashScreen;
  pub fn qt_widgets_c_QSplashScreen_G_static_cast_QSplashScreen_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::splash_screen::SplashScreen;
  pub fn qt_widgets_c_QSplashScreen_G_static_cast_QWidget_ptr(ptr: *mut ::splash_screen::SplashScreen) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QSplashScreen_clearMessage(this_ptr: *mut ::splash_screen::SplashScreen);
  pub fn qt_widgets_c_QSplashScreen_delete(this_ptr: *mut ::splash_screen::SplashScreen);
  pub fn qt_widgets_c_QSplashScreen_finish(this_ptr: *mut ::splash_screen::SplashScreen, w: *mut ::widget::Widget);
  pub fn qt_widgets_c_QSplashScreen_message_to_output(this_ptr: *const ::splash_screen::SplashScreen, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QSplashScreen_metaObject(this_ptr: *const ::splash_screen::SplashScreen) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QSplashScreen_pixmap_as_ptr(this_ptr: *const ::splash_screen::SplashScreen) -> *mut ::qt_gui::pixmap::Pixmap;
  pub fn qt_widgets_c_QSplashScreen_qt_metacall(this_ptr: *mut ::splash_screen::SplashScreen, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QSplashScreen_qt_metacast(this_ptr: *mut ::splash_screen::SplashScreen, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QSplashScreen_repaint(this_ptr: *mut ::splash_screen::SplashScreen);
  pub fn qt_widgets_c_QSplashScreen_setPixmap(this_ptr: *mut ::splash_screen::SplashScreen, pixmap: *const ::qt_gui::pixmap::Pixmap);
  pub fn qt_widgets_c_QSplashScreen_showMessage_message(this_ptr: *mut ::splash_screen::SplashScreen, message: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QSplashScreen_showMessage_message_alignment(this_ptr: *mut ::splash_screen::SplashScreen, message: *const ::qt_core::string::String, alignment: ::libc::c_int);
  pub fn qt_widgets_c_QSplashScreen_showMessage_message_alignment_color(this_ptr: *mut ::splash_screen::SplashScreen, message: *const ::qt_core::string::String, alignment: ::libc::c_int, color: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QSplashScreen_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QSplashScreen_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QSplitter
  pub fn qt_widgets_c_QSplitter_G_dynamic_cast_QSplitter_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::splitter::Splitter;
  pub fn qt_widgets_c_QSplitter_G_dynamic_cast_QSplitter_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::splitter::Splitter;
  pub fn qt_widgets_c_QSplitter_G_operator_shl(arg1: *mut ::qt_core::text_stream::TextStream, arg2: *const ::splitter::Splitter) -> *mut ::qt_core::text_stream::TextStream;
  pub fn qt_widgets_c_QSplitter_G_operator_shr(arg1: *mut ::qt_core::text_stream::TextStream, arg2: *mut ::splitter::Splitter) -> *mut ::qt_core::text_stream::TextStream;
  pub fn qt_widgets_c_QSplitter_G_static_cast_QFrame_ptr(ptr: *mut ::splitter::Splitter) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QSplitter_G_static_cast_QObject_ptr(ptr: *mut ::splitter::Splitter) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QSplitter_G_static_cast_QPaintDevice_ptr(ptr: *mut ::splitter::Splitter) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QSplitter_G_static_cast_QSplitter_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::splitter::Splitter;
  pub fn qt_widgets_c_QSplitter_G_static_cast_QSplitter_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::splitter::Splitter;
  pub fn qt_widgets_c_QSplitter_G_static_cast_QSplitter_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::splitter::Splitter;
  pub fn qt_widgets_c_QSplitter_G_static_cast_QSplitter_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::splitter::Splitter;
  pub fn qt_widgets_c_QSplitter_G_static_cast_QWidget_ptr(ptr: *mut ::splitter::Splitter) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QSplitter_addWidget(this_ptr: *mut ::splitter::Splitter, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QSplitter_childrenCollapsible(this_ptr: *const ::splitter::Splitter) -> bool;
  pub fn qt_widgets_c_QSplitter_count(this_ptr: *const ::splitter::Splitter) -> ::libc::c_int;
  pub fn qt_widgets_c_QSplitter_delete(this_ptr: *mut ::splitter::Splitter);
  pub fn qt_widgets_c_QSplitter_getRange(this_ptr: *const ::splitter::Splitter, index: ::libc::c_int, arg2: *mut ::libc::c_int, arg3: *mut ::libc::c_int);
  pub fn qt_widgets_c_QSplitter_handle(this_ptr: *const ::splitter::Splitter, index: ::libc::c_int) -> *mut ::splitter_handle::SplitterHandle;
  pub fn qt_widgets_c_QSplitter_handleWidth(this_ptr: *const ::splitter::Splitter) -> ::libc::c_int;
  pub fn qt_widgets_c_QSplitter_indexOf(this_ptr: *const ::splitter::Splitter, w: *mut ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QSplitter_insertWidget(this_ptr: *mut ::splitter::Splitter, index: ::libc::c_int, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QSplitter_isCollapsible(this_ptr: *const ::splitter::Splitter, index: ::libc::c_int) -> bool;
  pub fn qt_widgets_c_QSplitter_metaObject(this_ptr: *const ::splitter::Splitter) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QSplitter_minimumSizeHint_to_output(this_ptr: *const ::splitter::Splitter, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QSplitter_new_arg1(arg1: *const ::qt_core::qt::Orientation) -> *mut ::splitter::Splitter;
  pub fn qt_widgets_c_QSplitter_new_arg1_parent(arg1: *const ::qt_core::qt::Orientation, parent: *mut ::widget::Widget) -> *mut ::splitter::Splitter;
  pub fn qt_widgets_c_QSplitter_new_no_args() -> *mut ::splitter::Splitter;
  pub fn qt_widgets_c_QSplitter_new_parent(parent: *mut ::widget::Widget) -> *mut ::splitter::Splitter;
  pub fn qt_widgets_c_QSplitter_opaqueResize(this_ptr: *const ::splitter::Splitter) -> bool;
  pub fn qt_widgets_c_QSplitter_qt_metacall(this_ptr: *mut ::splitter::Splitter, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QSplitter_qt_metacast(this_ptr: *mut ::splitter::Splitter, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QSplitter_refresh(this_ptr: *mut ::splitter::Splitter);
  pub fn qt_widgets_c_QSplitter_replaceWidget(this_ptr: *mut ::splitter::Splitter, index: ::libc::c_int, widget: *mut ::widget::Widget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QSplitter_restoreState(this_ptr: *mut ::splitter::Splitter, state: *const ::qt_core::byte_array::ByteArray) -> bool;
  pub fn qt_widgets_c_QSplitter_saveState_to_output(this_ptr: *const ::splitter::Splitter, output: *mut ::qt_core::byte_array::ByteArray);
  pub fn qt_widgets_c_QSplitter_setChildrenCollapsible(this_ptr: *mut ::splitter::Splitter, arg1: bool);
  pub fn qt_widgets_c_QSplitter_setCollapsible(this_ptr: *mut ::splitter::Splitter, index: ::libc::c_int, arg2: bool);
  pub fn qt_widgets_c_QSplitter_setHandleWidth(this_ptr: *mut ::splitter::Splitter, arg1: ::libc::c_int);
  pub fn qt_widgets_c_QSplitter_setOpaqueResize_no_args(this_ptr: *mut ::splitter::Splitter);
  pub fn qt_widgets_c_QSplitter_setOpaqueResize_opaque(this_ptr: *mut ::splitter::Splitter, opaque: bool);
  pub fn qt_widgets_c_QSplitter_setOrientation(this_ptr: *mut ::splitter::Splitter, arg1: *const ::qt_core::qt::Orientation);
  pub fn qt_widgets_c_QSplitter_setSizes(this_ptr: *mut ::splitter::Splitter, list: *const ::qt_core::list::ListCInt);
  pub fn qt_widgets_c_QSplitter_setStretchFactor(this_ptr: *mut ::splitter::Splitter, index: ::libc::c_int, stretch: ::libc::c_int);
  pub fn qt_widgets_c_QSplitter_sizeHint_to_output(this_ptr: *const ::splitter::Splitter, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QSplitter_sizes_to_output(this_ptr: *const ::splitter::Splitter, output: *mut ::qt_core::list::ListCInt);
  pub fn qt_widgets_c_QSplitter_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QSplitter_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QSplitter_widget(this_ptr: *const ::splitter::Splitter, index: ::libc::c_int) -> *mut ::widget::Widget;

  // Header: QSplitterHandle
  pub fn qt_widgets_c_QSplitterHandle_G_dynamic_cast_QSplitterHandle_ptr(ptr: *mut ::widget::Widget) -> *mut ::splitter_handle::SplitterHandle;
  pub fn qt_widgets_c_QSplitterHandle_G_static_cast_QObject_ptr(ptr: *mut ::splitter_handle::SplitterHandle) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QSplitterHandle_G_static_cast_QPaintDevice_ptr(ptr: *mut ::splitter_handle::SplitterHandle) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QSplitterHandle_G_static_cast_QSplitterHandle_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::splitter_handle::SplitterHandle;
  pub fn qt_widgets_c_QSplitterHandle_G_static_cast_QSplitterHandle_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::splitter_handle::SplitterHandle;
  pub fn qt_widgets_c_QSplitterHandle_G_static_cast_QSplitterHandle_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::splitter_handle::SplitterHandle;
  pub fn qt_widgets_c_QSplitterHandle_G_static_cast_QWidget_ptr(ptr: *mut ::splitter_handle::SplitterHandle) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QSplitterHandle_delete(this_ptr: *mut ::splitter_handle::SplitterHandle);
  pub fn qt_widgets_c_QSplitterHandle_metaObject(this_ptr: *const ::splitter_handle::SplitterHandle) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QSplitterHandle_new(o: *const ::qt_core::qt::Orientation, parent: *mut ::splitter::Splitter) -> *mut ::splitter_handle::SplitterHandle;
  pub fn qt_widgets_c_QSplitterHandle_opaqueResize(this_ptr: *const ::splitter_handle::SplitterHandle) -> bool;
  pub fn qt_widgets_c_QSplitterHandle_qt_metacall(this_ptr: *mut ::splitter_handle::SplitterHandle, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QSplitterHandle_qt_metacast(this_ptr: *mut ::splitter_handle::SplitterHandle, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QSplitterHandle_setOrientation(this_ptr: *mut ::splitter_handle::SplitterHandle, o: *const ::qt_core::qt::Orientation);
  pub fn qt_widgets_c_QSplitterHandle_sizeHint_to_output(this_ptr: *const ::splitter_handle::SplitterHandle, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QSplitterHandle_splitter(this_ptr: *const ::splitter_handle::SplitterHandle) -> *mut ::splitter::Splitter;
  pub fn qt_widgets_c_QSplitterHandle_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QSplitterHandle_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QStackedLayout
  pub fn qt_widgets_c_QStackedLayout_G_dynamic_cast_QStackedLayout_ptr_QLayout(ptr: *mut ::layout::Layout) -> *mut ::stacked_layout::StackedLayout;
  pub fn qt_widgets_c_QStackedLayout_G_dynamic_cast_QStackedLayout_ptr_QLayoutItem(ptr: *mut ::layout_item::LayoutItem) -> *mut ::stacked_layout::StackedLayout;
  pub fn qt_widgets_c_QStackedLayout_G_static_cast_QLayoutItem_ptr(ptr: *mut ::stacked_layout::StackedLayout) -> *mut ::layout_item::LayoutItem;
  pub fn qt_widgets_c_QStackedLayout_G_static_cast_QLayout_ptr(ptr: *mut ::stacked_layout::StackedLayout) -> *mut ::layout::Layout;
  pub fn qt_widgets_c_QStackedLayout_G_static_cast_QObject_ptr(ptr: *mut ::stacked_layout::StackedLayout) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QStackedLayout_G_static_cast_QStackedLayout_ptr_QLayout(ptr: *mut ::layout::Layout) -> *mut ::stacked_layout::StackedLayout;
  pub fn qt_widgets_c_QStackedLayout_G_static_cast_QStackedLayout_ptr_QLayoutItem(ptr: *mut ::layout_item::LayoutItem) -> *mut ::stacked_layout::StackedLayout;
  pub fn qt_widgets_c_QStackedLayout_G_static_cast_QStackedLayout_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::stacked_layout::StackedLayout;
  pub fn qt_widgets_c_QStackedLayout_addItem(this_ptr: *mut ::stacked_layout::StackedLayout, item: *mut ::layout_item::LayoutItem);
  pub fn qt_widgets_c_QStackedLayout_addWidget(this_ptr: *mut ::stacked_layout::StackedLayout, w: *mut ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QStackedLayout_count(this_ptr: *const ::stacked_layout::StackedLayout) -> ::libc::c_int;
  pub fn qt_widgets_c_QStackedLayout_currentIndex(this_ptr: *const ::stacked_layout::StackedLayout) -> ::libc::c_int;
  pub fn qt_widgets_c_QStackedLayout_currentWidget(this_ptr: *const ::stacked_layout::StackedLayout) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QStackedLayout_delete(this_ptr: *mut ::stacked_layout::StackedLayout);
  pub fn qt_widgets_c_QStackedLayout_hasHeightForWidth(this_ptr: *const ::stacked_layout::StackedLayout) -> bool;
  pub fn qt_widgets_c_QStackedLayout_heightForWidth(this_ptr: *const ::stacked_layout::StackedLayout, width: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QStackedLayout_insertWidget(this_ptr: *mut ::stacked_layout::StackedLayout, index: ::libc::c_int, w: *mut ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QStackedLayout_itemAt(this_ptr: *const ::stacked_layout::StackedLayout, arg1: ::libc::c_int) -> *mut ::layout_item::LayoutItem;
  pub fn qt_widgets_c_QStackedLayout_metaObject(this_ptr: *const ::stacked_layout::StackedLayout) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QStackedLayout_minimumSize_to_output(this_ptr: *const ::stacked_layout::StackedLayout, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QStackedLayout_new_no_args() -> *mut ::stacked_layout::StackedLayout;
  pub fn qt_widgets_c_QStackedLayout_new_parent(parent: *mut ::widget::Widget) -> *mut ::stacked_layout::StackedLayout;
  pub fn qt_widgets_c_QStackedLayout_new_parentLayout(parentLayout: *mut ::layout::Layout) -> *mut ::stacked_layout::StackedLayout;
  pub fn qt_widgets_c_QStackedLayout_qt_metacall(this_ptr: *mut ::stacked_layout::StackedLayout, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QStackedLayout_qt_metacast(this_ptr: *mut ::stacked_layout::StackedLayout, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QStackedLayout_setCurrentIndex(this_ptr: *mut ::stacked_layout::StackedLayout, index: ::libc::c_int);
  pub fn qt_widgets_c_QStackedLayout_setCurrentWidget(this_ptr: *mut ::stacked_layout::StackedLayout, w: *mut ::widget::Widget);
  pub fn qt_widgets_c_QStackedLayout_setGeometry(this_ptr: *mut ::stacked_layout::StackedLayout, rect: *const ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QStackedLayout_setStackingMode(this_ptr: *mut ::stacked_layout::StackedLayout, stackingMode: ::stacked_layout::StackingMode);
  pub fn qt_widgets_c_QStackedLayout_sizeHint_to_output(this_ptr: *const ::stacked_layout::StackedLayout, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QStackedLayout_stackingMode(this_ptr: *const ::stacked_layout::StackedLayout) -> ::stacked_layout::StackingMode;
  pub fn qt_widgets_c_QStackedLayout_takeAt(this_ptr: *mut ::stacked_layout::StackedLayout, arg1: ::libc::c_int) -> *mut ::layout_item::LayoutItem;
  pub fn qt_widgets_c_QStackedLayout_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QStackedLayout_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QStackedLayout_widget(this_ptr: *const ::stacked_layout::StackedLayout, arg1: ::libc::c_int) -> *mut ::widget::Widget;

  // Header: QStackedWidget
  pub fn qt_widgets_c_QStackedWidget_G_dynamic_cast_QStackedWidget_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::stacked_widget::StackedWidget;
  pub fn qt_widgets_c_QStackedWidget_G_dynamic_cast_QStackedWidget_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::stacked_widget::StackedWidget;
  pub fn qt_widgets_c_QStackedWidget_G_static_cast_QFrame_ptr(ptr: *mut ::stacked_widget::StackedWidget) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QStackedWidget_G_static_cast_QObject_ptr(ptr: *mut ::stacked_widget::StackedWidget) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QStackedWidget_G_static_cast_QPaintDevice_ptr(ptr: *mut ::stacked_widget::StackedWidget) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QStackedWidget_G_static_cast_QStackedWidget_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::stacked_widget::StackedWidget;
  pub fn qt_widgets_c_QStackedWidget_G_static_cast_QStackedWidget_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::stacked_widget::StackedWidget;
  pub fn qt_widgets_c_QStackedWidget_G_static_cast_QStackedWidget_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::stacked_widget::StackedWidget;
  pub fn qt_widgets_c_QStackedWidget_G_static_cast_QStackedWidget_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::stacked_widget::StackedWidget;
  pub fn qt_widgets_c_QStackedWidget_G_static_cast_QWidget_ptr(ptr: *mut ::stacked_widget::StackedWidget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QStackedWidget_addWidget(this_ptr: *mut ::stacked_widget::StackedWidget, w: *mut ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QStackedWidget_count(this_ptr: *const ::stacked_widget::StackedWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QStackedWidget_currentIndex(this_ptr: *const ::stacked_widget::StackedWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QStackedWidget_currentWidget(this_ptr: *const ::stacked_widget::StackedWidget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QStackedWidget_delete(this_ptr: *mut ::stacked_widget::StackedWidget);
  pub fn qt_widgets_c_QStackedWidget_indexOf(this_ptr: *const ::stacked_widget::StackedWidget, arg1: *mut ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QStackedWidget_insertWidget(this_ptr: *mut ::stacked_widget::StackedWidget, index: ::libc::c_int, w: *mut ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QStackedWidget_metaObject(this_ptr: *const ::stacked_widget::StackedWidget) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QStackedWidget_new_no_args() -> *mut ::stacked_widget::StackedWidget;
  pub fn qt_widgets_c_QStackedWidget_new_parent(parent: *mut ::widget::Widget) -> *mut ::stacked_widget::StackedWidget;
  pub fn qt_widgets_c_QStackedWidget_qt_metacall(this_ptr: *mut ::stacked_widget::StackedWidget, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QStackedWidget_qt_metacast(this_ptr: *mut ::stacked_widget::StackedWidget, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QStackedWidget_removeWidget(this_ptr: *mut ::stacked_widget::StackedWidget, w: *mut ::widget::Widget);
  pub fn qt_widgets_c_QStackedWidget_setCurrentIndex(this_ptr: *mut ::stacked_widget::StackedWidget, index: ::libc::c_int);
  pub fn qt_widgets_c_QStackedWidget_setCurrentWidget(this_ptr: *mut ::stacked_widget::StackedWidget, w: *mut ::widget::Widget);
  pub fn qt_widgets_c_QStackedWidget_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QStackedWidget_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QStackedWidget_widget(this_ptr: *const ::stacked_widget::StackedWidget, arg1: ::libc::c_int) -> *mut ::widget::Widget;

  // Header: QStatusBar
  pub fn qt_widgets_c_QStatusBar_G_dynamic_cast_QStatusBar_ptr(ptr: *mut ::widget::Widget) -> *mut ::status_bar::StatusBar;
  pub fn qt_widgets_c_QStatusBar_G_static_cast_QObject_ptr(ptr: *mut ::status_bar::StatusBar) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QStatusBar_G_static_cast_QPaintDevice_ptr(ptr: *mut ::status_bar::StatusBar) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QStatusBar_G_static_cast_QStatusBar_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::status_bar::StatusBar;
  pub fn qt_widgets_c_QStatusBar_G_static_cast_QStatusBar_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::status_bar::StatusBar;
  pub fn qt_widgets_c_QStatusBar_G_static_cast_QStatusBar_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::status_bar::StatusBar;
  pub fn qt_widgets_c_QStatusBar_G_static_cast_QWidget_ptr(ptr: *mut ::status_bar::StatusBar) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QStatusBar_addPermanentWidget_widget(this_ptr: *mut ::status_bar::StatusBar, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QStatusBar_addPermanentWidget_widget_stretch(this_ptr: *mut ::status_bar::StatusBar, widget: *mut ::widget::Widget, stretch: ::libc::c_int);
  pub fn qt_widgets_c_QStatusBar_addWidget_widget(this_ptr: *mut ::status_bar::StatusBar, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QStatusBar_addWidget_widget_stretch(this_ptr: *mut ::status_bar::StatusBar, widget: *mut ::widget::Widget, stretch: ::libc::c_int);
  pub fn qt_widgets_c_QStatusBar_clearMessage(this_ptr: *mut ::status_bar::StatusBar);
  pub fn qt_widgets_c_QStatusBar_currentMessage_to_output(this_ptr: *const ::status_bar::StatusBar, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QStatusBar_delete(this_ptr: *mut ::status_bar::StatusBar);
  pub fn qt_widgets_c_QStatusBar_insertPermanentWidget_index_widget(this_ptr: *mut ::status_bar::StatusBar, index: ::libc::c_int, widget: *mut ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QStatusBar_insertPermanentWidget_index_widget_stretch(this_ptr: *mut ::status_bar::StatusBar, index: ::libc::c_int, widget: *mut ::widget::Widget, stretch: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QStatusBar_insertWidget_index_widget(this_ptr: *mut ::status_bar::StatusBar, index: ::libc::c_int, widget: *mut ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QStatusBar_insertWidget_index_widget_stretch(this_ptr: *mut ::status_bar::StatusBar, index: ::libc::c_int, widget: *mut ::widget::Widget, stretch: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QStatusBar_isSizeGripEnabled(this_ptr: *const ::status_bar::StatusBar) -> bool;
  pub fn qt_widgets_c_QStatusBar_metaObject(this_ptr: *const ::status_bar::StatusBar) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QStatusBar_new_no_args() -> *mut ::status_bar::StatusBar;
  pub fn qt_widgets_c_QStatusBar_new_parent(parent: *mut ::widget::Widget) -> *mut ::status_bar::StatusBar;
  pub fn qt_widgets_c_QStatusBar_qt_metacall(this_ptr: *mut ::status_bar::StatusBar, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QStatusBar_qt_metacast(this_ptr: *mut ::status_bar::StatusBar, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QStatusBar_removeWidget(this_ptr: *mut ::status_bar::StatusBar, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QStatusBar_setSizeGripEnabled(this_ptr: *mut ::status_bar::StatusBar, arg1: bool);
  pub fn qt_widgets_c_QStatusBar_showMessage_text(this_ptr: *mut ::status_bar::StatusBar, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QStatusBar_showMessage_text_timeout(this_ptr: *mut ::status_bar::StatusBar, text: *const ::qt_core::string::String, timeout: ::libc::c_int);
  pub fn qt_widgets_c_QStatusBar_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QStatusBar_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QStyle
  pub fn qt_widgets_c_QStyle_G_static_cast_QObject_ptr(ptr: *mut ::style::Style) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QStyle_G_static_cast_QStyle_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::style::Style;
  pub fn qt_widgets_c_QStyle_delete(this_ptr: *mut ::style::Style);
  pub fn qt_widgets_c_QStyle_drawComplexControl_cc_opt_p(this_ptr: *const ::style::Style, cc: ::style::ComplexControl, opt: *const ::style_option_complex::StyleOptionComplex, p: *mut ::qt_gui::painter::Painter);
  pub fn qt_widgets_c_QStyle_drawComplexControl_cc_opt_p_widget(this_ptr: *const ::style::Style, cc: ::style::ComplexControl, opt: *const ::style_option_complex::StyleOptionComplex, p: *mut ::qt_gui::painter::Painter, widget: *const ::widget::Widget);
  pub fn qt_widgets_c_QStyle_drawControl_element_opt_p(this_ptr: *const ::style::Style, element: ::style::ControlElement, opt: *const ::style_option::StyleOption, p: *mut ::qt_gui::painter::Painter);
  pub fn qt_widgets_c_QStyle_drawControl_element_opt_p_w(this_ptr: *const ::style::Style, element: ::style::ControlElement, opt: *const ::style_option::StyleOption, p: *mut ::qt_gui::painter::Painter, w: *const ::widget::Widget);
  pub fn qt_widgets_c_QStyle_drawItemPixmap(this_ptr: *const ::style::Style, painter: *mut ::qt_gui::painter::Painter, rect: *const ::qt_core::rect::Rect, alignment: ::libc::c_int, pixmap: *const ::qt_gui::pixmap::Pixmap);
  pub fn qt_widgets_c_QStyle_drawItemText_painter_rect_flags_pal_enabled_text(this_ptr: *const ::style::Style, painter: *mut ::qt_gui::painter::Painter, rect: *const ::qt_core::rect::Rect, flags: ::libc::c_int, pal: *const ::qt_gui::palette::Palette, enabled: bool, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QStyle_drawItemText_painter_rect_flags_pal_enabled_text_textRole(this_ptr: *const ::style::Style, painter: *mut ::qt_gui::painter::Painter, rect: *const ::qt_core::rect::Rect, flags: ::libc::c_int, pal: *const ::qt_gui::palette::Palette, enabled: bool, text: *const ::qt_core::string::String, textRole: *const ::qt_gui::palette::ColorRole);
  pub fn qt_widgets_c_QStyle_drawPrimitive_pe_opt_p(this_ptr: *const ::style::Style, pe: ::style::PrimitiveElement, opt: *const ::style_option::StyleOption, p: *mut ::qt_gui::painter::Painter);
  pub fn qt_widgets_c_QStyle_drawPrimitive_pe_opt_p_w(this_ptr: *const ::style::Style, pe: ::style::PrimitiveElement, opt: *const ::style_option::StyleOption, p: *mut ::qt_gui::painter::Painter, w: *const ::widget::Widget);
  pub fn qt_widgets_c_QStyle_generatedIconPixmap_as_ptr(this_ptr: *const ::style::Style, iconMode: *const ::qt_gui::icon::Mode, pixmap: *const ::qt_gui::pixmap::Pixmap, opt: *const ::style_option::StyleOption) -> *mut ::qt_gui::pixmap::Pixmap;
  pub fn qt_widgets_c_QStyle_hitTestComplexControl_cc_opt_pt(this_ptr: *const ::style::Style, cc: ::style::ComplexControl, opt: *const ::style_option_complex::StyleOptionComplex, pt: *const ::qt_core::point::Point) -> ::style::SubControl;
  pub fn qt_widgets_c_QStyle_hitTestComplexControl_cc_opt_pt_widget(this_ptr: *const ::style::Style, cc: ::style::ComplexControl, opt: *const ::style_option_complex::StyleOptionComplex, pt: *const ::qt_core::point::Point, widget: *const ::widget::Widget) -> ::style::SubControl;
  pub fn qt_widgets_c_QStyle_itemPixmapRect_to_output(this_ptr: *const ::style::Style, r: *const ::qt_core::rect::Rect, flags: ::libc::c_int, pixmap: *const ::qt_gui::pixmap::Pixmap, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QStyle_itemTextRect_to_output(this_ptr: *const ::style::Style, fm: *const ::qt_gui::font_metrics::FontMetrics, r: *const ::qt_core::rect::Rect, flags: ::libc::c_int, enabled: bool, text: *const ::qt_core::string::String, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QStyle_layoutSpacing_control1_control2_orientation(this_ptr: *const ::style::Style, control1: *const ::size_policy::ControlType, control2: *const ::size_policy::ControlType, orientation: *const ::qt_core::qt::Orientation) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyle_layoutSpacing_control1_control2_orientation_option(this_ptr: *const ::style::Style, control1: *const ::size_policy::ControlType, control2: *const ::size_policy::ControlType, orientation: *const ::qt_core::qt::Orientation, option: *const ::style_option::StyleOption) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyle_layoutSpacing_control1_control2_orientation_option_widget(this_ptr: *const ::style::Style, control1: *const ::size_policy::ControlType, control2: *const ::size_policy::ControlType, orientation: *const ::qt_core::qt::Orientation, option: *const ::style_option::StyleOption, widget: *const ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyle_metaObject(this_ptr: *const ::style::Style) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QStyle_pixelMetric_metric(this_ptr: *const ::style::Style, metric: ::style::PixelMetric) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyle_pixelMetric_metric_option(this_ptr: *const ::style::Style, metric: ::style::PixelMetric, option: *const ::style_option::StyleOption) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyle_pixelMetric_metric_option_widget(this_ptr: *const ::style::Style, metric: ::style::PixelMetric, option: *const ::style_option::StyleOption, widget: *const ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyle_polish_application(this_ptr: *mut ::style::Style, application: *mut ::application::Application);
  pub fn qt_widgets_c_QStyle_polish_palette(this_ptr: *mut ::style::Style, palette: *mut ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QStyle_polish_widget(this_ptr: *mut ::style::Style, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QStyle_proxy(this_ptr: *const ::style::Style) -> *const ::style::Style;
  pub fn qt_widgets_c_QStyle_qt_metacall(this_ptr: *mut ::style::Style, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyle_qt_metacast(this_ptr: *mut ::style::Style, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QStyle_sizeFromContents_to_output_ct_opt_contentsSize(this_ptr: *const ::style::Style, ct: ::style::ContentsType, opt: *const ::style_option::StyleOption, contentsSize: *const ::qt_core::size::Size, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QStyle_sizeFromContents_to_output_ct_opt_contentsSize_w(this_ptr: *const ::style::Style, ct: ::style::ContentsType, opt: *const ::style_option::StyleOption, contentsSize: *const ::qt_core::size::Size, w: *const ::widget::Widget, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QStyle_sliderPositionFromValue_min_max_val_space(min: ::libc::c_int, max: ::libc::c_int, val: ::libc::c_int, space: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyle_sliderPositionFromValue_min_max_val_space_upsideDown(min: ::libc::c_int, max: ::libc::c_int, val: ::libc::c_int, space: ::libc::c_int, upsideDown: bool) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyle_sliderValueFromPosition_min_max_pos_space(min: ::libc::c_int, max: ::libc::c_int, pos: ::libc::c_int, space: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyle_sliderValueFromPosition_min_max_pos_space_upsideDown(min: ::libc::c_int, max: ::libc::c_int, pos: ::libc::c_int, space: ::libc::c_int, upsideDown: bool) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyle_standardIcon_to_output_standardIcon(this_ptr: *const ::style::Style, standardIcon: ::style::StandardPixmap, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QStyle_standardIcon_to_output_standardIcon_option(this_ptr: *const ::style::Style, standardIcon: ::style::StandardPixmap, option: *const ::style_option::StyleOption, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QStyle_standardIcon_to_output_standardIcon_option_widget(this_ptr: *const ::style::Style, standardIcon: ::style::StandardPixmap, option: *const ::style_option::StyleOption, widget: *const ::widget::Widget, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QStyle_standardPalette_to_output(this_ptr: *const ::style::Style, output: *mut ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QStyle_standardPixmap_as_ptr_standardPixmap(this_ptr: *const ::style::Style, standardPixmap: ::style::StandardPixmap) -> *mut ::qt_gui::pixmap::Pixmap;
  pub fn qt_widgets_c_QStyle_standardPixmap_as_ptr_standardPixmap_opt(this_ptr: *const ::style::Style, standardPixmap: ::style::StandardPixmap, opt: *const ::style_option::StyleOption) -> *mut ::qt_gui::pixmap::Pixmap;
  pub fn qt_widgets_c_QStyle_standardPixmap_as_ptr_standardPixmap_opt_widget(this_ptr: *const ::style::Style, standardPixmap: ::style::StandardPixmap, opt: *const ::style_option::StyleOption, widget: *const ::widget::Widget) -> *mut ::qt_gui::pixmap::Pixmap;
  pub fn qt_widgets_c_QStyle_styleHint_stylehint(this_ptr: *const ::style::Style, stylehint: ::style::StyleHint) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyle_styleHint_stylehint_opt(this_ptr: *const ::style::Style, stylehint: ::style::StyleHint, opt: *const ::style_option::StyleOption) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyle_styleHint_stylehint_opt_widget(this_ptr: *const ::style::Style, stylehint: ::style::StyleHint, opt: *const ::style_option::StyleOption, widget: *const ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyle_styleHint_stylehint_opt_widget_returnData(this_ptr: *const ::style::Style, stylehint: ::style::StyleHint, opt: *const ::style_option::StyleOption, widget: *const ::widget::Widget, returnData: *mut ::style_hint_return::StyleHintReturn) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyle_subControlRect_to_output_cc_opt_sc(this_ptr: *const ::style::Style, cc: ::style::ComplexControl, opt: *const ::style_option_complex::StyleOptionComplex, sc: ::style::SubControl, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QStyle_subControlRect_to_output_cc_opt_sc_widget(this_ptr: *const ::style::Style, cc: ::style::ComplexControl, opt: *const ::style_option_complex::StyleOptionComplex, sc: ::style::SubControl, widget: *const ::widget::Widget, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QStyle_subElementRect_to_output_subElement_option(this_ptr: *const ::style::Style, subElement: ::style::SubElement, option: *const ::style_option::StyleOption, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QStyle_subElementRect_to_output_subElement_option_widget(this_ptr: *const ::style::Style, subElement: ::style::SubElement, option: *const ::style_option::StyleOption, widget: *const ::widget::Widget, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QStyle_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QStyle_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QStyle_unpolish_application(this_ptr: *mut ::style::Style, application: *mut ::application::Application);
  pub fn qt_widgets_c_QStyle_unpolish_widget(this_ptr: *mut ::style::Style, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QStyle_visualPos_to_output(direction: *const ::qt_core::qt::LayoutDirection, boundingRect: *const ::qt_core::rect::Rect, logicalPos: *const ::qt_core::point::Point, output: *mut ::qt_core::point::Point);
  pub fn qt_widgets_c_QStyle_visualRect_to_output(direction: *const ::qt_core::qt::LayoutDirection, boundingRect: *const ::qt_core::rect::Rect, logicalRect: *const ::qt_core::rect::Rect, output: *mut ::qt_core::rect::Rect);

  // Header: QStyleFactory
  pub fn qt_widgets_c_QStyleFactory_create(arg1: *const ::qt_core::string::String) -> *mut ::style::Style;
  pub fn qt_widgets_c_QStyleFactory_delete(this_ptr: *mut ::style_factory::StyleFactory);
  pub fn qt_widgets_c_QStyleFactory_keys_to_output(output: *mut ::qt_core::string_list::StringList);

  // Header: QStyleHintReturn
  pub fn qt_widgets_c_QStyleHintReturn_delete(this_ptr: *mut ::style_hint_return::StyleHintReturn);
  pub fn qt_widgets_c_QStyleHintReturn_new_no_args() -> *mut ::style_hint_return::StyleHintReturn;
  pub fn qt_widgets_c_QStyleHintReturn_new_version(version: ::libc::c_int) -> *mut ::style_hint_return::StyleHintReturn;
  pub fn qt_widgets_c_QStyleHintReturn_new_version_type(version: ::libc::c_int, type_: ::libc::c_int) -> *mut ::style_hint_return::StyleHintReturn;
  pub fn qt_widgets_c_QStyleHintReturn_set_type(this_ptr: *mut ::style_hint_return::StyleHintReturn, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleHintReturn_set_version(this_ptr: *mut ::style_hint_return::StyleHintReturn, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleHintReturn_type(this_ptr: *const ::style_hint_return::StyleHintReturn) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyleHintReturn_version(this_ptr: *const ::style_hint_return::StyleHintReturn) -> ::libc::c_int;

  // Header: QStyleHintReturnMask
  pub fn qt_widgets_c_QStyleHintReturnMask_G_static_cast_QStyleHintReturnMask_ptr(ptr: *mut ::style_hint_return::StyleHintReturn) -> *mut ::style_hint_return_mask::StyleHintReturnMask;
  pub fn qt_widgets_c_QStyleHintReturnMask_G_static_cast_QStyleHintReturn_ptr(ptr: *mut ::style_hint_return_mask::StyleHintReturnMask) -> *mut ::style_hint_return::StyleHintReturn;
  pub fn qt_widgets_c_QStyleHintReturnMask_delete(this_ptr: *mut ::style_hint_return_mask::StyleHintReturnMask);
  pub fn qt_widgets_c_QStyleHintReturnMask_new() -> *mut ::style_hint_return_mask::StyleHintReturnMask;
  pub fn qt_widgets_c_QStyleHintReturnMask_region(this_ptr: *const ::style_hint_return_mask::StyleHintReturnMask) -> *const ::qt_gui::region::Region;
  pub fn qt_widgets_c_QStyleHintReturnMask_region_mut(this_ptr: *mut ::style_hint_return_mask::StyleHintReturnMask) -> *mut ::qt_gui::region::Region;
  pub fn qt_widgets_c_QStyleHintReturnMask_set_region(this_ptr: *mut ::style_hint_return_mask::StyleHintReturnMask, value: *const ::qt_gui::region::Region);

  // Header: QStyleHintReturnVariant
  pub fn qt_widgets_c_QStyleHintReturnVariant_G_static_cast_QStyleHintReturnVariant_ptr(ptr: *mut ::style_hint_return::StyleHintReturn) -> *mut ::style_hint_return_variant::StyleHintReturnVariant;
  pub fn qt_widgets_c_QStyleHintReturnVariant_G_static_cast_QStyleHintReturn_ptr(ptr: *mut ::style_hint_return_variant::StyleHintReturnVariant) -> *mut ::style_hint_return::StyleHintReturn;
  pub fn qt_widgets_c_QStyleHintReturnVariant_delete(this_ptr: *mut ::style_hint_return_variant::StyleHintReturnVariant);
  pub fn qt_widgets_c_QStyleHintReturnVariant_new() -> *mut ::style_hint_return_variant::StyleHintReturnVariant;
  pub fn qt_widgets_c_QStyleHintReturnVariant_set_variant(this_ptr: *mut ::style_hint_return_variant::StyleHintReturnVariant, value: *const ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QStyleHintReturnVariant_variant(this_ptr: *const ::style_hint_return_variant::StyleHintReturnVariant) -> *const ::qt_core::variant::Variant;
  pub fn qt_widgets_c_QStyleHintReturnVariant_variant_mut(this_ptr: *mut ::style_hint_return_variant::StyleHintReturnVariant) -> *mut ::qt_core::variant::Variant;

  // Header: QStyleOption
  pub fn qt_widgets_c_QStyleOption_G_operator_shl_to_output_debug_option(debug: *const ::qt_core::debug::Debug, option: *const ::style_option::StyleOption, output: *mut ::qt_core::debug::Debug);
  pub fn qt_widgets_c_QStyleOption_G_operator_shl_to_output_debug_optionType(debug: *const ::qt_core::debug::Debug, optionType: *const ::style_option::OptionType, output: *mut ::qt_core::debug::Debug);
  pub fn qt_widgets_c_QStyleOption_delete(this_ptr: *mut ::style_option::StyleOption);
  pub fn qt_widgets_c_QStyleOption_direction(this_ptr: *const ::style_option::StyleOption) -> *const ::qt_core::qt::LayoutDirection;
  pub fn qt_widgets_c_QStyleOption_direction_mut(this_ptr: *mut ::style_option::StyleOption) -> *mut ::qt_core::qt::LayoutDirection;
  pub fn qt_widgets_c_QStyleOption_fontMetrics(this_ptr: *const ::style_option::StyleOption) -> *const ::qt_gui::font_metrics::FontMetrics;
  pub fn qt_widgets_c_QStyleOption_fontMetrics_mut(this_ptr: *mut ::style_option::StyleOption) -> *mut ::qt_gui::font_metrics::FontMetrics;
  pub fn qt_widgets_c_QStyleOption_init(this_ptr: *mut ::style_option::StyleOption, w: *const ::widget::Widget);
  pub fn qt_widgets_c_QStyleOption_initFrom(this_ptr: *mut ::style_option::StyleOption, w: *const ::widget::Widget);
  pub fn qt_widgets_c_QStyleOption_new_no_args() -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOption_new_other(other: *const ::style_option::StyleOption) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOption_new_version(version: ::libc::c_int) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOption_new_version_type(version: ::libc::c_int, type_: ::libc::c_int) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOption_operator_assign(this_ptr: *mut ::style_option::StyleOption, other: *const ::style_option::StyleOption) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOption_palette(this_ptr: *const ::style_option::StyleOption) -> *const ::qt_gui::palette::Palette;
  pub fn qt_widgets_c_QStyleOption_palette_mut(this_ptr: *mut ::style_option::StyleOption) -> *mut ::qt_gui::palette::Palette;
  pub fn qt_widgets_c_QStyleOption_rect(this_ptr: *const ::style_option::StyleOption) -> *const ::qt_core::rect::Rect;
  pub fn qt_widgets_c_QStyleOption_rect_mut(this_ptr: *mut ::style_option::StyleOption) -> *mut ::qt_core::rect::Rect;
  pub fn qt_widgets_c_QStyleOption_set_direction(this_ptr: *mut ::style_option::StyleOption, value: *const ::qt_core::qt::LayoutDirection);
  pub fn qt_widgets_c_QStyleOption_set_fontMetrics(this_ptr: *mut ::style_option::StyleOption, value: *const ::qt_gui::font_metrics::FontMetrics);
  pub fn qt_widgets_c_QStyleOption_set_palette(this_ptr: *mut ::style_option::StyleOption, value: *const ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QStyleOption_set_rect(this_ptr: *mut ::style_option::StyleOption, value: *const ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QStyleOption_set_styleObject(this_ptr: *mut ::style_option::StyleOption, value: *mut ::qt_core::object::Object);
  pub fn qt_widgets_c_QStyleOption_set_type(this_ptr: *mut ::style_option::StyleOption, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleOption_set_version(this_ptr: *mut ::style_option::StyleOption, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleOption_styleObject(this_ptr: *const ::style_option::StyleOption) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QStyleOption_type(this_ptr: *const ::style_option::StyleOption) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyleOption_version(this_ptr: *const ::style_option::StyleOption) -> ::libc::c_int;

  // Header: QStyleOptionButton
  pub fn qt_widgets_c_QStyleOptionButton_G_static_cast_QStyleOptionButton_ptr(ptr: *mut ::style_option::StyleOption) -> *mut ::style_option_button::StyleOptionButton;
  pub fn qt_widgets_c_QStyleOptionButton_G_static_cast_QStyleOption_ptr(ptr: *mut ::style_option_button::StyleOptionButton) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOptionButton_delete(this_ptr: *mut ::style_option_button::StyleOptionButton);
  pub fn qt_widgets_c_QStyleOptionButton_features(this_ptr: *const ::style_option_button::StyleOptionButton) -> ::libc::c_uint;
  pub fn qt_widgets_c_QStyleOptionButton_icon(this_ptr: *const ::style_option_button::StyleOptionButton) -> *const ::qt_gui::icon::Icon;
  pub fn qt_widgets_c_QStyleOptionButton_iconSize(this_ptr: *const ::style_option_button::StyleOptionButton) -> *const ::qt_core::size::Size;
  pub fn qt_widgets_c_QStyleOptionButton_iconSize_mut(this_ptr: *mut ::style_option_button::StyleOptionButton) -> *mut ::qt_core::size::Size;
  pub fn qt_widgets_c_QStyleOptionButton_icon_mut(this_ptr: *mut ::style_option_button::StyleOptionButton) -> *mut ::qt_gui::icon::Icon;
  pub fn qt_widgets_c_QStyleOptionButton_new_no_args() -> *mut ::style_option_button::StyleOptionButton;
  pub fn qt_widgets_c_QStyleOptionButton_new_other(other: *const ::style_option_button::StyleOptionButton) -> *mut ::style_option_button::StyleOptionButton;
  pub fn qt_widgets_c_QStyleOptionButton_set_features(this_ptr: *mut ::style_option_button::StyleOptionButton, value: ::libc::c_uint);
  pub fn qt_widgets_c_QStyleOptionButton_set_icon(this_ptr: *mut ::style_option_button::StyleOptionButton, value: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QStyleOptionButton_set_iconSize(this_ptr: *mut ::style_option_button::StyleOptionButton, value: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QStyleOptionButton_set_text(this_ptr: *mut ::style_option_button::StyleOptionButton, value: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QStyleOptionButton_text(this_ptr: *const ::style_option_button::StyleOptionButton) -> *const ::qt_core::string::String;
  pub fn qt_widgets_c_QStyleOptionButton_text_mut(this_ptr: *mut ::style_option_button::StyleOptionButton) -> *mut ::qt_core::string::String;

  // Header: QStyleOptionComboBox
  pub fn qt_widgets_c_QStyleOptionComboBox_G_static_cast_QStyleOptionComboBox_ptr_QStyleOption(ptr: *mut ::style_option::StyleOption) -> *mut ::style_option_combo_box::StyleOptionComboBox;
  pub fn qt_widgets_c_QStyleOptionComboBox_G_static_cast_QStyleOptionComboBox_ptr_QStyleOptionComplex(ptr: *mut ::style_option_complex::StyleOptionComplex) -> *mut ::style_option_combo_box::StyleOptionComboBox;
  pub fn qt_widgets_c_QStyleOptionComboBox_G_static_cast_QStyleOptionComplex_ptr(ptr: *mut ::style_option_combo_box::StyleOptionComboBox) -> *mut ::style_option_complex::StyleOptionComplex;
  pub fn qt_widgets_c_QStyleOptionComboBox_G_static_cast_QStyleOption_ptr(ptr: *mut ::style_option_combo_box::StyleOptionComboBox) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOptionComboBox_currentIcon(this_ptr: *const ::style_option_combo_box::StyleOptionComboBox) -> *const ::qt_gui::icon::Icon;
  pub fn qt_widgets_c_QStyleOptionComboBox_currentIcon_mut(this_ptr: *mut ::style_option_combo_box::StyleOptionComboBox) -> *mut ::qt_gui::icon::Icon;
  pub fn qt_widgets_c_QStyleOptionComboBox_currentText(this_ptr: *const ::style_option_combo_box::StyleOptionComboBox) -> *const ::qt_core::string::String;
  pub fn qt_widgets_c_QStyleOptionComboBox_currentText_mut(this_ptr: *mut ::style_option_combo_box::StyleOptionComboBox) -> *mut ::qt_core::string::String;
  pub fn qt_widgets_c_QStyleOptionComboBox_delete(this_ptr: *mut ::style_option_combo_box::StyleOptionComboBox);
  pub fn qt_widgets_c_QStyleOptionComboBox_editable(this_ptr: *const ::style_option_combo_box::StyleOptionComboBox) -> bool;
  pub fn qt_widgets_c_QStyleOptionComboBox_frame(this_ptr: *const ::style_option_combo_box::StyleOptionComboBox) -> bool;
  pub fn qt_widgets_c_QStyleOptionComboBox_iconSize(this_ptr: *const ::style_option_combo_box::StyleOptionComboBox) -> *const ::qt_core::size::Size;
  pub fn qt_widgets_c_QStyleOptionComboBox_iconSize_mut(this_ptr: *mut ::style_option_combo_box::StyleOptionComboBox) -> *mut ::qt_core::size::Size;
  pub fn qt_widgets_c_QStyleOptionComboBox_new_no_args() -> *mut ::style_option_combo_box::StyleOptionComboBox;
  pub fn qt_widgets_c_QStyleOptionComboBox_new_other(other: *const ::style_option_combo_box::StyleOptionComboBox) -> *mut ::style_option_combo_box::StyleOptionComboBox;
  pub fn qt_widgets_c_QStyleOptionComboBox_popupRect(this_ptr: *const ::style_option_combo_box::StyleOptionComboBox) -> *const ::qt_core::rect::Rect;
  pub fn qt_widgets_c_QStyleOptionComboBox_popupRect_mut(this_ptr: *mut ::style_option_combo_box::StyleOptionComboBox) -> *mut ::qt_core::rect::Rect;
  pub fn qt_widgets_c_QStyleOptionComboBox_set_currentIcon(this_ptr: *mut ::style_option_combo_box::StyleOptionComboBox, value: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QStyleOptionComboBox_set_currentText(this_ptr: *mut ::style_option_combo_box::StyleOptionComboBox, value: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QStyleOptionComboBox_set_editable(this_ptr: *mut ::style_option_combo_box::StyleOptionComboBox, value: bool);
  pub fn qt_widgets_c_QStyleOptionComboBox_set_frame(this_ptr: *mut ::style_option_combo_box::StyleOptionComboBox, value: bool);
  pub fn qt_widgets_c_QStyleOptionComboBox_set_iconSize(this_ptr: *mut ::style_option_combo_box::StyleOptionComboBox, value: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QStyleOptionComboBox_set_popupRect(this_ptr: *mut ::style_option_combo_box::StyleOptionComboBox, value: *const ::qt_core::rect::Rect);

  // Header: QStyleOptionComplex
  pub fn qt_widgets_c_QStyleOptionComplex_G_static_cast_QStyleOptionComplex_ptr(ptr: *mut ::style_option::StyleOption) -> *mut ::style_option_complex::StyleOptionComplex;
  pub fn qt_widgets_c_QStyleOptionComplex_G_static_cast_QStyleOption_ptr(ptr: *mut ::style_option_complex::StyleOptionComplex) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOptionComplex_delete(this_ptr: *mut ::style_option_complex::StyleOptionComplex);
  pub fn qt_widgets_c_QStyleOptionComplex_new_no_args() -> *mut ::style_option_complex::StyleOptionComplex;
  pub fn qt_widgets_c_QStyleOptionComplex_new_other(other: *const ::style_option_complex::StyleOptionComplex) -> *mut ::style_option_complex::StyleOptionComplex;
  pub fn qt_widgets_c_QStyleOptionComplex_new_version(version: ::libc::c_int) -> *mut ::style_option_complex::StyleOptionComplex;
  pub fn qt_widgets_c_QStyleOptionComplex_new_version_type(version: ::libc::c_int, type_: ::libc::c_int) -> *mut ::style_option_complex::StyleOptionComplex;

  // Header: QStyleOptionDockWidget
  pub fn qt_widgets_c_QStyleOptionDockWidget_G_static_cast_QStyleOptionDockWidget_ptr(ptr: *mut ::style_option::StyleOption) -> *mut ::style_option_dock_widget::StyleOptionDockWidget;
  pub fn qt_widgets_c_QStyleOptionDockWidget_G_static_cast_QStyleOption_ptr(ptr: *mut ::style_option_dock_widget::StyleOptionDockWidget) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOptionDockWidget_closable(this_ptr: *const ::style_option_dock_widget::StyleOptionDockWidget) -> bool;
  pub fn qt_widgets_c_QStyleOptionDockWidget_delete(this_ptr: *mut ::style_option_dock_widget::StyleOptionDockWidget);
  pub fn qt_widgets_c_QStyleOptionDockWidget_floatable(this_ptr: *const ::style_option_dock_widget::StyleOptionDockWidget) -> bool;
  pub fn qt_widgets_c_QStyleOptionDockWidget_movable(this_ptr: *const ::style_option_dock_widget::StyleOptionDockWidget) -> bool;
  pub fn qt_widgets_c_QStyleOptionDockWidget_new_no_args() -> *mut ::style_option_dock_widget::StyleOptionDockWidget;
  pub fn qt_widgets_c_QStyleOptionDockWidget_new_other(other: *const ::style_option_dock_widget::StyleOptionDockWidget) -> *mut ::style_option_dock_widget::StyleOptionDockWidget;
  pub fn qt_widgets_c_QStyleOptionDockWidget_set_closable(this_ptr: *mut ::style_option_dock_widget::StyleOptionDockWidget, value: bool);
  pub fn qt_widgets_c_QStyleOptionDockWidget_set_floatable(this_ptr: *mut ::style_option_dock_widget::StyleOptionDockWidget, value: bool);
  pub fn qt_widgets_c_QStyleOptionDockWidget_set_movable(this_ptr: *mut ::style_option_dock_widget::StyleOptionDockWidget, value: bool);
  pub fn qt_widgets_c_QStyleOptionDockWidget_set_title(this_ptr: *mut ::style_option_dock_widget::StyleOptionDockWidget, value: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QStyleOptionDockWidget_set_verticalTitleBar(this_ptr: *mut ::style_option_dock_widget::StyleOptionDockWidget, value: bool);
  pub fn qt_widgets_c_QStyleOptionDockWidget_title(this_ptr: *const ::style_option_dock_widget::StyleOptionDockWidget) -> *const ::qt_core::string::String;
  pub fn qt_widgets_c_QStyleOptionDockWidget_title_mut(this_ptr: *mut ::style_option_dock_widget::StyleOptionDockWidget) -> *mut ::qt_core::string::String;
  pub fn qt_widgets_c_QStyleOptionDockWidget_verticalTitleBar(this_ptr: *const ::style_option_dock_widget::StyleOptionDockWidget) -> bool;

  // Header: QStyleOptionFocusRect
  pub fn qt_widgets_c_QStyleOptionFocusRect_G_static_cast_QStyleOptionFocusRect_ptr(ptr: *mut ::style_option::StyleOption) -> *mut ::style_option_focus_rect::StyleOptionFocusRect;
  pub fn qt_widgets_c_QStyleOptionFocusRect_G_static_cast_QStyleOption_ptr(ptr: *mut ::style_option_focus_rect::StyleOptionFocusRect) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOptionFocusRect_backgroundColor(this_ptr: *const ::style_option_focus_rect::StyleOptionFocusRect) -> *const ::qt_gui::color::Color;
  pub fn qt_widgets_c_QStyleOptionFocusRect_backgroundColor_mut(this_ptr: *mut ::style_option_focus_rect::StyleOptionFocusRect) -> *mut ::qt_gui::color::Color;
  pub fn qt_widgets_c_QStyleOptionFocusRect_constructor_no_args(output: *mut ::style_option_focus_rect::StyleOptionFocusRect);
  pub fn qt_widgets_c_QStyleOptionFocusRect_constructor_other(other: *const ::style_option_focus_rect::StyleOptionFocusRect, output: *mut ::style_option_focus_rect::StyleOptionFocusRect);
  pub fn qt_widgets_c_QStyleOptionFocusRect_destructor(this_ptr: *mut ::style_option_focus_rect::StyleOptionFocusRect);
  pub fn qt_widgets_c_QStyleOptionFocusRect_set_backgroundColor(this_ptr: *mut ::style_option_focus_rect::StyleOptionFocusRect, value: *const ::qt_gui::color::Color);

  // Header: QStyleOptionFrame
  pub fn qt_widgets_c_QStyleOptionFrame_G_static_cast_QStyleOptionFrame_ptr(ptr: *mut ::style_option::StyleOption) -> *mut ::style_option_frame::StyleOptionFrame;
  pub fn qt_widgets_c_QStyleOptionFrame_G_static_cast_QStyleOption_ptr(ptr: *mut ::style_option_frame::StyleOptionFrame) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOptionFrame_delete(this_ptr: *mut ::style_option_frame::StyleOptionFrame);
  pub fn qt_widgets_c_QStyleOptionFrame_features(this_ptr: *const ::style_option_frame::StyleOptionFrame) -> ::libc::c_uint;
  pub fn qt_widgets_c_QStyleOptionFrame_frameShape(this_ptr: *const ::style_option_frame::StyleOptionFrame) -> *const ::frame::Shape;
  pub fn qt_widgets_c_QStyleOptionFrame_frameShape_mut(this_ptr: *mut ::style_option_frame::StyleOptionFrame) -> *mut ::frame::Shape;
  pub fn qt_widgets_c_QStyleOptionFrame_lineWidth(this_ptr: *const ::style_option_frame::StyleOptionFrame) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyleOptionFrame_midLineWidth(this_ptr: *const ::style_option_frame::StyleOptionFrame) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyleOptionFrame_new_no_args() -> *mut ::style_option_frame::StyleOptionFrame;
  pub fn qt_widgets_c_QStyleOptionFrame_new_other(other: *const ::style_option_frame::StyleOptionFrame) -> *mut ::style_option_frame::StyleOptionFrame;
  pub fn qt_widgets_c_QStyleOptionFrame_set_features(this_ptr: *mut ::style_option_frame::StyleOptionFrame, value: ::libc::c_uint);
  pub fn qt_widgets_c_QStyleOptionFrame_set_frameShape(this_ptr: *mut ::style_option_frame::StyleOptionFrame, value: *const ::frame::Shape);
  pub fn qt_widgets_c_QStyleOptionFrame_set_lineWidth(this_ptr: *mut ::style_option_frame::StyleOptionFrame, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleOptionFrame_set_midLineWidth(this_ptr: *mut ::style_option_frame::StyleOptionFrame, value: ::libc::c_int);

  // Header: QStyleOptionGraphicsItem
  pub fn qt_widgets_c_QStyleOptionGraphicsItem_G_static_cast_QStyleOptionGraphicsItem_ptr(ptr: *mut ::style_option::StyleOption) -> *mut ::style_option_graphics_item::StyleOptionGraphicsItem;
  pub fn qt_widgets_c_QStyleOptionGraphicsItem_G_static_cast_QStyleOption_ptr(ptr: *mut ::style_option_graphics_item::StyleOptionGraphicsItem) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOptionGraphicsItem_delete(this_ptr: *mut ::style_option_graphics_item::StyleOptionGraphicsItem);
  pub fn qt_widgets_c_QStyleOptionGraphicsItem_exposedRect(this_ptr: *const ::style_option_graphics_item::StyleOptionGraphicsItem) -> *const ::qt_core::rect_f::RectF;
  pub fn qt_widgets_c_QStyleOptionGraphicsItem_exposedRect_mut(this_ptr: *mut ::style_option_graphics_item::StyleOptionGraphicsItem) -> *mut ::qt_core::rect_f::RectF;
  pub fn qt_widgets_c_QStyleOptionGraphicsItem_levelOfDetail(this_ptr: *const ::style_option_graphics_item::StyleOptionGraphicsItem) -> ::libc::c_double;
  pub fn qt_widgets_c_QStyleOptionGraphicsItem_levelOfDetailFromTransform(worldTransform: *const ::qt_gui::transform::Transform) -> ::libc::c_double;
  pub fn qt_widgets_c_QStyleOptionGraphicsItem_matrix(this_ptr: *const ::style_option_graphics_item::StyleOptionGraphicsItem) -> *const ::qt_gui::matrix::Matrix;
  pub fn qt_widgets_c_QStyleOptionGraphicsItem_matrix_mut(this_ptr: *mut ::style_option_graphics_item::StyleOptionGraphicsItem) -> *mut ::qt_gui::matrix::Matrix;
  pub fn qt_widgets_c_QStyleOptionGraphicsItem_new_no_args() -> *mut ::style_option_graphics_item::StyleOptionGraphicsItem;
  pub fn qt_widgets_c_QStyleOptionGraphicsItem_new_other(other: *const ::style_option_graphics_item::StyleOptionGraphicsItem) -> *mut ::style_option_graphics_item::StyleOptionGraphicsItem;
  pub fn qt_widgets_c_QStyleOptionGraphicsItem_set_exposedRect(this_ptr: *mut ::style_option_graphics_item::StyleOptionGraphicsItem, value: *const ::qt_core::rect_f::RectF);
  pub fn qt_widgets_c_QStyleOptionGraphicsItem_set_levelOfDetail(this_ptr: *mut ::style_option_graphics_item::StyleOptionGraphicsItem, value: ::libc::c_double);
  pub fn qt_widgets_c_QStyleOptionGraphicsItem_set_matrix(this_ptr: *mut ::style_option_graphics_item::StyleOptionGraphicsItem, value: *const ::qt_gui::matrix::Matrix);

  // Header: QStyleOptionGroupBox
  pub fn qt_widgets_c_QStyleOptionGroupBox_G_static_cast_QStyleOptionComplex_ptr(ptr: *mut ::style_option_group_box::StyleOptionGroupBox) -> *mut ::style_option_complex::StyleOptionComplex;
  pub fn qt_widgets_c_QStyleOptionGroupBox_G_static_cast_QStyleOptionGroupBox_ptr_QStyleOption(ptr: *mut ::style_option::StyleOption) -> *mut ::style_option_group_box::StyleOptionGroupBox;
  pub fn qt_widgets_c_QStyleOptionGroupBox_G_static_cast_QStyleOptionGroupBox_ptr_QStyleOptionComplex(ptr: *mut ::style_option_complex::StyleOptionComplex) -> *mut ::style_option_group_box::StyleOptionGroupBox;
  pub fn qt_widgets_c_QStyleOptionGroupBox_G_static_cast_QStyleOption_ptr(ptr: *mut ::style_option_group_box::StyleOptionGroupBox) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOptionGroupBox_delete(this_ptr: *mut ::style_option_group_box::StyleOptionGroupBox);
  pub fn qt_widgets_c_QStyleOptionGroupBox_lineWidth(this_ptr: *const ::style_option_group_box::StyleOptionGroupBox) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyleOptionGroupBox_midLineWidth(this_ptr: *const ::style_option_group_box::StyleOptionGroupBox) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyleOptionGroupBox_new_no_args() -> *mut ::style_option_group_box::StyleOptionGroupBox;
  pub fn qt_widgets_c_QStyleOptionGroupBox_new_other(other: *const ::style_option_group_box::StyleOptionGroupBox) -> *mut ::style_option_group_box::StyleOptionGroupBox;
  pub fn qt_widgets_c_QStyleOptionGroupBox_set_lineWidth(this_ptr: *mut ::style_option_group_box::StyleOptionGroupBox, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleOptionGroupBox_set_midLineWidth(this_ptr: *mut ::style_option_group_box::StyleOptionGroupBox, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleOptionGroupBox_set_text(this_ptr: *mut ::style_option_group_box::StyleOptionGroupBox, value: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QStyleOptionGroupBox_set_textColor(this_ptr: *mut ::style_option_group_box::StyleOptionGroupBox, value: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QStyleOptionGroupBox_text(this_ptr: *const ::style_option_group_box::StyleOptionGroupBox) -> *const ::qt_core::string::String;
  pub fn qt_widgets_c_QStyleOptionGroupBox_textColor(this_ptr: *const ::style_option_group_box::StyleOptionGroupBox) -> *const ::qt_gui::color::Color;
  pub fn qt_widgets_c_QStyleOptionGroupBox_textColor_mut(this_ptr: *mut ::style_option_group_box::StyleOptionGroupBox) -> *mut ::qt_gui::color::Color;
  pub fn qt_widgets_c_QStyleOptionGroupBox_text_mut(this_ptr: *mut ::style_option_group_box::StyleOptionGroupBox) -> *mut ::qt_core::string::String;

  // Header: QStyleOptionHeader
  pub fn qt_widgets_c_QStyleOptionHeader_G_static_cast_QStyleOptionHeader_ptr(ptr: *mut ::style_option::StyleOption) -> *mut ::style_option_header::StyleOptionHeader;
  pub fn qt_widgets_c_QStyleOptionHeader_G_static_cast_QStyleOption_ptr(ptr: *mut ::style_option_header::StyleOptionHeader) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOptionHeader_delete(this_ptr: *mut ::style_option_header::StyleOptionHeader);
  pub fn qt_widgets_c_QStyleOptionHeader_icon(this_ptr: *const ::style_option_header::StyleOptionHeader) -> *const ::qt_gui::icon::Icon;
  pub fn qt_widgets_c_QStyleOptionHeader_icon_mut(this_ptr: *mut ::style_option_header::StyleOptionHeader) -> *mut ::qt_gui::icon::Icon;
  pub fn qt_widgets_c_QStyleOptionHeader_new_no_args() -> *mut ::style_option_header::StyleOptionHeader;
  pub fn qt_widgets_c_QStyleOptionHeader_new_other(other: *const ::style_option_header::StyleOptionHeader) -> *mut ::style_option_header::StyleOptionHeader;
  pub fn qt_widgets_c_QStyleOptionHeader_orientation(this_ptr: *const ::style_option_header::StyleOptionHeader) -> *const ::qt_core::qt::Orientation;
  pub fn qt_widgets_c_QStyleOptionHeader_orientation_mut(this_ptr: *mut ::style_option_header::StyleOptionHeader) -> *mut ::qt_core::qt::Orientation;
  pub fn qt_widgets_c_QStyleOptionHeader_position(this_ptr: *const ::style_option_header::StyleOptionHeader) -> ::style_option_header::SectionPosition;
  pub fn qt_widgets_c_QStyleOptionHeader_section(this_ptr: *const ::style_option_header::StyleOptionHeader) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyleOptionHeader_selectedPosition(this_ptr: *const ::style_option_header::StyleOptionHeader) -> ::style_option_header::SelectedPosition;
  pub fn qt_widgets_c_QStyleOptionHeader_set_icon(this_ptr: *mut ::style_option_header::StyleOptionHeader, value: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QStyleOptionHeader_set_orientation(this_ptr: *mut ::style_option_header::StyleOptionHeader, value: *const ::qt_core::qt::Orientation);
  pub fn qt_widgets_c_QStyleOptionHeader_set_position(this_ptr: *mut ::style_option_header::StyleOptionHeader, value: ::style_option_header::SectionPosition);
  pub fn qt_widgets_c_QStyleOptionHeader_set_section(this_ptr: *mut ::style_option_header::StyleOptionHeader, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleOptionHeader_set_selectedPosition(this_ptr: *mut ::style_option_header::StyleOptionHeader, value: ::style_option_header::SelectedPosition);
  pub fn qt_widgets_c_QStyleOptionHeader_set_sortIndicator(this_ptr: *mut ::style_option_header::StyleOptionHeader, value: ::style_option_header::SortIndicator);
  pub fn qt_widgets_c_QStyleOptionHeader_set_text(this_ptr: *mut ::style_option_header::StyleOptionHeader, value: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QStyleOptionHeader_sortIndicator(this_ptr: *const ::style_option_header::StyleOptionHeader) -> ::style_option_header::SortIndicator;
  pub fn qt_widgets_c_QStyleOptionHeader_text(this_ptr: *const ::style_option_header::StyleOptionHeader) -> *const ::qt_core::string::String;
  pub fn qt_widgets_c_QStyleOptionHeader_text_mut(this_ptr: *mut ::style_option_header::StyleOptionHeader) -> *mut ::qt_core::string::String;

  // Header: QStyleOptionMenuItem
  pub fn qt_widgets_c_QStyleOptionMenuItem_G_static_cast_QStyleOptionMenuItem_ptr(ptr: *mut ::style_option::StyleOption) -> *mut ::style_option_menu_item::StyleOptionMenuItem;
  pub fn qt_widgets_c_QStyleOptionMenuItem_G_static_cast_QStyleOption_ptr(ptr: *mut ::style_option_menu_item::StyleOptionMenuItem) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOptionMenuItem_checkType(this_ptr: *const ::style_option_menu_item::StyleOptionMenuItem) -> ::style_option_menu_item::CheckType;
  pub fn qt_widgets_c_QStyleOptionMenuItem_checked(this_ptr: *const ::style_option_menu_item::StyleOptionMenuItem) -> bool;
  pub fn qt_widgets_c_QStyleOptionMenuItem_delete(this_ptr: *mut ::style_option_menu_item::StyleOptionMenuItem);
  pub fn qt_widgets_c_QStyleOptionMenuItem_font(this_ptr: *const ::style_option_menu_item::StyleOptionMenuItem) -> *const ::qt_gui::font::Font;
  pub fn qt_widgets_c_QStyleOptionMenuItem_font_mut(this_ptr: *mut ::style_option_menu_item::StyleOptionMenuItem) -> *mut ::qt_gui::font::Font;
  pub fn qt_widgets_c_QStyleOptionMenuItem_icon(this_ptr: *const ::style_option_menu_item::StyleOptionMenuItem) -> *const ::qt_gui::icon::Icon;
  pub fn qt_widgets_c_QStyleOptionMenuItem_icon_mut(this_ptr: *mut ::style_option_menu_item::StyleOptionMenuItem) -> *mut ::qt_gui::icon::Icon;
  pub fn qt_widgets_c_QStyleOptionMenuItem_maxIconWidth(this_ptr: *const ::style_option_menu_item::StyleOptionMenuItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyleOptionMenuItem_menuHasCheckableItems(this_ptr: *const ::style_option_menu_item::StyleOptionMenuItem) -> bool;
  pub fn qt_widgets_c_QStyleOptionMenuItem_menuItemType(this_ptr: *const ::style_option_menu_item::StyleOptionMenuItem) -> ::style_option_menu_item::MenuItemType;
  pub fn qt_widgets_c_QStyleOptionMenuItem_menuRect(this_ptr: *const ::style_option_menu_item::StyleOptionMenuItem) -> *const ::qt_core::rect::Rect;
  pub fn qt_widgets_c_QStyleOptionMenuItem_menuRect_mut(this_ptr: *mut ::style_option_menu_item::StyleOptionMenuItem) -> *mut ::qt_core::rect::Rect;
  pub fn qt_widgets_c_QStyleOptionMenuItem_new_no_args() -> *mut ::style_option_menu_item::StyleOptionMenuItem;
  pub fn qt_widgets_c_QStyleOptionMenuItem_new_other(other: *const ::style_option_menu_item::StyleOptionMenuItem) -> *mut ::style_option_menu_item::StyleOptionMenuItem;
  pub fn qt_widgets_c_QStyleOptionMenuItem_set_checkType(this_ptr: *mut ::style_option_menu_item::StyleOptionMenuItem, value: ::style_option_menu_item::CheckType);
  pub fn qt_widgets_c_QStyleOptionMenuItem_set_checked(this_ptr: *mut ::style_option_menu_item::StyleOptionMenuItem, value: bool);
  pub fn qt_widgets_c_QStyleOptionMenuItem_set_font(this_ptr: *mut ::style_option_menu_item::StyleOptionMenuItem, value: *const ::qt_gui::font::Font);
  pub fn qt_widgets_c_QStyleOptionMenuItem_set_icon(this_ptr: *mut ::style_option_menu_item::StyleOptionMenuItem, value: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QStyleOptionMenuItem_set_maxIconWidth(this_ptr: *mut ::style_option_menu_item::StyleOptionMenuItem, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleOptionMenuItem_set_menuHasCheckableItems(this_ptr: *mut ::style_option_menu_item::StyleOptionMenuItem, value: bool);
  pub fn qt_widgets_c_QStyleOptionMenuItem_set_menuItemType(this_ptr: *mut ::style_option_menu_item::StyleOptionMenuItem, value: ::style_option_menu_item::MenuItemType);
  pub fn qt_widgets_c_QStyleOptionMenuItem_set_menuRect(this_ptr: *mut ::style_option_menu_item::StyleOptionMenuItem, value: *const ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QStyleOptionMenuItem_set_tabWidth(this_ptr: *mut ::style_option_menu_item::StyleOptionMenuItem, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleOptionMenuItem_set_text(this_ptr: *mut ::style_option_menu_item::StyleOptionMenuItem, value: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QStyleOptionMenuItem_tabWidth(this_ptr: *const ::style_option_menu_item::StyleOptionMenuItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyleOptionMenuItem_text(this_ptr: *const ::style_option_menu_item::StyleOptionMenuItem) -> *const ::qt_core::string::String;
  pub fn qt_widgets_c_QStyleOptionMenuItem_text_mut(this_ptr: *mut ::style_option_menu_item::StyleOptionMenuItem) -> *mut ::qt_core::string::String;

  // Header: QStyleOptionProgressBar
  pub fn qt_widgets_c_QStyleOptionProgressBar_G_static_cast_QStyleOptionProgressBar_ptr(ptr: *mut ::style_option::StyleOption) -> *mut ::style_option_progress_bar::StyleOptionProgressBar;
  pub fn qt_widgets_c_QStyleOptionProgressBar_G_static_cast_QStyleOption_ptr(ptr: *mut ::style_option_progress_bar::StyleOptionProgressBar) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOptionProgressBar_bottomToTop(this_ptr: *const ::style_option_progress_bar::StyleOptionProgressBar) -> bool;
  pub fn qt_widgets_c_QStyleOptionProgressBar_delete(this_ptr: *mut ::style_option_progress_bar::StyleOptionProgressBar);
  pub fn qt_widgets_c_QStyleOptionProgressBar_invertedAppearance(this_ptr: *const ::style_option_progress_bar::StyleOptionProgressBar) -> bool;
  pub fn qt_widgets_c_QStyleOptionProgressBar_maximum(this_ptr: *const ::style_option_progress_bar::StyleOptionProgressBar) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyleOptionProgressBar_minimum(this_ptr: *const ::style_option_progress_bar::StyleOptionProgressBar) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyleOptionProgressBar_new_no_args() -> *mut ::style_option_progress_bar::StyleOptionProgressBar;
  pub fn qt_widgets_c_QStyleOptionProgressBar_new_other(other: *const ::style_option_progress_bar::StyleOptionProgressBar) -> *mut ::style_option_progress_bar::StyleOptionProgressBar;
  pub fn qt_widgets_c_QStyleOptionProgressBar_orientation(this_ptr: *const ::style_option_progress_bar::StyleOptionProgressBar) -> *const ::qt_core::qt::Orientation;
  pub fn qt_widgets_c_QStyleOptionProgressBar_orientation_mut(this_ptr: *mut ::style_option_progress_bar::StyleOptionProgressBar) -> *mut ::qt_core::qt::Orientation;
  pub fn qt_widgets_c_QStyleOptionProgressBar_progress(this_ptr: *const ::style_option_progress_bar::StyleOptionProgressBar) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyleOptionProgressBar_set_bottomToTop(this_ptr: *mut ::style_option_progress_bar::StyleOptionProgressBar, value: bool);
  pub fn qt_widgets_c_QStyleOptionProgressBar_set_invertedAppearance(this_ptr: *mut ::style_option_progress_bar::StyleOptionProgressBar, value: bool);
  pub fn qt_widgets_c_QStyleOptionProgressBar_set_maximum(this_ptr: *mut ::style_option_progress_bar::StyleOptionProgressBar, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleOptionProgressBar_set_minimum(this_ptr: *mut ::style_option_progress_bar::StyleOptionProgressBar, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleOptionProgressBar_set_orientation(this_ptr: *mut ::style_option_progress_bar::StyleOptionProgressBar, value: *const ::qt_core::qt::Orientation);
  pub fn qt_widgets_c_QStyleOptionProgressBar_set_progress(this_ptr: *mut ::style_option_progress_bar::StyleOptionProgressBar, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleOptionProgressBar_set_text(this_ptr: *mut ::style_option_progress_bar::StyleOptionProgressBar, value: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QStyleOptionProgressBar_set_textVisible(this_ptr: *mut ::style_option_progress_bar::StyleOptionProgressBar, value: bool);
  pub fn qt_widgets_c_QStyleOptionProgressBar_text(this_ptr: *const ::style_option_progress_bar::StyleOptionProgressBar) -> *const ::qt_core::string::String;
  pub fn qt_widgets_c_QStyleOptionProgressBar_textVisible(this_ptr: *const ::style_option_progress_bar::StyleOptionProgressBar) -> bool;
  pub fn qt_widgets_c_QStyleOptionProgressBar_text_mut(this_ptr: *mut ::style_option_progress_bar::StyleOptionProgressBar) -> *mut ::qt_core::string::String;

  // Header: QStyleOptionRubberBand
  pub fn qt_widgets_c_QStyleOptionRubberBand_G_static_cast_QStyleOptionRubberBand_ptr(ptr: *mut ::style_option::StyleOption) -> *mut ::style_option_rubber_band::StyleOptionRubberBand;
  pub fn qt_widgets_c_QStyleOptionRubberBand_G_static_cast_QStyleOption_ptr(ptr: *mut ::style_option_rubber_band::StyleOptionRubberBand) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOptionRubberBand_delete(this_ptr: *mut ::style_option_rubber_band::StyleOptionRubberBand);
  pub fn qt_widgets_c_QStyleOptionRubberBand_new_no_args() -> *mut ::style_option_rubber_band::StyleOptionRubberBand;
  pub fn qt_widgets_c_QStyleOptionRubberBand_new_other(other: *const ::style_option_rubber_band::StyleOptionRubberBand) -> *mut ::style_option_rubber_band::StyleOptionRubberBand;
  pub fn qt_widgets_c_QStyleOptionRubberBand_opaque(this_ptr: *const ::style_option_rubber_band::StyleOptionRubberBand) -> bool;
  pub fn qt_widgets_c_QStyleOptionRubberBand_set_opaque(this_ptr: *mut ::style_option_rubber_band::StyleOptionRubberBand, value: bool);
  pub fn qt_widgets_c_QStyleOptionRubberBand_set_shape(this_ptr: *mut ::style_option_rubber_band::StyleOptionRubberBand, value: *const ::rubber_band::Shape);
  pub fn qt_widgets_c_QStyleOptionRubberBand_shape(this_ptr: *const ::style_option_rubber_band::StyleOptionRubberBand) -> *const ::rubber_band::Shape;
  pub fn qt_widgets_c_QStyleOptionRubberBand_shape_mut(this_ptr: *mut ::style_option_rubber_band::StyleOptionRubberBand) -> *mut ::rubber_band::Shape;

  // Header: QStyleOptionSizeGrip
  pub fn qt_widgets_c_QStyleOptionSizeGrip_G_static_cast_QStyleOptionComplex_ptr(ptr: *mut ::style_option_size_grip::StyleOptionSizeGrip) -> *mut ::style_option_complex::StyleOptionComplex;
  pub fn qt_widgets_c_QStyleOptionSizeGrip_G_static_cast_QStyleOptionSizeGrip_ptr_QStyleOption(ptr: *mut ::style_option::StyleOption) -> *mut ::style_option_size_grip::StyleOptionSizeGrip;
  pub fn qt_widgets_c_QStyleOptionSizeGrip_G_static_cast_QStyleOptionSizeGrip_ptr_QStyleOptionComplex(ptr: *mut ::style_option_complex::StyleOptionComplex) -> *mut ::style_option_size_grip::StyleOptionSizeGrip;
  pub fn qt_widgets_c_QStyleOptionSizeGrip_G_static_cast_QStyleOption_ptr(ptr: *mut ::style_option_size_grip::StyleOptionSizeGrip) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOptionSizeGrip_constructor_no_args(output: *mut ::style_option_size_grip::StyleOptionSizeGrip);
  pub fn qt_widgets_c_QStyleOptionSizeGrip_constructor_other(other: *const ::style_option_size_grip::StyleOptionSizeGrip, output: *mut ::style_option_size_grip::StyleOptionSizeGrip);
  pub fn qt_widgets_c_QStyleOptionSizeGrip_corner(this_ptr: *const ::style_option_size_grip::StyleOptionSizeGrip) -> *const ::qt_core::qt::Corner;
  pub fn qt_widgets_c_QStyleOptionSizeGrip_corner_mut(this_ptr: *mut ::style_option_size_grip::StyleOptionSizeGrip) -> *mut ::qt_core::qt::Corner;
  pub fn qt_widgets_c_QStyleOptionSizeGrip_destructor(this_ptr: *mut ::style_option_size_grip::StyleOptionSizeGrip);
  pub fn qt_widgets_c_QStyleOptionSizeGrip_set_corner(this_ptr: *mut ::style_option_size_grip::StyleOptionSizeGrip, value: *const ::qt_core::qt::Corner);

  // Header: QStyleOptionSlider
  pub fn qt_widgets_c_QStyleOptionSlider_G_static_cast_QStyleOptionComplex_ptr(ptr: *mut ::style_option_slider::StyleOptionSlider) -> *mut ::style_option_complex::StyleOptionComplex;
  pub fn qt_widgets_c_QStyleOptionSlider_G_static_cast_QStyleOptionSlider_ptr_QStyleOption(ptr: *mut ::style_option::StyleOption) -> *mut ::style_option_slider::StyleOptionSlider;
  pub fn qt_widgets_c_QStyleOptionSlider_G_static_cast_QStyleOptionSlider_ptr_QStyleOptionComplex(ptr: *mut ::style_option_complex::StyleOptionComplex) -> *mut ::style_option_slider::StyleOptionSlider;
  pub fn qt_widgets_c_QStyleOptionSlider_G_static_cast_QStyleOption_ptr(ptr: *mut ::style_option_slider::StyleOptionSlider) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOptionSlider_delete(this_ptr: *mut ::style_option_slider::StyleOptionSlider);
  pub fn qt_widgets_c_QStyleOptionSlider_dialWrapping(this_ptr: *const ::style_option_slider::StyleOptionSlider) -> bool;
  pub fn qt_widgets_c_QStyleOptionSlider_maximum(this_ptr: *const ::style_option_slider::StyleOptionSlider) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyleOptionSlider_minimum(this_ptr: *const ::style_option_slider::StyleOptionSlider) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyleOptionSlider_new_no_args() -> *mut ::style_option_slider::StyleOptionSlider;
  pub fn qt_widgets_c_QStyleOptionSlider_new_other(other: *const ::style_option_slider::StyleOptionSlider) -> *mut ::style_option_slider::StyleOptionSlider;
  pub fn qt_widgets_c_QStyleOptionSlider_notchTarget(this_ptr: *const ::style_option_slider::StyleOptionSlider) -> ::libc::c_double;
  pub fn qt_widgets_c_QStyleOptionSlider_orientation(this_ptr: *const ::style_option_slider::StyleOptionSlider) -> *const ::qt_core::qt::Orientation;
  pub fn qt_widgets_c_QStyleOptionSlider_orientation_mut(this_ptr: *mut ::style_option_slider::StyleOptionSlider) -> *mut ::qt_core::qt::Orientation;
  pub fn qt_widgets_c_QStyleOptionSlider_pageStep(this_ptr: *const ::style_option_slider::StyleOptionSlider) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyleOptionSlider_set_dialWrapping(this_ptr: *mut ::style_option_slider::StyleOptionSlider, value: bool);
  pub fn qt_widgets_c_QStyleOptionSlider_set_maximum(this_ptr: *mut ::style_option_slider::StyleOptionSlider, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleOptionSlider_set_minimum(this_ptr: *mut ::style_option_slider::StyleOptionSlider, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleOptionSlider_set_notchTarget(this_ptr: *mut ::style_option_slider::StyleOptionSlider, value: ::libc::c_double);
  pub fn qt_widgets_c_QStyleOptionSlider_set_orientation(this_ptr: *mut ::style_option_slider::StyleOptionSlider, value: *const ::qt_core::qt::Orientation);
  pub fn qt_widgets_c_QStyleOptionSlider_set_pageStep(this_ptr: *mut ::style_option_slider::StyleOptionSlider, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleOptionSlider_set_singleStep(this_ptr: *mut ::style_option_slider::StyleOptionSlider, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleOptionSlider_set_sliderPosition(this_ptr: *mut ::style_option_slider::StyleOptionSlider, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleOptionSlider_set_sliderValue(this_ptr: *mut ::style_option_slider::StyleOptionSlider, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleOptionSlider_set_tickInterval(this_ptr: *mut ::style_option_slider::StyleOptionSlider, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleOptionSlider_set_tickPosition(this_ptr: *mut ::style_option_slider::StyleOptionSlider, value: *const ::slider::TickPosition);
  pub fn qt_widgets_c_QStyleOptionSlider_set_upsideDown(this_ptr: *mut ::style_option_slider::StyleOptionSlider, value: bool);
  pub fn qt_widgets_c_QStyleOptionSlider_singleStep(this_ptr: *const ::style_option_slider::StyleOptionSlider) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyleOptionSlider_sliderPosition(this_ptr: *const ::style_option_slider::StyleOptionSlider) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyleOptionSlider_sliderValue(this_ptr: *const ::style_option_slider::StyleOptionSlider) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyleOptionSlider_tickInterval(this_ptr: *const ::style_option_slider::StyleOptionSlider) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyleOptionSlider_tickPosition(this_ptr: *const ::style_option_slider::StyleOptionSlider) -> *const ::slider::TickPosition;
  pub fn qt_widgets_c_QStyleOptionSlider_tickPosition_mut(this_ptr: *mut ::style_option_slider::StyleOptionSlider) -> *mut ::slider::TickPosition;
  pub fn qt_widgets_c_QStyleOptionSlider_upsideDown(this_ptr: *const ::style_option_slider::StyleOptionSlider) -> bool;

  // Header: QStyleOptionSpinBox
  pub fn qt_widgets_c_QStyleOptionSpinBox_G_static_cast_QStyleOptionComplex_ptr(ptr: *mut ::style_option_spin_box::StyleOptionSpinBox) -> *mut ::style_option_complex::StyleOptionComplex;
  pub fn qt_widgets_c_QStyleOptionSpinBox_G_static_cast_QStyleOptionSpinBox_ptr_QStyleOption(ptr: *mut ::style_option::StyleOption) -> *mut ::style_option_spin_box::StyleOptionSpinBox;
  pub fn qt_widgets_c_QStyleOptionSpinBox_G_static_cast_QStyleOptionSpinBox_ptr_QStyleOptionComplex(ptr: *mut ::style_option_complex::StyleOptionComplex) -> *mut ::style_option_spin_box::StyleOptionSpinBox;
  pub fn qt_widgets_c_QStyleOptionSpinBox_G_static_cast_QStyleOption_ptr(ptr: *mut ::style_option_spin_box::StyleOptionSpinBox) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOptionSpinBox_buttonSymbols(this_ptr: *const ::style_option_spin_box::StyleOptionSpinBox) -> *const ::abstract_spin_box::ButtonSymbols;
  pub fn qt_widgets_c_QStyleOptionSpinBox_buttonSymbols_mut(this_ptr: *mut ::style_option_spin_box::StyleOptionSpinBox) -> *mut ::abstract_spin_box::ButtonSymbols;
  pub fn qt_widgets_c_QStyleOptionSpinBox_delete(this_ptr: *mut ::style_option_spin_box::StyleOptionSpinBox);
  pub fn qt_widgets_c_QStyleOptionSpinBox_frame(this_ptr: *const ::style_option_spin_box::StyleOptionSpinBox) -> bool;
  pub fn qt_widgets_c_QStyleOptionSpinBox_new_no_args() -> *mut ::style_option_spin_box::StyleOptionSpinBox;
  pub fn qt_widgets_c_QStyleOptionSpinBox_new_other(other: *const ::style_option_spin_box::StyleOptionSpinBox) -> *mut ::style_option_spin_box::StyleOptionSpinBox;
  pub fn qt_widgets_c_QStyleOptionSpinBox_set_buttonSymbols(this_ptr: *mut ::style_option_spin_box::StyleOptionSpinBox, value: *const ::abstract_spin_box::ButtonSymbols);
  pub fn qt_widgets_c_QStyleOptionSpinBox_set_frame(this_ptr: *mut ::style_option_spin_box::StyleOptionSpinBox, value: bool);

  // Header: QStyleOptionTab
  pub fn qt_widgets_c_QStyleOptionTab_G_static_cast_QStyleOptionTab_ptr(ptr: *mut ::style_option::StyleOption) -> *mut ::style_option_tab::StyleOptionTab;
  pub fn qt_widgets_c_QStyleOptionTab_G_static_cast_QStyleOption_ptr(ptr: *mut ::style_option_tab::StyleOptionTab) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOptionTab_cornerWidgets(this_ptr: *const ::style_option_tab::StyleOptionTab) -> ::libc::c_uint;
  pub fn qt_widgets_c_QStyleOptionTab_delete(this_ptr: *mut ::style_option_tab::StyleOptionTab);
  pub fn qt_widgets_c_QStyleOptionTab_documentMode(this_ptr: *const ::style_option_tab::StyleOptionTab) -> bool;
  pub fn qt_widgets_c_QStyleOptionTab_features(this_ptr: *const ::style_option_tab::StyleOptionTab) -> ::libc::c_uint;
  pub fn qt_widgets_c_QStyleOptionTab_icon(this_ptr: *const ::style_option_tab::StyleOptionTab) -> *const ::qt_gui::icon::Icon;
  pub fn qt_widgets_c_QStyleOptionTab_iconSize(this_ptr: *const ::style_option_tab::StyleOptionTab) -> *const ::qt_core::size::Size;
  pub fn qt_widgets_c_QStyleOptionTab_iconSize_mut(this_ptr: *mut ::style_option_tab::StyleOptionTab) -> *mut ::qt_core::size::Size;
  pub fn qt_widgets_c_QStyleOptionTab_icon_mut(this_ptr: *mut ::style_option_tab::StyleOptionTab) -> *mut ::qt_gui::icon::Icon;
  pub fn qt_widgets_c_QStyleOptionTab_leftButtonSize(this_ptr: *const ::style_option_tab::StyleOptionTab) -> *const ::qt_core::size::Size;
  pub fn qt_widgets_c_QStyleOptionTab_leftButtonSize_mut(this_ptr: *mut ::style_option_tab::StyleOptionTab) -> *mut ::qt_core::size::Size;
  pub fn qt_widgets_c_QStyleOptionTab_new_no_args() -> *mut ::style_option_tab::StyleOptionTab;
  pub fn qt_widgets_c_QStyleOptionTab_new_other(other: *const ::style_option_tab::StyleOptionTab) -> *mut ::style_option_tab::StyleOptionTab;
  pub fn qt_widgets_c_QStyleOptionTab_position(this_ptr: *const ::style_option_tab::StyleOptionTab) -> ::style_option_tab::TabPosition;
  pub fn qt_widgets_c_QStyleOptionTab_rightButtonSize(this_ptr: *const ::style_option_tab::StyleOptionTab) -> *const ::qt_core::size::Size;
  pub fn qt_widgets_c_QStyleOptionTab_rightButtonSize_mut(this_ptr: *mut ::style_option_tab::StyleOptionTab) -> *mut ::qt_core::size::Size;
  pub fn qt_widgets_c_QStyleOptionTab_row(this_ptr: *const ::style_option_tab::StyleOptionTab) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyleOptionTab_selectedPosition(this_ptr: *const ::style_option_tab::StyleOptionTab) -> ::style_option_tab::SelectedPosition;
  pub fn qt_widgets_c_QStyleOptionTab_set_cornerWidgets(this_ptr: *mut ::style_option_tab::StyleOptionTab, value: ::libc::c_uint);
  pub fn qt_widgets_c_QStyleOptionTab_set_documentMode(this_ptr: *mut ::style_option_tab::StyleOptionTab, value: bool);
  pub fn qt_widgets_c_QStyleOptionTab_set_features(this_ptr: *mut ::style_option_tab::StyleOptionTab, value: ::libc::c_uint);
  pub fn qt_widgets_c_QStyleOptionTab_set_icon(this_ptr: *mut ::style_option_tab::StyleOptionTab, value: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QStyleOptionTab_set_iconSize(this_ptr: *mut ::style_option_tab::StyleOptionTab, value: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QStyleOptionTab_set_leftButtonSize(this_ptr: *mut ::style_option_tab::StyleOptionTab, value: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QStyleOptionTab_set_position(this_ptr: *mut ::style_option_tab::StyleOptionTab, value: ::style_option_tab::TabPosition);
  pub fn qt_widgets_c_QStyleOptionTab_set_rightButtonSize(this_ptr: *mut ::style_option_tab::StyleOptionTab, value: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QStyleOptionTab_set_row(this_ptr: *mut ::style_option_tab::StyleOptionTab, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleOptionTab_set_selectedPosition(this_ptr: *mut ::style_option_tab::StyleOptionTab, value: ::style_option_tab::SelectedPosition);
  pub fn qt_widgets_c_QStyleOptionTab_set_shape(this_ptr: *mut ::style_option_tab::StyleOptionTab, value: *const ::tab_bar::Shape);
  pub fn qt_widgets_c_QStyleOptionTab_set_text(this_ptr: *mut ::style_option_tab::StyleOptionTab, value: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QStyleOptionTab_shape(this_ptr: *const ::style_option_tab::StyleOptionTab) -> *const ::tab_bar::Shape;
  pub fn qt_widgets_c_QStyleOptionTab_shape_mut(this_ptr: *mut ::style_option_tab::StyleOptionTab) -> *mut ::tab_bar::Shape;
  pub fn qt_widgets_c_QStyleOptionTab_text(this_ptr: *const ::style_option_tab::StyleOptionTab) -> *const ::qt_core::string::String;
  pub fn qt_widgets_c_QStyleOptionTab_text_mut(this_ptr: *mut ::style_option_tab::StyleOptionTab) -> *mut ::qt_core::string::String;

  // Header: QStyleOptionTabBarBase
  pub fn qt_widgets_c_QStyleOptionTabBarBase_G_static_cast_QStyleOptionTabBarBase_ptr(ptr: *mut ::style_option::StyleOption) -> *mut ::style_option_tab_bar_base::StyleOptionTabBarBase;
  pub fn qt_widgets_c_QStyleOptionTabBarBase_G_static_cast_QStyleOption_ptr(ptr: *mut ::style_option_tab_bar_base::StyleOptionTabBarBase) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOptionTabBarBase_constructor_no_args(output: *mut ::style_option_tab_bar_base::StyleOptionTabBarBase);
  pub fn qt_widgets_c_QStyleOptionTabBarBase_constructor_other(other: *const ::style_option_tab_bar_base::StyleOptionTabBarBase, output: *mut ::style_option_tab_bar_base::StyleOptionTabBarBase);
  pub fn qt_widgets_c_QStyleOptionTabBarBase_destructor(this_ptr: *mut ::style_option_tab_bar_base::StyleOptionTabBarBase);
  pub fn qt_widgets_c_QStyleOptionTabBarBase_documentMode(this_ptr: *const ::style_option_tab_bar_base::StyleOptionTabBarBase) -> bool;
  pub fn qt_widgets_c_QStyleOptionTabBarBase_selectedTabRect(this_ptr: *const ::style_option_tab_bar_base::StyleOptionTabBarBase) -> *const ::qt_core::rect::Rect;
  pub fn qt_widgets_c_QStyleOptionTabBarBase_selectedTabRect_mut(this_ptr: *mut ::style_option_tab_bar_base::StyleOptionTabBarBase) -> *mut ::qt_core::rect::Rect;
  pub fn qt_widgets_c_QStyleOptionTabBarBase_set_documentMode(this_ptr: *mut ::style_option_tab_bar_base::StyleOptionTabBarBase, value: bool);
  pub fn qt_widgets_c_QStyleOptionTabBarBase_set_selectedTabRect(this_ptr: *mut ::style_option_tab_bar_base::StyleOptionTabBarBase, value: *const ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QStyleOptionTabBarBase_set_shape(this_ptr: *mut ::style_option_tab_bar_base::StyleOptionTabBarBase, value: *const ::tab_bar::Shape);
  pub fn qt_widgets_c_QStyleOptionTabBarBase_set_tabBarRect(this_ptr: *mut ::style_option_tab_bar_base::StyleOptionTabBarBase, value: *const ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QStyleOptionTabBarBase_shape(this_ptr: *const ::style_option_tab_bar_base::StyleOptionTabBarBase) -> *const ::tab_bar::Shape;
  pub fn qt_widgets_c_QStyleOptionTabBarBase_shape_mut(this_ptr: *mut ::style_option_tab_bar_base::StyleOptionTabBarBase) -> *mut ::tab_bar::Shape;
  pub fn qt_widgets_c_QStyleOptionTabBarBase_tabBarRect(this_ptr: *const ::style_option_tab_bar_base::StyleOptionTabBarBase) -> *const ::qt_core::rect::Rect;
  pub fn qt_widgets_c_QStyleOptionTabBarBase_tabBarRect_mut(this_ptr: *mut ::style_option_tab_bar_base::StyleOptionTabBarBase) -> *mut ::qt_core::rect::Rect;

  // Header: QStyleOptionTabWidgetFrame
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_G_static_cast_QStyleOptionTabWidgetFrame_ptr(ptr: *mut ::style_option::StyleOption) -> *mut ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame;
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_G_static_cast_QStyleOption_ptr(ptr: *mut ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_delete(this_ptr: *mut ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame);
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_leftCornerWidgetSize(this_ptr: *const ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame) -> *const ::qt_core::size::Size;
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_leftCornerWidgetSize_mut(this_ptr: *mut ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame) -> *mut ::qt_core::size::Size;
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_lineWidth(this_ptr: *const ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_midLineWidth(this_ptr: *const ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_new_no_args() -> *mut ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame;
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_new_other(other: *const ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame) -> *mut ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame;
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_rightCornerWidgetSize(this_ptr: *const ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame) -> *const ::qt_core::size::Size;
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_rightCornerWidgetSize_mut(this_ptr: *mut ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame) -> *mut ::qt_core::size::Size;
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_selectedTabRect(this_ptr: *const ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame) -> *const ::qt_core::rect::Rect;
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_selectedTabRect_mut(this_ptr: *mut ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame) -> *mut ::qt_core::rect::Rect;
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_set_leftCornerWidgetSize(this_ptr: *mut ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame, value: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_set_lineWidth(this_ptr: *mut ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_set_midLineWidth(this_ptr: *mut ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_set_rightCornerWidgetSize(this_ptr: *mut ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame, value: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_set_selectedTabRect(this_ptr: *mut ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame, value: *const ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_set_shape(this_ptr: *mut ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame, value: *const ::tab_bar::Shape);
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_set_tabBarRect(this_ptr: *mut ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame, value: *const ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_set_tabBarSize(this_ptr: *mut ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame, value: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_shape(this_ptr: *const ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame) -> *const ::tab_bar::Shape;
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_shape_mut(this_ptr: *mut ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame) -> *mut ::tab_bar::Shape;
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_tabBarRect(this_ptr: *const ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame) -> *const ::qt_core::rect::Rect;
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_tabBarRect_mut(this_ptr: *mut ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame) -> *mut ::qt_core::rect::Rect;
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_tabBarSize(this_ptr: *const ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame) -> *const ::qt_core::size::Size;
  pub fn qt_widgets_c_QStyleOptionTabWidgetFrame_tabBarSize_mut(this_ptr: *mut ::style_option_tab_widget_frame::StyleOptionTabWidgetFrame) -> *mut ::qt_core::size::Size;

  // Header: QStyleOptionTitleBar
  pub fn qt_widgets_c_QStyleOptionTitleBar_G_static_cast_QStyleOptionComplex_ptr(ptr: *mut ::style_option_title_bar::StyleOptionTitleBar) -> *mut ::style_option_complex::StyleOptionComplex;
  pub fn qt_widgets_c_QStyleOptionTitleBar_G_static_cast_QStyleOptionTitleBar_ptr_QStyleOption(ptr: *mut ::style_option::StyleOption) -> *mut ::style_option_title_bar::StyleOptionTitleBar;
  pub fn qt_widgets_c_QStyleOptionTitleBar_G_static_cast_QStyleOptionTitleBar_ptr_QStyleOptionComplex(ptr: *mut ::style_option_complex::StyleOptionComplex) -> *mut ::style_option_title_bar::StyleOptionTitleBar;
  pub fn qt_widgets_c_QStyleOptionTitleBar_G_static_cast_QStyleOption_ptr(ptr: *mut ::style_option_title_bar::StyleOptionTitleBar) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOptionTitleBar_constructor_no_args(output: *mut ::style_option_title_bar::StyleOptionTitleBar);
  pub fn qt_widgets_c_QStyleOptionTitleBar_constructor_other(other: *const ::style_option_title_bar::StyleOptionTitleBar, output: *mut ::style_option_title_bar::StyleOptionTitleBar);
  pub fn qt_widgets_c_QStyleOptionTitleBar_destructor(this_ptr: *mut ::style_option_title_bar::StyleOptionTitleBar);
  pub fn qt_widgets_c_QStyleOptionTitleBar_icon(this_ptr: *const ::style_option_title_bar::StyleOptionTitleBar) -> *const ::qt_gui::icon::Icon;
  pub fn qt_widgets_c_QStyleOptionTitleBar_icon_mut(this_ptr: *mut ::style_option_title_bar::StyleOptionTitleBar) -> *mut ::qt_gui::icon::Icon;
  pub fn qt_widgets_c_QStyleOptionTitleBar_set_icon(this_ptr: *mut ::style_option_title_bar::StyleOptionTitleBar, value: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QStyleOptionTitleBar_set_text(this_ptr: *mut ::style_option_title_bar::StyleOptionTitleBar, value: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QStyleOptionTitleBar_set_titleBarState(this_ptr: *mut ::style_option_title_bar::StyleOptionTitleBar, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleOptionTitleBar_text(this_ptr: *const ::style_option_title_bar::StyleOptionTitleBar) -> *const ::qt_core::string::String;
  pub fn qt_widgets_c_QStyleOptionTitleBar_text_mut(this_ptr: *mut ::style_option_title_bar::StyleOptionTitleBar) -> *mut ::qt_core::string::String;
  pub fn qt_widgets_c_QStyleOptionTitleBar_titleBarState(this_ptr: *const ::style_option_title_bar::StyleOptionTitleBar) -> ::libc::c_int;

  // Header: QStyleOptionToolBar
  pub fn qt_widgets_c_QStyleOptionToolBar_G_static_cast_QStyleOptionToolBar_ptr(ptr: *mut ::style_option::StyleOption) -> *mut ::style_option_tool_bar::StyleOptionToolBar;
  pub fn qt_widgets_c_QStyleOptionToolBar_G_static_cast_QStyleOption_ptr(ptr: *mut ::style_option_tool_bar::StyleOptionToolBar) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOptionToolBar_delete(this_ptr: *mut ::style_option_tool_bar::StyleOptionToolBar);
  pub fn qt_widgets_c_QStyleOptionToolBar_features(this_ptr: *const ::style_option_tool_bar::StyleOptionToolBar) -> ::libc::c_uint;
  pub fn qt_widgets_c_QStyleOptionToolBar_lineWidth(this_ptr: *const ::style_option_tool_bar::StyleOptionToolBar) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyleOptionToolBar_midLineWidth(this_ptr: *const ::style_option_tool_bar::StyleOptionToolBar) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyleOptionToolBar_new_no_args() -> *mut ::style_option_tool_bar::StyleOptionToolBar;
  pub fn qt_widgets_c_QStyleOptionToolBar_new_other(other: *const ::style_option_tool_bar::StyleOptionToolBar) -> *mut ::style_option_tool_bar::StyleOptionToolBar;
  pub fn qt_widgets_c_QStyleOptionToolBar_positionOfLine(this_ptr: *const ::style_option_tool_bar::StyleOptionToolBar) -> ::style_option_tool_bar::ToolBarPosition;
  pub fn qt_widgets_c_QStyleOptionToolBar_positionWithinLine(this_ptr: *const ::style_option_tool_bar::StyleOptionToolBar) -> ::style_option_tool_bar::ToolBarPosition;
  pub fn qt_widgets_c_QStyleOptionToolBar_set_features(this_ptr: *mut ::style_option_tool_bar::StyleOptionToolBar, value: ::libc::c_uint);
  pub fn qt_widgets_c_QStyleOptionToolBar_set_lineWidth(this_ptr: *mut ::style_option_tool_bar::StyleOptionToolBar, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleOptionToolBar_set_midLineWidth(this_ptr: *mut ::style_option_tool_bar::StyleOptionToolBar, value: ::libc::c_int);
  pub fn qt_widgets_c_QStyleOptionToolBar_set_positionOfLine(this_ptr: *mut ::style_option_tool_bar::StyleOptionToolBar, value: ::style_option_tool_bar::ToolBarPosition);
  pub fn qt_widgets_c_QStyleOptionToolBar_set_positionWithinLine(this_ptr: *mut ::style_option_tool_bar::StyleOptionToolBar, value: ::style_option_tool_bar::ToolBarPosition);
  pub fn qt_widgets_c_QStyleOptionToolBar_set_toolBarArea(this_ptr: *mut ::style_option_tool_bar::StyleOptionToolBar, value: *const ::qt_core::qt::ToolBarArea);
  pub fn qt_widgets_c_QStyleOptionToolBar_toolBarArea(this_ptr: *const ::style_option_tool_bar::StyleOptionToolBar) -> *const ::qt_core::qt::ToolBarArea;
  pub fn qt_widgets_c_QStyleOptionToolBar_toolBarArea_mut(this_ptr: *mut ::style_option_tool_bar::StyleOptionToolBar) -> *mut ::qt_core::qt::ToolBarArea;

  // Header: QStyleOptionToolBox
  pub fn qt_widgets_c_QStyleOptionToolBox_G_static_cast_QStyleOptionToolBox_ptr(ptr: *mut ::style_option::StyleOption) -> *mut ::style_option_tool_box::StyleOptionToolBox;
  pub fn qt_widgets_c_QStyleOptionToolBox_G_static_cast_QStyleOption_ptr(ptr: *mut ::style_option_tool_box::StyleOptionToolBox) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOptionToolBox_constructor_no_args(output: *mut ::style_option_tool_box::StyleOptionToolBox);
  pub fn qt_widgets_c_QStyleOptionToolBox_constructor_other(other: *const ::style_option_tool_box::StyleOptionToolBox, output: *mut ::style_option_tool_box::StyleOptionToolBox);
  pub fn qt_widgets_c_QStyleOptionToolBox_destructor(this_ptr: *mut ::style_option_tool_box::StyleOptionToolBox);
  pub fn qt_widgets_c_QStyleOptionToolBox_icon(this_ptr: *const ::style_option_tool_box::StyleOptionToolBox) -> *const ::qt_gui::icon::Icon;
  pub fn qt_widgets_c_QStyleOptionToolBox_icon_mut(this_ptr: *mut ::style_option_tool_box::StyleOptionToolBox) -> *mut ::qt_gui::icon::Icon;
  pub fn qt_widgets_c_QStyleOptionToolBox_position(this_ptr: *const ::style_option_tool_box::StyleOptionToolBox) -> ::style_option_tool_box::TabPosition;
  pub fn qt_widgets_c_QStyleOptionToolBox_selectedPosition(this_ptr: *const ::style_option_tool_box::StyleOptionToolBox) -> ::style_option_tool_box::SelectedPosition;
  pub fn qt_widgets_c_QStyleOptionToolBox_set_icon(this_ptr: *mut ::style_option_tool_box::StyleOptionToolBox, value: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QStyleOptionToolBox_set_position(this_ptr: *mut ::style_option_tool_box::StyleOptionToolBox, value: ::style_option_tool_box::TabPosition);
  pub fn qt_widgets_c_QStyleOptionToolBox_set_selectedPosition(this_ptr: *mut ::style_option_tool_box::StyleOptionToolBox, value: ::style_option_tool_box::SelectedPosition);
  pub fn qt_widgets_c_QStyleOptionToolBox_set_text(this_ptr: *mut ::style_option_tool_box::StyleOptionToolBox, value: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QStyleOptionToolBox_text(this_ptr: *const ::style_option_tool_box::StyleOptionToolBox) -> *const ::qt_core::string::String;
  pub fn qt_widgets_c_QStyleOptionToolBox_text_mut(this_ptr: *mut ::style_option_tool_box::StyleOptionToolBox) -> *mut ::qt_core::string::String;

  // Header: QStyleOptionToolButton
  pub fn qt_widgets_c_QStyleOptionToolButton_G_static_cast_QStyleOptionComplex_ptr(ptr: *mut ::style_option_tool_button::StyleOptionToolButton) -> *mut ::style_option_complex::StyleOptionComplex;
  pub fn qt_widgets_c_QStyleOptionToolButton_G_static_cast_QStyleOptionToolButton_ptr_QStyleOption(ptr: *mut ::style_option::StyleOption) -> *mut ::style_option_tool_button::StyleOptionToolButton;
  pub fn qt_widgets_c_QStyleOptionToolButton_G_static_cast_QStyleOptionToolButton_ptr_QStyleOptionComplex(ptr: *mut ::style_option_complex::StyleOptionComplex) -> *mut ::style_option_tool_button::StyleOptionToolButton;
  pub fn qt_widgets_c_QStyleOptionToolButton_G_static_cast_QStyleOption_ptr(ptr: *mut ::style_option_tool_button::StyleOptionToolButton) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOptionToolButton_arrowType(this_ptr: *const ::style_option_tool_button::StyleOptionToolButton) -> *const ::qt_core::qt::ArrowType;
  pub fn qt_widgets_c_QStyleOptionToolButton_arrowType_mut(this_ptr: *mut ::style_option_tool_button::StyleOptionToolButton) -> *mut ::qt_core::qt::ArrowType;
  pub fn qt_widgets_c_QStyleOptionToolButton_delete(this_ptr: *mut ::style_option_tool_button::StyleOptionToolButton);
  pub fn qt_widgets_c_QStyleOptionToolButton_features(this_ptr: *const ::style_option_tool_button::StyleOptionToolButton) -> ::libc::c_uint;
  pub fn qt_widgets_c_QStyleOptionToolButton_font(this_ptr: *const ::style_option_tool_button::StyleOptionToolButton) -> *const ::qt_gui::font::Font;
  pub fn qt_widgets_c_QStyleOptionToolButton_font_mut(this_ptr: *mut ::style_option_tool_button::StyleOptionToolButton) -> *mut ::qt_gui::font::Font;
  pub fn qt_widgets_c_QStyleOptionToolButton_icon(this_ptr: *const ::style_option_tool_button::StyleOptionToolButton) -> *const ::qt_gui::icon::Icon;
  pub fn qt_widgets_c_QStyleOptionToolButton_iconSize(this_ptr: *const ::style_option_tool_button::StyleOptionToolButton) -> *const ::qt_core::size::Size;
  pub fn qt_widgets_c_QStyleOptionToolButton_iconSize_mut(this_ptr: *mut ::style_option_tool_button::StyleOptionToolButton) -> *mut ::qt_core::size::Size;
  pub fn qt_widgets_c_QStyleOptionToolButton_icon_mut(this_ptr: *mut ::style_option_tool_button::StyleOptionToolButton) -> *mut ::qt_gui::icon::Icon;
  pub fn qt_widgets_c_QStyleOptionToolButton_new_no_args() -> *mut ::style_option_tool_button::StyleOptionToolButton;
  pub fn qt_widgets_c_QStyleOptionToolButton_new_other(other: *const ::style_option_tool_button::StyleOptionToolButton) -> *mut ::style_option_tool_button::StyleOptionToolButton;
  pub fn qt_widgets_c_QStyleOptionToolButton_pos(this_ptr: *const ::style_option_tool_button::StyleOptionToolButton) -> *const ::qt_core::point::Point;
  pub fn qt_widgets_c_QStyleOptionToolButton_pos_mut(this_ptr: *mut ::style_option_tool_button::StyleOptionToolButton) -> *mut ::qt_core::point::Point;
  pub fn qt_widgets_c_QStyleOptionToolButton_set_arrowType(this_ptr: *mut ::style_option_tool_button::StyleOptionToolButton, value: *const ::qt_core::qt::ArrowType);
  pub fn qt_widgets_c_QStyleOptionToolButton_set_features(this_ptr: *mut ::style_option_tool_button::StyleOptionToolButton, value: ::libc::c_uint);
  pub fn qt_widgets_c_QStyleOptionToolButton_set_font(this_ptr: *mut ::style_option_tool_button::StyleOptionToolButton, value: *const ::qt_gui::font::Font);
  pub fn qt_widgets_c_QStyleOptionToolButton_set_icon(this_ptr: *mut ::style_option_tool_button::StyleOptionToolButton, value: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QStyleOptionToolButton_set_iconSize(this_ptr: *mut ::style_option_tool_button::StyleOptionToolButton, value: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QStyleOptionToolButton_set_pos(this_ptr: *mut ::style_option_tool_button::StyleOptionToolButton, value: *const ::qt_core::point::Point);
  pub fn qt_widgets_c_QStyleOptionToolButton_set_text(this_ptr: *mut ::style_option_tool_button::StyleOptionToolButton, value: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QStyleOptionToolButton_set_toolButtonStyle(this_ptr: *mut ::style_option_tool_button::StyleOptionToolButton, value: *const ::qt_core::qt::ToolButtonStyle);
  pub fn qt_widgets_c_QStyleOptionToolButton_text(this_ptr: *const ::style_option_tool_button::StyleOptionToolButton) -> *const ::qt_core::string::String;
  pub fn qt_widgets_c_QStyleOptionToolButton_text_mut(this_ptr: *mut ::style_option_tool_button::StyleOptionToolButton) -> *mut ::qt_core::string::String;
  pub fn qt_widgets_c_QStyleOptionToolButton_toolButtonStyle(this_ptr: *const ::style_option_tool_button::StyleOptionToolButton) -> *const ::qt_core::qt::ToolButtonStyle;
  pub fn qt_widgets_c_QStyleOptionToolButton_toolButtonStyle_mut(this_ptr: *mut ::style_option_tool_button::StyleOptionToolButton) -> *mut ::qt_core::qt::ToolButtonStyle;

  // Header: QStyleOptionViewItem
  pub fn qt_widgets_c_QStyleOptionViewItem_G_static_cast_QStyleOptionViewItem_ptr(ptr: *mut ::style_option::StyleOption) -> *mut ::style_option_view_item::StyleOptionViewItem;
  pub fn qt_widgets_c_QStyleOptionViewItem_G_static_cast_QStyleOption_ptr(ptr: *mut ::style_option_view_item::StyleOptionViewItem) -> *mut ::style_option::StyleOption;
  pub fn qt_widgets_c_QStyleOptionViewItem_backgroundBrush(this_ptr: *const ::style_option_view_item::StyleOptionViewItem) -> *const ::qt_gui::brush::Brush;
  pub fn qt_widgets_c_QStyleOptionViewItem_backgroundBrush_mut(this_ptr: *mut ::style_option_view_item::StyleOptionViewItem) -> *mut ::qt_gui::brush::Brush;
  pub fn qt_widgets_c_QStyleOptionViewItem_checkState(this_ptr: *const ::style_option_view_item::StyleOptionViewItem) -> *const ::qt_core::qt::CheckState;
  pub fn qt_widgets_c_QStyleOptionViewItem_checkState_mut(this_ptr: *mut ::style_option_view_item::StyleOptionViewItem) -> *mut ::qt_core::qt::CheckState;
  pub fn qt_widgets_c_QStyleOptionViewItem_decorationPosition(this_ptr: *const ::style_option_view_item::StyleOptionViewItem) -> ::style_option_view_item::Position;
  pub fn qt_widgets_c_QStyleOptionViewItem_decorationSize(this_ptr: *const ::style_option_view_item::StyleOptionViewItem) -> *const ::qt_core::size::Size;
  pub fn qt_widgets_c_QStyleOptionViewItem_decorationSize_mut(this_ptr: *mut ::style_option_view_item::StyleOptionViewItem) -> *mut ::qt_core::size::Size;
  pub fn qt_widgets_c_QStyleOptionViewItem_delete(this_ptr: *mut ::style_option_view_item::StyleOptionViewItem);
  pub fn qt_widgets_c_QStyleOptionViewItem_features(this_ptr: *const ::style_option_view_item::StyleOptionViewItem) -> ::libc::c_uint;
  pub fn qt_widgets_c_QStyleOptionViewItem_font(this_ptr: *const ::style_option_view_item::StyleOptionViewItem) -> *const ::qt_gui::font::Font;
  pub fn qt_widgets_c_QStyleOptionViewItem_font_mut(this_ptr: *mut ::style_option_view_item::StyleOptionViewItem) -> *mut ::qt_gui::font::Font;
  pub fn qt_widgets_c_QStyleOptionViewItem_icon(this_ptr: *const ::style_option_view_item::StyleOptionViewItem) -> *const ::qt_gui::icon::Icon;
  pub fn qt_widgets_c_QStyleOptionViewItem_icon_mut(this_ptr: *mut ::style_option_view_item::StyleOptionViewItem) -> *mut ::qt_gui::icon::Icon;
  pub fn qt_widgets_c_QStyleOptionViewItem_index(this_ptr: *const ::style_option_view_item::StyleOptionViewItem) -> *const ::qt_core::model_index::ModelIndex;
  pub fn qt_widgets_c_QStyleOptionViewItem_index_mut(this_ptr: *mut ::style_option_view_item::StyleOptionViewItem) -> *mut ::qt_core::model_index::ModelIndex;
  pub fn qt_widgets_c_QStyleOptionViewItem_locale(this_ptr: *const ::style_option_view_item::StyleOptionViewItem) -> *const ::qt_core::locale::Locale;
  pub fn qt_widgets_c_QStyleOptionViewItem_locale_mut(this_ptr: *mut ::style_option_view_item::StyleOptionViewItem) -> *mut ::qt_core::locale::Locale;
  pub fn qt_widgets_c_QStyleOptionViewItem_new_no_args() -> *mut ::style_option_view_item::StyleOptionViewItem;
  pub fn qt_widgets_c_QStyleOptionViewItem_new_other(other: *const ::style_option_view_item::StyleOptionViewItem) -> *mut ::style_option_view_item::StyleOptionViewItem;
  pub fn qt_widgets_c_QStyleOptionViewItem_set_backgroundBrush(this_ptr: *mut ::style_option_view_item::StyleOptionViewItem, value: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QStyleOptionViewItem_set_checkState(this_ptr: *mut ::style_option_view_item::StyleOptionViewItem, value: *const ::qt_core::qt::CheckState);
  pub fn qt_widgets_c_QStyleOptionViewItem_set_decorationPosition(this_ptr: *mut ::style_option_view_item::StyleOptionViewItem, value: ::style_option_view_item::Position);
  pub fn qt_widgets_c_QStyleOptionViewItem_set_decorationSize(this_ptr: *mut ::style_option_view_item::StyleOptionViewItem, value: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QStyleOptionViewItem_set_features(this_ptr: *mut ::style_option_view_item::StyleOptionViewItem, value: ::libc::c_uint);
  pub fn qt_widgets_c_QStyleOptionViewItem_set_font(this_ptr: *mut ::style_option_view_item::StyleOptionViewItem, value: *const ::qt_gui::font::Font);
  pub fn qt_widgets_c_QStyleOptionViewItem_set_icon(this_ptr: *mut ::style_option_view_item::StyleOptionViewItem, value: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QStyleOptionViewItem_set_index(this_ptr: *mut ::style_option_view_item::StyleOptionViewItem, value: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QStyleOptionViewItem_set_locale(this_ptr: *mut ::style_option_view_item::StyleOptionViewItem, value: *const ::qt_core::locale::Locale);
  pub fn qt_widgets_c_QStyleOptionViewItem_set_showDecorationSelected(this_ptr: *mut ::style_option_view_item::StyleOptionViewItem, value: bool);
  pub fn qt_widgets_c_QStyleOptionViewItem_set_text(this_ptr: *mut ::style_option_view_item::StyleOptionViewItem, value: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QStyleOptionViewItem_set_textElideMode(this_ptr: *mut ::style_option_view_item::StyleOptionViewItem, value: *const ::qt_core::qt::TextElideMode);
  pub fn qt_widgets_c_QStyleOptionViewItem_set_viewItemPosition(this_ptr: *mut ::style_option_view_item::StyleOptionViewItem, value: ::style_option_view_item::ViewItemPosition);
  pub fn qt_widgets_c_QStyleOptionViewItem_set_widget(this_ptr: *mut ::style_option_view_item::StyleOptionViewItem, value: *const ::widget::Widget);
  pub fn qt_widgets_c_QStyleOptionViewItem_showDecorationSelected(this_ptr: *const ::style_option_view_item::StyleOptionViewItem) -> bool;
  pub fn qt_widgets_c_QStyleOptionViewItem_text(this_ptr: *const ::style_option_view_item::StyleOptionViewItem) -> *const ::qt_core::string::String;
  pub fn qt_widgets_c_QStyleOptionViewItem_textElideMode(this_ptr: *const ::style_option_view_item::StyleOptionViewItem) -> *const ::qt_core::qt::TextElideMode;
  pub fn qt_widgets_c_QStyleOptionViewItem_textElideMode_mut(this_ptr: *mut ::style_option_view_item::StyleOptionViewItem) -> *mut ::qt_core::qt::TextElideMode;
  pub fn qt_widgets_c_QStyleOptionViewItem_text_mut(this_ptr: *mut ::style_option_view_item::StyleOptionViewItem) -> *mut ::qt_core::string::String;
  pub fn qt_widgets_c_QStyleOptionViewItem_viewItemPosition(this_ptr: *const ::style_option_view_item::StyleOptionViewItem) -> ::style_option_view_item::ViewItemPosition;
  pub fn qt_widgets_c_QStyleOptionViewItem_widget(this_ptr: *const ::style_option_view_item::StyleOptionViewItem) -> *const ::widget::Widget;

  // Header: QStylePainter
  pub fn qt_widgets_c_QStylePainter_G_static_cast_QPainter_ptr(ptr: *mut ::style_painter::StylePainter) -> *mut ::qt_gui::painter::Painter;
  pub fn qt_widgets_c_QStylePainter_G_static_cast_QStylePainter_ptr(ptr: *mut ::qt_gui::painter::Painter) -> *mut ::style_painter::StylePainter;
  pub fn qt_widgets_c_QStylePainter_begin_pd_w(this_ptr: *mut ::style_painter::StylePainter, pd: *mut ::qt_gui::paint_device::PaintDevice, w: *mut ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QStylePainter_begin_w(this_ptr: *mut ::style_painter::StylePainter, w: *mut ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QStylePainter_constructor_no_args(output: *mut ::style_painter::StylePainter);
  pub fn qt_widgets_c_QStylePainter_constructor_pd_w(pd: *mut ::qt_gui::paint_device::PaintDevice, w: *mut ::widget::Widget, output: *mut ::style_painter::StylePainter);
  pub fn qt_widgets_c_QStylePainter_constructor_w(w: *mut ::widget::Widget, output: *mut ::style_painter::StylePainter);
  pub fn qt_widgets_c_QStylePainter_destructor(this_ptr: *mut ::style_painter::StylePainter);
  pub fn qt_widgets_c_QStylePainter_drawComplexControl(this_ptr: *mut ::style_painter::StylePainter, cc: *const ::style::ComplexControl, opt: *const ::style_option_complex::StyleOptionComplex);
  pub fn qt_widgets_c_QStylePainter_drawControl(this_ptr: *mut ::style_painter::StylePainter, ce: *const ::style::ControlElement, opt: *const ::style_option::StyleOption);
  pub fn qt_widgets_c_QStylePainter_drawItemPixmap(this_ptr: *mut ::style_painter::StylePainter, r: *const ::qt_core::rect::Rect, flags: ::libc::c_int, pixmap: *const ::qt_gui::pixmap::Pixmap);
  pub fn qt_widgets_c_QStylePainter_drawItemText_r_flags_pal_enabled_text(this_ptr: *mut ::style_painter::StylePainter, r: *const ::qt_core::rect::Rect, flags: ::libc::c_int, pal: *const ::qt_gui::palette::Palette, enabled: bool, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QStylePainter_drawItemText_r_flags_pal_enabled_text_textRole(this_ptr: *mut ::style_painter::StylePainter, r: *const ::qt_core::rect::Rect, flags: ::libc::c_int, pal: *const ::qt_gui::palette::Palette, enabled: bool, text: *const ::qt_core::string::String, textRole: *const ::qt_gui::palette::ColorRole);
  pub fn qt_widgets_c_QStylePainter_drawPrimitive(this_ptr: *mut ::style_painter::StylePainter, pe: *const ::style::PrimitiveElement, opt: *const ::style_option::StyleOption);
  pub fn qt_widgets_c_QStylePainter_style(this_ptr: *const ::style_painter::StylePainter) -> *mut ::style::Style;

  // Header: QStylePlugin
  pub fn qt_widgets_c_QStylePlugin_G_static_cast_QObject_ptr(ptr: *mut ::style_plugin::StylePlugin) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QStylePlugin_G_static_cast_QStylePlugin_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::style_plugin::StylePlugin;
  pub fn qt_widgets_c_QStylePlugin_create(this_ptr: *mut ::style_plugin::StylePlugin, key: *const ::qt_core::string::String) -> *mut ::style::Style;
  pub fn qt_widgets_c_QStylePlugin_delete(this_ptr: *mut ::style_plugin::StylePlugin);
  pub fn qt_widgets_c_QStylePlugin_metaObject(this_ptr: *const ::style_plugin::StylePlugin) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QStylePlugin_qt_metacall(this_ptr: *mut ::style_plugin::StylePlugin, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QStylePlugin_qt_metacast(this_ptr: *mut ::style_plugin::StylePlugin, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QStylePlugin_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QStylePlugin_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QStyledItemDelegate
  pub fn qt_widgets_c_QStyledItemDelegate_G_dynamic_cast_QStyledItemDelegate_ptr(ptr: *mut ::abstract_item_delegate::AbstractItemDelegate) -> *mut ::styled_item_delegate::StyledItemDelegate;
  pub fn qt_widgets_c_QStyledItemDelegate_G_static_cast_QAbstractItemDelegate_ptr(ptr: *mut ::styled_item_delegate::StyledItemDelegate) -> *mut ::abstract_item_delegate::AbstractItemDelegate;
  pub fn qt_widgets_c_QStyledItemDelegate_G_static_cast_QObject_ptr(ptr: *mut ::styled_item_delegate::StyledItemDelegate) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QStyledItemDelegate_G_static_cast_QStyledItemDelegate_ptr_QAbstractItemDelegate(ptr: *mut ::abstract_item_delegate::AbstractItemDelegate) -> *mut ::styled_item_delegate::StyledItemDelegate;
  pub fn qt_widgets_c_QStyledItemDelegate_G_static_cast_QStyledItemDelegate_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::styled_item_delegate::StyledItemDelegate;
  pub fn qt_widgets_c_QStyledItemDelegate_createEditor(this_ptr: *const ::styled_item_delegate::StyledItemDelegate, parent: *mut ::widget::Widget, option: *const ::style_option_view_item::StyleOptionViewItem, index: *const ::qt_core::model_index::ModelIndex) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QStyledItemDelegate_delete(this_ptr: *mut ::styled_item_delegate::StyledItemDelegate);
  pub fn qt_widgets_c_QStyledItemDelegate_displayText_to_output(this_ptr: *const ::styled_item_delegate::StyledItemDelegate, value: *const ::qt_core::variant::Variant, locale: *const ::qt_core::locale::Locale, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QStyledItemDelegate_itemEditorFactory(this_ptr: *const ::styled_item_delegate::StyledItemDelegate) -> *mut ::item_editor_factory::ItemEditorFactory;
  pub fn qt_widgets_c_QStyledItemDelegate_metaObject(this_ptr: *const ::styled_item_delegate::StyledItemDelegate) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QStyledItemDelegate_new_no_args() -> *mut ::styled_item_delegate::StyledItemDelegate;
  pub fn qt_widgets_c_QStyledItemDelegate_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::styled_item_delegate::StyledItemDelegate;
  pub fn qt_widgets_c_QStyledItemDelegate_paint(this_ptr: *const ::styled_item_delegate::StyledItemDelegate, painter: *mut ::qt_gui::painter::Painter, option: *const ::style_option_view_item::StyleOptionViewItem, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QStyledItemDelegate_qt_metacall(this_ptr: *mut ::styled_item_delegate::StyledItemDelegate, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QStyledItemDelegate_qt_metacast(this_ptr: *mut ::styled_item_delegate::StyledItemDelegate, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QStyledItemDelegate_setEditorData(this_ptr: *const ::styled_item_delegate::StyledItemDelegate, editor: *mut ::widget::Widget, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QStyledItemDelegate_setItemEditorFactory(this_ptr: *mut ::styled_item_delegate::StyledItemDelegate, factory: *mut ::item_editor_factory::ItemEditorFactory);
  pub fn qt_widgets_c_QStyledItemDelegate_setModelData(this_ptr: *const ::styled_item_delegate::StyledItemDelegate, editor: *mut ::widget::Widget, model: *mut ::qt_core::abstract_item_model::AbstractItemModel, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QStyledItemDelegate_sizeHint_to_output(this_ptr: *const ::styled_item_delegate::StyledItemDelegate, option: *const ::style_option_view_item::StyleOptionViewItem, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QStyledItemDelegate_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QStyledItemDelegate_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QStyledItemDelegate_updateEditorGeometry(this_ptr: *const ::styled_item_delegate::StyledItemDelegate, editor: *mut ::widget::Widget, option: *const ::style_option_view_item::StyleOptionViewItem, index: *const ::qt_core::model_index::ModelIndex);

  // Header: QSwipeGesture
  pub fn qt_widgets_c_QSwipeGesture_G_dynamic_cast_QSwipeGesture_ptr(ptr: *mut ::gesture::Gesture) -> *mut ::swipe_gesture::SwipeGesture;
  pub fn qt_widgets_c_QSwipeGesture_G_static_cast_QGesture_ptr(ptr: *mut ::swipe_gesture::SwipeGesture) -> *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QSwipeGesture_G_static_cast_QObject_ptr(ptr: *mut ::swipe_gesture::SwipeGesture) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QSwipeGesture_G_static_cast_QSwipeGesture_ptr_QGesture(ptr: *mut ::gesture::Gesture) -> *mut ::swipe_gesture::SwipeGesture;
  pub fn qt_widgets_c_QSwipeGesture_G_static_cast_QSwipeGesture_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::swipe_gesture::SwipeGesture;
  pub fn qt_widgets_c_QSwipeGesture_delete(this_ptr: *mut ::swipe_gesture::SwipeGesture);
  pub fn qt_widgets_c_QSwipeGesture_horizontalDirection(this_ptr: *const ::swipe_gesture::SwipeGesture) -> ::swipe_gesture::SwipeDirection;
  pub fn qt_widgets_c_QSwipeGesture_metaObject(this_ptr: *const ::swipe_gesture::SwipeGesture) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QSwipeGesture_new_no_args() -> *mut ::swipe_gesture::SwipeGesture;
  pub fn qt_widgets_c_QSwipeGesture_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::swipe_gesture::SwipeGesture;
  pub fn qt_widgets_c_QSwipeGesture_qt_metacall(this_ptr: *mut ::swipe_gesture::SwipeGesture, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QSwipeGesture_qt_metacast(this_ptr: *mut ::swipe_gesture::SwipeGesture, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QSwipeGesture_setSwipeAngle(this_ptr: *mut ::swipe_gesture::SwipeGesture, value: ::libc::c_double);
  pub fn qt_widgets_c_QSwipeGesture_swipeAngle(this_ptr: *const ::swipe_gesture::SwipeGesture) -> ::libc::c_double;
  pub fn qt_widgets_c_QSwipeGesture_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QSwipeGesture_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QSwipeGesture_verticalDirection(this_ptr: *const ::swipe_gesture::SwipeGesture) -> ::swipe_gesture::SwipeDirection;

  // Header: QSystemTrayIcon
  pub fn qt_widgets_c_QSystemTrayIcon_G_static_cast_QObject_ptr(ptr: *mut ::system_tray_icon::SystemTrayIcon) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QSystemTrayIcon_G_static_cast_QSystemTrayIcon_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::system_tray_icon::SystemTrayIcon;
  pub fn qt_widgets_c_QSystemTrayIcon_contextMenu(this_ptr: *const ::system_tray_icon::SystemTrayIcon) -> *mut ::menu::Menu;
  pub fn qt_widgets_c_QSystemTrayIcon_delete(this_ptr: *mut ::system_tray_icon::SystemTrayIcon);
  pub fn qt_widgets_c_QSystemTrayIcon_geometry_to_output(this_ptr: *const ::system_tray_icon::SystemTrayIcon, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QSystemTrayIcon_hide(this_ptr: *mut ::system_tray_icon::SystemTrayIcon);
  pub fn qt_widgets_c_QSystemTrayIcon_icon_to_output(this_ptr: *const ::system_tray_icon::SystemTrayIcon, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QSystemTrayIcon_isSystemTrayAvailable() -> bool;
  pub fn qt_widgets_c_QSystemTrayIcon_isVisible(this_ptr: *const ::system_tray_icon::SystemTrayIcon) -> bool;
  pub fn qt_widgets_c_QSystemTrayIcon_metaObject(this_ptr: *const ::system_tray_icon::SystemTrayIcon) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QSystemTrayIcon_new_icon(icon: *const ::qt_gui::icon::Icon) -> *mut ::system_tray_icon::SystemTrayIcon;
  pub fn qt_widgets_c_QSystemTrayIcon_new_icon_parent(icon: *const ::qt_gui::icon::Icon, parent: *mut ::qt_core::object::Object) -> *mut ::system_tray_icon::SystemTrayIcon;
  pub fn qt_widgets_c_QSystemTrayIcon_new_no_args() -> *mut ::system_tray_icon::SystemTrayIcon;
  pub fn qt_widgets_c_QSystemTrayIcon_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::system_tray_icon::SystemTrayIcon;
  pub fn qt_widgets_c_QSystemTrayIcon_qt_metacall(this_ptr: *mut ::system_tray_icon::SystemTrayIcon, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QSystemTrayIcon_qt_metacast(this_ptr: *mut ::system_tray_icon::SystemTrayIcon, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QSystemTrayIcon_setContextMenu(this_ptr: *mut ::system_tray_icon::SystemTrayIcon, menu: *mut ::menu::Menu);
  pub fn qt_widgets_c_QSystemTrayIcon_setIcon(this_ptr: *mut ::system_tray_icon::SystemTrayIcon, icon: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QSystemTrayIcon_setToolTip(this_ptr: *mut ::system_tray_icon::SystemTrayIcon, tip: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QSystemTrayIcon_setVisible(this_ptr: *mut ::system_tray_icon::SystemTrayIcon, visible: bool);
  pub fn qt_widgets_c_QSystemTrayIcon_show(this_ptr: *mut ::system_tray_icon::SystemTrayIcon);
  pub fn qt_widgets_c_QSystemTrayIcon_showMessage_QString_QString(this_ptr: *mut ::system_tray_icon::SystemTrayIcon, title: *const ::qt_core::string::String, msg: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QSystemTrayIcon_showMessage_QString_QString_QIcon(this_ptr: *mut ::system_tray_icon::SystemTrayIcon, title: *const ::qt_core::string::String, msg: *const ::qt_core::string::String, icon: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QSystemTrayIcon_showMessage_QString_QString_QIcon_int(this_ptr: *mut ::system_tray_icon::SystemTrayIcon, title: *const ::qt_core::string::String, msg: *const ::qt_core::string::String, icon: *const ::qt_gui::icon::Icon, msecs: ::libc::c_int);
  pub fn qt_widgets_c_QSystemTrayIcon_showMessage_QString_QString_QSystemTrayIcon_MessageIcon(this_ptr: *mut ::system_tray_icon::SystemTrayIcon, title: *const ::qt_core::string::String, msg: *const ::qt_core::string::String, icon: *const ::system_tray_icon::MessageIcon);
  pub fn qt_widgets_c_QSystemTrayIcon_showMessage_QString_QString_QSystemTrayIcon_MessageIcon_int(this_ptr: *mut ::system_tray_icon::SystemTrayIcon, title: *const ::qt_core::string::String, msg: *const ::qt_core::string::String, icon: *const ::system_tray_icon::MessageIcon, msecs: ::libc::c_int);
  pub fn qt_widgets_c_QSystemTrayIcon_supportsMessages() -> bool;
  pub fn qt_widgets_c_QSystemTrayIcon_toolTip_to_output(this_ptr: *const ::system_tray_icon::SystemTrayIcon, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QSystemTrayIcon_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QSystemTrayIcon_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QTabBar
  pub fn qt_widgets_c_QTabBar_G_dynamic_cast_QTabBar_ptr(ptr: *mut ::widget::Widget) -> *mut ::tab_bar::TabBar;
  pub fn qt_widgets_c_QTabBar_G_static_cast_QObject_ptr(ptr: *mut ::tab_bar::TabBar) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QTabBar_G_static_cast_QPaintDevice_ptr(ptr: *mut ::tab_bar::TabBar) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QTabBar_G_static_cast_QTabBar_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::tab_bar::TabBar;
  pub fn qt_widgets_c_QTabBar_G_static_cast_QTabBar_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::tab_bar::TabBar;
  pub fn qt_widgets_c_QTabBar_G_static_cast_QTabBar_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::tab_bar::TabBar;
  pub fn qt_widgets_c_QTabBar_G_static_cast_QWidget_ptr(ptr: *mut ::tab_bar::TabBar) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QTabBar_accessibleTabName_to_output(this_ptr: *const ::tab_bar::TabBar, index: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTabBar_addTab_icon_text(this_ptr: *mut ::tab_bar::TabBar, icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_widgets_c_QTabBar_addTab_text(this_ptr: *mut ::tab_bar::TabBar, text: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_widgets_c_QTabBar_autoHide(this_ptr: *const ::tab_bar::TabBar) -> bool;
  pub fn qt_widgets_c_QTabBar_changeCurrentOnDrag(this_ptr: *const ::tab_bar::TabBar) -> bool;
  pub fn qt_widgets_c_QTabBar_count(this_ptr: *const ::tab_bar::TabBar) -> ::libc::c_int;
  pub fn qt_widgets_c_QTabBar_currentIndex(this_ptr: *const ::tab_bar::TabBar) -> ::libc::c_int;
  pub fn qt_widgets_c_QTabBar_delete(this_ptr: *mut ::tab_bar::TabBar);
  pub fn qt_widgets_c_QTabBar_documentMode(this_ptr: *const ::tab_bar::TabBar) -> bool;
  pub fn qt_widgets_c_QTabBar_drawBase(this_ptr: *const ::tab_bar::TabBar) -> bool;
  pub fn qt_widgets_c_QTabBar_expanding(this_ptr: *const ::tab_bar::TabBar) -> bool;
  pub fn qt_widgets_c_QTabBar_iconSize_to_output(this_ptr: *const ::tab_bar::TabBar, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QTabBar_insertTab_index_icon_text(this_ptr: *mut ::tab_bar::TabBar, index: ::libc::c_int, icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_widgets_c_QTabBar_insertTab_index_text(this_ptr: *mut ::tab_bar::TabBar, index: ::libc::c_int, text: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_widgets_c_QTabBar_isMovable(this_ptr: *const ::tab_bar::TabBar) -> bool;
  pub fn qt_widgets_c_QTabBar_isTabEnabled(this_ptr: *const ::tab_bar::TabBar, index: ::libc::c_int) -> bool;
  pub fn qt_widgets_c_QTabBar_metaObject(this_ptr: *const ::tab_bar::TabBar) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QTabBar_minimumSizeHint_to_output(this_ptr: *const ::tab_bar::TabBar, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QTabBar_moveTab(this_ptr: *mut ::tab_bar::TabBar, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QTabBar_new_no_args() -> *mut ::tab_bar::TabBar;
  pub fn qt_widgets_c_QTabBar_new_parent(parent: *mut ::widget::Widget) -> *mut ::tab_bar::TabBar;
  pub fn qt_widgets_c_QTabBar_qt_metacall(this_ptr: *mut ::tab_bar::TabBar, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QTabBar_qt_metacast(this_ptr: *mut ::tab_bar::TabBar, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QTabBar_removeTab(this_ptr: *mut ::tab_bar::TabBar, index: ::libc::c_int);
  pub fn qt_widgets_c_QTabBar_selectionBehaviorOnRemove(this_ptr: *const ::tab_bar::TabBar) -> ::tab_bar::SelectionBehavior;
  pub fn qt_widgets_c_QTabBar_setAccessibleTabName(this_ptr: *mut ::tab_bar::TabBar, index: ::libc::c_int, name: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTabBar_setAutoHide(this_ptr: *mut ::tab_bar::TabBar, hide: bool);
  pub fn qt_widgets_c_QTabBar_setChangeCurrentOnDrag(this_ptr: *mut ::tab_bar::TabBar, change: bool);
  pub fn qt_widgets_c_QTabBar_setCurrentIndex(this_ptr: *mut ::tab_bar::TabBar, index: ::libc::c_int);
  pub fn qt_widgets_c_QTabBar_setDocumentMode(this_ptr: *mut ::tab_bar::TabBar, set: bool);
  pub fn qt_widgets_c_QTabBar_setDrawBase(this_ptr: *mut ::tab_bar::TabBar, drawTheBase: bool);
  pub fn qt_widgets_c_QTabBar_setElideMode(this_ptr: *mut ::tab_bar::TabBar, arg1: *const ::qt_core::qt::TextElideMode);
  pub fn qt_widgets_c_QTabBar_setExpanding(this_ptr: *mut ::tab_bar::TabBar, enabled: bool);
  pub fn qt_widgets_c_QTabBar_setIconSize(this_ptr: *mut ::tab_bar::TabBar, size: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QTabBar_setMovable(this_ptr: *mut ::tab_bar::TabBar, movable: bool);
  pub fn qt_widgets_c_QTabBar_setSelectionBehaviorOnRemove(this_ptr: *mut ::tab_bar::TabBar, behavior: ::tab_bar::SelectionBehavior);
  pub fn qt_widgets_c_QTabBar_setShape(this_ptr: *mut ::tab_bar::TabBar, shape: ::tab_bar::Shape);
  pub fn qt_widgets_c_QTabBar_setTabButton(this_ptr: *mut ::tab_bar::TabBar, index: ::libc::c_int, position: ::tab_bar::ButtonPosition, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QTabBar_setTabData(this_ptr: *mut ::tab_bar::TabBar, index: ::libc::c_int, data: *const ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QTabBar_setTabEnabled(this_ptr: *mut ::tab_bar::TabBar, index: ::libc::c_int, arg2: bool);
  pub fn qt_widgets_c_QTabBar_setTabIcon(this_ptr: *mut ::tab_bar::TabBar, index: ::libc::c_int, icon: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QTabBar_setTabText(this_ptr: *mut ::tab_bar::TabBar, index: ::libc::c_int, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTabBar_setTabTextColor(this_ptr: *mut ::tab_bar::TabBar, index: ::libc::c_int, color: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QTabBar_setTabToolTip(this_ptr: *mut ::tab_bar::TabBar, index: ::libc::c_int, tip: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTabBar_setTabWhatsThis(this_ptr: *mut ::tab_bar::TabBar, index: ::libc::c_int, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTabBar_setTabsClosable(this_ptr: *mut ::tab_bar::TabBar, closable: bool);
  pub fn qt_widgets_c_QTabBar_setUsesScrollButtons(this_ptr: *mut ::tab_bar::TabBar, useButtons: bool);
  pub fn qt_widgets_c_QTabBar_shape(this_ptr: *const ::tab_bar::TabBar) -> ::tab_bar::Shape;
  pub fn qt_widgets_c_QTabBar_sizeHint_to_output(this_ptr: *const ::tab_bar::TabBar, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QTabBar_tabAt(this_ptr: *const ::tab_bar::TabBar, pos: *const ::qt_core::point::Point) -> ::libc::c_int;
  pub fn qt_widgets_c_QTabBar_tabButton(this_ptr: *const ::tab_bar::TabBar, index: ::libc::c_int, position: ::tab_bar::ButtonPosition) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QTabBar_tabData_to_output(this_ptr: *const ::tab_bar::TabBar, index: ::libc::c_int, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QTabBar_tabIcon_to_output(this_ptr: *const ::tab_bar::TabBar, index: ::libc::c_int, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QTabBar_tabRect_to_output(this_ptr: *const ::tab_bar::TabBar, index: ::libc::c_int, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QTabBar_tabTextColor_to_output(this_ptr: *const ::tab_bar::TabBar, index: ::libc::c_int, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QTabBar_tabText_to_output(this_ptr: *const ::tab_bar::TabBar, index: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTabBar_tabToolTip_to_output(this_ptr: *const ::tab_bar::TabBar, index: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTabBar_tabWhatsThis_to_output(this_ptr: *const ::tab_bar::TabBar, index: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTabBar_tabsClosable(this_ptr: *const ::tab_bar::TabBar) -> bool;
  pub fn qt_widgets_c_QTabBar_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTabBar_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTabBar_usesScrollButtons(this_ptr: *const ::tab_bar::TabBar) -> bool;

  // Header: QTabWidget
  pub fn qt_widgets_c_QTabWidget_G_dynamic_cast_QTabWidget_ptr(ptr: *mut ::widget::Widget) -> *mut ::tab_widget::TabWidget;
  pub fn qt_widgets_c_QTabWidget_G_static_cast_QObject_ptr(ptr: *mut ::tab_widget::TabWidget) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QTabWidget_G_static_cast_QPaintDevice_ptr(ptr: *mut ::tab_widget::TabWidget) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QTabWidget_G_static_cast_QTabWidget_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::tab_widget::TabWidget;
  pub fn qt_widgets_c_QTabWidget_G_static_cast_QTabWidget_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::tab_widget::TabWidget;
  pub fn qt_widgets_c_QTabWidget_G_static_cast_QTabWidget_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::tab_widget::TabWidget;
  pub fn qt_widgets_c_QTabWidget_G_static_cast_QWidget_ptr(ptr: *mut ::tab_widget::TabWidget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QTabWidget_addTab_widget_arg2(this_ptr: *mut ::tab_widget::TabWidget, widget: *mut ::widget::Widget, arg2: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_widgets_c_QTabWidget_addTab_widget_icon_label(this_ptr: *mut ::tab_widget::TabWidget, widget: *mut ::widget::Widget, icon: *const ::qt_gui::icon::Icon, label: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_widgets_c_QTabWidget_clear(this_ptr: *mut ::tab_widget::TabWidget);
  pub fn qt_widgets_c_QTabWidget_cornerWidget_corner(this_ptr: *const ::tab_widget::TabWidget, corner: *const ::qt_core::qt::Corner) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QTabWidget_cornerWidget_no_args(this_ptr: *const ::tab_widget::TabWidget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QTabWidget_count(this_ptr: *const ::tab_widget::TabWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QTabWidget_currentIndex(this_ptr: *const ::tab_widget::TabWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QTabWidget_currentWidget(this_ptr: *const ::tab_widget::TabWidget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QTabWidget_delete(this_ptr: *mut ::tab_widget::TabWidget);
  pub fn qt_widgets_c_QTabWidget_documentMode(this_ptr: *const ::tab_widget::TabWidget) -> bool;
  pub fn qt_widgets_c_QTabWidget_hasHeightForWidth(this_ptr: *const ::tab_widget::TabWidget) -> bool;
  pub fn qt_widgets_c_QTabWidget_heightForWidth(this_ptr: *const ::tab_widget::TabWidget, width: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QTabWidget_iconSize_to_output(this_ptr: *const ::tab_widget::TabWidget, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QTabWidget_indexOf(this_ptr: *const ::tab_widget::TabWidget, widget: *mut ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QTabWidget_insertTab_index_widget_arg3(this_ptr: *mut ::tab_widget::TabWidget, index: ::libc::c_int, widget: *mut ::widget::Widget, arg3: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_widgets_c_QTabWidget_insertTab_index_widget_icon_label(this_ptr: *mut ::tab_widget::TabWidget, index: ::libc::c_int, widget: *mut ::widget::Widget, icon: *const ::qt_gui::icon::Icon, label: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_widgets_c_QTabWidget_isMovable(this_ptr: *const ::tab_widget::TabWidget) -> bool;
  pub fn qt_widgets_c_QTabWidget_isTabEnabled(this_ptr: *const ::tab_widget::TabWidget, index: ::libc::c_int) -> bool;
  pub fn qt_widgets_c_QTabWidget_metaObject(this_ptr: *const ::tab_widget::TabWidget) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QTabWidget_minimumSizeHint_to_output(this_ptr: *const ::tab_widget::TabWidget, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QTabWidget_new_no_args() -> *mut ::tab_widget::TabWidget;
  pub fn qt_widgets_c_QTabWidget_new_parent(parent: *mut ::widget::Widget) -> *mut ::tab_widget::TabWidget;
  pub fn qt_widgets_c_QTabWidget_qt_metacall(this_ptr: *mut ::tab_widget::TabWidget, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QTabWidget_qt_metacast(this_ptr: *mut ::tab_widget::TabWidget, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QTabWidget_removeTab(this_ptr: *mut ::tab_widget::TabWidget, index: ::libc::c_int);
  pub fn qt_widgets_c_QTabWidget_setCornerWidget_w(this_ptr: *mut ::tab_widget::TabWidget, w: *mut ::widget::Widget);
  pub fn qt_widgets_c_QTabWidget_setCornerWidget_w_corner(this_ptr: *mut ::tab_widget::TabWidget, w: *mut ::widget::Widget, corner: *const ::qt_core::qt::Corner);
  pub fn qt_widgets_c_QTabWidget_setCurrentIndex(this_ptr: *mut ::tab_widget::TabWidget, index: ::libc::c_int);
  pub fn qt_widgets_c_QTabWidget_setCurrentWidget(this_ptr: *mut ::tab_widget::TabWidget, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QTabWidget_setDocumentMode(this_ptr: *mut ::tab_widget::TabWidget, set: bool);
  pub fn qt_widgets_c_QTabWidget_setElideMode(this_ptr: *mut ::tab_widget::TabWidget, arg1: *const ::qt_core::qt::TextElideMode);
  pub fn qt_widgets_c_QTabWidget_setIconSize(this_ptr: *mut ::tab_widget::TabWidget, size: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QTabWidget_setMovable(this_ptr: *mut ::tab_widget::TabWidget, movable: bool);
  pub fn qt_widgets_c_QTabWidget_setTabBarAutoHide(this_ptr: *mut ::tab_widget::TabWidget, enabled: bool);
  pub fn qt_widgets_c_QTabWidget_setTabEnabled(this_ptr: *mut ::tab_widget::TabWidget, index: ::libc::c_int, arg2: bool);
  pub fn qt_widgets_c_QTabWidget_setTabIcon(this_ptr: *mut ::tab_widget::TabWidget, index: ::libc::c_int, icon: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QTabWidget_setTabPosition(this_ptr: *mut ::tab_widget::TabWidget, arg1: ::tab_widget::TabPosition);
  pub fn qt_widgets_c_QTabWidget_setTabShape(this_ptr: *mut ::tab_widget::TabWidget, s: ::tab_widget::TabShape);
  pub fn qt_widgets_c_QTabWidget_setTabText(this_ptr: *mut ::tab_widget::TabWidget, index: ::libc::c_int, arg2: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTabWidget_setTabToolTip(this_ptr: *mut ::tab_widget::TabWidget, index: ::libc::c_int, tip: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTabWidget_setTabWhatsThis(this_ptr: *mut ::tab_widget::TabWidget, index: ::libc::c_int, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTabWidget_setTabsClosable(this_ptr: *mut ::tab_widget::TabWidget, closeable: bool);
  pub fn qt_widgets_c_QTabWidget_setUsesScrollButtons(this_ptr: *mut ::tab_widget::TabWidget, useButtons: bool);
  pub fn qt_widgets_c_QTabWidget_sizeHint_to_output(this_ptr: *const ::tab_widget::TabWidget, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QTabWidget_tabBar(this_ptr: *const ::tab_widget::TabWidget) -> *mut ::tab_bar::TabBar;
  pub fn qt_widgets_c_QTabWidget_tabBarAutoHide(this_ptr: *const ::tab_widget::TabWidget) -> bool;
  pub fn qt_widgets_c_QTabWidget_tabIcon_to_output(this_ptr: *const ::tab_widget::TabWidget, index: ::libc::c_int, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QTabWidget_tabPosition(this_ptr: *const ::tab_widget::TabWidget) -> ::tab_widget::TabPosition;
  pub fn qt_widgets_c_QTabWidget_tabShape(this_ptr: *const ::tab_widget::TabWidget) -> ::tab_widget::TabShape;
  pub fn qt_widgets_c_QTabWidget_tabText_to_output(this_ptr: *const ::tab_widget::TabWidget, index: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTabWidget_tabToolTip_to_output(this_ptr: *const ::tab_widget::TabWidget, index: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTabWidget_tabWhatsThis_to_output(this_ptr: *const ::tab_widget::TabWidget, index: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTabWidget_tabsClosable(this_ptr: *const ::tab_widget::TabWidget) -> bool;
  pub fn qt_widgets_c_QTabWidget_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTabWidget_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTabWidget_usesScrollButtons(this_ptr: *const ::tab_widget::TabWidget) -> bool;
  pub fn qt_widgets_c_QTabWidget_widget(this_ptr: *const ::tab_widget::TabWidget, index: ::libc::c_int) -> *mut ::widget::Widget;

  // Header: QTableView
  pub fn qt_widgets_c_QTableView_G_dynamic_cast_QTableView_ptr_QAbstractItemView(ptr: *mut ::abstract_item_view::AbstractItemView) -> *mut ::table_view::TableView;
  pub fn qt_widgets_c_QTableView_G_dynamic_cast_QTableView_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::table_view::TableView;
  pub fn qt_widgets_c_QTableView_G_dynamic_cast_QTableView_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::table_view::TableView;
  pub fn qt_widgets_c_QTableView_G_dynamic_cast_QTableView_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::table_view::TableView;
  pub fn qt_widgets_c_QTableView_G_static_cast_QAbstractItemView_ptr(ptr: *mut ::table_view::TableView) -> *mut ::abstract_item_view::AbstractItemView;
  pub fn qt_widgets_c_QTableView_G_static_cast_QAbstractScrollArea_ptr(ptr: *mut ::table_view::TableView) -> *mut ::abstract_scroll_area::AbstractScrollArea;
  pub fn qt_widgets_c_QTableView_G_static_cast_QFrame_ptr(ptr: *mut ::table_view::TableView) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QTableView_G_static_cast_QObject_ptr(ptr: *mut ::table_view::TableView) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QTableView_G_static_cast_QPaintDevice_ptr(ptr: *mut ::table_view::TableView) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QTableView_G_static_cast_QTableView_ptr_QAbstractItemView(ptr: *mut ::abstract_item_view::AbstractItemView) -> *mut ::table_view::TableView;
  pub fn qt_widgets_c_QTableView_G_static_cast_QTableView_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::table_view::TableView;
  pub fn qt_widgets_c_QTableView_G_static_cast_QTableView_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::table_view::TableView;
  pub fn qt_widgets_c_QTableView_G_static_cast_QTableView_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::table_view::TableView;
  pub fn qt_widgets_c_QTableView_G_static_cast_QTableView_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::table_view::TableView;
  pub fn qt_widgets_c_QTableView_G_static_cast_QTableView_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::table_view::TableView;
  pub fn qt_widgets_c_QTableView_G_static_cast_QWidget_ptr(ptr: *mut ::table_view::TableView) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QTableView_clearSpans(this_ptr: *mut ::table_view::TableView);
  pub fn qt_widgets_c_QTableView_columnAt(this_ptr: *const ::table_view::TableView, x: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableView_columnSpan(this_ptr: *const ::table_view::TableView, row: ::libc::c_int, column: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableView_columnViewportPosition(this_ptr: *const ::table_view::TableView, column: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableView_columnWidth(this_ptr: *const ::table_view::TableView, column: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableView_delete(this_ptr: *mut ::table_view::TableView);
  pub fn qt_widgets_c_QTableView_doItemsLayout(this_ptr: *mut ::table_view::TableView);
  pub fn qt_widgets_c_QTableView_hideColumn(this_ptr: *mut ::table_view::TableView, column: ::libc::c_int);
  pub fn qt_widgets_c_QTableView_hideRow(this_ptr: *mut ::table_view::TableView, row: ::libc::c_int);
  pub fn qt_widgets_c_QTableView_horizontalHeader(this_ptr: *const ::table_view::TableView) -> *mut ::header_view::HeaderView;
  pub fn qt_widgets_c_QTableView_indexAt_to_output(this_ptr: *const ::table_view::TableView, p: *const ::qt_core::point::Point, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QTableView_isColumnHidden(this_ptr: *const ::table_view::TableView, column: ::libc::c_int) -> bool;
  pub fn qt_widgets_c_QTableView_isCornerButtonEnabled(this_ptr: *const ::table_view::TableView) -> bool;
  pub fn qt_widgets_c_QTableView_isRowHidden(this_ptr: *const ::table_view::TableView, row: ::libc::c_int) -> bool;
  pub fn qt_widgets_c_QTableView_isSortingEnabled(this_ptr: *const ::table_view::TableView) -> bool;
  pub fn qt_widgets_c_QTableView_metaObject(this_ptr: *const ::table_view::TableView) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QTableView_new_no_args() -> *mut ::table_view::TableView;
  pub fn qt_widgets_c_QTableView_new_parent(parent: *mut ::widget::Widget) -> *mut ::table_view::TableView;
  pub fn qt_widgets_c_QTableView_qt_metacall(this_ptr: *mut ::table_view::TableView, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableView_qt_metacast(this_ptr: *mut ::table_view::TableView, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QTableView_resizeColumnToContents(this_ptr: *mut ::table_view::TableView, column: ::libc::c_int);
  pub fn qt_widgets_c_QTableView_resizeColumnsToContents(this_ptr: *mut ::table_view::TableView);
  pub fn qt_widgets_c_QTableView_resizeRowToContents(this_ptr: *mut ::table_view::TableView, row: ::libc::c_int);
  pub fn qt_widgets_c_QTableView_resizeRowsToContents(this_ptr: *mut ::table_view::TableView);
  pub fn qt_widgets_c_QTableView_rowAt(this_ptr: *const ::table_view::TableView, y: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableView_rowHeight(this_ptr: *const ::table_view::TableView, row: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableView_rowSpan(this_ptr: *const ::table_view::TableView, row: ::libc::c_int, column: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableView_rowViewportPosition(this_ptr: *const ::table_view::TableView, row: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableView_scrollTo_index(this_ptr: *mut ::table_view::TableView, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QTableView_scrollTo_index_hint(this_ptr: *mut ::table_view::TableView, index: *const ::qt_core::model_index::ModelIndex, hint: ::abstract_item_view::ScrollHint);
  pub fn qt_widgets_c_QTableView_selectColumn(this_ptr: *mut ::table_view::TableView, column: ::libc::c_int);
  pub fn qt_widgets_c_QTableView_selectRow(this_ptr: *mut ::table_view::TableView, row: ::libc::c_int);
  pub fn qt_widgets_c_QTableView_setColumnHidden(this_ptr: *mut ::table_view::TableView, column: ::libc::c_int, hide: bool);
  pub fn qt_widgets_c_QTableView_setColumnWidth(this_ptr: *mut ::table_view::TableView, column: ::libc::c_int, width: ::libc::c_int);
  pub fn qt_widgets_c_QTableView_setCornerButtonEnabled(this_ptr: *mut ::table_view::TableView, enable: bool);
  pub fn qt_widgets_c_QTableView_setGridStyle(this_ptr: *mut ::table_view::TableView, style: *const ::qt_core::qt::PenStyle);
  pub fn qt_widgets_c_QTableView_setHorizontalHeader(this_ptr: *mut ::table_view::TableView, header: *mut ::header_view::HeaderView);
  pub fn qt_widgets_c_QTableView_setModel(this_ptr: *mut ::table_view::TableView, model: *mut ::qt_core::abstract_item_model::AbstractItemModel);
  pub fn qt_widgets_c_QTableView_setRootIndex(this_ptr: *mut ::table_view::TableView, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QTableView_setRowHeight(this_ptr: *mut ::table_view::TableView, row: ::libc::c_int, height: ::libc::c_int);
  pub fn qt_widgets_c_QTableView_setRowHidden(this_ptr: *mut ::table_view::TableView, row: ::libc::c_int, hide: bool);
  pub fn qt_widgets_c_QTableView_setSelectionModel(this_ptr: *mut ::table_view::TableView, selectionModel: *mut ::qt_core::item_selection_model::ItemSelectionModel);
  pub fn qt_widgets_c_QTableView_setShowGrid(this_ptr: *mut ::table_view::TableView, show: bool);
  pub fn qt_widgets_c_QTableView_setSortingEnabled(this_ptr: *mut ::table_view::TableView, enable: bool);
  pub fn qt_widgets_c_QTableView_setSpan(this_ptr: *mut ::table_view::TableView, row: ::libc::c_int, column: ::libc::c_int, rowSpan: ::libc::c_int, columnSpan: ::libc::c_int);
  pub fn qt_widgets_c_QTableView_setVerticalHeader(this_ptr: *mut ::table_view::TableView, header: *mut ::header_view::HeaderView);
  pub fn qt_widgets_c_QTableView_setWordWrap(this_ptr: *mut ::table_view::TableView, on: bool);
  pub fn qt_widgets_c_QTableView_showColumn(this_ptr: *mut ::table_view::TableView, column: ::libc::c_int);
  pub fn qt_widgets_c_QTableView_showGrid(this_ptr: *const ::table_view::TableView) -> bool;
  pub fn qt_widgets_c_QTableView_showRow(this_ptr: *mut ::table_view::TableView, row: ::libc::c_int);
  pub fn qt_widgets_c_QTableView_sortByColumn_column(this_ptr: *mut ::table_view::TableView, column: ::libc::c_int);
  pub fn qt_widgets_c_QTableView_sortByColumn_column_order(this_ptr: *mut ::table_view::TableView, column: ::libc::c_int, order: *const ::qt_core::qt::SortOrder);
  pub fn qt_widgets_c_QTableView_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTableView_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTableView_verticalHeader(this_ptr: *const ::table_view::TableView) -> *mut ::header_view::HeaderView;
  pub fn qt_widgets_c_QTableView_visualRect_to_output(this_ptr: *const ::table_view::TableView, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QTableView_wordWrap(this_ptr: *const ::table_view::TableView) -> bool;

  // Header: QTableWidget
  pub fn qt_widgets_c_QTableWidget_G_dynamic_cast_QTableWidget_ptr_QAbstractItemView(ptr: *mut ::abstract_item_view::AbstractItemView) -> *mut ::table_widget::TableWidget;
  pub fn qt_widgets_c_QTableWidget_G_dynamic_cast_QTableWidget_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::table_widget::TableWidget;
  pub fn qt_widgets_c_QTableWidget_G_dynamic_cast_QTableWidget_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::table_widget::TableWidget;
  pub fn qt_widgets_c_QTableWidget_G_dynamic_cast_QTableWidget_ptr_QTableView(ptr: *mut ::table_view::TableView) -> *mut ::table_widget::TableWidget;
  pub fn qt_widgets_c_QTableWidget_G_dynamic_cast_QTableWidget_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::table_widget::TableWidget;
  pub fn qt_widgets_c_QTableWidget_G_operator_shl(out: *mut ::qt_core::data_stream::DataStream, item: *const ::table_widget_item::TableWidgetItem) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_widgets_c_QTableWidget_G_operator_shr(in_: *mut ::qt_core::data_stream::DataStream, item: *mut ::table_widget_item::TableWidgetItem) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_widgets_c_QTableWidget_G_static_cast_QAbstractItemView_ptr(ptr: *mut ::table_widget::TableWidget) -> *mut ::abstract_item_view::AbstractItemView;
  pub fn qt_widgets_c_QTableWidget_G_static_cast_QAbstractScrollArea_ptr(ptr: *mut ::table_widget::TableWidget) -> *mut ::abstract_scroll_area::AbstractScrollArea;
  pub fn qt_widgets_c_QTableWidget_G_static_cast_QFrame_ptr(ptr: *mut ::table_widget::TableWidget) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QTableWidget_G_static_cast_QObject_ptr(ptr: *mut ::table_widget::TableWidget) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QTableWidget_G_static_cast_QPaintDevice_ptr(ptr: *mut ::table_widget::TableWidget) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QTableWidget_G_static_cast_QTableView_ptr(ptr: *mut ::table_widget::TableWidget) -> *mut ::table_view::TableView;
  pub fn qt_widgets_c_QTableWidget_G_static_cast_QTableWidget_ptr_QAbstractItemView(ptr: *mut ::abstract_item_view::AbstractItemView) -> *mut ::table_widget::TableWidget;
  pub fn qt_widgets_c_QTableWidget_G_static_cast_QTableWidget_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::table_widget::TableWidget;
  pub fn qt_widgets_c_QTableWidget_G_static_cast_QTableWidget_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::table_widget::TableWidget;
  pub fn qt_widgets_c_QTableWidget_G_static_cast_QTableWidget_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::table_widget::TableWidget;
  pub fn qt_widgets_c_QTableWidget_G_static_cast_QTableWidget_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::table_widget::TableWidget;
  pub fn qt_widgets_c_QTableWidget_G_static_cast_QTableWidget_ptr_QTableView(ptr: *mut ::table_view::TableView) -> *mut ::table_widget::TableWidget;
  pub fn qt_widgets_c_QTableWidget_G_static_cast_QTableWidget_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::table_widget::TableWidget;
  pub fn qt_widgets_c_QTableWidget_G_static_cast_QWidget_ptr(ptr: *mut ::table_widget::TableWidget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QTableWidget_cellWidget(this_ptr: *const ::table_widget::TableWidget, row: ::libc::c_int, column: ::libc::c_int) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QTableWidget_clear(this_ptr: *mut ::table_widget::TableWidget);
  pub fn qt_widgets_c_QTableWidget_clearContents(this_ptr: *mut ::table_widget::TableWidget);
  pub fn qt_widgets_c_QTableWidget_closePersistentEditor(this_ptr: *mut ::table_widget::TableWidget, item: *mut ::table_widget_item::TableWidgetItem);
  pub fn qt_widgets_c_QTableWidget_column(this_ptr: *const ::table_widget::TableWidget, item: *const ::table_widget_item::TableWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableWidget_columnCount(this_ptr: *const ::table_widget::TableWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableWidget_currentColumn(this_ptr: *const ::table_widget::TableWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableWidget_currentItem(this_ptr: *const ::table_widget::TableWidget) -> *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QTableWidget_currentRow(this_ptr: *const ::table_widget::TableWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableWidget_delete(this_ptr: *mut ::table_widget::TableWidget);
  pub fn qt_widgets_c_QTableWidget_editItem(this_ptr: *mut ::table_widget::TableWidget, item: *mut ::table_widget_item::TableWidgetItem);
  pub fn qt_widgets_c_QTableWidget_horizontalHeaderItem(this_ptr: *const ::table_widget::TableWidget, column: ::libc::c_int) -> *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QTableWidget_insertColumn(this_ptr: *mut ::table_widget::TableWidget, column: ::libc::c_int);
  pub fn qt_widgets_c_QTableWidget_insertRow(this_ptr: *mut ::table_widget::TableWidget, row: ::libc::c_int);
  pub fn qt_widgets_c_QTableWidget_isItemSelected(this_ptr: *const ::table_widget::TableWidget, item: *const ::table_widget_item::TableWidgetItem) -> bool;
  pub fn qt_widgets_c_QTableWidget_isSortingEnabled(this_ptr: *const ::table_widget::TableWidget) -> bool;
  pub fn qt_widgets_c_QTableWidget_item(this_ptr: *const ::table_widget::TableWidget, row: ::libc::c_int, column: ::libc::c_int) -> *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QTableWidget_itemAt_p(this_ptr: *const ::table_widget::TableWidget, p: *const ::qt_core::point::Point) -> *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QTableWidget_itemAt_x_y(this_ptr: *const ::table_widget::TableWidget, x: ::libc::c_int, y: ::libc::c_int) -> *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QTableWidget_itemPrototype(this_ptr: *const ::table_widget::TableWidget) -> *const ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QTableWidget_metaObject(this_ptr: *const ::table_widget::TableWidget) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QTableWidget_new_no_args() -> *mut ::table_widget::TableWidget;
  pub fn qt_widgets_c_QTableWidget_new_parent(parent: *mut ::widget::Widget) -> *mut ::table_widget::TableWidget;
  pub fn qt_widgets_c_QTableWidget_new_rows_columns(rows: ::libc::c_int, columns: ::libc::c_int) -> *mut ::table_widget::TableWidget;
  pub fn qt_widgets_c_QTableWidget_new_rows_columns_parent(rows: ::libc::c_int, columns: ::libc::c_int, parent: *mut ::widget::Widget) -> *mut ::table_widget::TableWidget;
  pub fn qt_widgets_c_QTableWidget_openPersistentEditor(this_ptr: *mut ::table_widget::TableWidget, item: *mut ::table_widget_item::TableWidgetItem);
  pub fn qt_widgets_c_QTableWidget_qt_metacall(this_ptr: *mut ::table_widget::TableWidget, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableWidget_qt_metacast(this_ptr: *mut ::table_widget::TableWidget, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QTableWidget_removeCellWidget(this_ptr: *mut ::table_widget::TableWidget, row: ::libc::c_int, column: ::libc::c_int);
  pub fn qt_widgets_c_QTableWidget_removeColumn(this_ptr: *mut ::table_widget::TableWidget, column: ::libc::c_int);
  pub fn qt_widgets_c_QTableWidget_removeRow(this_ptr: *mut ::table_widget::TableWidget, row: ::libc::c_int);
  pub fn qt_widgets_c_QTableWidget_row(this_ptr: *const ::table_widget::TableWidget, item: *const ::table_widget_item::TableWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableWidget_rowCount(this_ptr: *const ::table_widget::TableWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableWidget_scrollToItem_item(this_ptr: *mut ::table_widget::TableWidget, item: *const ::table_widget_item::TableWidgetItem);
  pub fn qt_widgets_c_QTableWidget_scrollToItem_item_hint(this_ptr: *mut ::table_widget::TableWidget, item: *const ::table_widget_item::TableWidgetItem, hint: *const ::abstract_item_view::ScrollHint);
  pub fn qt_widgets_c_QTableWidget_selectedItems_to_output(this_ptr: *const ::table_widget::TableWidget, output: *mut ::list::ListTableWidgetItemMutPtr);
  pub fn qt_widgets_c_QTableWidget_selectedRanges_to_output(this_ptr: *const ::table_widget::TableWidget, output: *mut ::list::ListTableWidgetSelectionRange);
  pub fn qt_widgets_c_QTableWidget_setCellWidget(this_ptr: *mut ::table_widget::TableWidget, row: ::libc::c_int, column: ::libc::c_int, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QTableWidget_setColumnCount(this_ptr: *mut ::table_widget::TableWidget, columns: ::libc::c_int);
  pub fn qt_widgets_c_QTableWidget_setCurrentCell(this_ptr: *mut ::table_widget::TableWidget, row: ::libc::c_int, column: ::libc::c_int);
  pub fn qt_widgets_c_QTableWidget_setCurrentItem(this_ptr: *mut ::table_widget::TableWidget, item: *mut ::table_widget_item::TableWidgetItem);
  pub fn qt_widgets_c_QTableWidget_setHorizontalHeaderItem(this_ptr: *mut ::table_widget::TableWidget, column: ::libc::c_int, item: *mut ::table_widget_item::TableWidgetItem);
  pub fn qt_widgets_c_QTableWidget_setHorizontalHeaderLabels(this_ptr: *mut ::table_widget::TableWidget, labels: *const ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QTableWidget_setItem(this_ptr: *mut ::table_widget::TableWidget, row: ::libc::c_int, column: ::libc::c_int, item: *mut ::table_widget_item::TableWidgetItem);
  pub fn qt_widgets_c_QTableWidget_setItemPrototype(this_ptr: *mut ::table_widget::TableWidget, item: *const ::table_widget_item::TableWidgetItem);
  pub fn qt_widgets_c_QTableWidget_setItemSelected(this_ptr: *mut ::table_widget::TableWidget, item: *const ::table_widget_item::TableWidgetItem, select: bool);
  pub fn qt_widgets_c_QTableWidget_setRangeSelected(this_ptr: *mut ::table_widget::TableWidget, range: *const ::table_widget_selection_range::TableWidgetSelectionRange, select: bool);
  pub fn qt_widgets_c_QTableWidget_setRowCount(this_ptr: *mut ::table_widget::TableWidget, rows: ::libc::c_int);
  pub fn qt_widgets_c_QTableWidget_setSortingEnabled(this_ptr: *mut ::table_widget::TableWidget, enable: bool);
  pub fn qt_widgets_c_QTableWidget_setVerticalHeaderItem(this_ptr: *mut ::table_widget::TableWidget, row: ::libc::c_int, item: *mut ::table_widget_item::TableWidgetItem);
  pub fn qt_widgets_c_QTableWidget_setVerticalHeaderLabels(this_ptr: *mut ::table_widget::TableWidget, labels: *const ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QTableWidget_sortItems_column(this_ptr: *mut ::table_widget::TableWidget, column: ::libc::c_int);
  pub fn qt_widgets_c_QTableWidget_sortItems_column_order(this_ptr: *mut ::table_widget::TableWidget, column: ::libc::c_int, order: *const ::qt_core::qt::SortOrder);
  pub fn qt_widgets_c_QTableWidget_takeHorizontalHeaderItem(this_ptr: *mut ::table_widget::TableWidget, column: ::libc::c_int) -> *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QTableWidget_takeItem(this_ptr: *mut ::table_widget::TableWidget, row: ::libc::c_int, column: ::libc::c_int) -> *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QTableWidget_takeVerticalHeaderItem(this_ptr: *mut ::table_widget::TableWidget, row: ::libc::c_int) -> *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QTableWidget_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTableWidget_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTableWidget_verticalHeaderItem(this_ptr: *const ::table_widget::TableWidget, row: ::libc::c_int) -> *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QTableWidget_visualColumn(this_ptr: *const ::table_widget::TableWidget, logicalColumn: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableWidget_visualItemRect_to_output(this_ptr: *const ::table_widget::TableWidget, item: *const ::table_widget_item::TableWidgetItem, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QTableWidget_visualRow(this_ptr: *const ::table_widget::TableWidget, logicalRow: ::libc::c_int) -> ::libc::c_int;

  // Header: QTableWidgetItem
  pub fn qt_widgets_c_QTableWidgetItem_backgroundColor_to_output(this_ptr: *const ::table_widget_item::TableWidgetItem, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QTableWidgetItem_background_to_output(this_ptr: *const ::table_widget_item::TableWidgetItem, output: *mut ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QTableWidgetItem_clone(this_ptr: *const ::table_widget_item::TableWidgetItem) -> *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QTableWidgetItem_column(this_ptr: *const ::table_widget_item::TableWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableWidgetItem_data_to_output(this_ptr: *const ::table_widget_item::TableWidgetItem, role: ::libc::c_int, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QTableWidgetItem_delete(this_ptr: *mut ::table_widget_item::TableWidgetItem);
  pub fn qt_widgets_c_QTableWidgetItem_font_to_output(this_ptr: *const ::table_widget_item::TableWidgetItem, output: *mut ::qt_gui::font::Font);
  pub fn qt_widgets_c_QTableWidgetItem_foreground_to_output(this_ptr: *const ::table_widget_item::TableWidgetItem, output: *mut ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QTableWidgetItem_icon_to_output(this_ptr: *const ::table_widget_item::TableWidgetItem, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QTableWidgetItem_isSelected(this_ptr: *const ::table_widget_item::TableWidgetItem) -> bool;
  pub fn qt_widgets_c_QTableWidgetItem_new_icon_text(icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String) -> *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QTableWidgetItem_new_icon_text_type(icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String, type_: ::libc::c_int) -> *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QTableWidgetItem_new_no_args() -> *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QTableWidgetItem_new_other(other: *const ::table_widget_item::TableWidgetItem) -> *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QTableWidgetItem_new_text(text: *const ::qt_core::string::String) -> *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QTableWidgetItem_new_text_type(text: *const ::qt_core::string::String, type_: ::libc::c_int) -> *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QTableWidgetItem_new_type(type_: ::libc::c_int) -> *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QTableWidgetItem_operator_assign(this_ptr: *mut ::table_widget_item::TableWidgetItem, other: *const ::table_widget_item::TableWidgetItem) -> *mut ::table_widget_item::TableWidgetItem;
  pub fn qt_widgets_c_QTableWidgetItem_operator_lt(this_ptr: *const ::table_widget_item::TableWidgetItem, other: *const ::table_widget_item::TableWidgetItem) -> bool;
  pub fn qt_widgets_c_QTableWidgetItem_read(this_ptr: *mut ::table_widget_item::TableWidgetItem, in_: *mut ::qt_core::data_stream::DataStream);
  pub fn qt_widgets_c_QTableWidgetItem_row(this_ptr: *const ::table_widget_item::TableWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableWidgetItem_setBackground(this_ptr: *mut ::table_widget_item::TableWidgetItem, brush: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QTableWidgetItem_setBackgroundColor(this_ptr: *mut ::table_widget_item::TableWidgetItem, color: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QTableWidgetItem_setCheckState(this_ptr: *mut ::table_widget_item::TableWidgetItem, state: *const ::qt_core::qt::CheckState);
  pub fn qt_widgets_c_QTableWidgetItem_setData(this_ptr: *mut ::table_widget_item::TableWidgetItem, role: ::libc::c_int, value: *const ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QTableWidgetItem_setFont(this_ptr: *mut ::table_widget_item::TableWidgetItem, font: *const ::qt_gui::font::Font);
  pub fn qt_widgets_c_QTableWidgetItem_setForeground(this_ptr: *mut ::table_widget_item::TableWidgetItem, brush: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QTableWidgetItem_setIcon(this_ptr: *mut ::table_widget_item::TableWidgetItem, icon: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QTableWidgetItem_setSelected(this_ptr: *mut ::table_widget_item::TableWidgetItem, select: bool);
  pub fn qt_widgets_c_QTableWidgetItem_setSizeHint(this_ptr: *mut ::table_widget_item::TableWidgetItem, size: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QTableWidgetItem_setStatusTip(this_ptr: *mut ::table_widget_item::TableWidgetItem, statusTip: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTableWidgetItem_setText(this_ptr: *mut ::table_widget_item::TableWidgetItem, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTableWidgetItem_setTextAlignment(this_ptr: *mut ::table_widget_item::TableWidgetItem, alignment: ::libc::c_int);
  pub fn qt_widgets_c_QTableWidgetItem_setTextColor(this_ptr: *mut ::table_widget_item::TableWidgetItem, color: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QTableWidgetItem_setToolTip(this_ptr: *mut ::table_widget_item::TableWidgetItem, toolTip: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTableWidgetItem_setWhatsThis(this_ptr: *mut ::table_widget_item::TableWidgetItem, whatsThis: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTableWidgetItem_sizeHint_to_output(this_ptr: *const ::table_widget_item::TableWidgetItem, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QTableWidgetItem_statusTip_to_output(this_ptr: *const ::table_widget_item::TableWidgetItem, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTableWidgetItem_tableWidget(this_ptr: *const ::table_widget_item::TableWidgetItem) -> *mut ::table_widget::TableWidget;
  pub fn qt_widgets_c_QTableWidgetItem_textAlignment(this_ptr: *const ::table_widget_item::TableWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableWidgetItem_textColor_to_output(this_ptr: *const ::table_widget_item::TableWidgetItem, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QTableWidgetItem_text_to_output(this_ptr: *const ::table_widget_item::TableWidgetItem, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTableWidgetItem_toolTip_to_output(this_ptr: *const ::table_widget_item::TableWidgetItem, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTableWidgetItem_type(this_ptr: *const ::table_widget_item::TableWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableWidgetItem_whatsThis_to_output(this_ptr: *const ::table_widget_item::TableWidgetItem, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTableWidgetItem_write(this_ptr: *const ::table_widget_item::TableWidgetItem, out: *mut ::qt_core::data_stream::DataStream);

  // Header: QTableWidgetSelectionRange
  pub fn qt_widgets_c_QTableWidgetSelectionRange_bottomRow(this_ptr: *const ::table_widget_selection_range::TableWidgetSelectionRange) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableWidgetSelectionRange_columnCount(this_ptr: *const ::table_widget_selection_range::TableWidgetSelectionRange) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableWidgetSelectionRange_constructor_no_args(output: *mut ::table_widget_selection_range::TableWidgetSelectionRange);
  pub fn qt_widgets_c_QTableWidgetSelectionRange_constructor_other(other: *const ::table_widget_selection_range::TableWidgetSelectionRange, output: *mut ::table_widget_selection_range::TableWidgetSelectionRange);
  pub fn qt_widgets_c_QTableWidgetSelectionRange_constructor_top_left_bottom_right(top: ::libc::c_int, left: ::libc::c_int, bottom: ::libc::c_int, right: ::libc::c_int, output: *mut ::table_widget_selection_range::TableWidgetSelectionRange);
  pub fn qt_widgets_c_QTableWidgetSelectionRange_destructor(this_ptr: *mut ::table_widget_selection_range::TableWidgetSelectionRange);
  pub fn qt_widgets_c_QTableWidgetSelectionRange_leftColumn(this_ptr: *const ::table_widget_selection_range::TableWidgetSelectionRange) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableWidgetSelectionRange_rightColumn(this_ptr: *const ::table_widget_selection_range::TableWidgetSelectionRange) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableWidgetSelectionRange_rowCount(this_ptr: *const ::table_widget_selection_range::TableWidgetSelectionRange) -> ::libc::c_int;
  pub fn qt_widgets_c_QTableWidgetSelectionRange_topRow(this_ptr: *const ::table_widget_selection_range::TableWidgetSelectionRange) -> ::libc::c_int;

  // Header: QTapAndHoldGesture
  pub fn qt_widgets_c_QTapAndHoldGesture_G_dynamic_cast_QTapAndHoldGesture_ptr(ptr: *mut ::gesture::Gesture) -> *mut ::tap_and_hold_gesture::TapAndHoldGesture;
  pub fn qt_widgets_c_QTapAndHoldGesture_G_static_cast_QGesture_ptr(ptr: *mut ::tap_and_hold_gesture::TapAndHoldGesture) -> *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QTapAndHoldGesture_G_static_cast_QObject_ptr(ptr: *mut ::tap_and_hold_gesture::TapAndHoldGesture) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QTapAndHoldGesture_G_static_cast_QTapAndHoldGesture_ptr_QGesture(ptr: *mut ::gesture::Gesture) -> *mut ::tap_and_hold_gesture::TapAndHoldGesture;
  pub fn qt_widgets_c_QTapAndHoldGesture_G_static_cast_QTapAndHoldGesture_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::tap_and_hold_gesture::TapAndHoldGesture;
  pub fn qt_widgets_c_QTapAndHoldGesture_delete(this_ptr: *mut ::tap_and_hold_gesture::TapAndHoldGesture);
  pub fn qt_widgets_c_QTapAndHoldGesture_metaObject(this_ptr: *const ::tap_and_hold_gesture::TapAndHoldGesture) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QTapAndHoldGesture_new_no_args() -> *mut ::tap_and_hold_gesture::TapAndHoldGesture;
  pub fn qt_widgets_c_QTapAndHoldGesture_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::tap_and_hold_gesture::TapAndHoldGesture;
  pub fn qt_widgets_c_QTapAndHoldGesture_position_to_output(this_ptr: *const ::tap_and_hold_gesture::TapAndHoldGesture, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QTapAndHoldGesture_qt_metacall(this_ptr: *mut ::tap_and_hold_gesture::TapAndHoldGesture, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QTapAndHoldGesture_qt_metacast(this_ptr: *mut ::tap_and_hold_gesture::TapAndHoldGesture, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QTapAndHoldGesture_setPosition(this_ptr: *mut ::tap_and_hold_gesture::TapAndHoldGesture, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QTapAndHoldGesture_setTimeout(msecs: ::libc::c_int);
  pub fn qt_widgets_c_QTapAndHoldGesture_timeout() -> ::libc::c_int;
  pub fn qt_widgets_c_QTapAndHoldGesture_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTapAndHoldGesture_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QTapGesture
  pub fn qt_widgets_c_QTapGesture_G_dynamic_cast_QTapGesture_ptr(ptr: *mut ::gesture::Gesture) -> *mut ::tap_gesture::TapGesture;
  pub fn qt_widgets_c_QTapGesture_G_static_cast_QGesture_ptr(ptr: *mut ::tap_gesture::TapGesture) -> *mut ::gesture::Gesture;
  pub fn qt_widgets_c_QTapGesture_G_static_cast_QObject_ptr(ptr: *mut ::tap_gesture::TapGesture) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QTapGesture_G_static_cast_QTapGesture_ptr_QGesture(ptr: *mut ::gesture::Gesture) -> *mut ::tap_gesture::TapGesture;
  pub fn qt_widgets_c_QTapGesture_G_static_cast_QTapGesture_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::tap_gesture::TapGesture;
  pub fn qt_widgets_c_QTapGesture_delete(this_ptr: *mut ::tap_gesture::TapGesture);
  pub fn qt_widgets_c_QTapGesture_metaObject(this_ptr: *const ::tap_gesture::TapGesture) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QTapGesture_new_no_args() -> *mut ::tap_gesture::TapGesture;
  pub fn qt_widgets_c_QTapGesture_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::tap_gesture::TapGesture;
  pub fn qt_widgets_c_QTapGesture_position_to_output(this_ptr: *const ::tap_gesture::TapGesture, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QTapGesture_qt_metacall(this_ptr: *mut ::tap_gesture::TapGesture, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QTapGesture_qt_metacast(this_ptr: *mut ::tap_gesture::TapGesture, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QTapGesture_setPosition(this_ptr: *mut ::tap_gesture::TapGesture, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_QTapGesture_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTapGesture_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QTextBrowser
  pub fn qt_widgets_c_QTextBrowser_G_dynamic_cast_QTextBrowser_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::text_browser::TextBrowser;
  pub fn qt_widgets_c_QTextBrowser_G_dynamic_cast_QTextBrowser_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::text_browser::TextBrowser;
  pub fn qt_widgets_c_QTextBrowser_G_dynamic_cast_QTextBrowser_ptr_QTextEdit(ptr: *mut ::text_edit::TextEdit) -> *mut ::text_browser::TextBrowser;
  pub fn qt_widgets_c_QTextBrowser_G_dynamic_cast_QTextBrowser_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::text_browser::TextBrowser;
  pub fn qt_widgets_c_QTextBrowser_G_static_cast_QAbstractScrollArea_ptr(ptr: *mut ::text_browser::TextBrowser) -> *mut ::abstract_scroll_area::AbstractScrollArea;
  pub fn qt_widgets_c_QTextBrowser_G_static_cast_QFrame_ptr(ptr: *mut ::text_browser::TextBrowser) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QTextBrowser_G_static_cast_QObject_ptr(ptr: *mut ::text_browser::TextBrowser) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QTextBrowser_G_static_cast_QPaintDevice_ptr(ptr: *mut ::text_browser::TextBrowser) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QTextBrowser_G_static_cast_QTextBrowser_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::text_browser::TextBrowser;
  pub fn qt_widgets_c_QTextBrowser_G_static_cast_QTextBrowser_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::text_browser::TextBrowser;
  pub fn qt_widgets_c_QTextBrowser_G_static_cast_QTextBrowser_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::text_browser::TextBrowser;
  pub fn qt_widgets_c_QTextBrowser_G_static_cast_QTextBrowser_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::text_browser::TextBrowser;
  pub fn qt_widgets_c_QTextBrowser_G_static_cast_QTextBrowser_ptr_QTextEdit(ptr: *mut ::text_edit::TextEdit) -> *mut ::text_browser::TextBrowser;
  pub fn qt_widgets_c_QTextBrowser_G_static_cast_QTextBrowser_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::text_browser::TextBrowser;
  pub fn qt_widgets_c_QTextBrowser_G_static_cast_QTextEdit_ptr(ptr: *mut ::text_browser::TextBrowser) -> *mut ::text_edit::TextEdit;
  pub fn qt_widgets_c_QTextBrowser_G_static_cast_QWidget_ptr(ptr: *mut ::text_browser::TextBrowser) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QTextBrowser_backward(this_ptr: *mut ::text_browser::TextBrowser);
  pub fn qt_widgets_c_QTextBrowser_backwardHistoryCount(this_ptr: *const ::text_browser::TextBrowser) -> ::libc::c_int;
  pub fn qt_widgets_c_QTextBrowser_clearHistory(this_ptr: *mut ::text_browser::TextBrowser);
  pub fn qt_widgets_c_QTextBrowser_delete(this_ptr: *mut ::text_browser::TextBrowser);
  pub fn qt_widgets_c_QTextBrowser_forward(this_ptr: *mut ::text_browser::TextBrowser);
  pub fn qt_widgets_c_QTextBrowser_forwardHistoryCount(this_ptr: *const ::text_browser::TextBrowser) -> ::libc::c_int;
  pub fn qt_widgets_c_QTextBrowser_historyTitle_to_output(this_ptr: *const ::text_browser::TextBrowser, arg1: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTextBrowser_historyUrl_to_output(this_ptr: *const ::text_browser::TextBrowser, arg1: ::libc::c_int, output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QTextBrowser_home(this_ptr: *mut ::text_browser::TextBrowser);
  pub fn qt_widgets_c_QTextBrowser_isBackwardAvailable(this_ptr: *const ::text_browser::TextBrowser) -> bool;
  pub fn qt_widgets_c_QTextBrowser_isForwardAvailable(this_ptr: *const ::text_browser::TextBrowser) -> bool;
  pub fn qt_widgets_c_QTextBrowser_loadResource_to_output(this_ptr: *mut ::text_browser::TextBrowser, type_: ::libc::c_int, name: *const ::qt_core::url::Url, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QTextBrowser_metaObject(this_ptr: *const ::text_browser::TextBrowser) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QTextBrowser_new_no_args() -> *mut ::text_browser::TextBrowser;
  pub fn qt_widgets_c_QTextBrowser_new_parent(parent: *mut ::widget::Widget) -> *mut ::text_browser::TextBrowser;
  pub fn qt_widgets_c_QTextBrowser_openExternalLinks(this_ptr: *const ::text_browser::TextBrowser) -> bool;
  pub fn qt_widgets_c_QTextBrowser_openLinks(this_ptr: *const ::text_browser::TextBrowser) -> bool;
  pub fn qt_widgets_c_QTextBrowser_qt_metacall(this_ptr: *mut ::text_browser::TextBrowser, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QTextBrowser_qt_metacast(this_ptr: *mut ::text_browser::TextBrowser, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QTextBrowser_reload(this_ptr: *mut ::text_browser::TextBrowser);
  pub fn qt_widgets_c_QTextBrowser_searchPaths_to_output(this_ptr: *const ::text_browser::TextBrowser, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QTextBrowser_setOpenExternalLinks(this_ptr: *mut ::text_browser::TextBrowser, open: bool);
  pub fn qt_widgets_c_QTextBrowser_setOpenLinks(this_ptr: *mut ::text_browser::TextBrowser, open: bool);
  pub fn qt_widgets_c_QTextBrowser_setSearchPaths(this_ptr: *mut ::text_browser::TextBrowser, paths: *const ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QTextBrowser_setSource(this_ptr: *mut ::text_browser::TextBrowser, name: *const ::qt_core::url::Url);
  pub fn qt_widgets_c_QTextBrowser_source_to_output(this_ptr: *const ::text_browser::TextBrowser, output: *mut ::qt_core::url::Url);
  pub fn qt_widgets_c_QTextBrowser_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTextBrowser_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QTextEdit
  pub fn qt_widgets_c_QTextEdit_ExtraSelection_cursor(this_ptr: *const ::text_edit::ExtraSelection) -> *const ::qt_gui::text_cursor::TextCursor;
  pub fn qt_widgets_c_QTextEdit_ExtraSelection_cursor_mut(this_ptr: *mut ::text_edit::ExtraSelection) -> *mut ::qt_gui::text_cursor::TextCursor;
  pub fn qt_widgets_c_QTextEdit_ExtraSelection_destructor(this_ptr: *mut ::text_edit::ExtraSelection);
  pub fn qt_widgets_c_QTextEdit_ExtraSelection_format(this_ptr: *const ::text_edit::ExtraSelection) -> *const ::qt_gui::text_char_format::TextCharFormat;
  pub fn qt_widgets_c_QTextEdit_ExtraSelection_format_mut(this_ptr: *mut ::text_edit::ExtraSelection) -> *mut ::qt_gui::text_char_format::TextCharFormat;
  pub fn qt_widgets_c_QTextEdit_ExtraSelection_set_cursor(this_ptr: *mut ::text_edit::ExtraSelection, value: *const ::qt_gui::text_cursor::TextCursor);
  pub fn qt_widgets_c_QTextEdit_ExtraSelection_set_format(this_ptr: *mut ::text_edit::ExtraSelection, value: *const ::qt_gui::text_char_format::TextCharFormat);
  pub fn qt_widgets_c_QTextEdit_G_dynamic_cast_QTextEdit_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::text_edit::TextEdit;
  pub fn qt_widgets_c_QTextEdit_G_dynamic_cast_QTextEdit_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::text_edit::TextEdit;
  pub fn qt_widgets_c_QTextEdit_G_dynamic_cast_QTextEdit_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::text_edit::TextEdit;
  pub fn qt_widgets_c_QTextEdit_G_static_cast_QAbstractScrollArea_ptr(ptr: *mut ::text_edit::TextEdit) -> *mut ::abstract_scroll_area::AbstractScrollArea;
  pub fn qt_widgets_c_QTextEdit_G_static_cast_QFrame_ptr(ptr: *mut ::text_edit::TextEdit) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QTextEdit_G_static_cast_QObject_ptr(ptr: *mut ::text_edit::TextEdit) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QTextEdit_G_static_cast_QPaintDevice_ptr(ptr: *mut ::text_edit::TextEdit) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QTextEdit_G_static_cast_QTextEdit_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::text_edit::TextEdit;
  pub fn qt_widgets_c_QTextEdit_G_static_cast_QTextEdit_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::text_edit::TextEdit;
  pub fn qt_widgets_c_QTextEdit_G_static_cast_QTextEdit_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::text_edit::TextEdit;
  pub fn qt_widgets_c_QTextEdit_G_static_cast_QTextEdit_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::text_edit::TextEdit;
  pub fn qt_widgets_c_QTextEdit_G_static_cast_QTextEdit_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::text_edit::TextEdit;
  pub fn qt_widgets_c_QTextEdit_G_static_cast_QWidget_ptr(ptr: *mut ::text_edit::TextEdit) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QTextEdit_acceptRichText(this_ptr: *const ::text_edit::TextEdit) -> bool;
  pub fn qt_widgets_c_QTextEdit_anchorAt_to_output(this_ptr: *const ::text_edit::TextEdit, pos: *const ::qt_core::point::Point, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTextEdit_append(this_ptr: *mut ::text_edit::TextEdit, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTextEdit_autoFormatting(this_ptr: *const ::text_edit::TextEdit) -> ::libc::c_uint;
  pub fn qt_widgets_c_QTextEdit_canPaste(this_ptr: *const ::text_edit::TextEdit) -> bool;
  pub fn qt_widgets_c_QTextEdit_clear(this_ptr: *mut ::text_edit::TextEdit);
  pub fn qt_widgets_c_QTextEdit_copy(this_ptr: *mut ::text_edit::TextEdit);
  pub fn qt_widgets_c_QTextEdit_createStandardContextMenu_no_args(this_ptr: *mut ::text_edit::TextEdit) -> *mut ::menu::Menu;
  pub fn qt_widgets_c_QTextEdit_createStandardContextMenu_position(this_ptr: *mut ::text_edit::TextEdit, position: *const ::qt_core::point::Point) -> *mut ::menu::Menu;
  pub fn qt_widgets_c_QTextEdit_currentCharFormat_to_output(this_ptr: *const ::text_edit::TextEdit, output: *mut ::qt_gui::text_char_format::TextCharFormat);
  pub fn qt_widgets_c_QTextEdit_currentFont_to_output(this_ptr: *const ::text_edit::TextEdit, output: *mut ::qt_gui::font::Font);
  pub fn qt_widgets_c_QTextEdit_cursorForPosition_as_ptr(this_ptr: *const ::text_edit::TextEdit, pos: *const ::qt_core::point::Point) -> *mut ::qt_gui::text_cursor::TextCursor;
  pub fn qt_widgets_c_QTextEdit_cursorRect_to_output_cursor(this_ptr: *const ::text_edit::TextEdit, cursor: *const ::qt_gui::text_cursor::TextCursor, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QTextEdit_cursorRect_to_output_no_args(this_ptr: *const ::text_edit::TextEdit, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QTextEdit_cursorWidth(this_ptr: *const ::text_edit::TextEdit) -> ::libc::c_int;
  pub fn qt_widgets_c_QTextEdit_cut(this_ptr: *mut ::text_edit::TextEdit);
  pub fn qt_widgets_c_QTextEdit_delete(this_ptr: *mut ::text_edit::TextEdit);
  pub fn qt_widgets_c_QTextEdit_document(this_ptr: *const ::text_edit::TextEdit) -> *mut ::qt_gui::text_document::TextDocument;
  pub fn qt_widgets_c_QTextEdit_documentTitle_to_output(this_ptr: *const ::text_edit::TextEdit, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTextEdit_ensureCursorVisible(this_ptr: *mut ::text_edit::TextEdit);
  pub fn qt_widgets_c_QTextEdit_extraSelections_to_output(this_ptr: *const ::text_edit::TextEdit, output: *mut ::list::ListTextEditExtraSelection);
  pub fn qt_widgets_c_QTextEdit_fontFamily_to_output(this_ptr: *const ::text_edit::TextEdit, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTextEdit_fontItalic(this_ptr: *const ::text_edit::TextEdit) -> bool;
  pub fn qt_widgets_c_QTextEdit_fontPointSize(this_ptr: *const ::text_edit::TextEdit) -> ::libc::c_double;
  pub fn qt_widgets_c_QTextEdit_fontUnderline(this_ptr: *const ::text_edit::TextEdit) -> bool;
  pub fn qt_widgets_c_QTextEdit_fontWeight(this_ptr: *const ::text_edit::TextEdit) -> ::libc::c_int;
  pub fn qt_widgets_c_QTextEdit_inputMethodQuery_to_output_property(this_ptr: *const ::text_edit::TextEdit, property: *const ::qt_core::qt::InputMethodQuery, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QTextEdit_inputMethodQuery_to_output_query_argument(this_ptr: *const ::text_edit::TextEdit, query: *const ::qt_core::qt::InputMethodQuery, argument: *const ::qt_core::variant::Variant, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QTextEdit_insertHtml(this_ptr: *mut ::text_edit::TextEdit, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTextEdit_insertPlainText(this_ptr: *mut ::text_edit::TextEdit, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTextEdit_isReadOnly(this_ptr: *const ::text_edit::TextEdit) -> bool;
  pub fn qt_widgets_c_QTextEdit_isUndoRedoEnabled(this_ptr: *const ::text_edit::TextEdit) -> bool;
  pub fn qt_widgets_c_QTextEdit_lineWrapColumnOrWidth(this_ptr: *const ::text_edit::TextEdit) -> ::libc::c_int;
  pub fn qt_widgets_c_QTextEdit_lineWrapMode(this_ptr: *const ::text_edit::TextEdit) -> ::text_edit::LineWrapMode;
  pub fn qt_widgets_c_QTextEdit_loadResource_to_output(this_ptr: *mut ::text_edit::TextEdit, type_: ::libc::c_int, name: *const ::qt_core::url::Url, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QTextEdit_mergeCurrentCharFormat(this_ptr: *mut ::text_edit::TextEdit, modifier: *const ::qt_gui::text_char_format::TextCharFormat);
  pub fn qt_widgets_c_QTextEdit_metaObject(this_ptr: *const ::text_edit::TextEdit) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QTextEdit_moveCursor_operation(this_ptr: *mut ::text_edit::TextEdit, operation: *const ::qt_gui::text_cursor::MoveOperation);
  pub fn qt_widgets_c_QTextEdit_moveCursor_operation_mode(this_ptr: *mut ::text_edit::TextEdit, operation: *const ::qt_gui::text_cursor::MoveOperation, mode: *const ::qt_gui::text_cursor::MoveMode);
  pub fn qt_widgets_c_QTextEdit_new_no_args() -> *mut ::text_edit::TextEdit;
  pub fn qt_widgets_c_QTextEdit_new_parent(parent: *mut ::widget::Widget) -> *mut ::text_edit::TextEdit;
  pub fn qt_widgets_c_QTextEdit_new_text(text: *const ::qt_core::string::String) -> *mut ::text_edit::TextEdit;
  pub fn qt_widgets_c_QTextEdit_new_text_parent(text: *const ::qt_core::string::String, parent: *mut ::widget::Widget) -> *mut ::text_edit::TextEdit;
  pub fn qt_widgets_c_QTextEdit_overwriteMode(this_ptr: *const ::text_edit::TextEdit) -> bool;
  pub fn qt_widgets_c_QTextEdit_paste(this_ptr: *mut ::text_edit::TextEdit);
  pub fn qt_widgets_c_QTextEdit_placeholderText_to_output(this_ptr: *const ::text_edit::TextEdit, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTextEdit_print(this_ptr: *const ::text_edit::TextEdit, printer: *mut ::qt_gui::paged_paint_device::PagedPaintDevice);
  pub fn qt_widgets_c_QTextEdit_qt_metacall(this_ptr: *mut ::text_edit::TextEdit, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QTextEdit_qt_metacast(this_ptr: *mut ::text_edit::TextEdit, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QTextEdit_redo(this_ptr: *mut ::text_edit::TextEdit);
  pub fn qt_widgets_c_QTextEdit_scrollToAnchor(this_ptr: *mut ::text_edit::TextEdit, name: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTextEdit_selectAll(this_ptr: *mut ::text_edit::TextEdit);
  pub fn qt_widgets_c_QTextEdit_setAcceptRichText(this_ptr: *mut ::text_edit::TextEdit, accept: bool);
  pub fn qt_widgets_c_QTextEdit_setAutoFormatting(this_ptr: *mut ::text_edit::TextEdit, features: ::libc::c_uint);
  pub fn qt_widgets_c_QTextEdit_setCurrentCharFormat(this_ptr: *mut ::text_edit::TextEdit, format: *const ::qt_gui::text_char_format::TextCharFormat);
  pub fn qt_widgets_c_QTextEdit_setCurrentFont(this_ptr: *mut ::text_edit::TextEdit, f: *const ::qt_gui::font::Font);
  pub fn qt_widgets_c_QTextEdit_setCursorWidth(this_ptr: *mut ::text_edit::TextEdit, width: ::libc::c_int);
  pub fn qt_widgets_c_QTextEdit_setDocument(this_ptr: *mut ::text_edit::TextEdit, document: *mut ::qt_gui::text_document::TextDocument);
  pub fn qt_widgets_c_QTextEdit_setDocumentTitle(this_ptr: *mut ::text_edit::TextEdit, title: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTextEdit_setExtraSelections(this_ptr: *mut ::text_edit::TextEdit, selections: *const ::list::ListTextEditExtraSelection);
  pub fn qt_widgets_c_QTextEdit_setFontFamily(this_ptr: *mut ::text_edit::TextEdit, fontFamily: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTextEdit_setFontItalic(this_ptr: *mut ::text_edit::TextEdit, b: bool);
  pub fn qt_widgets_c_QTextEdit_setFontPointSize(this_ptr: *mut ::text_edit::TextEdit, s: ::libc::c_double);
  pub fn qt_widgets_c_QTextEdit_setFontUnderline(this_ptr: *mut ::text_edit::TextEdit, b: bool);
  pub fn qt_widgets_c_QTextEdit_setFontWeight(this_ptr: *mut ::text_edit::TextEdit, w: ::libc::c_int);
  pub fn qt_widgets_c_QTextEdit_setHtml(this_ptr: *mut ::text_edit::TextEdit, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTextEdit_setLineWrapColumnOrWidth(this_ptr: *mut ::text_edit::TextEdit, w: ::libc::c_int);
  pub fn qt_widgets_c_QTextEdit_setLineWrapMode(this_ptr: *mut ::text_edit::TextEdit, mode: ::text_edit::LineWrapMode);
  pub fn qt_widgets_c_QTextEdit_setOverwriteMode(this_ptr: *mut ::text_edit::TextEdit, overwrite: bool);
  pub fn qt_widgets_c_QTextEdit_setPlaceholderText(this_ptr: *mut ::text_edit::TextEdit, placeholderText: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTextEdit_setPlainText(this_ptr: *mut ::text_edit::TextEdit, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTextEdit_setReadOnly(this_ptr: *mut ::text_edit::TextEdit, ro: bool);
  pub fn qt_widgets_c_QTextEdit_setTabChangesFocus(this_ptr: *mut ::text_edit::TextEdit, b: bool);
  pub fn qt_widgets_c_QTextEdit_setTabStopWidth(this_ptr: *mut ::text_edit::TextEdit, width: ::libc::c_int);
  pub fn qt_widgets_c_QTextEdit_setText(this_ptr: *mut ::text_edit::TextEdit, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTextEdit_setTextBackgroundColor(this_ptr: *mut ::text_edit::TextEdit, c: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QTextEdit_setTextColor(this_ptr: *mut ::text_edit::TextEdit, c: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QTextEdit_setTextCursor(this_ptr: *mut ::text_edit::TextEdit, cursor: *const ::qt_gui::text_cursor::TextCursor);
  pub fn qt_widgets_c_QTextEdit_setUndoRedoEnabled(this_ptr: *mut ::text_edit::TextEdit, enable: bool);
  pub fn qt_widgets_c_QTextEdit_setWordWrapMode(this_ptr: *mut ::text_edit::TextEdit, policy: *const ::qt_gui::text_option::WrapMode);
  pub fn qt_widgets_c_QTextEdit_tabChangesFocus(this_ptr: *const ::text_edit::TextEdit) -> bool;
  pub fn qt_widgets_c_QTextEdit_tabStopWidth(this_ptr: *const ::text_edit::TextEdit) -> ::libc::c_int;
  pub fn qt_widgets_c_QTextEdit_textBackgroundColor_to_output(this_ptr: *const ::text_edit::TextEdit, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QTextEdit_textColor_to_output(this_ptr: *const ::text_edit::TextEdit, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QTextEdit_textCursor_as_ptr(this_ptr: *const ::text_edit::TextEdit) -> *mut ::qt_gui::text_cursor::TextCursor;
  pub fn qt_widgets_c_QTextEdit_toHtml_to_output(this_ptr: *const ::text_edit::TextEdit, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTextEdit_toPlainText_to_output(this_ptr: *const ::text_edit::TextEdit, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTextEdit_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTextEdit_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTextEdit_undo(this_ptr: *mut ::text_edit::TextEdit);
  pub fn qt_widgets_c_QTextEdit_zoomIn_no_args(this_ptr: *mut ::text_edit::TextEdit);
  pub fn qt_widgets_c_QTextEdit_zoomIn_range(this_ptr: *mut ::text_edit::TextEdit, range: ::libc::c_int);
  pub fn qt_widgets_c_QTextEdit_zoomOut_no_args(this_ptr: *mut ::text_edit::TextEdit);
  pub fn qt_widgets_c_QTextEdit_zoomOut_range(this_ptr: *mut ::text_edit::TextEdit, range: ::libc::c_int);

  // Header: QTileRules
  pub fn qt_widgets_c_QTileRules_G_qDrawBorderPixmap(painter: *mut ::qt_gui::painter::Painter, target: *const ::qt_core::rect::Rect, margins: *const ::qt_core::margins::Margins, pixmap: *const ::qt_gui::pixmap::Pixmap);
  pub fn qt_widgets_c_QTileRules_G_qDrawPlainRect_p_r_arg3(p: *mut ::qt_gui::painter::Painter, r: *const ::qt_core::rect::Rect, arg3: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QTileRules_G_qDrawPlainRect_p_r_arg3_lineWidth(p: *mut ::qt_gui::painter::Painter, r: *const ::qt_core::rect::Rect, arg3: *const ::qt_gui::color::Color, lineWidth: ::libc::c_int);
  pub fn qt_widgets_c_QTileRules_G_qDrawPlainRect_p_r_arg3_lineWidth_fill(p: *mut ::qt_gui::painter::Painter, r: *const ::qt_core::rect::Rect, arg3: *const ::qt_gui::color::Color, lineWidth: ::libc::c_int, fill: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QTileRules_G_qDrawPlainRect_p_x_y_w_h_arg6(p: *mut ::qt_gui::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, arg6: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QTileRules_G_qDrawPlainRect_p_x_y_w_h_arg6_lineWidth(p: *mut ::qt_gui::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, arg6: *const ::qt_gui::color::Color, lineWidth: ::libc::c_int);
  pub fn qt_widgets_c_QTileRules_G_qDrawPlainRect_p_x_y_w_h_arg6_lineWidth_fill(p: *mut ::qt_gui::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, arg6: *const ::qt_gui::color::Color, lineWidth: ::libc::c_int, fill: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadeLine_p_p1_p2_pal(p: *mut ::qt_gui::painter::Painter, p1: *const ::qt_core::point::Point, p2: *const ::qt_core::point::Point, pal: *const ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadeLine_p_p1_p2_pal_sunken(p: *mut ::qt_gui::painter::Painter, p1: *const ::qt_core::point::Point, p2: *const ::qt_core::point::Point, pal: *const ::qt_gui::palette::Palette, sunken: bool);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadeLine_p_p1_p2_pal_sunken_lineWidth(p: *mut ::qt_gui::painter::Painter, p1: *const ::qt_core::point::Point, p2: *const ::qt_core::point::Point, pal: *const ::qt_gui::palette::Palette, sunken: bool, lineWidth: ::libc::c_int);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadeLine_p_p1_p2_pal_sunken_lineWidth_midLineWidth(p: *mut ::qt_gui::painter::Painter, p1: *const ::qt_core::point::Point, p2: *const ::qt_core::point::Point, pal: *const ::qt_gui::palette::Palette, sunken: bool, lineWidth: ::libc::c_int, midLineWidth: ::libc::c_int);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadeLine_p_x1_y1_x2_y2_pal(p: *mut ::qt_gui::painter::Painter, x1: ::libc::c_int, y1: ::libc::c_int, x2: ::libc::c_int, y2: ::libc::c_int, pal: *const ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadeLine_p_x1_y1_x2_y2_pal_sunken(p: *mut ::qt_gui::painter::Painter, x1: ::libc::c_int, y1: ::libc::c_int, x2: ::libc::c_int, y2: ::libc::c_int, pal: *const ::qt_gui::palette::Palette, sunken: bool);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadeLine_p_x1_y1_x2_y2_pal_sunken_lineWidth(p: *mut ::qt_gui::painter::Painter, x1: ::libc::c_int, y1: ::libc::c_int, x2: ::libc::c_int, y2: ::libc::c_int, pal: *const ::qt_gui::palette::Palette, sunken: bool, lineWidth: ::libc::c_int);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadeLine_p_x1_y1_x2_y2_pal_sunken_lineWidth_midLineWidth(p: *mut ::qt_gui::painter::Painter, x1: ::libc::c_int, y1: ::libc::c_int, x2: ::libc::c_int, y2: ::libc::c_int, pal: *const ::qt_gui::palette::Palette, sunken: bool, lineWidth: ::libc::c_int, midLineWidth: ::libc::c_int);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadePanel_p_r_pal(p: *mut ::qt_gui::painter::Painter, r: *const ::qt_core::rect::Rect, pal: *const ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadePanel_p_r_pal_sunken(p: *mut ::qt_gui::painter::Painter, r: *const ::qt_core::rect::Rect, pal: *const ::qt_gui::palette::Palette, sunken: bool);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadePanel_p_r_pal_sunken_lineWidth(p: *mut ::qt_gui::painter::Painter, r: *const ::qt_core::rect::Rect, pal: *const ::qt_gui::palette::Palette, sunken: bool, lineWidth: ::libc::c_int);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadePanel_p_r_pal_sunken_lineWidth_fill(p: *mut ::qt_gui::painter::Painter, r: *const ::qt_core::rect::Rect, pal: *const ::qt_gui::palette::Palette, sunken: bool, lineWidth: ::libc::c_int, fill: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadePanel_p_x_y_w_h_pal(p: *mut ::qt_gui::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, pal: *const ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadePanel_p_x_y_w_h_pal_sunken(p: *mut ::qt_gui::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, pal: *const ::qt_gui::palette::Palette, sunken: bool);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadePanel_p_x_y_w_h_pal_sunken_lineWidth(p: *mut ::qt_gui::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, pal: *const ::qt_gui::palette::Palette, sunken: bool, lineWidth: ::libc::c_int);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadePanel_p_x_y_w_h_pal_sunken_lineWidth_fill(p: *mut ::qt_gui::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, pal: *const ::qt_gui::palette::Palette, sunken: bool, lineWidth: ::libc::c_int, fill: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadeRect_p_r_pal(p: *mut ::qt_gui::painter::Painter, r: *const ::qt_core::rect::Rect, pal: *const ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadeRect_p_r_pal_sunken(p: *mut ::qt_gui::painter::Painter, r: *const ::qt_core::rect::Rect, pal: *const ::qt_gui::palette::Palette, sunken: bool);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadeRect_p_r_pal_sunken_lineWidth(p: *mut ::qt_gui::painter::Painter, r: *const ::qt_core::rect::Rect, pal: *const ::qt_gui::palette::Palette, sunken: bool, lineWidth: ::libc::c_int);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadeRect_p_r_pal_sunken_lineWidth_midLineWidth(p: *mut ::qt_gui::painter::Painter, r: *const ::qt_core::rect::Rect, pal: *const ::qt_gui::palette::Palette, sunken: bool, lineWidth: ::libc::c_int, midLineWidth: ::libc::c_int);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadeRect_p_r_pal_sunken_lineWidth_midLineWidth_fill(p: *mut ::qt_gui::painter::Painter, r: *const ::qt_core::rect::Rect, pal: *const ::qt_gui::palette::Palette, sunken: bool, lineWidth: ::libc::c_int, midLineWidth: ::libc::c_int, fill: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadeRect_p_x_y_w_h_pal(p: *mut ::qt_gui::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, pal: *const ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadeRect_p_x_y_w_h_pal_sunken(p: *mut ::qt_gui::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, pal: *const ::qt_gui::palette::Palette, sunken: bool);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadeRect_p_x_y_w_h_pal_sunken_lineWidth(p: *mut ::qt_gui::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, pal: *const ::qt_gui::palette::Palette, sunken: bool, lineWidth: ::libc::c_int);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadeRect_p_x_y_w_h_pal_sunken_lineWidth_midLineWidth(p: *mut ::qt_gui::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, pal: *const ::qt_gui::palette::Palette, sunken: bool, lineWidth: ::libc::c_int, midLineWidth: ::libc::c_int);
  pub fn qt_widgets_c_QTileRules_G_qDrawShadeRect_p_x_y_w_h_pal_sunken_lineWidth_midLineWidth_fill(p: *mut ::qt_gui::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, pal: *const ::qt_gui::palette::Palette, sunken: bool, lineWidth: ::libc::c_int, midLineWidth: ::libc::c_int, fill: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QTileRules_G_qDrawWinButton_p_r_pal(p: *mut ::qt_gui::painter::Painter, r: *const ::qt_core::rect::Rect, pal: *const ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QTileRules_G_qDrawWinButton_p_r_pal_sunken(p: *mut ::qt_gui::painter::Painter, r: *const ::qt_core::rect::Rect, pal: *const ::qt_gui::palette::Palette, sunken: bool);
  pub fn qt_widgets_c_QTileRules_G_qDrawWinButton_p_r_pal_sunken_fill(p: *mut ::qt_gui::painter::Painter, r: *const ::qt_core::rect::Rect, pal: *const ::qt_gui::palette::Palette, sunken: bool, fill: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QTileRules_G_qDrawWinButton_p_x_y_w_h_pal(p: *mut ::qt_gui::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, pal: *const ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QTileRules_G_qDrawWinButton_p_x_y_w_h_pal_sunken(p: *mut ::qt_gui::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, pal: *const ::qt_gui::palette::Palette, sunken: bool);
  pub fn qt_widgets_c_QTileRules_G_qDrawWinButton_p_x_y_w_h_pal_sunken_fill(p: *mut ::qt_gui::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, pal: *const ::qt_gui::palette::Palette, sunken: bool, fill: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QTileRules_G_qDrawWinPanel_p_r_pal(p: *mut ::qt_gui::painter::Painter, r: *const ::qt_core::rect::Rect, pal: *const ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QTileRules_G_qDrawWinPanel_p_r_pal_sunken(p: *mut ::qt_gui::painter::Painter, r: *const ::qt_core::rect::Rect, pal: *const ::qt_gui::palette::Palette, sunken: bool);
  pub fn qt_widgets_c_QTileRules_G_qDrawWinPanel_p_r_pal_sunken_fill(p: *mut ::qt_gui::painter::Painter, r: *const ::qt_core::rect::Rect, pal: *const ::qt_gui::palette::Palette, sunken: bool, fill: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QTileRules_G_qDrawWinPanel_p_x_y_w_h_pal(p: *mut ::qt_gui::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, pal: *const ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QTileRules_G_qDrawWinPanel_p_x_y_w_h_pal_sunken(p: *mut ::qt_gui::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, pal: *const ::qt_gui::palette::Palette, sunken: bool);
  pub fn qt_widgets_c_QTileRules_G_qDrawWinPanel_p_x_y_w_h_pal_sunken_fill(p: *mut ::qt_gui::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, pal: *const ::qt_gui::palette::Palette, sunken: bool, fill: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QTileRules_delete(this_ptr: *mut ::tile_rules::TileRules);
  pub fn qt_widgets_c_QTileRules_horizontal(this_ptr: *const ::tile_rules::TileRules) -> *const ::qt_core::qt::TileRule;
  pub fn qt_widgets_c_QTileRules_horizontal_mut(this_ptr: *mut ::tile_rules::TileRules) -> *mut ::qt_core::qt::TileRule;
  pub fn qt_widgets_c_QTileRules_new_horizontalRule_verticalRule(horizontalRule: *const ::qt_core::qt::TileRule, verticalRule: *const ::qt_core::qt::TileRule) -> *mut ::tile_rules::TileRules;
  pub fn qt_widgets_c_QTileRules_new_no_args() -> *mut ::tile_rules::TileRules;
  pub fn qt_widgets_c_QTileRules_new_rule(rule: *const ::qt_core::qt::TileRule) -> *mut ::tile_rules::TileRules;
  pub fn qt_widgets_c_QTileRules_set_horizontal(this_ptr: *mut ::tile_rules::TileRules, value: *const ::qt_core::qt::TileRule);
  pub fn qt_widgets_c_QTileRules_set_vertical(this_ptr: *mut ::tile_rules::TileRules, value: *const ::qt_core::qt::TileRule);
  pub fn qt_widgets_c_QTileRules_vertical(this_ptr: *const ::tile_rules::TileRules) -> *const ::qt_core::qt::TileRule;
  pub fn qt_widgets_c_QTileRules_vertical_mut(this_ptr: *mut ::tile_rules::TileRules) -> *mut ::qt_core::qt::TileRule;

  // Header: QTimeEdit
  pub fn qt_widgets_c_QTimeEdit_G_dynamic_cast_QTimeEdit_ptr_QAbstractSpinBox(ptr: *mut ::abstract_spin_box::AbstractSpinBox) -> *mut ::time_edit::TimeEdit;
  pub fn qt_widgets_c_QTimeEdit_G_dynamic_cast_QTimeEdit_ptr_QDateTimeEdit(ptr: *mut ::date_time_edit::DateTimeEdit) -> *mut ::time_edit::TimeEdit;
  pub fn qt_widgets_c_QTimeEdit_G_dynamic_cast_QTimeEdit_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::time_edit::TimeEdit;
  pub fn qt_widgets_c_QTimeEdit_G_static_cast_QAbstractSpinBox_ptr(ptr: *mut ::time_edit::TimeEdit) -> *mut ::abstract_spin_box::AbstractSpinBox;
  pub fn qt_widgets_c_QTimeEdit_G_static_cast_QDateTimeEdit_ptr(ptr: *mut ::time_edit::TimeEdit) -> *mut ::date_time_edit::DateTimeEdit;
  pub fn qt_widgets_c_QTimeEdit_G_static_cast_QObject_ptr(ptr: *mut ::time_edit::TimeEdit) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QTimeEdit_G_static_cast_QPaintDevice_ptr(ptr: *mut ::time_edit::TimeEdit) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QTimeEdit_G_static_cast_QTimeEdit_ptr_QAbstractSpinBox(ptr: *mut ::abstract_spin_box::AbstractSpinBox) -> *mut ::time_edit::TimeEdit;
  pub fn qt_widgets_c_QTimeEdit_G_static_cast_QTimeEdit_ptr_QDateTimeEdit(ptr: *mut ::date_time_edit::DateTimeEdit) -> *mut ::time_edit::TimeEdit;
  pub fn qt_widgets_c_QTimeEdit_G_static_cast_QTimeEdit_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::time_edit::TimeEdit;
  pub fn qt_widgets_c_QTimeEdit_G_static_cast_QTimeEdit_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::time_edit::TimeEdit;
  pub fn qt_widgets_c_QTimeEdit_G_static_cast_QTimeEdit_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::time_edit::TimeEdit;
  pub fn qt_widgets_c_QTimeEdit_G_static_cast_QWidget_ptr(ptr: *mut ::time_edit::TimeEdit) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QTimeEdit_delete(this_ptr: *mut ::time_edit::TimeEdit);
  pub fn qt_widgets_c_QTimeEdit_metaObject(this_ptr: *const ::time_edit::TimeEdit) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QTimeEdit_new_no_args() -> *mut ::time_edit::TimeEdit;
  pub fn qt_widgets_c_QTimeEdit_new_parent(parent: *mut ::widget::Widget) -> *mut ::time_edit::TimeEdit;
  pub fn qt_widgets_c_QTimeEdit_new_time(time: *const ::qt_core::time::Time) -> *mut ::time_edit::TimeEdit;
  pub fn qt_widgets_c_QTimeEdit_new_time_parent(time: *const ::qt_core::time::Time, parent: *mut ::widget::Widget) -> *mut ::time_edit::TimeEdit;
  pub fn qt_widgets_c_QTimeEdit_qt_metacall(this_ptr: *mut ::time_edit::TimeEdit, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QTimeEdit_qt_metacast(this_ptr: *mut ::time_edit::TimeEdit, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QTimeEdit_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTimeEdit_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QToolBar
  pub fn qt_widgets_c_QToolBar_G_dynamic_cast_QToolBar_ptr(ptr: *mut ::widget::Widget) -> *mut ::tool_bar::ToolBar;
  pub fn qt_widgets_c_QToolBar_G_static_cast_QObject_ptr(ptr: *mut ::tool_bar::ToolBar) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QToolBar_G_static_cast_QPaintDevice_ptr(ptr: *mut ::tool_bar::ToolBar) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QToolBar_G_static_cast_QToolBar_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::tool_bar::ToolBar;
  pub fn qt_widgets_c_QToolBar_G_static_cast_QToolBar_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::tool_bar::ToolBar;
  pub fn qt_widgets_c_QToolBar_G_static_cast_QToolBar_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::tool_bar::ToolBar;
  pub fn qt_widgets_c_QToolBar_G_static_cast_QWidget_ptr(ptr: *mut ::tool_bar::ToolBar) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QToolBar_actionAt_p(this_ptr: *const ::tool_bar::ToolBar, p: *const ::qt_core::point::Point) -> *mut ::action::Action;
  pub fn qt_widgets_c_QToolBar_actionAt_x_y(this_ptr: *const ::tool_bar::ToolBar, x: ::libc::c_int, y: ::libc::c_int) -> *mut ::action::Action;
  pub fn qt_widgets_c_QToolBar_actionGeometry_to_output(this_ptr: *const ::tool_bar::ToolBar, action: *mut ::action::Action, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QToolBar_addAction_icon_text(this_ptr: *mut ::tool_bar::ToolBar, icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String) -> *mut ::action::Action;
  pub fn qt_widgets_c_QToolBar_addAction_icon_text_receiver_member(this_ptr: *mut ::tool_bar::ToolBar, icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String, receiver: *const ::qt_core::object::Object, member: *const ::libc::c_char) -> *mut ::action::Action;
  pub fn qt_widgets_c_QToolBar_addAction_text(this_ptr: *mut ::tool_bar::ToolBar, text: *const ::qt_core::string::String) -> *mut ::action::Action;
  pub fn qt_widgets_c_QToolBar_addAction_text_receiver_member(this_ptr: *mut ::tool_bar::ToolBar, text: *const ::qt_core::string::String, receiver: *const ::qt_core::object::Object, member: *const ::libc::c_char) -> *mut ::action::Action;
  pub fn qt_widgets_c_QToolBar_addSeparator(this_ptr: *mut ::tool_bar::ToolBar) -> *mut ::action::Action;
  pub fn qt_widgets_c_QToolBar_addWidget(this_ptr: *mut ::tool_bar::ToolBar, widget: *mut ::widget::Widget) -> *mut ::action::Action;
  pub fn qt_widgets_c_QToolBar_clear(this_ptr: *mut ::tool_bar::ToolBar);
  pub fn qt_widgets_c_QToolBar_delete(this_ptr: *mut ::tool_bar::ToolBar);
  pub fn qt_widgets_c_QToolBar_iconSize_to_output(this_ptr: *const ::tool_bar::ToolBar, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QToolBar_insertSeparator(this_ptr: *mut ::tool_bar::ToolBar, before: *mut ::action::Action) -> *mut ::action::Action;
  pub fn qt_widgets_c_QToolBar_insertWidget(this_ptr: *mut ::tool_bar::ToolBar, before: *mut ::action::Action, widget: *mut ::widget::Widget) -> *mut ::action::Action;
  pub fn qt_widgets_c_QToolBar_isAreaAllowed(this_ptr: *const ::tool_bar::ToolBar, area: *const ::qt_core::qt::ToolBarArea) -> bool;
  pub fn qt_widgets_c_QToolBar_isFloatable(this_ptr: *const ::tool_bar::ToolBar) -> bool;
  pub fn qt_widgets_c_QToolBar_isFloating(this_ptr: *const ::tool_bar::ToolBar) -> bool;
  pub fn qt_widgets_c_QToolBar_isMovable(this_ptr: *const ::tool_bar::ToolBar) -> bool;
  pub fn qt_widgets_c_QToolBar_metaObject(this_ptr: *const ::tool_bar::ToolBar) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QToolBar_new_no_args() -> *mut ::tool_bar::ToolBar;
  pub fn qt_widgets_c_QToolBar_new_parent(parent: *mut ::widget::Widget) -> *mut ::tool_bar::ToolBar;
  pub fn qt_widgets_c_QToolBar_new_title(title: *const ::qt_core::string::String) -> *mut ::tool_bar::ToolBar;
  pub fn qt_widgets_c_QToolBar_new_title_parent(title: *const ::qt_core::string::String, parent: *mut ::widget::Widget) -> *mut ::tool_bar::ToolBar;
  pub fn qt_widgets_c_QToolBar_qt_metacall(this_ptr: *mut ::tool_bar::ToolBar, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QToolBar_qt_metacast(this_ptr: *mut ::tool_bar::ToolBar, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QToolBar_setFloatable(this_ptr: *mut ::tool_bar::ToolBar, floatable: bool);
  pub fn qt_widgets_c_QToolBar_setIconSize(this_ptr: *mut ::tool_bar::ToolBar, iconSize: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QToolBar_setMovable(this_ptr: *mut ::tool_bar::ToolBar, movable: bool);
  pub fn qt_widgets_c_QToolBar_setOrientation(this_ptr: *mut ::tool_bar::ToolBar, orientation: *const ::qt_core::qt::Orientation);
  pub fn qt_widgets_c_QToolBar_setToolButtonStyle(this_ptr: *mut ::tool_bar::ToolBar, toolButtonStyle: *const ::qt_core::qt::ToolButtonStyle);
  pub fn qt_widgets_c_QToolBar_toggleViewAction(this_ptr: *const ::tool_bar::ToolBar) -> *mut ::action::Action;
  pub fn qt_widgets_c_QToolBar_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QToolBar_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QToolBar_widgetForAction(this_ptr: *const ::tool_bar::ToolBar, action: *mut ::action::Action) -> *mut ::widget::Widget;

  // Header: QToolBox
  pub fn qt_widgets_c_QToolBox_G_dynamic_cast_QToolBox_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::tool_box::ToolBox;
  pub fn qt_widgets_c_QToolBox_G_dynamic_cast_QToolBox_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::tool_box::ToolBox;
  pub fn qt_widgets_c_QToolBox_G_static_cast_QFrame_ptr(ptr: *mut ::tool_box::ToolBox) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QToolBox_G_static_cast_QObject_ptr(ptr: *mut ::tool_box::ToolBox) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QToolBox_G_static_cast_QPaintDevice_ptr(ptr: *mut ::tool_box::ToolBox) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QToolBox_G_static_cast_QToolBox_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::tool_box::ToolBox;
  pub fn qt_widgets_c_QToolBox_G_static_cast_QToolBox_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::tool_box::ToolBox;
  pub fn qt_widgets_c_QToolBox_G_static_cast_QToolBox_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::tool_box::ToolBox;
  pub fn qt_widgets_c_QToolBox_G_static_cast_QToolBox_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::tool_box::ToolBox;
  pub fn qt_widgets_c_QToolBox_G_static_cast_QWidget_ptr(ptr: *mut ::tool_box::ToolBox) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QToolBox_addItem_widget_icon_text(this_ptr: *mut ::tool_box::ToolBox, widget: *mut ::widget::Widget, icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_widgets_c_QToolBox_addItem_widget_text(this_ptr: *mut ::tool_box::ToolBox, widget: *mut ::widget::Widget, text: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_widgets_c_QToolBox_count(this_ptr: *const ::tool_box::ToolBox) -> ::libc::c_int;
  pub fn qt_widgets_c_QToolBox_currentIndex(this_ptr: *const ::tool_box::ToolBox) -> ::libc::c_int;
  pub fn qt_widgets_c_QToolBox_currentWidget(this_ptr: *const ::tool_box::ToolBox) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QToolBox_delete(this_ptr: *mut ::tool_box::ToolBox);
  pub fn qt_widgets_c_QToolBox_indexOf(this_ptr: *const ::tool_box::ToolBox, widget: *mut ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QToolBox_insertItem_index_widget_icon_text(this_ptr: *mut ::tool_box::ToolBox, index: ::libc::c_int, widget: *mut ::widget::Widget, icon: *const ::qt_gui::icon::Icon, text: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_widgets_c_QToolBox_insertItem_index_widget_text(this_ptr: *mut ::tool_box::ToolBox, index: ::libc::c_int, widget: *mut ::widget::Widget, text: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_widgets_c_QToolBox_isItemEnabled(this_ptr: *const ::tool_box::ToolBox, index: ::libc::c_int) -> bool;
  pub fn qt_widgets_c_QToolBox_itemIcon_to_output(this_ptr: *const ::tool_box::ToolBox, index: ::libc::c_int, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QToolBox_itemText_to_output(this_ptr: *const ::tool_box::ToolBox, index: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QToolBox_itemToolTip_to_output(this_ptr: *const ::tool_box::ToolBox, index: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QToolBox_metaObject(this_ptr: *const ::tool_box::ToolBox) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QToolBox_qt_metacall(this_ptr: *mut ::tool_box::ToolBox, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QToolBox_qt_metacast(this_ptr: *mut ::tool_box::ToolBox, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QToolBox_removeItem(this_ptr: *mut ::tool_box::ToolBox, index: ::libc::c_int);
  pub fn qt_widgets_c_QToolBox_setCurrentIndex(this_ptr: *mut ::tool_box::ToolBox, index: ::libc::c_int);
  pub fn qt_widgets_c_QToolBox_setCurrentWidget(this_ptr: *mut ::tool_box::ToolBox, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QToolBox_setItemEnabled(this_ptr: *mut ::tool_box::ToolBox, index: ::libc::c_int, enabled: bool);
  pub fn qt_widgets_c_QToolBox_setItemIcon(this_ptr: *mut ::tool_box::ToolBox, index: ::libc::c_int, icon: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QToolBox_setItemText(this_ptr: *mut ::tool_box::ToolBox, index: ::libc::c_int, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QToolBox_setItemToolTip(this_ptr: *mut ::tool_box::ToolBox, index: ::libc::c_int, toolTip: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QToolBox_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QToolBox_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QToolBox_widget(this_ptr: *const ::tool_box::ToolBox, index: ::libc::c_int) -> *mut ::widget::Widget;

  // Header: QToolButton
  pub fn qt_widgets_c_QToolButton_G_dynamic_cast_QToolButton_ptr_QAbstractButton(ptr: *mut ::abstract_button::AbstractButton) -> *mut ::tool_button::ToolButton;
  pub fn qt_widgets_c_QToolButton_G_dynamic_cast_QToolButton_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::tool_button::ToolButton;
  pub fn qt_widgets_c_QToolButton_G_static_cast_QAbstractButton_ptr(ptr: *mut ::tool_button::ToolButton) -> *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QToolButton_G_static_cast_QObject_ptr(ptr: *mut ::tool_button::ToolButton) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QToolButton_G_static_cast_QPaintDevice_ptr(ptr: *mut ::tool_button::ToolButton) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QToolButton_G_static_cast_QToolButton_ptr_QAbstractButton(ptr: *mut ::abstract_button::AbstractButton) -> *mut ::tool_button::ToolButton;
  pub fn qt_widgets_c_QToolButton_G_static_cast_QToolButton_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::tool_button::ToolButton;
  pub fn qt_widgets_c_QToolButton_G_static_cast_QToolButton_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::tool_button::ToolButton;
  pub fn qt_widgets_c_QToolButton_G_static_cast_QToolButton_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::tool_button::ToolButton;
  pub fn qt_widgets_c_QToolButton_G_static_cast_QWidget_ptr(ptr: *mut ::tool_button::ToolButton) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QToolButton_autoRaise(this_ptr: *const ::tool_button::ToolButton) -> bool;
  pub fn qt_widgets_c_QToolButton_defaultAction(this_ptr: *const ::tool_button::ToolButton) -> *mut ::action::Action;
  pub fn qt_widgets_c_QToolButton_delete(this_ptr: *mut ::tool_button::ToolButton);
  pub fn qt_widgets_c_QToolButton_menu(this_ptr: *const ::tool_button::ToolButton) -> *mut ::menu::Menu;
  pub fn qt_widgets_c_QToolButton_metaObject(this_ptr: *const ::tool_button::ToolButton) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QToolButton_minimumSizeHint_to_output(this_ptr: *const ::tool_button::ToolButton, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QToolButton_new_no_args() -> *mut ::tool_button::ToolButton;
  pub fn qt_widgets_c_QToolButton_new_parent(parent: *mut ::widget::Widget) -> *mut ::tool_button::ToolButton;
  pub fn qt_widgets_c_QToolButton_popupMode(this_ptr: *const ::tool_button::ToolButton) -> ::tool_button::ToolButtonPopupMode;
  pub fn qt_widgets_c_QToolButton_qt_metacall(this_ptr: *mut ::tool_button::ToolButton, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QToolButton_qt_metacast(this_ptr: *mut ::tool_button::ToolButton, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QToolButton_setArrowType(this_ptr: *mut ::tool_button::ToolButton, type_: *const ::qt_core::qt::ArrowType);
  pub fn qt_widgets_c_QToolButton_setAutoRaise(this_ptr: *mut ::tool_button::ToolButton, enable: bool);
  pub fn qt_widgets_c_QToolButton_setDefaultAction(this_ptr: *mut ::tool_button::ToolButton, arg1: *mut ::action::Action);
  pub fn qt_widgets_c_QToolButton_setMenu(this_ptr: *mut ::tool_button::ToolButton, menu: *mut ::menu::Menu);
  pub fn qt_widgets_c_QToolButton_setPopupMode(this_ptr: *mut ::tool_button::ToolButton, mode: ::tool_button::ToolButtonPopupMode);
  pub fn qt_widgets_c_QToolButton_setToolButtonStyle(this_ptr: *mut ::tool_button::ToolButton, style: *const ::qt_core::qt::ToolButtonStyle);
  pub fn qt_widgets_c_QToolButton_showMenu(this_ptr: *mut ::tool_button::ToolButton);
  pub fn qt_widgets_c_QToolButton_sizeHint_to_output(this_ptr: *const ::tool_button::ToolButton, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QToolButton_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QToolButton_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QToolTip
  pub fn qt_widgets_c_QToolTip_delete(this_ptr: *mut ::tool_tip::ToolTip);
  pub fn qt_widgets_c_QToolTip_font_to_output(output: *mut ::qt_gui::font::Font);
  pub fn qt_widgets_c_QToolTip_hideText();
  pub fn qt_widgets_c_QToolTip_isVisible() -> bool;
  pub fn qt_widgets_c_QToolTip_palette_to_output(output: *mut ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QToolTip_setFont(arg1: *const ::qt_gui::font::Font);
  pub fn qt_widgets_c_QToolTip_setPalette(arg1: *const ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QToolTip_showText_pos_text(pos: *const ::qt_core::point::Point, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QToolTip_showText_pos_text_w(pos: *const ::qt_core::point::Point, text: *const ::qt_core::string::String, w: *mut ::widget::Widget);
  pub fn qt_widgets_c_QToolTip_showText_pos_text_w_rect(pos: *const ::qt_core::point::Point, text: *const ::qt_core::string::String, w: *mut ::widget::Widget, rect: *const ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QToolTip_showText_pos_text_w_rect_msecShowTime(pos: *const ::qt_core::point::Point, text: *const ::qt_core::string::String, w: *mut ::widget::Widget, rect: *const ::qt_core::rect::Rect, msecShowTime: ::libc::c_int);
  pub fn qt_widgets_c_QToolTip_text_to_output(output: *mut ::qt_core::string::String);

  // Header: QTreeView
  pub fn qt_widgets_c_QTreeView_G_dynamic_cast_QTreeView_ptr_QAbstractItemView(ptr: *mut ::abstract_item_view::AbstractItemView) -> *mut ::tree_view::TreeView;
  pub fn qt_widgets_c_QTreeView_G_dynamic_cast_QTreeView_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::tree_view::TreeView;
  pub fn qt_widgets_c_QTreeView_G_dynamic_cast_QTreeView_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::tree_view::TreeView;
  pub fn qt_widgets_c_QTreeView_G_dynamic_cast_QTreeView_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::tree_view::TreeView;
  pub fn qt_widgets_c_QTreeView_G_static_cast_QAbstractItemView_ptr(ptr: *mut ::tree_view::TreeView) -> *mut ::abstract_item_view::AbstractItemView;
  pub fn qt_widgets_c_QTreeView_G_static_cast_QAbstractScrollArea_ptr(ptr: *mut ::tree_view::TreeView) -> *mut ::abstract_scroll_area::AbstractScrollArea;
  pub fn qt_widgets_c_QTreeView_G_static_cast_QFrame_ptr(ptr: *mut ::tree_view::TreeView) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QTreeView_G_static_cast_QObject_ptr(ptr: *mut ::tree_view::TreeView) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QTreeView_G_static_cast_QPaintDevice_ptr(ptr: *mut ::tree_view::TreeView) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QTreeView_G_static_cast_QTreeView_ptr_QAbstractItemView(ptr: *mut ::abstract_item_view::AbstractItemView) -> *mut ::tree_view::TreeView;
  pub fn qt_widgets_c_QTreeView_G_static_cast_QTreeView_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::tree_view::TreeView;
  pub fn qt_widgets_c_QTreeView_G_static_cast_QTreeView_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::tree_view::TreeView;
  pub fn qt_widgets_c_QTreeView_G_static_cast_QTreeView_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::tree_view::TreeView;
  pub fn qt_widgets_c_QTreeView_G_static_cast_QTreeView_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::tree_view::TreeView;
  pub fn qt_widgets_c_QTreeView_G_static_cast_QTreeView_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::tree_view::TreeView;
  pub fn qt_widgets_c_QTreeView_G_static_cast_QWidget_ptr(ptr: *mut ::tree_view::TreeView) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QTreeView_allColumnsShowFocus(this_ptr: *const ::tree_view::TreeView) -> bool;
  pub fn qt_widgets_c_QTreeView_autoExpandDelay(this_ptr: *const ::tree_view::TreeView) -> ::libc::c_int;
  pub fn qt_widgets_c_QTreeView_collapse(this_ptr: *mut ::tree_view::TreeView, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QTreeView_collapseAll(this_ptr: *mut ::tree_view::TreeView);
  pub fn qt_widgets_c_QTreeView_columnAt(this_ptr: *const ::tree_view::TreeView, x: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QTreeView_columnViewportPosition(this_ptr: *const ::tree_view::TreeView, column: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QTreeView_columnWidth(this_ptr: *const ::tree_view::TreeView, column: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QTreeView_dataChanged_topLeft_bottomRight(this_ptr: *mut ::tree_view::TreeView, topLeft: *const ::qt_core::model_index::ModelIndex, bottomRight: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QTreeView_dataChanged_topLeft_bottomRight_roles(this_ptr: *mut ::tree_view::TreeView, topLeft: *const ::qt_core::model_index::ModelIndex, bottomRight: *const ::qt_core::model_index::ModelIndex, roles: *const ::qt_core::vector::VectorCInt);
  pub fn qt_widgets_c_QTreeView_delete(this_ptr: *mut ::tree_view::TreeView);
  pub fn qt_widgets_c_QTreeView_doItemsLayout(this_ptr: *mut ::tree_view::TreeView);
  pub fn qt_widgets_c_QTreeView_expand(this_ptr: *mut ::tree_view::TreeView, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QTreeView_expandAll(this_ptr: *mut ::tree_view::TreeView);
  pub fn qt_widgets_c_QTreeView_expandToDepth(this_ptr: *mut ::tree_view::TreeView, depth: ::libc::c_int);
  pub fn qt_widgets_c_QTreeView_expandsOnDoubleClick(this_ptr: *const ::tree_view::TreeView) -> bool;
  pub fn qt_widgets_c_QTreeView_header(this_ptr: *const ::tree_view::TreeView) -> *mut ::header_view::HeaderView;
  pub fn qt_widgets_c_QTreeView_hideColumn(this_ptr: *mut ::tree_view::TreeView, column: ::libc::c_int);
  pub fn qt_widgets_c_QTreeView_indentation(this_ptr: *const ::tree_view::TreeView) -> ::libc::c_int;
  pub fn qt_widgets_c_QTreeView_indexAbove_to_output(this_ptr: *const ::tree_view::TreeView, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QTreeView_indexAt_to_output(this_ptr: *const ::tree_view::TreeView, p: *const ::qt_core::point::Point, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QTreeView_indexBelow_to_output(this_ptr: *const ::tree_view::TreeView, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QTreeView_isAnimated(this_ptr: *const ::tree_view::TreeView) -> bool;
  pub fn qt_widgets_c_QTreeView_isColumnHidden(this_ptr: *const ::tree_view::TreeView, column: ::libc::c_int) -> bool;
  pub fn qt_widgets_c_QTreeView_isExpanded(this_ptr: *const ::tree_view::TreeView, index: *const ::qt_core::model_index::ModelIndex) -> bool;
  pub fn qt_widgets_c_QTreeView_isFirstColumnSpanned(this_ptr: *const ::tree_view::TreeView, row: ::libc::c_int, parent: *const ::qt_core::model_index::ModelIndex) -> bool;
  pub fn qt_widgets_c_QTreeView_isHeaderHidden(this_ptr: *const ::tree_view::TreeView) -> bool;
  pub fn qt_widgets_c_QTreeView_isRowHidden(this_ptr: *const ::tree_view::TreeView, row: ::libc::c_int, parent: *const ::qt_core::model_index::ModelIndex) -> bool;
  pub fn qt_widgets_c_QTreeView_isSortingEnabled(this_ptr: *const ::tree_view::TreeView) -> bool;
  pub fn qt_widgets_c_QTreeView_itemsExpandable(this_ptr: *const ::tree_view::TreeView) -> bool;
  pub fn qt_widgets_c_QTreeView_keyboardSearch(this_ptr: *mut ::tree_view::TreeView, search: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTreeView_metaObject(this_ptr: *const ::tree_view::TreeView) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QTreeView_new_no_args() -> *mut ::tree_view::TreeView;
  pub fn qt_widgets_c_QTreeView_new_parent(parent: *mut ::widget::Widget) -> *mut ::tree_view::TreeView;
  pub fn qt_widgets_c_QTreeView_qt_metacall(this_ptr: *mut ::tree_view::TreeView, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QTreeView_qt_metacast(this_ptr: *mut ::tree_view::TreeView, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QTreeView_reset(this_ptr: *mut ::tree_view::TreeView);
  pub fn qt_widgets_c_QTreeView_resetIndentation(this_ptr: *mut ::tree_view::TreeView);
  pub fn qt_widgets_c_QTreeView_resizeColumnToContents(this_ptr: *mut ::tree_view::TreeView, column: ::libc::c_int);
  pub fn qt_widgets_c_QTreeView_rootIsDecorated(this_ptr: *const ::tree_view::TreeView) -> bool;
  pub fn qt_widgets_c_QTreeView_scrollTo_index(this_ptr: *mut ::tree_view::TreeView, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QTreeView_scrollTo_index_hint(this_ptr: *mut ::tree_view::TreeView, index: *const ::qt_core::model_index::ModelIndex, hint: ::abstract_item_view::ScrollHint);
  pub fn qt_widgets_c_QTreeView_selectAll(this_ptr: *mut ::tree_view::TreeView);
  pub fn qt_widgets_c_QTreeView_setAllColumnsShowFocus(this_ptr: *mut ::tree_view::TreeView, enable: bool);
  pub fn qt_widgets_c_QTreeView_setAnimated(this_ptr: *mut ::tree_view::TreeView, enable: bool);
  pub fn qt_widgets_c_QTreeView_setAutoExpandDelay(this_ptr: *mut ::tree_view::TreeView, delay: ::libc::c_int);
  pub fn qt_widgets_c_QTreeView_setColumnHidden(this_ptr: *mut ::tree_view::TreeView, column: ::libc::c_int, hide: bool);
  pub fn qt_widgets_c_QTreeView_setColumnWidth(this_ptr: *mut ::tree_view::TreeView, column: ::libc::c_int, width: ::libc::c_int);
  pub fn qt_widgets_c_QTreeView_setExpanded(this_ptr: *mut ::tree_view::TreeView, index: *const ::qt_core::model_index::ModelIndex, expand: bool);
  pub fn qt_widgets_c_QTreeView_setExpandsOnDoubleClick(this_ptr: *mut ::tree_view::TreeView, enable: bool);
  pub fn qt_widgets_c_QTreeView_setFirstColumnSpanned(this_ptr: *mut ::tree_view::TreeView, row: ::libc::c_int, parent: *const ::qt_core::model_index::ModelIndex, span: bool);
  pub fn qt_widgets_c_QTreeView_setHeader(this_ptr: *mut ::tree_view::TreeView, header: *mut ::header_view::HeaderView);
  pub fn qt_widgets_c_QTreeView_setHeaderHidden(this_ptr: *mut ::tree_view::TreeView, hide: bool);
  pub fn qt_widgets_c_QTreeView_setIndentation(this_ptr: *mut ::tree_view::TreeView, i: ::libc::c_int);
  pub fn qt_widgets_c_QTreeView_setItemsExpandable(this_ptr: *mut ::tree_view::TreeView, enable: bool);
  pub fn qt_widgets_c_QTreeView_setModel(this_ptr: *mut ::tree_view::TreeView, model: *mut ::qt_core::abstract_item_model::AbstractItemModel);
  pub fn qt_widgets_c_QTreeView_setRootIndex(this_ptr: *mut ::tree_view::TreeView, index: *const ::qt_core::model_index::ModelIndex);
  pub fn qt_widgets_c_QTreeView_setRootIsDecorated(this_ptr: *mut ::tree_view::TreeView, show: bool);
  pub fn qt_widgets_c_QTreeView_setRowHidden(this_ptr: *mut ::tree_view::TreeView, row: ::libc::c_int, parent: *const ::qt_core::model_index::ModelIndex, hide: bool);
  pub fn qt_widgets_c_QTreeView_setSelectionModel(this_ptr: *mut ::tree_view::TreeView, selectionModel: *mut ::qt_core::item_selection_model::ItemSelectionModel);
  pub fn qt_widgets_c_QTreeView_setSortingEnabled(this_ptr: *mut ::tree_view::TreeView, enable: bool);
  pub fn qt_widgets_c_QTreeView_setTreePosition(this_ptr: *mut ::tree_view::TreeView, logicalIndex: ::libc::c_int);
  pub fn qt_widgets_c_QTreeView_setUniformRowHeights(this_ptr: *mut ::tree_view::TreeView, uniform: bool);
  pub fn qt_widgets_c_QTreeView_setWordWrap(this_ptr: *mut ::tree_view::TreeView, on: bool);
  pub fn qt_widgets_c_QTreeView_showColumn(this_ptr: *mut ::tree_view::TreeView, column: ::libc::c_int);
  pub fn qt_widgets_c_QTreeView_sortByColumn_column(this_ptr: *mut ::tree_view::TreeView, column: ::libc::c_int);
  pub fn qt_widgets_c_QTreeView_sortByColumn_column_order(this_ptr: *mut ::tree_view::TreeView, column: ::libc::c_int, order: *const ::qt_core::qt::SortOrder);
  pub fn qt_widgets_c_QTreeView_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTreeView_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTreeView_treePosition(this_ptr: *const ::tree_view::TreeView) -> ::libc::c_int;
  pub fn qt_widgets_c_QTreeView_uniformRowHeights(this_ptr: *const ::tree_view::TreeView) -> bool;
  pub fn qt_widgets_c_QTreeView_visualRect_to_output(this_ptr: *const ::tree_view::TreeView, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QTreeView_wordWrap(this_ptr: *const ::tree_view::TreeView) -> bool;

  // Header: QTreeWidget
  pub fn qt_widgets_c_QTreeWidget_G_dynamic_cast_QTreeWidget_ptr_QAbstractItemView(ptr: *mut ::abstract_item_view::AbstractItemView) -> *mut ::tree_widget::TreeWidget;
  pub fn qt_widgets_c_QTreeWidget_G_dynamic_cast_QTreeWidget_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::tree_widget::TreeWidget;
  pub fn qt_widgets_c_QTreeWidget_G_dynamic_cast_QTreeWidget_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::tree_widget::TreeWidget;
  pub fn qt_widgets_c_QTreeWidget_G_dynamic_cast_QTreeWidget_ptr_QTreeView(ptr: *mut ::tree_view::TreeView) -> *mut ::tree_widget::TreeWidget;
  pub fn qt_widgets_c_QTreeWidget_G_dynamic_cast_QTreeWidget_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::tree_widget::TreeWidget;
  pub fn qt_widgets_c_QTreeWidget_G_operator_shl(out: *mut ::qt_core::data_stream::DataStream, item: *const ::tree_widget_item::TreeWidgetItem) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_widgets_c_QTreeWidget_G_operator_shr(in_: *mut ::qt_core::data_stream::DataStream, item: *mut ::tree_widget_item::TreeWidgetItem) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_widgets_c_QTreeWidget_G_static_cast_QAbstractItemView_ptr(ptr: *mut ::tree_widget::TreeWidget) -> *mut ::abstract_item_view::AbstractItemView;
  pub fn qt_widgets_c_QTreeWidget_G_static_cast_QAbstractScrollArea_ptr(ptr: *mut ::tree_widget::TreeWidget) -> *mut ::abstract_scroll_area::AbstractScrollArea;
  pub fn qt_widgets_c_QTreeWidget_G_static_cast_QFrame_ptr(ptr: *mut ::tree_widget::TreeWidget) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QTreeWidget_G_static_cast_QObject_ptr(ptr: *mut ::tree_widget::TreeWidget) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QTreeWidget_G_static_cast_QPaintDevice_ptr(ptr: *mut ::tree_widget::TreeWidget) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QTreeWidget_G_static_cast_QTreeView_ptr(ptr: *mut ::tree_widget::TreeWidget) -> *mut ::tree_view::TreeView;
  pub fn qt_widgets_c_QTreeWidget_G_static_cast_QTreeWidget_ptr_QAbstractItemView(ptr: *mut ::abstract_item_view::AbstractItemView) -> *mut ::tree_widget::TreeWidget;
  pub fn qt_widgets_c_QTreeWidget_G_static_cast_QTreeWidget_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::tree_widget::TreeWidget;
  pub fn qt_widgets_c_QTreeWidget_G_static_cast_QTreeWidget_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::tree_widget::TreeWidget;
  pub fn qt_widgets_c_QTreeWidget_G_static_cast_QTreeWidget_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::tree_widget::TreeWidget;
  pub fn qt_widgets_c_QTreeWidget_G_static_cast_QTreeWidget_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::tree_widget::TreeWidget;
  pub fn qt_widgets_c_QTreeWidget_G_static_cast_QTreeWidget_ptr_QTreeView(ptr: *mut ::tree_view::TreeView) -> *mut ::tree_widget::TreeWidget;
  pub fn qt_widgets_c_QTreeWidget_G_static_cast_QTreeWidget_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::tree_widget::TreeWidget;
  pub fn qt_widgets_c_QTreeWidget_G_static_cast_QWidget_ptr(ptr: *mut ::tree_widget::TreeWidget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QTreeWidget_addTopLevelItem(this_ptr: *mut ::tree_widget::TreeWidget, item: *mut ::tree_widget_item::TreeWidgetItem);
  pub fn qt_widgets_c_QTreeWidget_addTopLevelItems(this_ptr: *mut ::tree_widget::TreeWidget, items: *const ::list::ListTreeWidgetItemMutPtr);
  pub fn qt_widgets_c_QTreeWidget_clear(this_ptr: *mut ::tree_widget::TreeWidget);
  pub fn qt_widgets_c_QTreeWidget_closePersistentEditor_item(this_ptr: *mut ::tree_widget::TreeWidget, item: *mut ::tree_widget_item::TreeWidgetItem);
  pub fn qt_widgets_c_QTreeWidget_closePersistentEditor_item_column(this_ptr: *mut ::tree_widget::TreeWidget, item: *mut ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int);
  pub fn qt_widgets_c_QTreeWidget_collapseItem(this_ptr: *mut ::tree_widget::TreeWidget, item: *const ::tree_widget_item::TreeWidgetItem);
  pub fn qt_widgets_c_QTreeWidget_columnCount(this_ptr: *const ::tree_widget::TreeWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QTreeWidget_currentColumn(this_ptr: *const ::tree_widget::TreeWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QTreeWidget_currentItem(this_ptr: *const ::tree_widget::TreeWidget) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidget_delete(this_ptr: *mut ::tree_widget::TreeWidget);
  pub fn qt_widgets_c_QTreeWidget_editItem_item(this_ptr: *mut ::tree_widget::TreeWidget, item: *mut ::tree_widget_item::TreeWidgetItem);
  pub fn qt_widgets_c_QTreeWidget_editItem_item_column(this_ptr: *mut ::tree_widget::TreeWidget, item: *mut ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int);
  pub fn qt_widgets_c_QTreeWidget_expandItem(this_ptr: *mut ::tree_widget::TreeWidget, item: *const ::tree_widget_item::TreeWidgetItem);
  pub fn qt_widgets_c_QTreeWidget_headerItem(this_ptr: *const ::tree_widget::TreeWidget) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidget_indexOfTopLevelItem(this_ptr: *const ::tree_widget::TreeWidget, item: *mut ::tree_widget_item::TreeWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QTreeWidget_insertTopLevelItem(this_ptr: *mut ::tree_widget::TreeWidget, index: ::libc::c_int, item: *mut ::tree_widget_item::TreeWidgetItem);
  pub fn qt_widgets_c_QTreeWidget_insertTopLevelItems(this_ptr: *mut ::tree_widget::TreeWidget, index: ::libc::c_int, items: *const ::list::ListTreeWidgetItemMutPtr);
  pub fn qt_widgets_c_QTreeWidget_invisibleRootItem(this_ptr: *const ::tree_widget::TreeWidget) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidget_isFirstItemColumnSpanned(this_ptr: *const ::tree_widget::TreeWidget, item: *const ::tree_widget_item::TreeWidgetItem) -> bool;
  pub fn qt_widgets_c_QTreeWidget_isItemExpanded(this_ptr: *const ::tree_widget::TreeWidget, item: *const ::tree_widget_item::TreeWidgetItem) -> bool;
  pub fn qt_widgets_c_QTreeWidget_isItemHidden(this_ptr: *const ::tree_widget::TreeWidget, item: *const ::tree_widget_item::TreeWidgetItem) -> bool;
  pub fn qt_widgets_c_QTreeWidget_isItemSelected(this_ptr: *const ::tree_widget::TreeWidget, item: *const ::tree_widget_item::TreeWidgetItem) -> bool;
  pub fn qt_widgets_c_QTreeWidget_itemAbove(this_ptr: *const ::tree_widget::TreeWidget, item: *const ::tree_widget_item::TreeWidgetItem) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidget_itemAt_p(this_ptr: *const ::tree_widget::TreeWidget, p: *const ::qt_core::point::Point) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidget_itemAt_x_y(this_ptr: *const ::tree_widget::TreeWidget, x: ::libc::c_int, y: ::libc::c_int) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidget_itemBelow(this_ptr: *const ::tree_widget::TreeWidget, item: *const ::tree_widget_item::TreeWidgetItem) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidget_itemWidget(this_ptr: *const ::tree_widget::TreeWidget, item: *mut ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QTreeWidget_metaObject(this_ptr: *const ::tree_widget::TreeWidget) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QTreeWidget_new_no_args() -> *mut ::tree_widget::TreeWidget;
  pub fn qt_widgets_c_QTreeWidget_new_parent(parent: *mut ::widget::Widget) -> *mut ::tree_widget::TreeWidget;
  pub fn qt_widgets_c_QTreeWidget_openPersistentEditor_item(this_ptr: *mut ::tree_widget::TreeWidget, item: *mut ::tree_widget_item::TreeWidgetItem);
  pub fn qt_widgets_c_QTreeWidget_openPersistentEditor_item_column(this_ptr: *mut ::tree_widget::TreeWidget, item: *mut ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int);
  pub fn qt_widgets_c_QTreeWidget_qt_metacall(this_ptr: *mut ::tree_widget::TreeWidget, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QTreeWidget_qt_metacast(this_ptr: *mut ::tree_widget::TreeWidget, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QTreeWidget_removeItemWidget(this_ptr: *mut ::tree_widget::TreeWidget, item: *mut ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int);
  pub fn qt_widgets_c_QTreeWidget_scrollToItem_item(this_ptr: *mut ::tree_widget::TreeWidget, item: *const ::tree_widget_item::TreeWidgetItem);
  pub fn qt_widgets_c_QTreeWidget_scrollToItem_item_hint(this_ptr: *mut ::tree_widget::TreeWidget, item: *const ::tree_widget_item::TreeWidgetItem, hint: *const ::abstract_item_view::ScrollHint);
  pub fn qt_widgets_c_QTreeWidget_selectedItems_to_output(this_ptr: *const ::tree_widget::TreeWidget, output: *mut ::list::ListTreeWidgetItemMutPtr);
  pub fn qt_widgets_c_QTreeWidget_setColumnCount(this_ptr: *mut ::tree_widget::TreeWidget, columns: ::libc::c_int);
  pub fn qt_widgets_c_QTreeWidget_setCurrentItem_item(this_ptr: *mut ::tree_widget::TreeWidget, item: *mut ::tree_widget_item::TreeWidgetItem);
  pub fn qt_widgets_c_QTreeWidget_setCurrentItem_item_column(this_ptr: *mut ::tree_widget::TreeWidget, item: *mut ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int);
  pub fn qt_widgets_c_QTreeWidget_setFirstItemColumnSpanned(this_ptr: *mut ::tree_widget::TreeWidget, item: *const ::tree_widget_item::TreeWidgetItem, span: bool);
  pub fn qt_widgets_c_QTreeWidget_setHeaderItem(this_ptr: *mut ::tree_widget::TreeWidget, item: *mut ::tree_widget_item::TreeWidgetItem);
  pub fn qt_widgets_c_QTreeWidget_setHeaderLabel(this_ptr: *mut ::tree_widget::TreeWidget, label: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTreeWidget_setHeaderLabels(this_ptr: *mut ::tree_widget::TreeWidget, labels: *const ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_QTreeWidget_setItemExpanded(this_ptr: *mut ::tree_widget::TreeWidget, item: *const ::tree_widget_item::TreeWidgetItem, expand: bool);
  pub fn qt_widgets_c_QTreeWidget_setItemHidden(this_ptr: *mut ::tree_widget::TreeWidget, item: *const ::tree_widget_item::TreeWidgetItem, hide: bool);
  pub fn qt_widgets_c_QTreeWidget_setItemSelected(this_ptr: *mut ::tree_widget::TreeWidget, item: *const ::tree_widget_item::TreeWidgetItem, select: bool);
  pub fn qt_widgets_c_QTreeWidget_setItemWidget(this_ptr: *mut ::tree_widget::TreeWidget, item: *mut ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QTreeWidget_setSelectionModel(this_ptr: *mut ::tree_widget::TreeWidget, selectionModel: *mut ::qt_core::item_selection_model::ItemSelectionModel);
  pub fn qt_widgets_c_QTreeWidget_sortColumn(this_ptr: *const ::tree_widget::TreeWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QTreeWidget_sortItems(this_ptr: *mut ::tree_widget::TreeWidget, column: ::libc::c_int, order: *const ::qt_core::qt::SortOrder);
  pub fn qt_widgets_c_QTreeWidget_takeTopLevelItem(this_ptr: *mut ::tree_widget::TreeWidget, index: ::libc::c_int) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidget_topLevelItem(this_ptr: *const ::tree_widget::TreeWidget, index: ::libc::c_int) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidget_topLevelItemCount(this_ptr: *const ::tree_widget::TreeWidget) -> ::libc::c_int;
  pub fn qt_widgets_c_QTreeWidget_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTreeWidget_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTreeWidget_visualItemRect_to_output(this_ptr: *const ::tree_widget::TreeWidget, item: *const ::tree_widget_item::TreeWidgetItem, output: *mut ::qt_core::rect::Rect);

  // Header: QTreeWidgetItem
  pub fn qt_widgets_c_QTreeWidgetItem_addChild(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, child: *mut ::tree_widget_item::TreeWidgetItem);
  pub fn qt_widgets_c_QTreeWidgetItem_addChildren(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, children: *const ::list::ListTreeWidgetItemMutPtr);
  pub fn qt_widgets_c_QTreeWidgetItem_backgroundColor_to_output(this_ptr: *const ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QTreeWidgetItem_background_to_output(this_ptr: *const ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, output: *mut ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QTreeWidgetItem_child(this_ptr: *const ::tree_widget_item::TreeWidgetItem, index: ::libc::c_int) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidgetItem_childCount(this_ptr: *const ::tree_widget_item::TreeWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QTreeWidgetItem_clone(this_ptr: *const ::tree_widget_item::TreeWidgetItem) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidgetItem_columnCount(this_ptr: *const ::tree_widget_item::TreeWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QTreeWidgetItem_data_to_output(this_ptr: *const ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, role: ::libc::c_int, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QTreeWidgetItem_delete(this_ptr: *mut ::tree_widget_item::TreeWidgetItem);
  pub fn qt_widgets_c_QTreeWidgetItem_font_to_output(this_ptr: *const ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, output: *mut ::qt_gui::font::Font);
  pub fn qt_widgets_c_QTreeWidgetItem_foreground_to_output(this_ptr: *const ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, output: *mut ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QTreeWidgetItem_icon_to_output(this_ptr: *const ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QTreeWidgetItem_indexOfChild(this_ptr: *const ::tree_widget_item::TreeWidgetItem, child: *mut ::tree_widget_item::TreeWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QTreeWidgetItem_insertChild(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, index: ::libc::c_int, child: *mut ::tree_widget_item::TreeWidgetItem);
  pub fn qt_widgets_c_QTreeWidgetItem_insertChildren(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, index: ::libc::c_int, children: *const ::list::ListTreeWidgetItemMutPtr);
  pub fn qt_widgets_c_QTreeWidgetItem_isDisabled(this_ptr: *const ::tree_widget_item::TreeWidgetItem) -> bool;
  pub fn qt_widgets_c_QTreeWidgetItem_isExpanded(this_ptr: *const ::tree_widget_item::TreeWidgetItem) -> bool;
  pub fn qt_widgets_c_QTreeWidgetItem_isFirstColumnSpanned(this_ptr: *const ::tree_widget_item::TreeWidgetItem) -> bool;
  pub fn qt_widgets_c_QTreeWidgetItem_isHidden(this_ptr: *const ::tree_widget_item::TreeWidgetItem) -> bool;
  pub fn qt_widgets_c_QTreeWidgetItem_isSelected(this_ptr: *const ::tree_widget_item::TreeWidgetItem) -> bool;
  pub fn qt_widgets_c_QTreeWidgetItem_new_no_args() -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidgetItem_new_other(other: *const ::tree_widget_item::TreeWidgetItem) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidgetItem_new_parent(parent: *mut ::tree_widget_item::TreeWidgetItem) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidgetItem_new_parent_after(parent: *mut ::tree_widget_item::TreeWidgetItem, after: *mut ::tree_widget_item::TreeWidgetItem) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidgetItem_new_parent_after_type(parent: *mut ::tree_widget_item::TreeWidgetItem, after: *mut ::tree_widget_item::TreeWidgetItem, type_: ::libc::c_int) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidgetItem_new_parent_strings(parent: *mut ::tree_widget_item::TreeWidgetItem, strings: *const ::qt_core::string_list::StringList) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidgetItem_new_parent_strings_type(parent: *mut ::tree_widget_item::TreeWidgetItem, strings: *const ::qt_core::string_list::StringList, type_: ::libc::c_int) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidgetItem_new_parent_type(parent: *mut ::tree_widget_item::TreeWidgetItem, type_: ::libc::c_int) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidgetItem_new_strings(strings: *const ::qt_core::string_list::StringList) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidgetItem_new_strings_type(strings: *const ::qt_core::string_list::StringList, type_: ::libc::c_int) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidgetItem_new_type(type_: ::libc::c_int) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidgetItem_new_view(view: *mut ::tree_widget::TreeWidget) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidgetItem_new_view_after(view: *mut ::tree_widget::TreeWidget, after: *mut ::tree_widget_item::TreeWidgetItem) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidgetItem_new_view_after_type(view: *mut ::tree_widget::TreeWidget, after: *mut ::tree_widget_item::TreeWidgetItem, type_: ::libc::c_int) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidgetItem_new_view_strings(view: *mut ::tree_widget::TreeWidget, strings: *const ::qt_core::string_list::StringList) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidgetItem_new_view_strings_type(view: *mut ::tree_widget::TreeWidget, strings: *const ::qt_core::string_list::StringList, type_: ::libc::c_int) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidgetItem_new_view_type(view: *mut ::tree_widget::TreeWidget, type_: ::libc::c_int) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidgetItem_operator_assign(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, other: *const ::tree_widget_item::TreeWidgetItem) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidgetItem_operator_lt(this_ptr: *const ::tree_widget_item::TreeWidgetItem, other: *const ::tree_widget_item::TreeWidgetItem) -> bool;
  pub fn qt_widgets_c_QTreeWidgetItem_parent(this_ptr: *const ::tree_widget_item::TreeWidgetItem) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidgetItem_read(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, in_: *mut ::qt_core::data_stream::DataStream);
  pub fn qt_widgets_c_QTreeWidgetItem_removeChild(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, child: *mut ::tree_widget_item::TreeWidgetItem);
  pub fn qt_widgets_c_QTreeWidgetItem_setBackground(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, brush: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QTreeWidgetItem_setBackgroundColor(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, color: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QTreeWidgetItem_setCheckState(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, state: *const ::qt_core::qt::CheckState);
  pub fn qt_widgets_c_QTreeWidgetItem_setChildIndicatorPolicy(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, policy: *const ::tree_widget_item::ChildIndicatorPolicy);
  pub fn qt_widgets_c_QTreeWidgetItem_setData(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, role: ::libc::c_int, value: *const ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QTreeWidgetItem_setDisabled(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, disabled: bool);
  pub fn qt_widgets_c_QTreeWidgetItem_setExpanded(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, expand: bool);
  pub fn qt_widgets_c_QTreeWidgetItem_setFirstColumnSpanned(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, span: bool);
  pub fn qt_widgets_c_QTreeWidgetItem_setFont(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, font: *const ::qt_gui::font::Font);
  pub fn qt_widgets_c_QTreeWidgetItem_setForeground(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, brush: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_QTreeWidgetItem_setHidden(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, hide: bool);
  pub fn qt_widgets_c_QTreeWidgetItem_setIcon(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, icon: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QTreeWidgetItem_setSelected(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, select: bool);
  pub fn qt_widgets_c_QTreeWidgetItem_setSizeHint(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, size: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QTreeWidgetItem_setStatusTip(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, statusTip: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTreeWidgetItem_setText(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTreeWidgetItem_setTextAlignment(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, alignment: ::libc::c_int);
  pub fn qt_widgets_c_QTreeWidgetItem_setTextColor(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, color: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QTreeWidgetItem_setToolTip(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, toolTip: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTreeWidgetItem_setWhatsThis(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, whatsThis: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QTreeWidgetItem_sizeHint_to_output(this_ptr: *const ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QTreeWidgetItem_sortChildren(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, order: *const ::qt_core::qt::SortOrder);
  pub fn qt_widgets_c_QTreeWidgetItem_statusTip_to_output(this_ptr: *const ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTreeWidgetItem_takeChild(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, index: ::libc::c_int) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidgetItem_takeChildren_to_output(this_ptr: *mut ::tree_widget_item::TreeWidgetItem, output: *mut ::list::ListTreeWidgetItemMutPtr);
  pub fn qt_widgets_c_QTreeWidgetItem_textAlignment(this_ptr: *const ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QTreeWidgetItem_textColor_to_output(this_ptr: *const ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QTreeWidgetItem_text_to_output(this_ptr: *const ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTreeWidgetItem_toolTip_to_output(this_ptr: *const ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTreeWidgetItem_treeWidget(this_ptr: *const ::tree_widget_item::TreeWidgetItem) -> *mut ::tree_widget::TreeWidget;
  pub fn qt_widgets_c_QTreeWidgetItem_type(this_ptr: *const ::tree_widget_item::TreeWidgetItem) -> ::libc::c_int;
  pub fn qt_widgets_c_QTreeWidgetItem_whatsThis_to_output(this_ptr: *const ::tree_widget_item::TreeWidgetItem, column: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QTreeWidgetItem_write(this_ptr: *const ::tree_widget_item::TreeWidgetItem, out: *mut ::qt_core::data_stream::DataStream);

  // Header: QTreeWidgetItemIterator
  pub fn qt_widgets_c_QTreeWidgetItemIterator_constructor_it(it: *const ::tree_widget_item_iterator::TreeWidgetItemIterator, output: *mut ::tree_widget_item_iterator::TreeWidgetItemIterator);
  pub fn qt_widgets_c_QTreeWidgetItemIterator_constructor_item(item: *mut ::tree_widget_item::TreeWidgetItem, output: *mut ::tree_widget_item_iterator::TreeWidgetItemIterator);
  pub fn qt_widgets_c_QTreeWidgetItemIterator_constructor_item_flags(item: *mut ::tree_widget_item::TreeWidgetItem, flags: ::libc::c_uint, output: *mut ::tree_widget_item_iterator::TreeWidgetItemIterator);
  pub fn qt_widgets_c_QTreeWidgetItemIterator_constructor_widget(widget: *mut ::tree_widget::TreeWidget, output: *mut ::tree_widget_item_iterator::TreeWidgetItemIterator);
  pub fn qt_widgets_c_QTreeWidgetItemIterator_constructor_widget_flags(widget: *mut ::tree_widget::TreeWidget, flags: ::libc::c_uint, output: *mut ::tree_widget_item_iterator::TreeWidgetItemIterator);
  pub fn qt_widgets_c_QTreeWidgetItemIterator_destructor(this_ptr: *mut ::tree_widget_item_iterator::TreeWidgetItemIterator);
  pub fn qt_widgets_c_QTreeWidgetItemIterator_operator_add_assign(this_ptr: *mut ::tree_widget_item_iterator::TreeWidgetItemIterator, n: ::libc::c_int) -> *mut ::tree_widget_item_iterator::TreeWidgetItemIterator;
  pub fn qt_widgets_c_QTreeWidgetItemIterator_operator_assign(this_ptr: *mut ::tree_widget_item_iterator::TreeWidgetItemIterator, it: *const ::tree_widget_item_iterator::TreeWidgetItemIterator) -> *mut ::tree_widget_item_iterator::TreeWidgetItemIterator;
  pub fn qt_widgets_c_QTreeWidgetItemIterator_operator_dec(this_ptr: *mut ::tree_widget_item_iterator::TreeWidgetItemIterator) -> *mut ::tree_widget_item_iterator::TreeWidgetItemIterator;
  pub fn qt_widgets_c_QTreeWidgetItemIterator_operator_dec_postfix_to_output(this_ptr: *mut ::tree_widget_item_iterator::TreeWidgetItemIterator, arg1: ::libc::c_int, output: *mut ::tree_widget_item_iterator::TreeWidgetItemIterator);
  pub fn qt_widgets_c_QTreeWidgetItemIterator_operator_inc(this_ptr: *mut ::tree_widget_item_iterator::TreeWidgetItemIterator) -> *mut ::tree_widget_item_iterator::TreeWidgetItemIterator;
  pub fn qt_widgets_c_QTreeWidgetItemIterator_operator_inc_postfix_to_output(this_ptr: *mut ::tree_widget_item_iterator::TreeWidgetItemIterator, arg1: ::libc::c_int, output: *mut ::tree_widget_item_iterator::TreeWidgetItemIterator);
  pub fn qt_widgets_c_QTreeWidgetItemIterator_operator_indirection(this_ptr: *const ::tree_widget_item_iterator::TreeWidgetItemIterator) -> *mut ::tree_widget_item::TreeWidgetItem;
  pub fn qt_widgets_c_QTreeWidgetItemIterator_operator_sub_assign(this_ptr: *mut ::tree_widget_item_iterator::TreeWidgetItemIterator, n: ::libc::c_int) -> *mut ::tree_widget_item_iterator::TreeWidgetItemIterator;

  // Header: QUndoCommand
  pub fn qt_widgets_c_QUndoCommand_actionText_to_output(this_ptr: *const ::undo_command::UndoCommand, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QUndoCommand_child(this_ptr: *const ::undo_command::UndoCommand, index: ::libc::c_int) -> *const ::undo_command::UndoCommand;
  pub fn qt_widgets_c_QUndoCommand_childCount(this_ptr: *const ::undo_command::UndoCommand) -> ::libc::c_int;
  pub fn qt_widgets_c_QUndoCommand_delete(this_ptr: *mut ::undo_command::UndoCommand);
  pub fn qt_widgets_c_QUndoCommand_id(this_ptr: *const ::undo_command::UndoCommand) -> ::libc::c_int;
  pub fn qt_widgets_c_QUndoCommand_isObsolete(this_ptr: *const ::undo_command::UndoCommand) -> bool;
  pub fn qt_widgets_c_QUndoCommand_mergeWith(this_ptr: *mut ::undo_command::UndoCommand, other: *const ::undo_command::UndoCommand) -> bool;
  pub fn qt_widgets_c_QUndoCommand_new_no_args() -> *mut ::undo_command::UndoCommand;
  pub fn qt_widgets_c_QUndoCommand_new_parent(parent: *mut ::undo_command::UndoCommand) -> *mut ::undo_command::UndoCommand;
  pub fn qt_widgets_c_QUndoCommand_new_text(text: *const ::qt_core::string::String) -> *mut ::undo_command::UndoCommand;
  pub fn qt_widgets_c_QUndoCommand_new_text_parent(text: *const ::qt_core::string::String, parent: *mut ::undo_command::UndoCommand) -> *mut ::undo_command::UndoCommand;
  pub fn qt_widgets_c_QUndoCommand_redo(this_ptr: *mut ::undo_command::UndoCommand);
  pub fn qt_widgets_c_QUndoCommand_setObsolete(this_ptr: *mut ::undo_command::UndoCommand, obsolete: bool);
  pub fn qt_widgets_c_QUndoCommand_setText(this_ptr: *mut ::undo_command::UndoCommand, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QUndoCommand_text_to_output(this_ptr: *const ::undo_command::UndoCommand, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QUndoCommand_undo(this_ptr: *mut ::undo_command::UndoCommand);

  // Header: QUndoGroup
  pub fn qt_widgets_c_QUndoGroup_G_static_cast_QObject_ptr(ptr: *mut ::undo_group::UndoGroup) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QUndoGroup_G_static_cast_QUndoGroup_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::undo_group::UndoGroup;
  pub fn qt_widgets_c_QUndoGroup_activeStack(this_ptr: *const ::undo_group::UndoGroup) -> *mut ::undo_stack::UndoStack;
  pub fn qt_widgets_c_QUndoGroup_addStack(this_ptr: *mut ::undo_group::UndoGroup, stack: *mut ::undo_stack::UndoStack);
  pub fn qt_widgets_c_QUndoGroup_canRedo(this_ptr: *const ::undo_group::UndoGroup) -> bool;
  pub fn qt_widgets_c_QUndoGroup_canUndo(this_ptr: *const ::undo_group::UndoGroup) -> bool;
  pub fn qt_widgets_c_QUndoGroup_createRedoAction_parent(this_ptr: *const ::undo_group::UndoGroup, parent: *mut ::qt_core::object::Object) -> *mut ::action::Action;
  pub fn qt_widgets_c_QUndoGroup_createRedoAction_parent_prefix(this_ptr: *const ::undo_group::UndoGroup, parent: *mut ::qt_core::object::Object, prefix: *const ::qt_core::string::String) -> *mut ::action::Action;
  pub fn qt_widgets_c_QUndoGroup_createUndoAction_parent(this_ptr: *const ::undo_group::UndoGroup, parent: *mut ::qt_core::object::Object) -> *mut ::action::Action;
  pub fn qt_widgets_c_QUndoGroup_createUndoAction_parent_prefix(this_ptr: *const ::undo_group::UndoGroup, parent: *mut ::qt_core::object::Object, prefix: *const ::qt_core::string::String) -> *mut ::action::Action;
  pub fn qt_widgets_c_QUndoGroup_delete(this_ptr: *mut ::undo_group::UndoGroup);
  pub fn qt_widgets_c_QUndoGroup_isClean(this_ptr: *const ::undo_group::UndoGroup) -> bool;
  pub fn qt_widgets_c_QUndoGroup_metaObject(this_ptr: *const ::undo_group::UndoGroup) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QUndoGroup_new_no_args() -> *mut ::undo_group::UndoGroup;
  pub fn qt_widgets_c_QUndoGroup_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::undo_group::UndoGroup;
  pub fn qt_widgets_c_QUndoGroup_qt_metacall(this_ptr: *mut ::undo_group::UndoGroup, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QUndoGroup_qt_metacast(this_ptr: *mut ::undo_group::UndoGroup, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QUndoGroup_redo(this_ptr: *mut ::undo_group::UndoGroup);
  pub fn qt_widgets_c_QUndoGroup_redoText_to_output(this_ptr: *const ::undo_group::UndoGroup, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QUndoGroup_removeStack(this_ptr: *mut ::undo_group::UndoGroup, stack: *mut ::undo_stack::UndoStack);
  pub fn qt_widgets_c_QUndoGroup_setActiveStack(this_ptr: *mut ::undo_group::UndoGroup, stack: *mut ::undo_stack::UndoStack);
  pub fn qt_widgets_c_QUndoGroup_stacks_to_output(this_ptr: *const ::undo_group::UndoGroup, output: *mut ::list::ListUndoStackMutPtr);
  pub fn qt_widgets_c_QUndoGroup_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QUndoGroup_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QUndoGroup_undo(this_ptr: *mut ::undo_group::UndoGroup);
  pub fn qt_widgets_c_QUndoGroup_undoText_to_output(this_ptr: *const ::undo_group::UndoGroup, output: *mut ::qt_core::string::String);

  // Header: QUndoStack
  pub fn qt_widgets_c_QUndoStack_G_static_cast_QObject_ptr(ptr: *mut ::undo_stack::UndoStack) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QUndoStack_G_static_cast_QUndoStack_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::undo_stack::UndoStack;
  pub fn qt_widgets_c_QUndoStack_beginMacro(this_ptr: *mut ::undo_stack::UndoStack, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QUndoStack_canRedo(this_ptr: *const ::undo_stack::UndoStack) -> bool;
  pub fn qt_widgets_c_QUndoStack_canUndo(this_ptr: *const ::undo_stack::UndoStack) -> bool;
  pub fn qt_widgets_c_QUndoStack_cleanIndex(this_ptr: *const ::undo_stack::UndoStack) -> ::libc::c_int;
  pub fn qt_widgets_c_QUndoStack_clear(this_ptr: *mut ::undo_stack::UndoStack);
  pub fn qt_widgets_c_QUndoStack_command(this_ptr: *const ::undo_stack::UndoStack, index: ::libc::c_int) -> *const ::undo_command::UndoCommand;
  pub fn qt_widgets_c_QUndoStack_count(this_ptr: *const ::undo_stack::UndoStack) -> ::libc::c_int;
  pub fn qt_widgets_c_QUndoStack_createRedoAction_parent(this_ptr: *const ::undo_stack::UndoStack, parent: *mut ::qt_core::object::Object) -> *mut ::action::Action;
  pub fn qt_widgets_c_QUndoStack_createRedoAction_parent_prefix(this_ptr: *const ::undo_stack::UndoStack, parent: *mut ::qt_core::object::Object, prefix: *const ::qt_core::string::String) -> *mut ::action::Action;
  pub fn qt_widgets_c_QUndoStack_createUndoAction_parent(this_ptr: *const ::undo_stack::UndoStack, parent: *mut ::qt_core::object::Object) -> *mut ::action::Action;
  pub fn qt_widgets_c_QUndoStack_createUndoAction_parent_prefix(this_ptr: *const ::undo_stack::UndoStack, parent: *mut ::qt_core::object::Object, prefix: *const ::qt_core::string::String) -> *mut ::action::Action;
  pub fn qt_widgets_c_QUndoStack_delete(this_ptr: *mut ::undo_stack::UndoStack);
  pub fn qt_widgets_c_QUndoStack_endMacro(this_ptr: *mut ::undo_stack::UndoStack);
  pub fn qt_widgets_c_QUndoStack_index(this_ptr: *const ::undo_stack::UndoStack) -> ::libc::c_int;
  pub fn qt_widgets_c_QUndoStack_isActive(this_ptr: *const ::undo_stack::UndoStack) -> bool;
  pub fn qt_widgets_c_QUndoStack_isClean(this_ptr: *const ::undo_stack::UndoStack) -> bool;
  pub fn qt_widgets_c_QUndoStack_metaObject(this_ptr: *const ::undo_stack::UndoStack) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QUndoStack_new_no_args() -> *mut ::undo_stack::UndoStack;
  pub fn qt_widgets_c_QUndoStack_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::undo_stack::UndoStack;
  pub fn qt_widgets_c_QUndoStack_push(this_ptr: *mut ::undo_stack::UndoStack, cmd: *mut ::undo_command::UndoCommand);
  pub fn qt_widgets_c_QUndoStack_qt_metacall(this_ptr: *mut ::undo_stack::UndoStack, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QUndoStack_qt_metacast(this_ptr: *mut ::undo_stack::UndoStack, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QUndoStack_redo(this_ptr: *mut ::undo_stack::UndoStack);
  pub fn qt_widgets_c_QUndoStack_redoText_to_output(this_ptr: *const ::undo_stack::UndoStack, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QUndoStack_resetClean(this_ptr: *mut ::undo_stack::UndoStack);
  pub fn qt_widgets_c_QUndoStack_setActive_active(this_ptr: *mut ::undo_stack::UndoStack, active: bool);
  pub fn qt_widgets_c_QUndoStack_setActive_no_args(this_ptr: *mut ::undo_stack::UndoStack);
  pub fn qt_widgets_c_QUndoStack_setClean(this_ptr: *mut ::undo_stack::UndoStack);
  pub fn qt_widgets_c_QUndoStack_setIndex(this_ptr: *mut ::undo_stack::UndoStack, idx: ::libc::c_int);
  pub fn qt_widgets_c_QUndoStack_setUndoLimit(this_ptr: *mut ::undo_stack::UndoStack, limit: ::libc::c_int);
  pub fn qt_widgets_c_QUndoStack_text_to_output(this_ptr: *const ::undo_stack::UndoStack, idx: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QUndoStack_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QUndoStack_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QUndoStack_undo(this_ptr: *mut ::undo_stack::UndoStack);
  pub fn qt_widgets_c_QUndoStack_undoLimit(this_ptr: *const ::undo_stack::UndoStack) -> ::libc::c_int;
  pub fn qt_widgets_c_QUndoStack_undoText_to_output(this_ptr: *const ::undo_stack::UndoStack, output: *mut ::qt_core::string::String);

  // Header: QUndoView
  pub fn qt_widgets_c_QUndoView_G_dynamic_cast_QUndoView_ptr_QAbstractItemView(ptr: *mut ::abstract_item_view::AbstractItemView) -> *mut ::undo_view::UndoView;
  pub fn qt_widgets_c_QUndoView_G_dynamic_cast_QUndoView_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::undo_view::UndoView;
  pub fn qt_widgets_c_QUndoView_G_dynamic_cast_QUndoView_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::undo_view::UndoView;
  pub fn qt_widgets_c_QUndoView_G_dynamic_cast_QUndoView_ptr_QListView(ptr: *mut ::list_view::ListView) -> *mut ::undo_view::UndoView;
  pub fn qt_widgets_c_QUndoView_G_dynamic_cast_QUndoView_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::undo_view::UndoView;
  pub fn qt_widgets_c_QUndoView_G_static_cast_QAbstractItemView_ptr(ptr: *mut ::undo_view::UndoView) -> *mut ::abstract_item_view::AbstractItemView;
  pub fn qt_widgets_c_QUndoView_G_static_cast_QAbstractScrollArea_ptr(ptr: *mut ::undo_view::UndoView) -> *mut ::abstract_scroll_area::AbstractScrollArea;
  pub fn qt_widgets_c_QUndoView_G_static_cast_QFrame_ptr(ptr: *mut ::undo_view::UndoView) -> *mut ::frame::Frame;
  pub fn qt_widgets_c_QUndoView_G_static_cast_QListView_ptr(ptr: *mut ::undo_view::UndoView) -> *mut ::list_view::ListView;
  pub fn qt_widgets_c_QUndoView_G_static_cast_QObject_ptr(ptr: *mut ::undo_view::UndoView) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QUndoView_G_static_cast_QPaintDevice_ptr(ptr: *mut ::undo_view::UndoView) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QUndoView_G_static_cast_QUndoView_ptr_QAbstractItemView(ptr: *mut ::abstract_item_view::AbstractItemView) -> *mut ::undo_view::UndoView;
  pub fn qt_widgets_c_QUndoView_G_static_cast_QUndoView_ptr_QAbstractScrollArea(ptr: *mut ::abstract_scroll_area::AbstractScrollArea) -> *mut ::undo_view::UndoView;
  pub fn qt_widgets_c_QUndoView_G_static_cast_QUndoView_ptr_QFrame(ptr: *mut ::frame::Frame) -> *mut ::undo_view::UndoView;
  pub fn qt_widgets_c_QUndoView_G_static_cast_QUndoView_ptr_QListView(ptr: *mut ::list_view::ListView) -> *mut ::undo_view::UndoView;
  pub fn qt_widgets_c_QUndoView_G_static_cast_QUndoView_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::undo_view::UndoView;
  pub fn qt_widgets_c_QUndoView_G_static_cast_QUndoView_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::undo_view::UndoView;
  pub fn qt_widgets_c_QUndoView_G_static_cast_QUndoView_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::undo_view::UndoView;
  pub fn qt_widgets_c_QUndoView_G_static_cast_QWidget_ptr(ptr: *mut ::undo_view::UndoView) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QUndoView_cleanIcon_to_output(this_ptr: *const ::undo_view::UndoView, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QUndoView_delete(this_ptr: *mut ::undo_view::UndoView);
  pub fn qt_widgets_c_QUndoView_emptyLabel_to_output(this_ptr: *const ::undo_view::UndoView, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QUndoView_group(this_ptr: *const ::undo_view::UndoView) -> *mut ::undo_group::UndoGroup;
  pub fn qt_widgets_c_QUndoView_metaObject(this_ptr: *const ::undo_view::UndoView) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QUndoView_new_group(group: *mut ::undo_group::UndoGroup) -> *mut ::undo_view::UndoView;
  pub fn qt_widgets_c_QUndoView_new_group_parent(group: *mut ::undo_group::UndoGroup, parent: *mut ::widget::Widget) -> *mut ::undo_view::UndoView;
  pub fn qt_widgets_c_QUndoView_new_no_args() -> *mut ::undo_view::UndoView;
  pub fn qt_widgets_c_QUndoView_new_parent(parent: *mut ::widget::Widget) -> *mut ::undo_view::UndoView;
  pub fn qt_widgets_c_QUndoView_new_stack(stack: *mut ::undo_stack::UndoStack) -> *mut ::undo_view::UndoView;
  pub fn qt_widgets_c_QUndoView_new_stack_parent(stack: *mut ::undo_stack::UndoStack, parent: *mut ::widget::Widget) -> *mut ::undo_view::UndoView;
  pub fn qt_widgets_c_QUndoView_qt_metacall(this_ptr: *mut ::undo_view::UndoView, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QUndoView_qt_metacast(this_ptr: *mut ::undo_view::UndoView, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QUndoView_setCleanIcon(this_ptr: *mut ::undo_view::UndoView, icon: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QUndoView_setEmptyLabel(this_ptr: *mut ::undo_view::UndoView, label: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QUndoView_setGroup(this_ptr: *mut ::undo_view::UndoView, group: *mut ::undo_group::UndoGroup);
  pub fn qt_widgets_c_QUndoView_setStack(this_ptr: *mut ::undo_view::UndoView, stack: *mut ::undo_stack::UndoStack);
  pub fn qt_widgets_c_QUndoView_stack(this_ptr: *const ::undo_view::UndoView) -> *mut ::undo_stack::UndoStack;
  pub fn qt_widgets_c_QUndoView_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QUndoView_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QVBoxLayout
  pub fn qt_widgets_c_QVBoxLayout_G_dynamic_cast_QVBoxLayout_ptr_QBoxLayout(ptr: *mut ::box_layout::BoxLayout) -> *mut ::v_box_layout::VBoxLayout;
  pub fn qt_widgets_c_QVBoxLayout_G_dynamic_cast_QVBoxLayout_ptr_QLayout(ptr: *mut ::layout::Layout) -> *mut ::v_box_layout::VBoxLayout;
  pub fn qt_widgets_c_QVBoxLayout_G_dynamic_cast_QVBoxLayout_ptr_QLayoutItem(ptr: *mut ::layout_item::LayoutItem) -> *mut ::v_box_layout::VBoxLayout;
  pub fn qt_widgets_c_QVBoxLayout_G_static_cast_QBoxLayout_ptr(ptr: *mut ::v_box_layout::VBoxLayout) -> *mut ::box_layout::BoxLayout;
  pub fn qt_widgets_c_QVBoxLayout_G_static_cast_QLayoutItem_ptr(ptr: *mut ::v_box_layout::VBoxLayout) -> *mut ::layout_item::LayoutItem;
  pub fn qt_widgets_c_QVBoxLayout_G_static_cast_QLayout_ptr(ptr: *mut ::v_box_layout::VBoxLayout) -> *mut ::layout::Layout;
  pub fn qt_widgets_c_QVBoxLayout_G_static_cast_QObject_ptr(ptr: *mut ::v_box_layout::VBoxLayout) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QVBoxLayout_G_static_cast_QVBoxLayout_ptr_QBoxLayout(ptr: *mut ::box_layout::BoxLayout) -> *mut ::v_box_layout::VBoxLayout;
  pub fn qt_widgets_c_QVBoxLayout_G_static_cast_QVBoxLayout_ptr_QLayout(ptr: *mut ::layout::Layout) -> *mut ::v_box_layout::VBoxLayout;
  pub fn qt_widgets_c_QVBoxLayout_G_static_cast_QVBoxLayout_ptr_QLayoutItem(ptr: *mut ::layout_item::LayoutItem) -> *mut ::v_box_layout::VBoxLayout;
  pub fn qt_widgets_c_QVBoxLayout_G_static_cast_QVBoxLayout_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::v_box_layout::VBoxLayout;
  pub fn qt_widgets_c_QVBoxLayout_delete(this_ptr: *mut ::v_box_layout::VBoxLayout);
  pub fn qt_widgets_c_QVBoxLayout_metaObject(this_ptr: *const ::v_box_layout::VBoxLayout) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QVBoxLayout_new_no_args() -> *mut ::v_box_layout::VBoxLayout;
  pub fn qt_widgets_c_QVBoxLayout_new_parent(parent: *mut ::widget::Widget) -> *mut ::v_box_layout::VBoxLayout;
  pub fn qt_widgets_c_QVBoxLayout_qt_metacall(this_ptr: *mut ::v_box_layout::VBoxLayout, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QVBoxLayout_qt_metacast(this_ptr: *mut ::v_box_layout::VBoxLayout, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QVBoxLayout_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QVBoxLayout_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QVector
  pub fn qt_widgets_c_QVector_QColor_append_l(this_ptr: *mut ::vector::VectorQtGuiColor, l: *const ::vector::VectorQtGuiColor);
  pub fn qt_widgets_c_QVector_QColor_append_t(this_ptr: *mut ::vector::VectorQtGuiColor, t: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QVector_QColor_at(this_ptr: *const ::vector::VectorQtGuiColor, i: ::libc::c_int) -> *const ::qt_gui::color::Color;
  pub fn qt_widgets_c_QVector_QColor_back(this_ptr: *mut ::vector::VectorQtGuiColor) -> *mut ::qt_gui::color::Color;
  pub fn qt_widgets_c_QVector_QColor_back_const(this_ptr: *const ::vector::VectorQtGuiColor) -> *const ::qt_gui::color::Color;
  pub fn qt_widgets_c_QVector_QColor_capacity(this_ptr: *const ::vector::VectorQtGuiColor) -> ::libc::c_int;
  pub fn qt_widgets_c_QVector_QColor_clear(this_ptr: *mut ::vector::VectorQtGuiColor);
  pub fn qt_widgets_c_QVector_QColor_constData(this_ptr: *const ::vector::VectorQtGuiColor) -> *const ::qt_gui::color::Color;
  pub fn qt_widgets_c_QVector_QColor_constFirst(this_ptr: *const ::vector::VectorQtGuiColor) -> *const ::qt_gui::color::Color;
  pub fn qt_widgets_c_QVector_QColor_constLast(this_ptr: *const ::vector::VectorQtGuiColor) -> *const ::qt_gui::color::Color;
  pub fn qt_widgets_c_QVector_QColor_constructor_no_args(output: *mut ::vector::VectorQtGuiColor);
  pub fn qt_widgets_c_QVector_QColor_constructor_size(size: ::libc::c_int, output: *mut ::vector::VectorQtGuiColor);
  pub fn qt_widgets_c_QVector_QColor_constructor_size_t(size: ::libc::c_int, t: *const ::qt_gui::color::Color, output: *mut ::vector::VectorQtGuiColor);
  pub fn qt_widgets_c_QVector_QColor_constructor_v(v: *const ::vector::VectorQtGuiColor, output: *mut ::vector::VectorQtGuiColor);
  pub fn qt_widgets_c_QVector_QColor_contains(this_ptr: *const ::vector::VectorQtGuiColor, t: *const ::qt_gui::color::Color) -> bool;
  pub fn qt_widgets_c_QVector_QColor_count_no_args(this_ptr: *const ::vector::VectorQtGuiColor) -> ::libc::c_int;
  pub fn qt_widgets_c_QVector_QColor_count_t(this_ptr: *const ::vector::VectorQtGuiColor, t: *const ::qt_gui::color::Color) -> ::libc::c_int;
  pub fn qt_widgets_c_QVector_QColor_data(this_ptr: *mut ::vector::VectorQtGuiColor) -> *mut ::qt_gui::color::Color;
  pub fn qt_widgets_c_QVector_QColor_data_const(this_ptr: *const ::vector::VectorQtGuiColor) -> *const ::qt_gui::color::Color;
  pub fn qt_widgets_c_QVector_QColor_destructor(this_ptr: *mut ::vector::VectorQtGuiColor);
  pub fn qt_widgets_c_QVector_QColor_empty(this_ptr: *const ::vector::VectorQtGuiColor) -> bool;
  pub fn qt_widgets_c_QVector_QColor_endsWith(this_ptr: *const ::vector::VectorQtGuiColor, t: *const ::qt_gui::color::Color) -> bool;
  pub fn qt_widgets_c_QVector_QColor_fill_t(this_ptr: *mut ::vector::VectorQtGuiColor, t: *const ::qt_gui::color::Color) -> *mut ::vector::VectorQtGuiColor;
  pub fn qt_widgets_c_QVector_QColor_fill_t_size(this_ptr: *mut ::vector::VectorQtGuiColor, t: *const ::qt_gui::color::Color, size: ::libc::c_int) -> *mut ::vector::VectorQtGuiColor;
  pub fn qt_widgets_c_QVector_QColor_first(this_ptr: *mut ::vector::VectorQtGuiColor) -> *mut ::qt_gui::color::Color;
  pub fn qt_widgets_c_QVector_QColor_first_const(this_ptr: *const ::vector::VectorQtGuiColor) -> *const ::qt_gui::color::Color;
  pub fn qt_widgets_c_QVector_QColor_front(this_ptr: *mut ::vector::VectorQtGuiColor) -> *mut ::qt_gui::color::Color;
  pub fn qt_widgets_c_QVector_QColor_front_const(this_ptr: *const ::vector::VectorQtGuiColor) -> *const ::qt_gui::color::Color;
  pub fn qt_widgets_c_QVector_QColor_indexOf_t(this_ptr: *const ::vector::VectorQtGuiColor, t: *const ::qt_gui::color::Color) -> ::libc::c_int;
  pub fn qt_widgets_c_QVector_QColor_indexOf_t_from(this_ptr: *const ::vector::VectorQtGuiColor, t: *const ::qt_gui::color::Color, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QVector_QColor_insert_i_n_t(this_ptr: *mut ::vector::VectorQtGuiColor, i: ::libc::c_int, n: ::libc::c_int, t: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QVector_QColor_insert_i_t(this_ptr: *mut ::vector::VectorQtGuiColor, i: ::libc::c_int, t: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QVector_QColor_isEmpty(this_ptr: *const ::vector::VectorQtGuiColor) -> bool;
  pub fn qt_widgets_c_QVector_QColor_last(this_ptr: *mut ::vector::VectorQtGuiColor) -> *mut ::qt_gui::color::Color;
  pub fn qt_widgets_c_QVector_QColor_lastIndexOf_t(this_ptr: *const ::vector::VectorQtGuiColor, t: *const ::qt_gui::color::Color) -> ::libc::c_int;
  pub fn qt_widgets_c_QVector_QColor_lastIndexOf_t_from(this_ptr: *const ::vector::VectorQtGuiColor, t: *const ::qt_gui::color::Color, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QVector_QColor_last_const(this_ptr: *const ::vector::VectorQtGuiColor) -> *const ::qt_gui::color::Color;
  pub fn qt_widgets_c_QVector_QColor_length(this_ptr: *const ::vector::VectorQtGuiColor) -> ::libc::c_int;
  pub fn qt_widgets_c_QVector_QColor_mid_to_output_pos(this_ptr: *const ::vector::VectorQtGuiColor, pos: ::libc::c_int, output: *mut ::vector::VectorQtGuiColor);
  pub fn qt_widgets_c_QVector_QColor_mid_to_output_pos_len(this_ptr: *const ::vector::VectorQtGuiColor, pos: ::libc::c_int, len: ::libc::c_int, output: *mut ::vector::VectorQtGuiColor);
  pub fn qt_widgets_c_QVector_QColor_move(this_ptr: *mut ::vector::VectorQtGuiColor, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QVector_QColor_operator_add_assign_l(this_ptr: *mut ::vector::VectorQtGuiColor, l: *const ::vector::VectorQtGuiColor) -> *mut ::vector::VectorQtGuiColor;
  pub fn qt_widgets_c_QVector_QColor_operator_add_assign_t(this_ptr: *mut ::vector::VectorQtGuiColor, t: *const ::qt_gui::color::Color) -> *mut ::vector::VectorQtGuiColor;
  pub fn qt_widgets_c_QVector_QColor_operator_add_to_output(this_ptr: *const ::vector::VectorQtGuiColor, l: *const ::vector::VectorQtGuiColor, output: *mut ::vector::VectorQtGuiColor);
  pub fn qt_widgets_c_QVector_QColor_operator_assign(this_ptr: *mut ::vector::VectorQtGuiColor, v: *const ::vector::VectorQtGuiColor) -> *mut ::vector::VectorQtGuiColor;
  pub fn qt_widgets_c_QVector_QColor_operator_eq(this_ptr: *const ::vector::VectorQtGuiColor, v: *const ::vector::VectorQtGuiColor) -> bool;
  pub fn qt_widgets_c_QVector_QColor_operator_index(this_ptr: *mut ::vector::VectorQtGuiColor, i: ::libc::c_int) -> *mut ::qt_gui::color::Color;
  pub fn qt_widgets_c_QVector_QColor_operator_index_const(this_ptr: *const ::vector::VectorQtGuiColor, i: ::libc::c_int) -> *const ::qt_gui::color::Color;
  pub fn qt_widgets_c_QVector_QColor_operator_neq(this_ptr: *const ::vector::VectorQtGuiColor, v: *const ::vector::VectorQtGuiColor) -> bool;
  pub fn qt_widgets_c_QVector_QColor_operator_shl_l(this_ptr: *mut ::vector::VectorQtGuiColor, l: *const ::vector::VectorQtGuiColor) -> *mut ::vector::VectorQtGuiColor;
  pub fn qt_widgets_c_QVector_QColor_operator_shl_t(this_ptr: *mut ::vector::VectorQtGuiColor, t: *const ::qt_gui::color::Color) -> *mut ::vector::VectorQtGuiColor;
  pub fn qt_widgets_c_QVector_QColor_pop_back(this_ptr: *mut ::vector::VectorQtGuiColor);
  pub fn qt_widgets_c_QVector_QColor_pop_front(this_ptr: *mut ::vector::VectorQtGuiColor);
  pub fn qt_widgets_c_QVector_QColor_prepend(this_ptr: *mut ::vector::VectorQtGuiColor, t: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QVector_QColor_push_back(this_ptr: *mut ::vector::VectorQtGuiColor, t: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QVector_QColor_push_front(this_ptr: *mut ::vector::VectorQtGuiColor, t: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QVector_QColor_removeAll(this_ptr: *mut ::vector::VectorQtGuiColor, t: *const ::qt_gui::color::Color) -> ::libc::c_int;
  pub fn qt_widgets_c_QVector_QColor_removeAt(this_ptr: *mut ::vector::VectorQtGuiColor, i: ::libc::c_int);
  pub fn qt_widgets_c_QVector_QColor_removeFirst(this_ptr: *mut ::vector::VectorQtGuiColor);
  pub fn qt_widgets_c_QVector_QColor_removeLast(this_ptr: *mut ::vector::VectorQtGuiColor);
  pub fn qt_widgets_c_QVector_QColor_removeOne(this_ptr: *mut ::vector::VectorQtGuiColor, t: *const ::qt_gui::color::Color) -> bool;
  pub fn qt_widgets_c_QVector_QColor_remove_i(this_ptr: *mut ::vector::VectorQtGuiColor, i: ::libc::c_int);
  pub fn qt_widgets_c_QVector_QColor_remove_i_n(this_ptr: *mut ::vector::VectorQtGuiColor, i: ::libc::c_int, n: ::libc::c_int);
  pub fn qt_widgets_c_QVector_QColor_replace(this_ptr: *mut ::vector::VectorQtGuiColor, i: ::libc::c_int, t: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_QVector_QColor_reserve(this_ptr: *mut ::vector::VectorQtGuiColor, size: ::libc::c_int);
  pub fn qt_widgets_c_QVector_QColor_resize(this_ptr: *mut ::vector::VectorQtGuiColor, size: ::libc::c_int);
  pub fn qt_widgets_c_QVector_QColor_size(this_ptr: *const ::vector::VectorQtGuiColor) -> ::libc::c_int;
  pub fn qt_widgets_c_QVector_QColor_squeeze(this_ptr: *mut ::vector::VectorQtGuiColor);
  pub fn qt_widgets_c_QVector_QColor_startsWith(this_ptr: *const ::vector::VectorQtGuiColor, t: *const ::qt_gui::color::Color) -> bool;
  pub fn qt_widgets_c_QVector_QColor_swap(this_ptr: *mut ::vector::VectorQtGuiColor, other: *mut ::vector::VectorQtGuiColor);
  pub fn qt_widgets_c_QVector_QColor_takeAt_to_output(this_ptr: *mut ::vector::VectorQtGuiColor, i: ::libc::c_int, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QVector_QColor_takeFirst_to_output(this_ptr: *mut ::vector::VectorQtGuiColor, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QVector_QColor_takeLast_to_output(this_ptr: *mut ::vector::VectorQtGuiColor, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QVector_QColor_value_to_output_i(this_ptr: *const ::vector::VectorQtGuiColor, i: ::libc::c_int, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QVector_QColor_value_to_output_i_defaultValue(this_ptr: *const ::vector::VectorQtGuiColor, i: ::libc::c_int, defaultValue: *const ::qt_gui::color::Color, output: *mut ::qt_gui::color::Color);
  pub fn qt_widgets_c_QVector_void_ptr_append_l(this_ptr: *mut ::vector::VectorCVoidMutPtr, l: *const ::vector::VectorCVoidMutPtr);
  pub fn qt_widgets_c_QVector_void_ptr_append_t(this_ptr: *mut ::vector::VectorCVoidMutPtr, t: *const *mut ::libc::c_void);
  pub fn qt_widgets_c_QVector_void_ptr_at(this_ptr: *const ::vector::VectorCVoidMutPtr, i: ::libc::c_int) -> *const *mut ::libc::c_void;
  pub fn qt_widgets_c_QVector_void_ptr_back(this_ptr: *mut ::vector::VectorCVoidMutPtr) -> *mut *mut ::libc::c_void;
  pub fn qt_widgets_c_QVector_void_ptr_back_const(this_ptr: *const ::vector::VectorCVoidMutPtr) -> *const *mut ::libc::c_void;
  pub fn qt_widgets_c_QVector_void_ptr_capacity(this_ptr: *const ::vector::VectorCVoidMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QVector_void_ptr_clear(this_ptr: *mut ::vector::VectorCVoidMutPtr);
  pub fn qt_widgets_c_QVector_void_ptr_constData(this_ptr: *const ::vector::VectorCVoidMutPtr) -> *const *mut ::libc::c_void;
  pub fn qt_widgets_c_QVector_void_ptr_constFirst(this_ptr: *const ::vector::VectorCVoidMutPtr) -> *const *mut ::libc::c_void;
  pub fn qt_widgets_c_QVector_void_ptr_constLast(this_ptr: *const ::vector::VectorCVoidMutPtr) -> *const *mut ::libc::c_void;
  pub fn qt_widgets_c_QVector_void_ptr_constructor_no_args(output: *mut ::vector::VectorCVoidMutPtr);
  pub fn qt_widgets_c_QVector_void_ptr_constructor_size(size: ::libc::c_int, output: *mut ::vector::VectorCVoidMutPtr);
  pub fn qt_widgets_c_QVector_void_ptr_constructor_size_t(size: ::libc::c_int, t: *const *mut ::libc::c_void, output: *mut ::vector::VectorCVoidMutPtr);
  pub fn qt_widgets_c_QVector_void_ptr_constructor_v(v: *const ::vector::VectorCVoidMutPtr, output: *mut ::vector::VectorCVoidMutPtr);
  pub fn qt_widgets_c_QVector_void_ptr_contains(this_ptr: *const ::vector::VectorCVoidMutPtr, t: *const *mut ::libc::c_void) -> bool;
  pub fn qt_widgets_c_QVector_void_ptr_count_no_args(this_ptr: *const ::vector::VectorCVoidMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QVector_void_ptr_count_t(this_ptr: *const ::vector::VectorCVoidMutPtr, t: *const *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QVector_void_ptr_data(this_ptr: *mut ::vector::VectorCVoidMutPtr) -> *mut *mut ::libc::c_void;
  pub fn qt_widgets_c_QVector_void_ptr_data_const(this_ptr: *const ::vector::VectorCVoidMutPtr) -> *const *mut ::libc::c_void;
  pub fn qt_widgets_c_QVector_void_ptr_destructor(this_ptr: *mut ::vector::VectorCVoidMutPtr);
  pub fn qt_widgets_c_QVector_void_ptr_empty(this_ptr: *const ::vector::VectorCVoidMutPtr) -> bool;
  pub fn qt_widgets_c_QVector_void_ptr_endsWith(this_ptr: *const ::vector::VectorCVoidMutPtr, t: *const *mut ::libc::c_void) -> bool;
  pub fn qt_widgets_c_QVector_void_ptr_fill_t(this_ptr: *mut ::vector::VectorCVoidMutPtr, t: *const *mut ::libc::c_void) -> *mut ::vector::VectorCVoidMutPtr;
  pub fn qt_widgets_c_QVector_void_ptr_fill_t_size(this_ptr: *mut ::vector::VectorCVoidMutPtr, t: *const *mut ::libc::c_void, size: ::libc::c_int) -> *mut ::vector::VectorCVoidMutPtr;
  pub fn qt_widgets_c_QVector_void_ptr_first(this_ptr: *mut ::vector::VectorCVoidMutPtr) -> *mut *mut ::libc::c_void;
  pub fn qt_widgets_c_QVector_void_ptr_first_const(this_ptr: *const ::vector::VectorCVoidMutPtr) -> *const *mut ::libc::c_void;
  pub fn qt_widgets_c_QVector_void_ptr_front(this_ptr: *mut ::vector::VectorCVoidMutPtr) -> *mut *mut ::libc::c_void;
  pub fn qt_widgets_c_QVector_void_ptr_front_const(this_ptr: *const ::vector::VectorCVoidMutPtr) -> *const *mut ::libc::c_void;
  pub fn qt_widgets_c_QVector_void_ptr_indexOf_t(this_ptr: *const ::vector::VectorCVoidMutPtr, t: *const *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QVector_void_ptr_indexOf_t_from(this_ptr: *const ::vector::VectorCVoidMutPtr, t: *const *mut ::libc::c_void, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QVector_void_ptr_insert_i_n_t(this_ptr: *mut ::vector::VectorCVoidMutPtr, i: ::libc::c_int, n: ::libc::c_int, t: *const *mut ::libc::c_void);
  pub fn qt_widgets_c_QVector_void_ptr_insert_i_t(this_ptr: *mut ::vector::VectorCVoidMutPtr, i: ::libc::c_int, t: *const *mut ::libc::c_void);
  pub fn qt_widgets_c_QVector_void_ptr_isEmpty(this_ptr: *const ::vector::VectorCVoidMutPtr) -> bool;
  pub fn qt_widgets_c_QVector_void_ptr_last(this_ptr: *mut ::vector::VectorCVoidMutPtr) -> *mut *mut ::libc::c_void;
  pub fn qt_widgets_c_QVector_void_ptr_lastIndexOf_t(this_ptr: *const ::vector::VectorCVoidMutPtr, t: *const *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QVector_void_ptr_lastIndexOf_t_from(this_ptr: *const ::vector::VectorCVoidMutPtr, t: *const *mut ::libc::c_void, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QVector_void_ptr_last_const(this_ptr: *const ::vector::VectorCVoidMutPtr) -> *const *mut ::libc::c_void;
  pub fn qt_widgets_c_QVector_void_ptr_length(this_ptr: *const ::vector::VectorCVoidMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QVector_void_ptr_mid_to_output_pos(this_ptr: *const ::vector::VectorCVoidMutPtr, pos: ::libc::c_int, output: *mut ::vector::VectorCVoidMutPtr);
  pub fn qt_widgets_c_QVector_void_ptr_mid_to_output_pos_len(this_ptr: *const ::vector::VectorCVoidMutPtr, pos: ::libc::c_int, len: ::libc::c_int, output: *mut ::vector::VectorCVoidMutPtr);
  pub fn qt_widgets_c_QVector_void_ptr_move(this_ptr: *mut ::vector::VectorCVoidMutPtr, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_widgets_c_QVector_void_ptr_operator_add_assign_l(this_ptr: *mut ::vector::VectorCVoidMutPtr, l: *const ::vector::VectorCVoidMutPtr) -> *mut ::vector::VectorCVoidMutPtr;
  pub fn qt_widgets_c_QVector_void_ptr_operator_add_assign_t(this_ptr: *mut ::vector::VectorCVoidMutPtr, t: *const *mut ::libc::c_void) -> *mut ::vector::VectorCVoidMutPtr;
  pub fn qt_widgets_c_QVector_void_ptr_operator_add_to_output(this_ptr: *const ::vector::VectorCVoidMutPtr, l: *const ::vector::VectorCVoidMutPtr, output: *mut ::vector::VectorCVoidMutPtr);
  pub fn qt_widgets_c_QVector_void_ptr_operator_assign(this_ptr: *mut ::vector::VectorCVoidMutPtr, v: *const ::vector::VectorCVoidMutPtr) -> *mut ::vector::VectorCVoidMutPtr;
  pub fn qt_widgets_c_QVector_void_ptr_operator_eq(this_ptr: *const ::vector::VectorCVoidMutPtr, v: *const ::vector::VectorCVoidMutPtr) -> bool;
  pub fn qt_widgets_c_QVector_void_ptr_operator_index(this_ptr: *mut ::vector::VectorCVoidMutPtr, i: ::libc::c_int) -> *mut *mut ::libc::c_void;
  pub fn qt_widgets_c_QVector_void_ptr_operator_index_const(this_ptr: *const ::vector::VectorCVoidMutPtr, i: ::libc::c_int) -> *const *mut ::libc::c_void;
  pub fn qt_widgets_c_QVector_void_ptr_operator_neq(this_ptr: *const ::vector::VectorCVoidMutPtr, v: *const ::vector::VectorCVoidMutPtr) -> bool;
  pub fn qt_widgets_c_QVector_void_ptr_operator_shl_l(this_ptr: *mut ::vector::VectorCVoidMutPtr, l: *const ::vector::VectorCVoidMutPtr) -> *mut ::vector::VectorCVoidMutPtr;
  pub fn qt_widgets_c_QVector_void_ptr_operator_shl_t(this_ptr: *mut ::vector::VectorCVoidMutPtr, t: *const *mut ::libc::c_void) -> *mut ::vector::VectorCVoidMutPtr;
  pub fn qt_widgets_c_QVector_void_ptr_pop_back(this_ptr: *mut ::vector::VectorCVoidMutPtr);
  pub fn qt_widgets_c_QVector_void_ptr_pop_front(this_ptr: *mut ::vector::VectorCVoidMutPtr);
  pub fn qt_widgets_c_QVector_void_ptr_prepend(this_ptr: *mut ::vector::VectorCVoidMutPtr, t: *const *mut ::libc::c_void);
  pub fn qt_widgets_c_QVector_void_ptr_push_back(this_ptr: *mut ::vector::VectorCVoidMutPtr, t: *const *mut ::libc::c_void);
  pub fn qt_widgets_c_QVector_void_ptr_push_front(this_ptr: *mut ::vector::VectorCVoidMutPtr, t: *const *mut ::libc::c_void);
  pub fn qt_widgets_c_QVector_void_ptr_removeAll(this_ptr: *mut ::vector::VectorCVoidMutPtr, t: *const *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QVector_void_ptr_removeAt(this_ptr: *mut ::vector::VectorCVoidMutPtr, i: ::libc::c_int);
  pub fn qt_widgets_c_QVector_void_ptr_removeFirst(this_ptr: *mut ::vector::VectorCVoidMutPtr);
  pub fn qt_widgets_c_QVector_void_ptr_removeLast(this_ptr: *mut ::vector::VectorCVoidMutPtr);
  pub fn qt_widgets_c_QVector_void_ptr_removeOne(this_ptr: *mut ::vector::VectorCVoidMutPtr, t: *const *mut ::libc::c_void) -> bool;
  pub fn qt_widgets_c_QVector_void_ptr_remove_i(this_ptr: *mut ::vector::VectorCVoidMutPtr, i: ::libc::c_int);
  pub fn qt_widgets_c_QVector_void_ptr_remove_i_n(this_ptr: *mut ::vector::VectorCVoidMutPtr, i: ::libc::c_int, n: ::libc::c_int);
  pub fn qt_widgets_c_QVector_void_ptr_replace(this_ptr: *mut ::vector::VectorCVoidMutPtr, i: ::libc::c_int, t: *const *mut ::libc::c_void);
  pub fn qt_widgets_c_QVector_void_ptr_reserve(this_ptr: *mut ::vector::VectorCVoidMutPtr, size: ::libc::c_int);
  pub fn qt_widgets_c_QVector_void_ptr_resize(this_ptr: *mut ::vector::VectorCVoidMutPtr, size: ::libc::c_int);
  pub fn qt_widgets_c_QVector_void_ptr_size(this_ptr: *const ::vector::VectorCVoidMutPtr) -> ::libc::c_int;
  pub fn qt_widgets_c_QVector_void_ptr_squeeze(this_ptr: *mut ::vector::VectorCVoidMutPtr);
  pub fn qt_widgets_c_QVector_void_ptr_startsWith(this_ptr: *const ::vector::VectorCVoidMutPtr, t: *const *mut ::libc::c_void) -> bool;
  pub fn qt_widgets_c_QVector_void_ptr_swap(this_ptr: *mut ::vector::VectorCVoidMutPtr, other: *mut ::vector::VectorCVoidMutPtr);
  pub fn qt_widgets_c_QVector_void_ptr_takeAt(this_ptr: *mut ::vector::VectorCVoidMutPtr, i: ::libc::c_int) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QVector_void_ptr_takeFirst(this_ptr: *mut ::vector::VectorCVoidMutPtr) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QVector_void_ptr_takeLast(this_ptr: *mut ::vector::VectorCVoidMutPtr) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QVector_void_ptr_value_i(this_ptr: *const ::vector::VectorCVoidMutPtr, i: ::libc::c_int) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QVector_void_ptr_value_i_defaultValue(this_ptr: *const ::vector::VectorCVoidMutPtr, i: ::libc::c_int, defaultValue: *const *mut ::libc::c_void) -> *mut ::libc::c_void;

  // Header: QWhatsThis
  pub fn qt_widgets_c_QWhatsThis_createAction_no_args() -> *mut ::action::Action;
  pub fn qt_widgets_c_QWhatsThis_createAction_parent(parent: *mut ::qt_core::object::Object) -> *mut ::action::Action;
  pub fn qt_widgets_c_QWhatsThis_delete(this_ptr: *mut ::whats_this::WhatsThis);
  pub fn qt_widgets_c_QWhatsThis_enterWhatsThisMode();
  pub fn qt_widgets_c_QWhatsThis_hideText();
  pub fn qt_widgets_c_QWhatsThis_inWhatsThisMode() -> bool;
  pub fn qt_widgets_c_QWhatsThis_leaveWhatsThisMode();
  pub fn qt_widgets_c_QWhatsThis_showText_pos_text(pos: *const ::qt_core::point::Point, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QWhatsThis_showText_pos_text_w(pos: *const ::qt_core::point::Point, text: *const ::qt_core::string::String, w: *mut ::widget::Widget);

  // Header: QWidget
  pub fn qt_widgets_c_QWidget_G_operator_shl_to_output(arg1: *const ::qt_core::debug::Debug, arg2: *const ::widget::Widget, output: *mut ::qt_core::debug::Debug);
  pub fn qt_widgets_c_QWidget_G_static_cast_QObject_ptr(ptr: *mut ::widget::Widget) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QWidget_G_static_cast_QPaintDevice_ptr(ptr: *mut ::widget::Widget) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QWidget_G_static_cast_QWidget_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QWidget_G_static_cast_QWidget_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QWidget_acceptDrops(this_ptr: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_accessibleDescription_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QWidget_accessibleName_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QWidget_actions_to_output(this_ptr: *const ::widget::Widget, output: *mut ::list::ListActionMutPtr);
  pub fn qt_widgets_c_QWidget_activateWindow(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_addAction(this_ptr: *mut ::widget::Widget, action: *mut ::action::Action);
  pub fn qt_widgets_c_QWidget_addActions(this_ptr: *mut ::widget::Widget, actions: *const ::list::ListActionMutPtr);
  pub fn qt_widgets_c_QWidget_adjustSize(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_autoFillBackground(this_ptr: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_backingStore(this_ptr: *const ::widget::Widget) -> *mut ::qt_gui::backing_store::BackingStore;
  pub fn qt_widgets_c_QWidget_baseSize_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QWidget_childAt_p(this_ptr: *const ::widget::Widget, p: *const ::qt_core::point::Point) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QWidget_childAt_x_y(this_ptr: *const ::widget::Widget, x: ::libc::c_int, y: ::libc::c_int) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QWidget_childrenRect_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QWidget_childrenRegion_as_ptr(this_ptr: *const ::widget::Widget) -> *mut ::qt_gui::region::Region;
  pub fn qt_widgets_c_QWidget_clearFocus(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_clearMask(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_close(this_ptr: *mut ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_contentsMargins_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::margins::Margins);
  pub fn qt_widgets_c_QWidget_contentsRect_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QWidget_createWinId(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_cursor_as_ptr(this_ptr: *const ::widget::Widget) -> *mut ::qt_gui::cursor::Cursor;
  pub fn qt_widgets_c_QWidget_delete(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_devType(this_ptr: *const ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QWidget_effectiveWinId(this_ptr: *const ::widget::Widget) -> ::libc::c_ulonglong;
  pub fn qt_widgets_c_QWidget_ensurePolished(this_ptr: *const ::widget::Widget);
  pub fn qt_widgets_c_QWidget_find(arg1: ::libc::c_ulonglong) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QWidget_focusProxy(this_ptr: *const ::widget::Widget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QWidget_focusWidget(this_ptr: *const ::widget::Widget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QWidget_font(this_ptr: *const ::widget::Widget) -> *const ::qt_gui::font::Font;
  pub fn qt_widgets_c_QWidget_fontInfo_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_gui::font_info::FontInfo);
  pub fn qt_widgets_c_QWidget_fontMetrics_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_gui::font_metrics::FontMetrics);
  pub fn qt_widgets_c_QWidget_frameGeometry_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QWidget_frameSize_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QWidget_geometry(this_ptr: *const ::widget::Widget) -> *const ::qt_core::rect::Rect;
  pub fn qt_widgets_c_QWidget_getContentsMargins(this_ptr: *const ::widget::Widget, left: *mut ::libc::c_int, top: *mut ::libc::c_int, right: *mut ::libc::c_int, bottom: *mut ::libc::c_int);
  pub fn qt_widgets_c_QWidget_grabKeyboard(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_grabMouse_arg1(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_gui::cursor::Cursor);
  pub fn qt_widgets_c_QWidget_grabMouse_no_args(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_grabShortcut_key(this_ptr: *mut ::widget::Widget, key: *const ::qt_gui::key_sequence::KeySequence) -> ::libc::c_int;
  pub fn qt_widgets_c_QWidget_grabShortcut_key_context(this_ptr: *mut ::widget::Widget, key: *const ::qt_gui::key_sequence::KeySequence, context: *const ::qt_core::qt::ShortcutContext) -> ::libc::c_int;
  pub fn qt_widgets_c_QWidget_grab_as_ptr_no_args(this_ptr: *mut ::widget::Widget) -> *mut ::qt_gui::pixmap::Pixmap;
  pub fn qt_widgets_c_QWidget_grab_as_ptr_rectangle(this_ptr: *mut ::widget::Widget, rectangle: *const ::qt_core::rect::Rect) -> *mut ::qt_gui::pixmap::Pixmap;
  pub fn qt_widgets_c_QWidget_graphicsEffect(this_ptr: *const ::widget::Widget) -> *mut ::graphics_effect::GraphicsEffect;
  pub fn qt_widgets_c_QWidget_graphicsProxyWidget(this_ptr: *const ::widget::Widget) -> *mut ::graphics_proxy_widget::GraphicsProxyWidget;
  pub fn qt_widgets_c_QWidget_hasFocus(this_ptr: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_hasHeightForWidth(this_ptr: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_hasMouseTracking(this_ptr: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_hasTabletTracking(this_ptr: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_height(this_ptr: *const ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QWidget_heightForWidth(this_ptr: *const ::widget::Widget, arg1: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QWidget_hide(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_inputMethodQuery_to_output(this_ptr: *const ::widget::Widget, arg1: *const ::qt_core::qt::InputMethodQuery, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QWidget_insertAction(this_ptr: *mut ::widget::Widget, before: *mut ::action::Action, action: *mut ::action::Action);
  pub fn qt_widgets_c_QWidget_insertActions(this_ptr: *mut ::widget::Widget, before: *mut ::action::Action, actions: *const ::list::ListActionMutPtr);
  pub fn qt_widgets_c_QWidget_internalWinId(this_ptr: *const ::widget::Widget) -> ::libc::c_ulonglong;
  pub fn qt_widgets_c_QWidget_isActiveWindow(this_ptr: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_isAncestorOf(this_ptr: *const ::widget::Widget, child: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_isEnabled(this_ptr: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_isEnabledTo(this_ptr: *const ::widget::Widget, arg1: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_isEnabledToTLW(this_ptr: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_isFullScreen(this_ptr: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_isHidden(this_ptr: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_isLeftToRight(this_ptr: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_isMaximized(this_ptr: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_isMinimized(this_ptr: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_isModal(this_ptr: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_isRightToLeft(this_ptr: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_isTopLevel(this_ptr: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_isVisible(this_ptr: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_isVisibleTo(this_ptr: *const ::widget::Widget, arg1: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_isWindow(this_ptr: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_isWindowModified(this_ptr: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_keyboardGrabber() -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QWidget_layout(this_ptr: *const ::widget::Widget) -> *mut ::layout::Layout;
  pub fn qt_widgets_c_QWidget_locale_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::locale::Locale);
  pub fn qt_widgets_c_QWidget_lower(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_mapFromGlobal_to_output(this_ptr: *const ::widget::Widget, arg1: *const ::qt_core::point::Point, output: *mut ::qt_core::point::Point);
  pub fn qt_widgets_c_QWidget_mapFromParent_to_output(this_ptr: *const ::widget::Widget, arg1: *const ::qt_core::point::Point, output: *mut ::qt_core::point::Point);
  pub fn qt_widgets_c_QWidget_mapFrom_to_output(this_ptr: *const ::widget::Widget, arg1: *const ::widget::Widget, arg2: *const ::qt_core::point::Point, output: *mut ::qt_core::point::Point);
  pub fn qt_widgets_c_QWidget_mapToGlobal_to_output(this_ptr: *const ::widget::Widget, arg1: *const ::qt_core::point::Point, output: *mut ::qt_core::point::Point);
  pub fn qt_widgets_c_QWidget_mapToParent_to_output(this_ptr: *const ::widget::Widget, arg1: *const ::qt_core::point::Point, output: *mut ::qt_core::point::Point);
  pub fn qt_widgets_c_QWidget_mapTo_to_output(this_ptr: *const ::widget::Widget, arg1: *const ::widget::Widget, arg2: *const ::qt_core::point::Point, output: *mut ::qt_core::point::Point);
  pub fn qt_widgets_c_QWidget_mask_as_ptr(this_ptr: *const ::widget::Widget) -> *mut ::qt_gui::region::Region;
  pub fn qt_widgets_c_QWidget_maximumHeight(this_ptr: *const ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QWidget_maximumSize_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QWidget_maximumWidth(this_ptr: *const ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QWidget_metaObject(this_ptr: *const ::widget::Widget) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QWidget_minimumHeight(this_ptr: *const ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QWidget_minimumSizeHint_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QWidget_minimumSize_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QWidget_minimumWidth(this_ptr: *const ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QWidget_mouseGrabber() -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QWidget_move_arg1(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_core::point::Point);
  pub fn qt_widgets_c_QWidget_move_x_y(this_ptr: *mut ::widget::Widget, x: ::libc::c_int, y: ::libc::c_int);
  pub fn qt_widgets_c_QWidget_nativeParentWidget(this_ptr: *const ::widget::Widget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QWidget_nextInFocusChain(this_ptr: *const ::widget::Widget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QWidget_normalGeometry_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QWidget_paintEngine(this_ptr: *const ::widget::Widget) -> *mut ::qt_gui::paint_engine::PaintEngine;
  pub fn qt_widgets_c_QWidget_palette(this_ptr: *const ::widget::Widget) -> *const ::qt_gui::palette::Palette;
  pub fn qt_widgets_c_QWidget_parentWidget(this_ptr: *const ::widget::Widget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QWidget_pos_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::point::Point);
  pub fn qt_widgets_c_QWidget_previousInFocusChain(this_ptr: *const ::widget::Widget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QWidget_qt_metacall(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QWidget_qt_metacast(this_ptr: *mut ::widget::Widget, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QWidget_raise(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_rect_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QWidget_releaseKeyboard(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_releaseMouse(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_releaseShortcut(this_ptr: *mut ::widget::Widget, id: ::libc::c_int);
  pub fn qt_widgets_c_QWidget_removeAction(this_ptr: *mut ::widget::Widget, action: *mut ::action::Action);
  pub fn qt_widgets_c_QWidget_render_painter(this_ptr: *mut ::widget::Widget, painter: *mut ::qt_gui::painter::Painter);
  pub fn qt_widgets_c_QWidget_render_painter_targetOffset(this_ptr: *mut ::widget::Widget, painter: *mut ::qt_gui::painter::Painter, targetOffset: *const ::qt_core::point::Point);
  pub fn qt_widgets_c_QWidget_render_painter_targetOffset_sourceRegion(this_ptr: *mut ::widget::Widget, painter: *mut ::qt_gui::painter::Painter, targetOffset: *const ::qt_core::point::Point, sourceRegion: *const ::qt_gui::region::Region);
  pub fn qt_widgets_c_QWidget_render_painter_targetOffset_sourceRegion_renderFlags(this_ptr: *mut ::widget::Widget, painter: *mut ::qt_gui::painter::Painter, targetOffset: *const ::qt_core::point::Point, sourceRegion: *const ::qt_gui::region::Region, renderFlags: ::libc::c_uint);
  pub fn qt_widgets_c_QWidget_render_target(this_ptr: *mut ::widget::Widget, target: *mut ::qt_gui::paint_device::PaintDevice);
  pub fn qt_widgets_c_QWidget_render_target_targetOffset(this_ptr: *mut ::widget::Widget, target: *mut ::qt_gui::paint_device::PaintDevice, targetOffset: *const ::qt_core::point::Point);
  pub fn qt_widgets_c_QWidget_render_target_targetOffset_sourceRegion(this_ptr: *mut ::widget::Widget, target: *mut ::qt_gui::paint_device::PaintDevice, targetOffset: *const ::qt_core::point::Point, sourceRegion: *const ::qt_gui::region::Region);
  pub fn qt_widgets_c_QWidget_render_target_targetOffset_sourceRegion_renderFlags(this_ptr: *mut ::widget::Widget, target: *mut ::qt_gui::paint_device::PaintDevice, targetOffset: *const ::qt_core::point::Point, sourceRegion: *const ::qt_gui::region::Region, renderFlags: ::libc::c_uint);
  pub fn qt_widgets_c_QWidget_repaint_QRect(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QWidget_repaint_QRegion(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_gui::region::Region);
  pub fn qt_widgets_c_QWidget_repaint_int_int_int_int(this_ptr: *mut ::widget::Widget, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int);
  pub fn qt_widgets_c_QWidget_repaint_no_args(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_resize_arg1(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QWidget_resize_w_h(this_ptr: *mut ::widget::Widget, w: ::libc::c_int, h: ::libc::c_int);
  pub fn qt_widgets_c_QWidget_restoreGeometry(this_ptr: *mut ::widget::Widget, geometry: *const ::qt_core::byte_array::ByteArray) -> bool;
  pub fn qt_widgets_c_QWidget_saveGeometry_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::byte_array::ByteArray);
  pub fn qt_widgets_c_QWidget_scroll_dx_dy(this_ptr: *mut ::widget::Widget, dx: ::libc::c_int, dy: ::libc::c_int);
  pub fn qt_widgets_c_QWidget_scroll_dx_dy_arg3(this_ptr: *mut ::widget::Widget, dx: ::libc::c_int, dy: ::libc::c_int, arg3: *const ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QWidget_setAcceptDrops(this_ptr: *mut ::widget::Widget, on: bool);
  pub fn qt_widgets_c_QWidget_setAccessibleDescription(this_ptr: *mut ::widget::Widget, description: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QWidget_setAccessibleName(this_ptr: *mut ::widget::Widget, name: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QWidget_setAttribute_arg1(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_core::qt::WidgetAttribute);
  pub fn qt_widgets_c_QWidget_setAttribute_arg1_on(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_core::qt::WidgetAttribute, on: bool);
  pub fn qt_widgets_c_QWidget_setAutoFillBackground(this_ptr: *mut ::widget::Widget, enabled: bool);
  pub fn qt_widgets_c_QWidget_setBackgroundRole(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_gui::palette::ColorRole);
  pub fn qt_widgets_c_QWidget_setBaseSize_arg1(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QWidget_setBaseSize_basew_baseh(this_ptr: *mut ::widget::Widget, basew: ::libc::c_int, baseh: ::libc::c_int);
  pub fn qt_widgets_c_QWidget_setContentsMargins_left_top_right_bottom(this_ptr: *mut ::widget::Widget, left: ::libc::c_int, top: ::libc::c_int, right: ::libc::c_int, bottom: ::libc::c_int);
  pub fn qt_widgets_c_QWidget_setContentsMargins_margins(this_ptr: *mut ::widget::Widget, margins: *const ::qt_core::margins::Margins);
  pub fn qt_widgets_c_QWidget_setContextMenuPolicy(this_ptr: *mut ::widget::Widget, policy: *const ::qt_core::qt::ContextMenuPolicy);
  pub fn qt_widgets_c_QWidget_setCursor(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_gui::cursor::Cursor);
  pub fn qt_widgets_c_QWidget_setDisabled(this_ptr: *mut ::widget::Widget, arg1: bool);
  pub fn qt_widgets_c_QWidget_setEnabled(this_ptr: *mut ::widget::Widget, arg1: bool);
  pub fn qt_widgets_c_QWidget_setFixedHeight(this_ptr: *mut ::widget::Widget, h: ::libc::c_int);
  pub fn qt_widgets_c_QWidget_setFixedSize_arg1(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QWidget_setFixedSize_w_h(this_ptr: *mut ::widget::Widget, w: ::libc::c_int, h: ::libc::c_int);
  pub fn qt_widgets_c_QWidget_setFixedWidth(this_ptr: *mut ::widget::Widget, w: ::libc::c_int);
  pub fn qt_widgets_c_QWidget_setFocusPolicy(this_ptr: *mut ::widget::Widget, policy: *const ::qt_core::qt::FocusPolicy);
  pub fn qt_widgets_c_QWidget_setFocusProxy(this_ptr: *mut ::widget::Widget, arg1: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_setFocus_no_args(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_setFocus_reason(this_ptr: *mut ::widget::Widget, reason: *const ::qt_core::qt::FocusReason);
  pub fn qt_widgets_c_QWidget_setFont(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_gui::font::Font);
  pub fn qt_widgets_c_QWidget_setForegroundRole(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_gui::palette::ColorRole);
  pub fn qt_widgets_c_QWidget_setGeometry_arg1(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QWidget_setGeometry_x_y_w_h(this_ptr: *mut ::widget::Widget, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int);
  pub fn qt_widgets_c_QWidget_setGraphicsEffect(this_ptr: *mut ::widget::Widget, effect: *mut ::graphics_effect::GraphicsEffect);
  pub fn qt_widgets_c_QWidget_setHidden(this_ptr: *mut ::widget::Widget, hidden: bool);
  pub fn qt_widgets_c_QWidget_setLayout(this_ptr: *mut ::widget::Widget, arg1: *mut ::layout::Layout);
  pub fn qt_widgets_c_QWidget_setLayoutDirection(this_ptr: *mut ::widget::Widget, direction: *const ::qt_core::qt::LayoutDirection);
  pub fn qt_widgets_c_QWidget_setLocale(this_ptr: *mut ::widget::Widget, locale: *const ::qt_core::locale::Locale);
  pub fn qt_widgets_c_QWidget_setMask_QBitmap(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_gui::bitmap::Bitmap);
  pub fn qt_widgets_c_QWidget_setMask_QRegion(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_gui::region::Region);
  pub fn qt_widgets_c_QWidget_setMaximumHeight(this_ptr: *mut ::widget::Widget, maxh: ::libc::c_int);
  pub fn qt_widgets_c_QWidget_setMaximumSize_arg1(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QWidget_setMaximumSize_maxw_maxh(this_ptr: *mut ::widget::Widget, maxw: ::libc::c_int, maxh: ::libc::c_int);
  pub fn qt_widgets_c_QWidget_setMaximumWidth(this_ptr: *mut ::widget::Widget, maxw: ::libc::c_int);
  pub fn qt_widgets_c_QWidget_setMinimumHeight(this_ptr: *mut ::widget::Widget, minh: ::libc::c_int);
  pub fn qt_widgets_c_QWidget_setMinimumSize_arg1(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QWidget_setMinimumSize_minw_minh(this_ptr: *mut ::widget::Widget, minw: ::libc::c_int, minh: ::libc::c_int);
  pub fn qt_widgets_c_QWidget_setMinimumWidth(this_ptr: *mut ::widget::Widget, minw: ::libc::c_int);
  pub fn qt_widgets_c_QWidget_setMouseTracking(this_ptr: *mut ::widget::Widget, enable: bool);
  pub fn qt_widgets_c_QWidget_setPalette(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_gui::palette::Palette);
  pub fn qt_widgets_c_QWidget_setParent(this_ptr: *mut ::widget::Widget, parent: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_setShortcutAutoRepeat_id(this_ptr: *mut ::widget::Widget, id: ::libc::c_int);
  pub fn qt_widgets_c_QWidget_setShortcutAutoRepeat_id_enable(this_ptr: *mut ::widget::Widget, id: ::libc::c_int, enable: bool);
  pub fn qt_widgets_c_QWidget_setShortcutEnabled_id(this_ptr: *mut ::widget::Widget, id: ::libc::c_int);
  pub fn qt_widgets_c_QWidget_setShortcutEnabled_id_enable(this_ptr: *mut ::widget::Widget, id: ::libc::c_int, enable: bool);
  pub fn qt_widgets_c_QWidget_setSizeIncrement_arg1(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_core::size::Size);
  pub fn qt_widgets_c_QWidget_setSizeIncrement_w_h(this_ptr: *mut ::widget::Widget, w: ::libc::c_int, h: ::libc::c_int);
  pub fn qt_widgets_c_QWidget_setSizePolicy_arg1(this_ptr: *mut ::widget::Widget, arg1: *const ::size_policy::SizePolicy);
  pub fn qt_widgets_c_QWidget_setSizePolicy_horizontal_vertical(this_ptr: *mut ::widget::Widget, horizontal: *const ::size_policy::Policy, vertical: *const ::size_policy::Policy);
  pub fn qt_widgets_c_QWidget_setStatusTip(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QWidget_setStyle(this_ptr: *mut ::widget::Widget, arg1: *mut ::style::Style);
  pub fn qt_widgets_c_QWidget_setStyleSheet(this_ptr: *mut ::widget::Widget, styleSheet: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QWidget_setTabOrder(arg1: *mut ::widget::Widget, arg2: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_setTabletTracking(this_ptr: *mut ::widget::Widget, enable: bool);
  pub fn qt_widgets_c_QWidget_setToolTip(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QWidget_setToolTipDuration(this_ptr: *mut ::widget::Widget, msec: ::libc::c_int);
  pub fn qt_widgets_c_QWidget_setUpdatesEnabled(this_ptr: *mut ::widget::Widget, enable: bool);
  pub fn qt_widgets_c_QWidget_setVisible(this_ptr: *mut ::widget::Widget, visible: bool);
  pub fn qt_widgets_c_QWidget_setWhatsThis(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QWidget_setWindowFilePath(this_ptr: *mut ::widget::Widget, filePath: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QWidget_setWindowFlag_arg1(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_core::qt::WindowType);
  pub fn qt_widgets_c_QWidget_setWindowFlag_arg1_on(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_core::qt::WindowType, on: bool);
  pub fn qt_widgets_c_QWidget_setWindowIcon(this_ptr: *mut ::widget::Widget, icon: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QWidget_setWindowIconText(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QWidget_setWindowModality(this_ptr: *mut ::widget::Widget, windowModality: *const ::qt_core::qt::WindowModality);
  pub fn qt_widgets_c_QWidget_setWindowModified(this_ptr: *mut ::widget::Widget, arg1: bool);
  pub fn qt_widgets_c_QWidget_setWindowOpacity(this_ptr: *mut ::widget::Widget, level: ::libc::c_double);
  pub fn qt_widgets_c_QWidget_setWindowRole(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QWidget_setWindowTitle(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QWidget_show(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_showFullScreen(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_showMaximized(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_showMinimized(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_showNormal(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_sizeHint_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QWidget_sizeIncrement_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QWidget_sizePolicy_to_output(this_ptr: *const ::widget::Widget, output: *mut ::size_policy::SizePolicy);
  pub fn qt_widgets_c_QWidget_size_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QWidget_stackUnder(this_ptr: *mut ::widget::Widget, arg1: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_statusTip_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QWidget_style(this_ptr: *const ::widget::Widget) -> *mut ::style::Style;
  pub fn qt_widgets_c_QWidget_styleSheet_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QWidget_testAttribute(this_ptr: *const ::widget::Widget, arg1: *const ::qt_core::qt::WidgetAttribute) -> bool;
  pub fn qt_widgets_c_QWidget_toolTipDuration(this_ptr: *const ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QWidget_toolTip_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QWidget_topLevelWidget(this_ptr: *const ::widget::Widget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QWidget_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QWidget_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QWidget_underMouse(this_ptr: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_ungrabGesture(this_ptr: *mut ::widget::Widget, type_: *const ::qt_core::qt::GestureType);
  pub fn qt_widgets_c_QWidget_unsetCursor(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_unsetLayoutDirection(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_unsetLocale(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_updateGeometry(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_update_QRect(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QWidget_update_QRegion(this_ptr: *mut ::widget::Widget, arg1: *const ::qt_gui::region::Region);
  pub fn qt_widgets_c_QWidget_update_int_int_int_int(this_ptr: *mut ::widget::Widget, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int);
  pub fn qt_widgets_c_QWidget_update_no_args(this_ptr: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidget_updatesEnabled(this_ptr: *const ::widget::Widget) -> bool;
  pub fn qt_widgets_c_QWidget_visibleRegion_as_ptr(this_ptr: *const ::widget::Widget) -> *mut ::qt_gui::region::Region;
  pub fn qt_widgets_c_QWidget_whatsThis_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QWidget_width(this_ptr: *const ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QWidget_winId(this_ptr: *const ::widget::Widget) -> ::libc::c_ulonglong;
  pub fn qt_widgets_c_QWidget_window(this_ptr: *const ::widget::Widget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QWidget_windowFilePath_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QWidget_windowHandle(this_ptr: *const ::widget::Widget) -> *mut ::qt_gui::window::Window;
  pub fn qt_widgets_c_QWidget_windowIconText_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QWidget_windowIcon_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_QWidget_windowOpacity(this_ptr: *const ::widget::Widget) -> ::libc::c_double;
  pub fn qt_widgets_c_QWidget_windowRole_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QWidget_windowTitle_to_output(this_ptr: *const ::widget::Widget, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QWidget_x(this_ptr: *const ::widget::Widget) -> ::libc::c_int;
  pub fn qt_widgets_c_QWidget_y(this_ptr: *const ::widget::Widget) -> ::libc::c_int;

  // Header: QWidgetAction
  pub fn qt_widgets_c_QWidgetAction_G_dynamic_cast_QWidgetAction_ptr(ptr: *mut ::action::Action) -> *mut ::widget_action::WidgetAction;
  pub fn qt_widgets_c_QWidgetAction_G_static_cast_QAction_ptr(ptr: *mut ::widget_action::WidgetAction) -> *mut ::action::Action;
  pub fn qt_widgets_c_QWidgetAction_G_static_cast_QObject_ptr(ptr: *mut ::widget_action::WidgetAction) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QWidgetAction_G_static_cast_QWidgetAction_ptr_QAction(ptr: *mut ::action::Action) -> *mut ::widget_action::WidgetAction;
  pub fn qt_widgets_c_QWidgetAction_G_static_cast_QWidgetAction_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::widget_action::WidgetAction;
  pub fn qt_widgets_c_QWidgetAction_defaultWidget(this_ptr: *const ::widget_action::WidgetAction) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QWidgetAction_delete(this_ptr: *mut ::widget_action::WidgetAction);
  pub fn qt_widgets_c_QWidgetAction_metaObject(this_ptr: *const ::widget_action::WidgetAction) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QWidgetAction_new(parent: *mut ::qt_core::object::Object) -> *mut ::widget_action::WidgetAction;
  pub fn qt_widgets_c_QWidgetAction_qt_metacall(this_ptr: *mut ::widget_action::WidgetAction, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QWidgetAction_qt_metacast(this_ptr: *mut ::widget_action::WidgetAction, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QWidgetAction_releaseWidget(this_ptr: *mut ::widget_action::WidgetAction, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidgetAction_requestWidget(this_ptr: *mut ::widget_action::WidgetAction, parent: *mut ::widget::Widget) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QWidgetAction_setDefaultWidget(this_ptr: *mut ::widget_action::WidgetAction, w: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWidgetAction_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QWidgetAction_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QWidgetItem
  pub fn qt_widgets_c_QWidgetItem_G_dynamic_cast_QWidgetItem_ptr(ptr: *mut ::layout_item::LayoutItem) -> *mut ::widget_item::WidgetItem;
  pub fn qt_widgets_c_QWidgetItem_G_static_cast_QLayoutItem_ptr(ptr: *mut ::widget_item::WidgetItem) -> *mut ::layout_item::LayoutItem;
  pub fn qt_widgets_c_QWidgetItem_G_static_cast_QWidgetItem_ptr(ptr: *mut ::layout_item::LayoutItem) -> *mut ::widget_item::WidgetItem;
  pub fn qt_widgets_c_QWidgetItem_delete(this_ptr: *mut ::widget_item::WidgetItem);
  pub fn qt_widgets_c_QWidgetItem_geometry_to_output(this_ptr: *const ::widget_item::WidgetItem, output: *mut ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QWidgetItem_hasHeightForWidth(this_ptr: *const ::widget_item::WidgetItem) -> bool;
  pub fn qt_widgets_c_QWidgetItem_heightForWidth(this_ptr: *const ::widget_item::WidgetItem, arg1: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_widgets_c_QWidgetItem_isEmpty(this_ptr: *const ::widget_item::WidgetItem) -> bool;
  pub fn qt_widgets_c_QWidgetItem_maximumSize_to_output(this_ptr: *const ::widget_item::WidgetItem, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QWidgetItem_minimumSize_to_output(this_ptr: *const ::widget_item::WidgetItem, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QWidgetItem_new(w: *mut ::widget::Widget) -> *mut ::widget_item::WidgetItem;
  pub fn qt_widgets_c_QWidgetItem_setGeometry(this_ptr: *mut ::widget_item::WidgetItem, arg1: *const ::qt_core::rect::Rect);
  pub fn qt_widgets_c_QWidgetItem_sizeHint_to_output(this_ptr: *const ::widget_item::WidgetItem, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QWidgetItem_widget(this_ptr: *mut ::widget_item::WidgetItem) -> *mut ::widget::Widget;

  // Header: QWizard
  pub fn qt_widgets_c_QWizard_G_dynamic_cast_QWizard_ptr_QDialog(ptr: *mut ::dialog::Dialog) -> *mut ::wizard::Wizard;
  pub fn qt_widgets_c_QWizard_G_dynamic_cast_QWizard_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::wizard::Wizard;
  pub fn qt_widgets_c_QWizard_G_static_cast_QDialog_ptr(ptr: *mut ::wizard::Wizard) -> *mut ::dialog::Dialog;
  pub fn qt_widgets_c_QWizard_G_static_cast_QObject_ptr(ptr: *mut ::wizard::Wizard) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QWizard_G_static_cast_QPaintDevice_ptr(ptr: *mut ::wizard::Wizard) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QWizard_G_static_cast_QWidget_ptr(ptr: *mut ::wizard::Wizard) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QWizard_G_static_cast_QWizard_ptr_QDialog(ptr: *mut ::dialog::Dialog) -> *mut ::wizard::Wizard;
  pub fn qt_widgets_c_QWizard_G_static_cast_QWizard_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::wizard::Wizard;
  pub fn qt_widgets_c_QWizard_G_static_cast_QWizard_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::wizard::Wizard;
  pub fn qt_widgets_c_QWizard_G_static_cast_QWizard_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::wizard::Wizard;
  pub fn qt_widgets_c_QWizard_addPage(this_ptr: *mut ::wizard::Wizard, page: *mut ::wizard_page::WizardPage) -> ::libc::c_int;
  pub fn qt_widgets_c_QWizard_back(this_ptr: *mut ::wizard::Wizard);
  pub fn qt_widgets_c_QWizard_button(this_ptr: *const ::wizard::Wizard, which: ::wizard::WizardButton) -> *mut ::abstract_button::AbstractButton;
  pub fn qt_widgets_c_QWizard_buttonText_to_output(this_ptr: *const ::wizard::Wizard, which: ::wizard::WizardButton, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QWizard_currentId(this_ptr: *const ::wizard::Wizard) -> ::libc::c_int;
  pub fn qt_widgets_c_QWizard_currentPage(this_ptr: *const ::wizard::Wizard) -> *mut ::wizard_page::WizardPage;
  pub fn qt_widgets_c_QWizard_delete(this_ptr: *mut ::wizard::Wizard);
  pub fn qt_widgets_c_QWizard_field_to_output(this_ptr: *const ::wizard::Wizard, name: *const ::qt_core::string::String, output: *mut ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QWizard_hasVisitedPage(this_ptr: *const ::wizard::Wizard, id: ::libc::c_int) -> bool;
  pub fn qt_widgets_c_QWizard_metaObject(this_ptr: *const ::wizard::Wizard) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QWizard_next(this_ptr: *mut ::wizard::Wizard);
  pub fn qt_widgets_c_QWizard_nextId(this_ptr: *const ::wizard::Wizard) -> ::libc::c_int;
  pub fn qt_widgets_c_QWizard_options(this_ptr: *const ::wizard::Wizard) -> ::libc::c_uint;
  pub fn qt_widgets_c_QWizard_page(this_ptr: *const ::wizard::Wizard, id: ::libc::c_int) -> *mut ::wizard_page::WizardPage;
  pub fn qt_widgets_c_QWizard_pageIds_to_output(this_ptr: *const ::wizard::Wizard, output: *mut ::qt_core::list::ListCInt);
  pub fn qt_widgets_c_QWizard_pixmap_as_ptr(this_ptr: *const ::wizard::Wizard, which: ::wizard::WizardPixmap) -> *mut ::qt_gui::pixmap::Pixmap;
  pub fn qt_widgets_c_QWizard_qt_metacall(this_ptr: *mut ::wizard::Wizard, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QWizard_qt_metacast(this_ptr: *mut ::wizard::Wizard, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QWizard_removePage(this_ptr: *mut ::wizard::Wizard, id: ::libc::c_int);
  pub fn qt_widgets_c_QWizard_restart(this_ptr: *mut ::wizard::Wizard);
  pub fn qt_widgets_c_QWizard_setButton(this_ptr: *mut ::wizard::Wizard, which: ::wizard::WizardButton, button: *mut ::abstract_button::AbstractButton);
  pub fn qt_widgets_c_QWizard_setButtonLayout(this_ptr: *mut ::wizard::Wizard, layout: *const ::list::ListWizardWizardButton);
  pub fn qt_widgets_c_QWizard_setButtonText(this_ptr: *mut ::wizard::Wizard, which: ::wizard::WizardButton, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QWizard_setDefaultProperty(this_ptr: *mut ::wizard::Wizard, className: *const ::libc::c_char, property: *const ::libc::c_char, changedSignal: *const ::libc::c_char);
  pub fn qt_widgets_c_QWizard_setField(this_ptr: *mut ::wizard::Wizard, name: *const ::qt_core::string::String, value: *const ::qt_core::variant::Variant);
  pub fn qt_widgets_c_QWizard_setOption_option(this_ptr: *mut ::wizard::Wizard, option: ::wizard::WizardOption);
  pub fn qt_widgets_c_QWizard_setOption_option_on(this_ptr: *mut ::wizard::Wizard, option: ::wizard::WizardOption, on: bool);
  pub fn qt_widgets_c_QWizard_setOptions(this_ptr: *mut ::wizard::Wizard, options: ::libc::c_uint);
  pub fn qt_widgets_c_QWizard_setPage(this_ptr: *mut ::wizard::Wizard, id: ::libc::c_int, page: *mut ::wizard_page::WizardPage);
  pub fn qt_widgets_c_QWizard_setPixmap(this_ptr: *mut ::wizard::Wizard, which: ::wizard::WizardPixmap, pixmap: *const ::qt_gui::pixmap::Pixmap);
  pub fn qt_widgets_c_QWizard_setSideWidget(this_ptr: *mut ::wizard::Wizard, widget: *mut ::widget::Widget);
  pub fn qt_widgets_c_QWizard_setStartId(this_ptr: *mut ::wizard::Wizard, id: ::libc::c_int);
  pub fn qt_widgets_c_QWizard_setSubTitleFormat(this_ptr: *mut ::wizard::Wizard, format: *const ::qt_core::qt::TextFormat);
  pub fn qt_widgets_c_QWizard_setTitleFormat(this_ptr: *mut ::wizard::Wizard, format: *const ::qt_core::qt::TextFormat);
  pub fn qt_widgets_c_QWizard_setVisible(this_ptr: *mut ::wizard::Wizard, visible: bool);
  pub fn qt_widgets_c_QWizard_setWizardStyle(this_ptr: *mut ::wizard::Wizard, style: ::wizard::WizardStyle);
  pub fn qt_widgets_c_QWizard_sideWidget(this_ptr: *const ::wizard::Wizard) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QWizard_sizeHint_to_output(this_ptr: *const ::wizard::Wizard, output: *mut ::qt_core::size::Size);
  pub fn qt_widgets_c_QWizard_startId(this_ptr: *const ::wizard::Wizard) -> ::libc::c_int;
  pub fn qt_widgets_c_QWizard_testOption(this_ptr: *const ::wizard::Wizard, option: ::wizard::WizardOption) -> bool;
  pub fn qt_widgets_c_QWizard_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QWizard_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QWizard_validateCurrentPage(this_ptr: *mut ::wizard::Wizard) -> bool;
  pub fn qt_widgets_c_QWizard_visitedPages_to_output(this_ptr: *const ::wizard::Wizard, output: *mut ::qt_core::list::ListCInt);
  pub fn qt_widgets_c_QWizard_wizardStyle(this_ptr: *const ::wizard::Wizard) -> ::wizard::WizardStyle;

  // Header: QWizardPage
  pub fn qt_widgets_c_QWizardPage_G_dynamic_cast_QWizardPage_ptr(ptr: *mut ::widget::Widget) -> *mut ::wizard_page::WizardPage;
  pub fn qt_widgets_c_QWizardPage_G_static_cast_QObject_ptr(ptr: *mut ::wizard_page::WizardPage) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_QWizardPage_G_static_cast_QPaintDevice_ptr(ptr: *mut ::wizard_page::WizardPage) -> *mut ::qt_gui::paint_device::PaintDevice;
  pub fn qt_widgets_c_QWizardPage_G_static_cast_QWidget_ptr(ptr: *mut ::wizard_page::WizardPage) -> *mut ::widget::Widget;
  pub fn qt_widgets_c_QWizardPage_G_static_cast_QWizardPage_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::wizard_page::WizardPage;
  pub fn qt_widgets_c_QWizardPage_G_static_cast_QWizardPage_ptr_QPaintDevice(ptr: *mut ::qt_gui::paint_device::PaintDevice) -> *mut ::wizard_page::WizardPage;
  pub fn qt_widgets_c_QWizardPage_G_static_cast_QWizardPage_ptr_QWidget(ptr: *mut ::widget::Widget) -> *mut ::wizard_page::WizardPage;
  pub fn qt_widgets_c_QWizardPage_buttonText_to_output(this_ptr: *const ::wizard_page::WizardPage, which: *const ::wizard::WizardButton, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QWizardPage_cleanupPage(this_ptr: *mut ::wizard_page::WizardPage);
  pub fn qt_widgets_c_QWizardPage_delete(this_ptr: *mut ::wizard_page::WizardPage);
  pub fn qt_widgets_c_QWizardPage_initializePage(this_ptr: *mut ::wizard_page::WizardPage);
  pub fn qt_widgets_c_QWizardPage_isCommitPage(this_ptr: *const ::wizard_page::WizardPage) -> bool;
  pub fn qt_widgets_c_QWizardPage_isComplete(this_ptr: *const ::wizard_page::WizardPage) -> bool;
  pub fn qt_widgets_c_QWizardPage_isFinalPage(this_ptr: *const ::wizard_page::WizardPage) -> bool;
  pub fn qt_widgets_c_QWizardPage_metaObject(this_ptr: *const ::wizard_page::WizardPage) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_widgets_c_QWizardPage_new_no_args() -> *mut ::wizard_page::WizardPage;
  pub fn qt_widgets_c_QWizardPage_new_parent(parent: *mut ::widget::Widget) -> *mut ::wizard_page::WizardPage;
  pub fn qt_widgets_c_QWizardPage_nextId(this_ptr: *const ::wizard_page::WizardPage) -> ::libc::c_int;
  pub fn qt_widgets_c_QWizardPage_pixmap_as_ptr(this_ptr: *const ::wizard_page::WizardPage, which: *const ::wizard::WizardPixmap) -> *mut ::qt_gui::pixmap::Pixmap;
  pub fn qt_widgets_c_QWizardPage_qt_metacall(this_ptr: *mut ::wizard_page::WizardPage, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_widgets_c_QWizardPage_qt_metacast(this_ptr: *mut ::wizard_page::WizardPage, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_widgets_c_QWizardPage_setButtonText(this_ptr: *mut ::wizard_page::WizardPage, which: *const ::wizard::WizardButton, text: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QWizardPage_setCommitPage(this_ptr: *mut ::wizard_page::WizardPage, commitPage: bool);
  pub fn qt_widgets_c_QWizardPage_setFinalPage(this_ptr: *mut ::wizard_page::WizardPage, finalPage: bool);
  pub fn qt_widgets_c_QWizardPage_setPixmap(this_ptr: *mut ::wizard_page::WizardPage, which: *const ::wizard::WizardPixmap, pixmap: *const ::qt_gui::pixmap::Pixmap);
  pub fn qt_widgets_c_QWizardPage_setSubTitle(this_ptr: *mut ::wizard_page::WizardPage, subTitle: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QWizardPage_setTitle(this_ptr: *mut ::wizard_page::WizardPage, title: *const ::qt_core::string::String);
  pub fn qt_widgets_c_QWizardPage_subTitle_to_output(this_ptr: *const ::wizard_page::WizardPage, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QWizardPage_title_to_output(this_ptr: *const ::wizard_page::WizardPage, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QWizardPage_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QWizardPage_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_widgets_c_QWizardPage_validatePage(this_ptr: *mut ::wizard_page::WizardPage) -> bool;

  // Header: slots
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QAbstractButton_ptr_bool_custom_slot(this_ptr: *mut ::slots::raw::RawSlotAbstractButtonMutPtrBool, arg0: *mut ::abstract_button::AbstractButton, arg1: bool);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QAbstractButton_ptr_bool_delete(this_ptr: *mut ::slots::raw::RawSlotAbstractButtonMutPtrBool);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QAbstractButton_ptr_bool_new() -> *mut ::slots::raw::RawSlotAbstractButtonMutPtrBool;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QAbstractButton_ptr_bool_set(this_ptr: *mut ::slots::raw::RawSlotAbstractButtonMutPtrBool, func: extern "C" fn(*mut ::libc::c_void, *mut ::abstract_button::AbstractButton, bool), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QAbstractButton_ptr_custom_slot(this_ptr: *mut ::slots::raw::RawSlotAbstractButtonMutPtr, arg0: *mut ::abstract_button::AbstractButton);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QAbstractButton_ptr_delete(this_ptr: *mut ::slots::raw::RawSlotAbstractButtonMutPtr);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QAbstractButton_ptr_new() -> *mut ::slots::raw::RawSlotAbstractButtonMutPtr;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QAbstractButton_ptr_set(this_ptr: *mut ::slots::raw::RawSlotAbstractButtonMutPtr, func: extern "C" fn(*mut ::libc::c_void, *mut ::abstract_button::AbstractButton), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QAction_ptr_custom_slot(this_ptr: *mut ::slots::raw::RawSlotActionMutPtr, arg0: *mut ::action::Action);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QAction_ptr_delete(this_ptr: *mut ::slots::raw::RawSlotActionMutPtr);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QAction_ptr_new() -> *mut ::slots::raw::RawSlotActionMutPtr;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QAction_ptr_set(this_ptr: *mut ::slots::raw::RawSlotActionMutPtr, func: extern "C" fn(*mut ::libc::c_void, *mut ::action::Action), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QDockWidget_ptr_custom_slot(this_ptr: *mut ::slots::raw::RawSlotDockWidgetMutPtr, arg0: *mut ::dock_widget::DockWidget);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QDockWidget_ptr_delete(this_ptr: *mut ::slots::raw::RawSlotDockWidgetMutPtr);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QDockWidget_ptr_new() -> *mut ::slots::raw::RawSlotDockWidgetMutPtr;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QDockWidget_ptr_set(this_ptr: *mut ::slots::raw::RawSlotDockWidgetMutPtr, func: extern "C" fn(*mut ::libc::c_void, *mut ::dock_widget::DockWidget), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QFlags_QGraphicsBlurEffect_BlurHint_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreFlagsGraphicsBlurEffectBlurHint, arg0: ::libc::c_uint);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QFlags_QGraphicsBlurEffect_BlurHint_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreFlagsGraphicsBlurEffectBlurHint);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QFlags_QGraphicsBlurEffect_BlurHint_new() -> *mut ::slots::raw::RawSlotQtCoreFlagsGraphicsBlurEffectBlurHint;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QFlags_QGraphicsBlurEffect_BlurHint_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreFlagsGraphicsBlurEffectBlurHint, func: extern "C" fn(*mut ::libc::c_void, ::libc::c_uint), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_custom_slot(this_ptr: *mut ::slots::raw::RawSlotGraphicsItemMutPtrGraphicsItemMutPtrQtCoreQtFocusReasonRef, arg0: *mut ::graphics_item::GraphicsItem, arg1: *mut ::graphics_item::GraphicsItem, arg2: *const ::qt_core::qt::FocusReason);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_delete(this_ptr: *mut ::slots::raw::RawSlotGraphicsItemMutPtrGraphicsItemMutPtrQtCoreQtFocusReasonRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_new() -> *mut ::slots::raw::RawSlotGraphicsItemMutPtrGraphicsItemMutPtrQtCoreQtFocusReasonRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_set(this_ptr: *mut ::slots::raw::RawSlotGraphicsItemMutPtrGraphicsItemMutPtrQtCoreQtFocusReasonRef, func: extern "C" fn(*mut ::libc::c_void, *mut ::graphics_item::GraphicsItem, *mut ::graphics_item::GraphicsItem, *const ::qt_core::qt::FocusReason), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_custom_slot(this_ptr: *mut ::slots::raw::RawSlotGraphicsItemMutPtrGraphicsItemMutPtr, arg0: *mut ::graphics_item::GraphicsItem, arg1: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_delete(this_ptr: *mut ::slots::raw::RawSlotGraphicsItemMutPtrGraphicsItemMutPtr);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_new() -> *mut ::slots::raw::RawSlotGraphicsItemMutPtrGraphicsItemMutPtr;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_set(this_ptr: *mut ::slots::raw::RawSlotGraphicsItemMutPtrGraphicsItemMutPtr, func: extern "C" fn(*mut ::libc::c_void, *mut ::graphics_item::GraphicsItem, *mut ::graphics_item::GraphicsItem), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_custom_slot(this_ptr: *mut ::slots::raw::RawSlotGraphicsItemMutPtr, arg0: *mut ::graphics_item::GraphicsItem);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_delete(this_ptr: *mut ::slots::raw::RawSlotGraphicsItemMutPtr);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_new() -> *mut ::slots::raw::RawSlotGraphicsItemMutPtr;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_set(this_ptr: *mut ::slots::raw::RawSlotGraphicsItemMutPtr, func: extern "C" fn(*mut ::libc::c_void, *mut ::graphics_item::GraphicsItem), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_custom_slot(this_ptr: *mut ::slots::raw::RawSlotListWidgetItemMutPtrListWidgetItemMutPtr, arg0: *mut ::list_widget_item::ListWidgetItem, arg1: *mut ::list_widget_item::ListWidgetItem);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_delete(this_ptr: *mut ::slots::raw::RawSlotListWidgetItemMutPtrListWidgetItemMutPtr);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_new() -> *mut ::slots::raw::RawSlotListWidgetItemMutPtrListWidgetItemMutPtr;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_set(this_ptr: *mut ::slots::raw::RawSlotListWidgetItemMutPtrListWidgetItemMutPtr, func: extern "C" fn(*mut ::libc::c_void, *mut ::list_widget_item::ListWidgetItem, *mut ::list_widget_item::ListWidgetItem), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_custom_slot(this_ptr: *mut ::slots::raw::RawSlotListWidgetItemMutPtr, arg0: *mut ::list_widget_item::ListWidgetItem);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_delete(this_ptr: *mut ::slots::raw::RawSlotListWidgetItemMutPtr);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_new() -> *mut ::slots::raw::RawSlotListWidgetItemMutPtr;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_set(this_ptr: *mut ::slots::raw::RawSlotListWidgetItemMutPtr, func: extern "C" fn(*mut ::libc::c_void, *mut ::list_widget_item::ListWidgetItem), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QMdiSubWindow_ptr_custom_slot(this_ptr: *mut ::slots::raw::RawSlotMdiSubWindowMutPtr, arg0: *mut ::mdi_sub_window::MdiSubWindow);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QMdiSubWindow_ptr_delete(this_ptr: *mut ::slots::raw::RawSlotMdiSubWindowMutPtr);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QMdiSubWindow_ptr_new() -> *mut ::slots::raw::RawSlotMdiSubWindowMutPtr;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QMdiSubWindow_ptr_set(this_ptr: *mut ::slots::raw::RawSlotMdiSubWindowMutPtr, func: extern "C" fn(*mut ::libc::c_void, *mut ::mdi_sub_window::MdiSubWindow), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QRect_QPointF_QPointF_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreRectRefQtCorePointFRefQtCorePointFRef, arg0: *const ::qt_core::rect::Rect, arg1: *const ::qt_core::point_f::PointF, arg2: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QRect_QPointF_QPointF_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreRectRefQtCorePointFRefQtCorePointFRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QRect_QPointF_QPointF_new() -> *mut ::slots::raw::RawSlotQtCoreRectRefQtCorePointFRefQtCorePointFRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QRect_QPointF_QPointF_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreRectRefQtCorePointFRefQtCorePointFRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::rect::Rect, *const ::qt_core::point_f::PointF, *const ::qt_core::point_f::PointF), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QRect_QPointF_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreRectRefQtCorePointFRef, arg0: *const ::qt_core::rect::Rect, arg1: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QRect_QPointF_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreRectRefQtCorePointFRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QRect_QPointF_new() -> *mut ::slots::raw::RawSlotQtCoreRectRefQtCorePointFRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QRect_QPointF_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreRectRefQtCorePointFRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::rect::Rect, *const ::qt_core::point_f::PointF), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QRect_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreRectRef, arg0: *const ::qt_core::rect::Rect);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QRect_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreRectRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QRect_new() -> *mut ::slots::raw::RawSlotQtCoreRectRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QRect_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreRectRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::rect::Rect), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QScroller_State_custom_slot(this_ptr: *mut ::slots::raw::RawSlotScrollerStateRef, arg0: *const ::scroller::State);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QScroller_State_delete(this_ptr: *mut ::slots::raw::RawSlotScrollerStateRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QScroller_State_new() -> *mut ::slots::raw::RawSlotScrollerStateRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QScroller_State_set(this_ptr: *mut ::slots::raw::RawSlotScrollerStateRef, func: extern "C" fn(*mut ::libc::c_void, *const ::scroller::State), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QSystemTrayIcon_ActivationReason_custom_slot(this_ptr: *mut ::slots::raw::RawSlotSystemTrayIconActivationReasonRef, arg0: *const ::system_tray_icon::ActivationReason);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QSystemTrayIcon_ActivationReason_delete(this_ptr: *mut ::slots::raw::RawSlotSystemTrayIconActivationReasonRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QSystemTrayIcon_ActivationReason_new() -> *mut ::slots::raw::RawSlotSystemTrayIconActivationReasonRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QSystemTrayIcon_ActivationReason_set(this_ptr: *mut ::slots::raw::RawSlotSystemTrayIconActivationReasonRef, func: extern "C" fn(*mut ::libc::c_void, *const ::system_tray_icon::ActivationReason), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_custom_slot(this_ptr: *mut ::slots::raw::RawSlotTableWidgetItemMutPtrTableWidgetItemMutPtr, arg0: *mut ::table_widget_item::TableWidgetItem, arg1: *mut ::table_widget_item::TableWidgetItem);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_delete(this_ptr: *mut ::slots::raw::RawSlotTableWidgetItemMutPtrTableWidgetItemMutPtr);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_new() -> *mut ::slots::raw::RawSlotTableWidgetItemMutPtrTableWidgetItemMutPtr;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_set(this_ptr: *mut ::slots::raw::RawSlotTableWidgetItemMutPtrTableWidgetItemMutPtr, func: extern "C" fn(*mut ::libc::c_void, *mut ::table_widget_item::TableWidgetItem, *mut ::table_widget_item::TableWidgetItem), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_custom_slot(this_ptr: *mut ::slots::raw::RawSlotTableWidgetItemMutPtr, arg0: *mut ::table_widget_item::TableWidgetItem);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_delete(this_ptr: *mut ::slots::raw::RawSlotTableWidgetItemMutPtr);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_new() -> *mut ::slots::raw::RawSlotTableWidgetItemMutPtr;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_set(this_ptr: *mut ::slots::raw::RawSlotTableWidgetItemMutPtr, func: extern "C" fn(*mut ::libc::c_void, *mut ::table_widget_item::TableWidgetItem), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_custom_slot(this_ptr: *mut ::slots::raw::RawSlotTreeWidgetItemMutPtrTreeWidgetItemMutPtr, arg0: *mut ::tree_widget_item::TreeWidgetItem, arg1: *mut ::tree_widget_item::TreeWidgetItem);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_delete(this_ptr: *mut ::slots::raw::RawSlotTreeWidgetItemMutPtrTreeWidgetItemMutPtr);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_new() -> *mut ::slots::raw::RawSlotTreeWidgetItemMutPtrTreeWidgetItemMutPtr;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_set(this_ptr: *mut ::slots::raw::RawSlotTreeWidgetItemMutPtrTreeWidgetItemMutPtr, func: extern "C" fn(*mut ::libc::c_void, *mut ::tree_widget_item::TreeWidgetItem, *mut ::tree_widget_item::TreeWidgetItem), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_custom_slot(this_ptr: *mut ::slots::raw::RawSlotTreeWidgetItemMutPtr, arg0: *mut ::tree_widget_item::TreeWidgetItem);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_delete(this_ptr: *mut ::slots::raw::RawSlotTreeWidgetItemMutPtr);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_int_custom_slot(this_ptr: *mut ::slots::raw::RawSlotTreeWidgetItemMutPtrCInt, arg0: *mut ::tree_widget_item::TreeWidgetItem, arg1: ::libc::c_int);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_int_delete(this_ptr: *mut ::slots::raw::RawSlotTreeWidgetItemMutPtrCInt);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_int_new() -> *mut ::slots::raw::RawSlotTreeWidgetItemMutPtrCInt;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_int_set(this_ptr: *mut ::slots::raw::RawSlotTreeWidgetItemMutPtrCInt, func: extern "C" fn(*mut ::libc::c_void, *mut ::tree_widget_item::TreeWidgetItem, ::libc::c_int), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_new() -> *mut ::slots::raw::RawSlotTreeWidgetItemMutPtr;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_set(this_ptr: *mut ::slots::raw::RawSlotTreeWidgetItemMutPtr, func: extern "C" fn(*mut ::libc::c_void, *mut ::tree_widget_item::TreeWidgetItem), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QUndoStack_ptr_custom_slot(this_ptr: *mut ::slots::raw::RawSlotUndoStackMutPtr, arg0: *mut ::undo_stack::UndoStack);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QUndoStack_ptr_delete(this_ptr: *mut ::slots::raw::RawSlotUndoStackMutPtr);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QUndoStack_ptr_new() -> *mut ::slots::raw::RawSlotUndoStackMutPtr;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QUndoStack_ptr_set(this_ptr: *mut ::slots::raw::RawSlotUndoStackMutPtr, func: extern "C" fn(*mut ::libc::c_void, *mut ::undo_stack::UndoStack), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_custom_slot(this_ptr: *mut ::slots::raw::RawSlotWidgetMutPtrAbstractItemDelegateEndEditHintRef, arg0: *mut ::widget::Widget, arg1: *const ::abstract_item_delegate::EndEditHint);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_delete(this_ptr: *mut ::slots::raw::RawSlotWidgetMutPtrAbstractItemDelegateEndEditHintRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_new() -> *mut ::slots::raw::RawSlotWidgetMutPtrAbstractItemDelegateEndEditHintRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_set(this_ptr: *mut ::slots::raw::RawSlotWidgetMutPtrAbstractItemDelegateEndEditHintRef, func: extern "C" fn(*mut ::libc::c_void, *mut ::widget::Widget, *const ::abstract_item_delegate::EndEditHint), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QWidget_ptr_QWidget_ptr_custom_slot(this_ptr: *mut ::slots::raw::RawSlotWidgetMutPtrWidgetMutPtr, arg0: *mut ::widget::Widget, arg1: *mut ::widget::Widget);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QWidget_ptr_QWidget_ptr_delete(this_ptr: *mut ::slots::raw::RawSlotWidgetMutPtrWidgetMutPtr);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QWidget_ptr_QWidget_ptr_new() -> *mut ::slots::raw::RawSlotWidgetMutPtrWidgetMutPtr;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QWidget_ptr_QWidget_ptr_set(this_ptr: *mut ::slots::raw::RawSlotWidgetMutPtrWidgetMutPtr, func: extern "C" fn(*mut ::libc::c_void, *mut ::widget::Widget, *mut ::widget::Widget), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QWidget_ptr_custom_slot(this_ptr: *mut ::slots::raw::RawSlotWidgetMutPtr, arg0: *mut ::widget::Widget);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QWidget_ptr_delete(this_ptr: *mut ::slots::raw::RawSlotWidgetMutPtr);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QWidget_ptr_new() -> *mut ::slots::raw::RawSlotWidgetMutPtr;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_QWidget_ptr_set(this_ptr: *mut ::slots::raw::RawSlotWidgetMutPtr, func: extern "C" fn(*mut ::libc::c_void, *mut ::widget::Widget), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_Qt_DockWidgetArea_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtDockWidgetAreaRef, arg0: *const ::qt_core::qt::DockWidgetArea);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_Qt_DockWidgetArea_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtDockWidgetAreaRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_Qt_DockWidgetArea_new() -> *mut ::slots::raw::RawSlotQtCoreQtDockWidgetAreaRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_Qt_DockWidgetArea_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtDockWidgetAreaRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::qt::DockWidgetArea), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_Qt_ToolButtonStyle_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtToolButtonStyleRef, arg0: *const ::qt_core::qt::ToolButtonStyle);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_Qt_ToolButtonStyle_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtToolButtonStyleRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_Qt_ToolButtonStyle_new() -> *mut ::slots::raw::RawSlotQtCoreQtToolButtonStyleRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_Qt_ToolButtonStyle_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtToolButtonStyleRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::qt::ToolButtonStyle), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QBrush_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtGuiBrushRef, arg0: *const ::qt_gui::brush::Brush);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QBrush_ref_delete(this_ptr: *mut ::slots::raw::RawSlotQtGuiBrushRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QBrush_ref_new() -> *mut ::slots::raw::RawSlotQtGuiBrushRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QBrush_ref_set(this_ptr: *mut ::slots::raw::RawSlotQtGuiBrushRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_gui::brush::Brush), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QColor_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtGuiColorRef, arg0: *const ::qt_gui::color::Color);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QColor_ref_delete(this_ptr: *mut ::slots::raw::RawSlotQtGuiColorRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QColor_ref_new() -> *mut ::slots::raw::RawSlotQtGuiColorRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QColor_ref_set(this_ptr: *mut ::slots::raw::RawSlotQtGuiColorRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_gui::color::Color), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QDateTime_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreDateTimeRef, arg0: *const ::qt_core::date_time::DateTime);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QDateTime_ref_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreDateTimeRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QDateTime_ref_new() -> *mut ::slots::raw::RawSlotQtCoreDateTimeRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QDateTime_ref_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreDateTimeRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::date_time::DateTime), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QDate_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreDateRef, arg0: *const ::qt_core::date::Date);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QDate_ref_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreDateRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QDate_ref_new() -> *mut ::slots::raw::RawSlotQtCoreDateRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QDate_ref_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreDateRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::date::Date), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QFont_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtGuiFontRef, arg0: *const ::qt_gui::font::Font);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QFont_ref_delete(this_ptr: *mut ::slots::raw::RawSlotQtGuiFontRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QFont_ref_new() -> *mut ::slots::raw::RawSlotQtGuiFontRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QFont_ref_set(this_ptr: *mut ::slots::raw::RawSlotQtGuiFontRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_gui::font::Font), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QIcon_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtGuiIconRef, arg0: *const ::qt_gui::icon::Icon);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QIcon_ref_delete(this_ptr: *mut ::slots::raw::RawSlotQtGuiIconRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QIcon_ref_new() -> *mut ::slots::raw::RawSlotQtGuiIconRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QIcon_ref_set(this_ptr: *mut ::slots::raw::RawSlotQtGuiIconRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_gui::icon::Icon), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QKeySequence_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtGuiKeySequenceRef, arg0: *const ::qt_gui::key_sequence::KeySequence);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QKeySequence_ref_delete(this_ptr: *mut ::slots::raw::RawSlotQtGuiKeySequenceRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QKeySequence_ref_new() -> *mut ::slots::raw::RawSlotQtGuiKeySequenceRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QKeySequence_ref_set(this_ptr: *mut ::slots::raw::RawSlotQtGuiKeySequenceRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_gui::key_sequence::KeySequence), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QList_QModelIndex_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreListListModelIndexRef, arg0: *const ::qt_core::list::ListModelIndex);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QList_QModelIndex_ref_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreListListModelIndexRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QList_QModelIndex_ref_new() -> *mut ::slots::raw::RawSlotQtCoreListListModelIndexRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QList_QModelIndex_ref_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreListListModelIndexRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::list::ListModelIndex), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QList_QRectF_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotListListQtCoreRectFRef, arg0: *const ::list::ListQtCoreRectF);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QList_QRectF_ref_delete(this_ptr: *mut ::slots::raw::RawSlotListListQtCoreRectFRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QList_QRectF_ref_new() -> *mut ::slots::raw::RawSlotListListQtCoreRectFRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QList_QRectF_ref_set(this_ptr: *mut ::slots::raw::RawSlotListListQtCoreRectFRef, func: extern "C" fn(*mut ::libc::c_void, *const ::list::ListQtCoreRectF), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QList_QUrl_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreListListUrlRef, arg0: *const ::qt_core::list::ListUrl);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QList_QUrl_ref_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreListListUrlRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QList_QUrl_ref_new() -> *mut ::slots::raw::RawSlotQtCoreListListUrlRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QList_QUrl_ref_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreListListUrlRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::list::ListUrl), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QPointF_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCorePointFRef, arg0: *const ::qt_core::point_f::PointF);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QPointF_ref_delete(this_ptr: *mut ::slots::raw::RawSlotQtCorePointFRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QPointF_ref_new() -> *mut ::slots::raw::RawSlotQtCorePointFRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QPointF_ref_set(this_ptr: *mut ::slots::raw::RawSlotQtCorePointFRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::point_f::PointF), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QPoint_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCorePointRef, arg0: *const ::qt_core::point::Point);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QPoint_ref_delete(this_ptr: *mut ::slots::raw::RawSlotQtCorePointRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QPoint_ref_new() -> *mut ::slots::raw::RawSlotQtCorePointRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QPoint_ref_set(this_ptr: *mut ::slots::raw::RawSlotQtCorePointRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::point::Point), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QRect_ref_int_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreRectRefCInt, arg0: *const ::qt_core::rect::Rect, arg1: ::libc::c_int);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QRect_ref_int_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreRectRefCInt);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QRect_ref_int_new() -> *mut ::slots::raw::RawSlotQtCoreRectRefCInt;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QRect_ref_int_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreRectRefCInt, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::rect::Rect, ::libc::c_int), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QScrollerProperties_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotScrollerPropertiesRef, arg0: *const ::scroller_properties::ScrollerProperties);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QScrollerProperties_ref_delete(this_ptr: *mut ::slots::raw::RawSlotScrollerPropertiesRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QScrollerProperties_ref_new() -> *mut ::slots::raw::RawSlotScrollerPropertiesRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QScrollerProperties_ref_set(this_ptr: *mut ::slots::raw::RawSlotScrollerPropertiesRef, func: extern "C" fn(*mut ::libc::c_void, *const ::scroller_properties::ScrollerProperties), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QStringList_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreStringListRef, arg0: *const ::qt_core::string_list::StringList);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QStringList_ref_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreStringListRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QStringList_ref_new() -> *mut ::slots::raw::RawSlotQtCoreStringListRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QStringList_ref_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreStringListRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::string_list::StringList), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_const_QString_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreStringRefQtCoreStringRefQtCoreStringRef, arg0: *const ::qt_core::string::String, arg1: *const ::qt_core::string::String, arg2: *const ::qt_core::string::String);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_const_QString_ref_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreStringRefQtCoreStringRefQtCoreStringRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_const_QString_ref_new() -> *mut ::slots::raw::RawSlotQtCoreStringRefQtCoreStringRefQtCoreStringRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_const_QString_ref_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreStringRefQtCoreStringRefQtCoreStringRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::string::String, *const ::qt_core::string::String, *const ::qt_core::string::String), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreStringRefQtCoreStringRef, arg0: *const ::qt_core::string::String, arg1: *const ::qt_core::string::String);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreStringRefQtCoreStringRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_new() -> *mut ::slots::raw::RawSlotQtCoreStringRefQtCoreStringRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreStringRefQtCoreStringRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::string::String, *const ::qt_core::string::String), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QTextCharFormat_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtGuiTextCharFormatRef, arg0: *const ::qt_gui::text_char_format::TextCharFormat);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QTextCharFormat_ref_delete(this_ptr: *mut ::slots::raw::RawSlotQtGuiTextCharFormatRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QTextCharFormat_ref_new() -> *mut ::slots::raw::RawSlotQtGuiTextCharFormatRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QTextCharFormat_ref_set(this_ptr: *mut ::slots::raw::RawSlotQtGuiTextCharFormatRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_gui::text_char_format::TextCharFormat), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QTime_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreTimeRef, arg0: *const ::qt_core::time::Time);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QTime_ref_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreTimeRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QTime_ref_new() -> *mut ::slots::raw::RawSlotQtCoreTimeRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_const_QTime_ref_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreTimeRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::time::Time), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_int_Qt_SortOrder_custom_slot(this_ptr: *mut ::slots::raw::RawSlotCIntQtCoreQtSortOrderRef, arg0: ::libc::c_int, arg1: *const ::qt_core::qt::SortOrder);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_int_Qt_SortOrder_delete(this_ptr: *mut ::slots::raw::RawSlotCIntQtCoreQtSortOrderRef);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_int_Qt_SortOrder_new() -> *mut ::slots::raw::RawSlotCIntQtCoreQtSortOrderRef;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_int_Qt_SortOrder_set(this_ptr: *mut ::slots::raw::RawSlotCIntQtCoreQtSortOrderRef, func: extern "C" fn(*mut ::libc::c_void, ::libc::c_int, *const ::qt_core::qt::SortOrder), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_int_bool_custom_slot(this_ptr: *mut ::slots::raw::RawSlotCIntBool, arg0: ::libc::c_int, arg1: bool);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_int_bool_delete(this_ptr: *mut ::slots::raw::RawSlotCIntBool);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_int_bool_new() -> *mut ::slots::raw::RawSlotCIntBool;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_int_bool_set(this_ptr: *mut ::slots::raw::RawSlotCIntBool, func: extern "C" fn(*mut ::libc::c_void, ::libc::c_int, bool), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_int_int_int_int_custom_slot(this_ptr: *mut ::slots::raw::RawSlotCIntCIntCIntCInt, arg0: ::libc::c_int, arg1: ::libc::c_int, arg2: ::libc::c_int, arg3: ::libc::c_int);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_int_int_int_int_delete(this_ptr: *mut ::slots::raw::RawSlotCIntCIntCIntCInt);
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_int_int_int_int_new() -> *mut ::slots::raw::RawSlotCIntCIntCIntCInt;
  pub fn qt_widgets_c_qt_widgets_c_SlotWrapper_int_int_int_int_set(this_ptr: *mut ::slots::raw::RawSlotCIntCIntCIntCInt, func: extern "C" fn(*mut ::libc::c_void, ::libc::c_int, ::libc::c_int, ::libc::c_int, ::libc::c_int), data: *mut ::libc::c_void);
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QAbstractButton_ptr(ptr: *mut ::slots::raw::RawSlotAbstractButtonMutPtr) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QAbstractButton_ptr_bool(ptr: *mut ::slots::raw::RawSlotAbstractButtonMutPtrBool) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QAction_ptr(ptr: *mut ::slots::raw::RawSlotActionMutPtr) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QDockWidget_ptr(ptr: *mut ::slots::raw::RawSlotDockWidgetMutPtr) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QFlags_QGraphicsBlurEffect_BlurHint(ptr: *mut ::slots::raw::RawSlotQtCoreFlagsGraphicsBlurEffectBlurHint) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr(ptr: *mut ::slots::raw::RawSlotGraphicsItemMutPtr) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr(ptr: *mut ::slots::raw::RawSlotGraphicsItemMutPtrGraphicsItemMutPtr) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason(ptr: *mut ::slots::raw::RawSlotGraphicsItemMutPtrGraphicsItemMutPtrQtCoreQtFocusReasonRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QListWidgetItem_ptr(ptr: *mut ::slots::raw::RawSlotListWidgetItemMutPtr) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_QListWidgetItem_ptr(ptr: *mut ::slots::raw::RawSlotListWidgetItemMutPtrListWidgetItemMutPtr) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QMdiSubWindow_ptr(ptr: *mut ::slots::raw::RawSlotMdiSubWindowMutPtr) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QRect(ptr: *mut ::slots::raw::RawSlotQtCoreRectRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QRect_QPointF(ptr: *mut ::slots::raw::RawSlotQtCoreRectRefQtCorePointFRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QRect_QPointF_QPointF(ptr: *mut ::slots::raw::RawSlotQtCoreRectRefQtCorePointFRefQtCorePointFRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QScroller_State(ptr: *mut ::slots::raw::RawSlotScrollerStateRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QSystemTrayIcon_ActivationReason(ptr: *mut ::slots::raw::RawSlotSystemTrayIconActivationReasonRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr(ptr: *mut ::slots::raw::RawSlotTableWidgetItemMutPtr) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr(ptr: *mut ::slots::raw::RawSlotTableWidgetItemMutPtrTableWidgetItemMutPtr) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr(ptr: *mut ::slots::raw::RawSlotTreeWidgetItemMutPtr) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr(ptr: *mut ::slots::raw::RawSlotTreeWidgetItemMutPtrTreeWidgetItemMutPtr) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_int(ptr: *mut ::slots::raw::RawSlotTreeWidgetItemMutPtrCInt) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QUndoStack_ptr(ptr: *mut ::slots::raw::RawSlotUndoStackMutPtr) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QWidget_ptr(ptr: *mut ::slots::raw::RawSlotWidgetMutPtr) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint(ptr: *mut ::slots::raw::RawSlotWidgetMutPtrAbstractItemDelegateEndEditHintRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QWidget_ptr_QWidget_ptr(ptr: *mut ::slots::raw::RawSlotWidgetMutPtrWidgetMutPtr) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_Qt_DockWidgetArea(ptr: *mut ::slots::raw::RawSlotQtCoreQtDockWidgetAreaRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_Qt_ToolButtonStyle(ptr: *mut ::slots::raw::RawSlotQtCoreQtToolButtonStyleRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QBrush_ref(ptr: *mut ::slots::raw::RawSlotQtGuiBrushRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QColor_ref(ptr: *mut ::slots::raw::RawSlotQtGuiColorRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QDateTime_ref(ptr: *mut ::slots::raw::RawSlotQtCoreDateTimeRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QDate_ref(ptr: *mut ::slots::raw::RawSlotQtCoreDateRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QFont_ref(ptr: *mut ::slots::raw::RawSlotQtGuiFontRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QIcon_ref(ptr: *mut ::slots::raw::RawSlotQtGuiIconRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QKeySequence_ref(ptr: *mut ::slots::raw::RawSlotQtGuiKeySequenceRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QList_QModelIndex_ref(ptr: *mut ::slots::raw::RawSlotQtCoreListListModelIndexRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QList_QRectF_ref(ptr: *mut ::slots::raw::RawSlotListListQtCoreRectFRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QList_QUrl_ref(ptr: *mut ::slots::raw::RawSlotQtCoreListListUrlRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QPointF_ref(ptr: *mut ::slots::raw::RawSlotQtCorePointFRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QPoint_ref(ptr: *mut ::slots::raw::RawSlotQtCorePointRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QRect_ref_int(ptr: *mut ::slots::raw::RawSlotQtCoreRectRefCInt) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QScrollerProperties_ref(ptr: *mut ::slots::raw::RawSlotScrollerPropertiesRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QStringList_ref(ptr: *mut ::slots::raw::RawSlotQtCoreStringListRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref(ptr: *mut ::slots::raw::RawSlotQtCoreStringRefQtCoreStringRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_const_QString_ref(ptr: *mut ::slots::raw::RawSlotQtCoreStringRefQtCoreStringRefQtCoreStringRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QTextCharFormat_ref(ptr: *mut ::slots::raw::RawSlotQtGuiTextCharFormatRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QTime_ref(ptr: *mut ::slots::raw::RawSlotQtCoreTimeRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_int_Qt_SortOrder(ptr: *mut ::slots::raw::RawSlotCIntQtCoreQtSortOrderRef) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_int_bool(ptr: *mut ::slots::raw::RawSlotCIntBool) -> *mut ::qt_core::object::Object;
  pub fn qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_int_int_int_int(ptr: *mut ::slots::raw::RawSlotCIntCIntCIntCInt) -> *mut ::qt_core::object::Object;

}
