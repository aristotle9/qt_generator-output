#ifndef QT_WIDGETS_C_SLOTS_H
#define QT_WIDGETS_C_SLOTS_H

#include "qt_widgets_c_global.h"

// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QScroller_State : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QScroller_State() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QScroller::State*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QScroller::State arg0) {
    if (m_func) {
      m_func(m_data, new QScroller::State(arg0));
    }
  }

private:
  void (*m_func)(void*, const QScroller::State*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QWidget*, const QAbstractItemDelegate::EndEditHint*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QWidget* arg0, QAbstractItemDelegate::EndEditHint arg1) {
    if (m_func) {
      m_func(m_data, arg0, new QAbstractItemDelegate::EndEditHint(arg1));
    }
  }

private:
  void (*m_func)(void*, QWidget*, const QAbstractItemDelegate::EndEditHint*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QString*, const QString*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QString& arg0, const QString& arg1) {
    if (m_func) {
      m_func(m_data, &arg0, &arg1);
    }
  }

private:
  void (*m_func)(void*, const QString*, const QString*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_const_QList_QUrl_ref : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_const_QList_QUrl_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QList< QUrl >*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QList< QUrl >& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QList< QUrl >*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_const_QIcon_ref : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_const_QIcon_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QIcon*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QIcon& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QIcon*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_int_bool : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_int_bool() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, int, bool), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(int arg0, bool arg1) {
    if (m_func) {
      m_func(m_data, arg0, arg1);
    }
  }

private:
  void (*m_func)(void*, int, bool);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_const_QTextCharFormat_ref : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_const_QTextCharFormat_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QTextCharFormat*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QTextCharFormat& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QTextCharFormat*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QWidget_ptr : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QWidget_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QWidget*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QWidget* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, QWidget*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_int_int_int_int : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_int_int_int_int() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, int, int, int, int), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(int arg0, int arg1, int arg2, int arg3) {
    if (m_func) {
      m_func(m_data, arg0, arg1, arg2, arg3);
    }
  }

private:
  void (*m_func)(void*, int, int, int, int);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_const_QTime_ref : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_const_QTime_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QTime*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QTime& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QTime*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_const_QPointF_ref : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_const_QPointF_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QPointF*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QPointF& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QPointF*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_const_QList_QModelIndex_ref : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_const_QList_QModelIndex_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QList< QModelIndex >*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QList< QModelIndex >& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QList< QModelIndex >*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_const_QScrollerProperties_ref : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_const_QScrollerProperties_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QScrollerProperties*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QScrollerProperties& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QScrollerProperties*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QListWidgetItem_ptr : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QListWidgetItem_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QListWidgetItem*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QListWidgetItem* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, QListWidgetItem*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QDockWidget_ptr : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QDockWidget_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QDockWidget*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QDockWidget* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, QDockWidget*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_const_QStringList_ref : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_const_QStringList_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QStringList*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QStringList& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QStringList*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QGraphicsItem_ptr : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QGraphicsItem_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QGraphicsItem*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QGraphicsItem* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, QGraphicsItem*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QGraphicsItem*, QGraphicsItem*, const Qt::FocusReason*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QGraphicsItem* arg0, QGraphicsItem* arg1, Qt::FocusReason arg2) {
    if (m_func) {
      m_func(m_data, arg0, arg1, new Qt::FocusReason(arg2));
    }
  }

private:
  void (*m_func)(void*, QGraphicsItem*, QGraphicsItem*, const Qt::FocusReason*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QWidget_ptr_QWidget_ptr : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QWidget_ptr_QWidget_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QWidget*, QWidget*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QWidget* arg0, QWidget* arg1) {
    if (m_func) {
      m_func(m_data, arg0, arg1);
    }
  }

private:
  void (*m_func)(void*, QWidget*, QWidget*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_const_QFont_ref : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_const_QFont_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QFont*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QFont& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QFont*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QAbstractButton_ptr : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QAbstractButton_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QAbstractButton*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QAbstractButton* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, QAbstractButton*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_const_QDate_ref : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_const_QDate_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QDate*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QDate& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QDate*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QRect_QPointF_QPointF : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QRect_QPointF_QPointF() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QRect*, const QPointF*, const QPointF*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QRect arg0, QPointF arg1, QPointF arg2) {
    if (m_func) {
      m_func(m_data, new QRect(arg0), new QPointF(arg1), new QPointF(arg2));
    }
  }

private:
  void (*m_func)(void*, const QRect*, const QPointF*, const QPointF*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_int_Qt_SortOrder : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_int_Qt_SortOrder() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, int, const Qt::SortOrder*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(int arg0, Qt::SortOrder arg1) {
    if (m_func) {
      m_func(m_data, arg0, new Qt::SortOrder(arg1));
    }
  }

private:
  void (*m_func)(void*, int, const Qt::SortOrder*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QRect : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QRect() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QRect*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QRect arg0) {
    if (m_func) {
      m_func(m_data, new QRect(arg0));
    }
  }

private:
  void (*m_func)(void*, const QRect*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_Qt_ToolButtonStyle : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_Qt_ToolButtonStyle() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const Qt::ToolButtonStyle*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt::ToolButtonStyle arg0) {
    if (m_func) {
      m_func(m_data, new Qt::ToolButtonStyle(arg0));
    }
  }

private:
  void (*m_func)(void*, const Qt::ToolButtonStyle*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_const_QList_QRectF_ref : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_const_QList_QRectF_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QList< QRectF >*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QList< QRectF >& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QList< QRectF >*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QUndoStack_ptr : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QUndoStack_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QUndoStack*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QUndoStack* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, QUndoStack*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QMdiSubWindow_ptr : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QMdiSubWindow_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QMdiSubWindow*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QMdiSubWindow* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, QMdiSubWindow*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QAbstractButton_ptr_bool : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QAbstractButton_ptr_bool() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QAbstractButton*, bool), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QAbstractButton* arg0, bool arg1) {
    if (m_func) {
      m_func(m_data, arg0, arg1);
    }
  }

private:
  void (*m_func)(void*, QAbstractButton*, bool);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_QListWidgetItem_ptr : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_QListWidgetItem_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QListWidgetItem*, QListWidgetItem*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QListWidgetItem* arg0, QListWidgetItem* arg1) {
    if (m_func) {
      m_func(m_data, arg0, arg1);
    }
  }

private:
  void (*m_func)(void*, QListWidgetItem*, QListWidgetItem*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_const_QBrush_ref : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_const_QBrush_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QBrush*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QBrush& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QBrush*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QSystemTrayIcon_ActivationReason : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QSystemTrayIcon_ActivationReason() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QSystemTrayIcon::ActivationReason*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QSystemTrayIcon::ActivationReason arg0) {
    if (m_func) {
      m_func(m_data, new QSystemTrayIcon::ActivationReason(arg0));
    }
  }

private:
  void (*m_func)(void*, const QSystemTrayIcon::ActivationReason*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_const_QString_ref : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_const_QString_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QString*, const QString*, const QString*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QString& arg0, const QString& arg1, const QString& arg2) {
    if (m_func) {
      m_func(m_data, &arg0, &arg1, &arg2);
    }
  }

private:
  void (*m_func)(void*, const QString*, const QString*, const QString*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QTableWidgetItem*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QTableWidgetItem* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, QTableWidgetItem*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QTreeWidgetItem*, QTreeWidgetItem*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QTreeWidgetItem* arg0, QTreeWidgetItem* arg1) {
    if (m_func) {
      m_func(m_data, arg0, arg1);
    }
  }

private:
  void (*m_func)(void*, QTreeWidgetItem*, QTreeWidgetItem*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QTableWidgetItem*, QTableWidgetItem*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QTableWidgetItem* arg0, QTableWidgetItem* arg1) {
    if (m_func) {
      m_func(m_data, arg0, arg1);
    }
  }

private:
  void (*m_func)(void*, QTableWidgetItem*, QTableWidgetItem*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_const_QRect_ref_int : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_const_QRect_ref_int() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QRect*, int), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QRect& arg0, int arg1) {
    if (m_func) {
      m_func(m_data, &arg0, arg1);
    }
  }

private:
  void (*m_func)(void*, const QRect*, int);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_const_QPoint_ref : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_const_QPoint_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QPoint*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QPoint& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QPoint*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QRect_QPointF : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QRect_QPointF() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QRect*, const QPointF*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QRect arg0, QPointF arg1) {
    if (m_func) {
      m_func(m_data, new QRect(arg0), new QPointF(arg1));
    }
  }

private:
  void (*m_func)(void*, const QRect*, const QPointF*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QTreeWidgetItem*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QTreeWidgetItem* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, QTreeWidgetItem*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_const_QDateTime_ref : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_const_QDateTime_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QDateTime*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QDateTime& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QDateTime*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QGraphicsItem*, QGraphicsItem*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QGraphicsItem* arg0, QGraphicsItem* arg1) {
    if (m_func) {
      m_func(m_data, arg0, arg1);
    }
  }

private:
  void (*m_func)(void*, QGraphicsItem*, QGraphicsItem*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_const_QColor_ref : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_const_QColor_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QColor*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QColor& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QColor*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_Qt_DockWidgetArea : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_Qt_DockWidgetArea() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const Qt::DockWidgetArea*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt::DockWidgetArea arg0) {
    if (m_func) {
      m_func(m_data, new Qt::DockWidgetArea(arg0));
    }
  }

private:
  void (*m_func)(void*, const Qt::DockWidgetArea*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_int : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_int() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QTreeWidgetItem*, int), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QTreeWidgetItem* arg0, int arg1) {
    if (m_func) {
      m_func(m_data, arg0, arg1);
    }
  }

private:
  void (*m_func)(void*, QTreeWidgetItem*, int);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_const_QKeySequence_ref : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_const_QKeySequence_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QKeySequence*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QKeySequence& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QKeySequence*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QAction_ptr : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QAction_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QAction*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QAction* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, QAction*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_widgets_c_SlotWrapper_QFlags_QGraphicsBlurEffect_BlurHint : public QObject {
  Q_OBJECT
public:
  qt_widgets_c_SlotWrapper_QFlags_QGraphicsBlurEffect_BlurHint() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, unsigned int), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QFlags< QGraphicsBlurEffect::BlurHint > arg0) {
    if (m_func) {
      m_func(m_data, uint(arg0));
    }
  }

private:
  void (*m_func)(void*, unsigned int);
  void* m_data;
};
extern "C" {

QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QAbstractButton_ptr_bool_custom_slot(qt_widgets_c_SlotWrapper_QAbstractButton_ptr_bool* this_ptr, QAbstractButton* arg0, bool arg1);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QAbstractButton_ptr_bool_delete(qt_widgets_c_SlotWrapper_QAbstractButton_ptr_bool* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QAbstractButton_ptr_bool* qt_widgets_c_qt_widgets_c_SlotWrapper_QAbstractButton_ptr_bool_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QAbstractButton_ptr_bool_set(qt_widgets_c_SlotWrapper_QAbstractButton_ptr_bool* this_ptr, void (*func)(void*, QAbstractButton*, bool), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QAbstractButton_ptr_custom_slot(qt_widgets_c_SlotWrapper_QAbstractButton_ptr* this_ptr, QAbstractButton* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QAbstractButton_ptr_delete(qt_widgets_c_SlotWrapper_QAbstractButton_ptr* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QAbstractButton_ptr* qt_widgets_c_qt_widgets_c_SlotWrapper_QAbstractButton_ptr_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QAbstractButton_ptr_set(qt_widgets_c_SlotWrapper_QAbstractButton_ptr* this_ptr, void (*func)(void*, QAbstractButton*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QAction_ptr_custom_slot(qt_widgets_c_SlotWrapper_QAction_ptr* this_ptr, QAction* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QAction_ptr_delete(qt_widgets_c_SlotWrapper_QAction_ptr* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QAction_ptr* qt_widgets_c_qt_widgets_c_SlotWrapper_QAction_ptr_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QAction_ptr_set(qt_widgets_c_SlotWrapper_QAction_ptr* this_ptr, void (*func)(void*, QAction*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QDockWidget_ptr_custom_slot(qt_widgets_c_SlotWrapper_QDockWidget_ptr* this_ptr, QDockWidget* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QDockWidget_ptr_delete(qt_widgets_c_SlotWrapper_QDockWidget_ptr* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QDockWidget_ptr* qt_widgets_c_qt_widgets_c_SlotWrapper_QDockWidget_ptr_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QDockWidget_ptr_set(qt_widgets_c_SlotWrapper_QDockWidget_ptr* this_ptr, void (*func)(void*, QDockWidget*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QFlags_QGraphicsBlurEffect_BlurHint_custom_slot(qt_widgets_c_SlotWrapper_QFlags_QGraphicsBlurEffect_BlurHint* this_ptr, unsigned int arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QFlags_QGraphicsBlurEffect_BlurHint_delete(qt_widgets_c_SlotWrapper_QFlags_QGraphicsBlurEffect_BlurHint* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QFlags_QGraphicsBlurEffect_BlurHint* qt_widgets_c_qt_widgets_c_SlotWrapper_QFlags_QGraphicsBlurEffect_BlurHint_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QFlags_QGraphicsBlurEffect_BlurHint_set(qt_widgets_c_SlotWrapper_QFlags_QGraphicsBlurEffect_BlurHint* this_ptr, void (*func)(void*, unsigned int), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_custom_slot(qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason* this_ptr, QGraphicsItem* arg0, QGraphicsItem* arg1, const Qt::FocusReason* arg2);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_delete(qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason* qt_widgets_c_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason_set(qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason* this_ptr, void (*func)(void*, QGraphicsItem*, QGraphicsItem*, const Qt::FocusReason*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_custom_slot(qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr* this_ptr, QGraphicsItem* arg0, QGraphicsItem* arg1);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_delete(qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr* qt_widgets_c_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_set(qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr* this_ptr, void (*func)(void*, QGraphicsItem*, QGraphicsItem*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_custom_slot(qt_widgets_c_SlotWrapper_QGraphicsItem_ptr* this_ptr, QGraphicsItem* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_delete(qt_widgets_c_SlotWrapper_QGraphicsItem_ptr* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QGraphicsItem_ptr* qt_widgets_c_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_set(qt_widgets_c_SlotWrapper_QGraphicsItem_ptr* this_ptr, void (*func)(void*, QGraphicsItem*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_custom_slot(qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_QListWidgetItem_ptr* this_ptr, QListWidgetItem* arg0, QListWidgetItem* arg1);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_delete(qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_QListWidgetItem_ptr* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_QListWidgetItem_ptr* qt_widgets_c_qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_QListWidgetItem_ptr_set(qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_QListWidgetItem_ptr* this_ptr, void (*func)(void*, QListWidgetItem*, QListWidgetItem*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_custom_slot(qt_widgets_c_SlotWrapper_QListWidgetItem_ptr* this_ptr, QListWidgetItem* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_delete(qt_widgets_c_SlotWrapper_QListWidgetItem_ptr* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QListWidgetItem_ptr* qt_widgets_c_qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_set(qt_widgets_c_SlotWrapper_QListWidgetItem_ptr* this_ptr, void (*func)(void*, QListWidgetItem*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QMdiSubWindow_ptr_custom_slot(qt_widgets_c_SlotWrapper_QMdiSubWindow_ptr* this_ptr, QMdiSubWindow* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QMdiSubWindow_ptr_delete(qt_widgets_c_SlotWrapper_QMdiSubWindow_ptr* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QMdiSubWindow_ptr* qt_widgets_c_qt_widgets_c_SlotWrapper_QMdiSubWindow_ptr_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QMdiSubWindow_ptr_set(qt_widgets_c_SlotWrapper_QMdiSubWindow_ptr* this_ptr, void (*func)(void*, QMdiSubWindow*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QRect_QPointF_QPointF_custom_slot(qt_widgets_c_SlotWrapper_QRect_QPointF_QPointF* this_ptr, const QRect* arg0, const QPointF* arg1, const QPointF* arg2);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QRect_QPointF_QPointF_delete(qt_widgets_c_SlotWrapper_QRect_QPointF_QPointF* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QRect_QPointF_QPointF* qt_widgets_c_qt_widgets_c_SlotWrapper_QRect_QPointF_QPointF_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QRect_QPointF_QPointF_set(qt_widgets_c_SlotWrapper_QRect_QPointF_QPointF* this_ptr, void (*func)(void*, const QRect*, const QPointF*, const QPointF*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QRect_QPointF_custom_slot(qt_widgets_c_SlotWrapper_QRect_QPointF* this_ptr, const QRect* arg0, const QPointF* arg1);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QRect_QPointF_delete(qt_widgets_c_SlotWrapper_QRect_QPointF* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QRect_QPointF* qt_widgets_c_qt_widgets_c_SlotWrapper_QRect_QPointF_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QRect_QPointF_set(qt_widgets_c_SlotWrapper_QRect_QPointF* this_ptr, void (*func)(void*, const QRect*, const QPointF*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QRect_custom_slot(qt_widgets_c_SlotWrapper_QRect* this_ptr, const QRect* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QRect_delete(qt_widgets_c_SlotWrapper_QRect* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QRect* qt_widgets_c_qt_widgets_c_SlotWrapper_QRect_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QRect_set(qt_widgets_c_SlotWrapper_QRect* this_ptr, void (*func)(void*, const QRect*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QScroller_State_custom_slot(qt_widgets_c_SlotWrapper_QScroller_State* this_ptr, const QScroller::State* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QScroller_State_delete(qt_widgets_c_SlotWrapper_QScroller_State* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QScroller_State* qt_widgets_c_qt_widgets_c_SlotWrapper_QScroller_State_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QScroller_State_set(qt_widgets_c_SlotWrapper_QScroller_State* this_ptr, void (*func)(void*, const QScroller::State*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QSystemTrayIcon_ActivationReason_custom_slot(qt_widgets_c_SlotWrapper_QSystemTrayIcon_ActivationReason* this_ptr, const QSystemTrayIcon::ActivationReason* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QSystemTrayIcon_ActivationReason_delete(qt_widgets_c_SlotWrapper_QSystemTrayIcon_ActivationReason* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QSystemTrayIcon_ActivationReason* qt_widgets_c_qt_widgets_c_SlotWrapper_QSystemTrayIcon_ActivationReason_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QSystemTrayIcon_ActivationReason_set(qt_widgets_c_SlotWrapper_QSystemTrayIcon_ActivationReason* this_ptr, void (*func)(void*, const QSystemTrayIcon::ActivationReason*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_custom_slot(qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr* this_ptr, QTableWidgetItem* arg0, QTableWidgetItem* arg1);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_delete(qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr* qt_widgets_c_qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr_set(qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr* this_ptr, void (*func)(void*, QTableWidgetItem*, QTableWidgetItem*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_custom_slot(qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr* this_ptr, QTableWidgetItem* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_delete(qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr* qt_widgets_c_qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_set(qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr* this_ptr, void (*func)(void*, QTableWidgetItem*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_custom_slot(qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr* this_ptr, QTreeWidgetItem* arg0, QTreeWidgetItem* arg1);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_delete(qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr* qt_widgets_c_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr_set(qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr* this_ptr, void (*func)(void*, QTreeWidgetItem*, QTreeWidgetItem*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_custom_slot(qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr* this_ptr, QTreeWidgetItem* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_delete(qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr* this_ptr);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_int_custom_slot(qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_int* this_ptr, QTreeWidgetItem* arg0, int arg1);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_int_delete(qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_int* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_int* qt_widgets_c_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_int_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_int_set(qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_int* this_ptr, void (*func)(void*, QTreeWidgetItem*, int), void* data);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr* qt_widgets_c_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_set(qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr* this_ptr, void (*func)(void*, QTreeWidgetItem*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QUndoStack_ptr_custom_slot(qt_widgets_c_SlotWrapper_QUndoStack_ptr* this_ptr, QUndoStack* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QUndoStack_ptr_delete(qt_widgets_c_SlotWrapper_QUndoStack_ptr* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QUndoStack_ptr* qt_widgets_c_qt_widgets_c_SlotWrapper_QUndoStack_ptr_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QUndoStack_ptr_set(qt_widgets_c_SlotWrapper_QUndoStack_ptr* this_ptr, void (*func)(void*, QUndoStack*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_custom_slot(qt_widgets_c_SlotWrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint* this_ptr, QWidget* arg0, const QAbstractItemDelegate::EndEditHint* arg1);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_delete(qt_widgets_c_SlotWrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint* qt_widgets_c_qt_widgets_c_SlotWrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint_set(qt_widgets_c_SlotWrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint* this_ptr, void (*func)(void*, QWidget*, const QAbstractItemDelegate::EndEditHint*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QWidget_ptr_QWidget_ptr_custom_slot(qt_widgets_c_SlotWrapper_QWidget_ptr_QWidget_ptr* this_ptr, QWidget* arg0, QWidget* arg1);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QWidget_ptr_QWidget_ptr_delete(qt_widgets_c_SlotWrapper_QWidget_ptr_QWidget_ptr* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QWidget_ptr_QWidget_ptr* qt_widgets_c_qt_widgets_c_SlotWrapper_QWidget_ptr_QWidget_ptr_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QWidget_ptr_QWidget_ptr_set(qt_widgets_c_SlotWrapper_QWidget_ptr_QWidget_ptr* this_ptr, void (*func)(void*, QWidget*, QWidget*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QWidget_ptr_custom_slot(qt_widgets_c_SlotWrapper_QWidget_ptr* this_ptr, QWidget* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QWidget_ptr_delete(qt_widgets_c_SlotWrapper_QWidget_ptr* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_QWidget_ptr* qt_widgets_c_qt_widgets_c_SlotWrapper_QWidget_ptr_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_QWidget_ptr_set(qt_widgets_c_SlotWrapper_QWidget_ptr* this_ptr, void (*func)(void*, QWidget*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_Qt_DockWidgetArea_custom_slot(qt_widgets_c_SlotWrapper_Qt_DockWidgetArea* this_ptr, const Qt::DockWidgetArea* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_Qt_DockWidgetArea_delete(qt_widgets_c_SlotWrapper_Qt_DockWidgetArea* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_Qt_DockWidgetArea* qt_widgets_c_qt_widgets_c_SlotWrapper_Qt_DockWidgetArea_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_Qt_DockWidgetArea_set(qt_widgets_c_SlotWrapper_Qt_DockWidgetArea* this_ptr, void (*func)(void*, const Qt::DockWidgetArea*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_Qt_ToolButtonStyle_custom_slot(qt_widgets_c_SlotWrapper_Qt_ToolButtonStyle* this_ptr, const Qt::ToolButtonStyle* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_Qt_ToolButtonStyle_delete(qt_widgets_c_SlotWrapper_Qt_ToolButtonStyle* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_Qt_ToolButtonStyle* qt_widgets_c_qt_widgets_c_SlotWrapper_Qt_ToolButtonStyle_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_Qt_ToolButtonStyle_set(qt_widgets_c_SlotWrapper_Qt_ToolButtonStyle* this_ptr, void (*func)(void*, const Qt::ToolButtonStyle*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QBrush_ref_custom_slot(qt_widgets_c_SlotWrapper_const_QBrush_ref* this_ptr, const QBrush* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QBrush_ref_delete(qt_widgets_c_SlotWrapper_const_QBrush_ref* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_const_QBrush_ref* qt_widgets_c_qt_widgets_c_SlotWrapper_const_QBrush_ref_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QBrush_ref_set(qt_widgets_c_SlotWrapper_const_QBrush_ref* this_ptr, void (*func)(void*, const QBrush*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QColor_ref_custom_slot(qt_widgets_c_SlotWrapper_const_QColor_ref* this_ptr, const QColor* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QColor_ref_delete(qt_widgets_c_SlotWrapper_const_QColor_ref* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_const_QColor_ref* qt_widgets_c_qt_widgets_c_SlotWrapper_const_QColor_ref_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QColor_ref_set(qt_widgets_c_SlotWrapper_const_QColor_ref* this_ptr, void (*func)(void*, const QColor*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QDateTime_ref_custom_slot(qt_widgets_c_SlotWrapper_const_QDateTime_ref* this_ptr, const QDateTime* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QDateTime_ref_delete(qt_widgets_c_SlotWrapper_const_QDateTime_ref* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_const_QDateTime_ref* qt_widgets_c_qt_widgets_c_SlotWrapper_const_QDateTime_ref_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QDateTime_ref_set(qt_widgets_c_SlotWrapper_const_QDateTime_ref* this_ptr, void (*func)(void*, const QDateTime*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QDate_ref_custom_slot(qt_widgets_c_SlotWrapper_const_QDate_ref* this_ptr, const QDate* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QDate_ref_delete(qt_widgets_c_SlotWrapper_const_QDate_ref* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_const_QDate_ref* qt_widgets_c_qt_widgets_c_SlotWrapper_const_QDate_ref_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QDate_ref_set(qt_widgets_c_SlotWrapper_const_QDate_ref* this_ptr, void (*func)(void*, const QDate*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QFont_ref_custom_slot(qt_widgets_c_SlotWrapper_const_QFont_ref* this_ptr, const QFont* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QFont_ref_delete(qt_widgets_c_SlotWrapper_const_QFont_ref* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_const_QFont_ref* qt_widgets_c_qt_widgets_c_SlotWrapper_const_QFont_ref_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QFont_ref_set(qt_widgets_c_SlotWrapper_const_QFont_ref* this_ptr, void (*func)(void*, const QFont*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QIcon_ref_custom_slot(qt_widgets_c_SlotWrapper_const_QIcon_ref* this_ptr, const QIcon* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QIcon_ref_delete(qt_widgets_c_SlotWrapper_const_QIcon_ref* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_const_QIcon_ref* qt_widgets_c_qt_widgets_c_SlotWrapper_const_QIcon_ref_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QIcon_ref_set(qt_widgets_c_SlotWrapper_const_QIcon_ref* this_ptr, void (*func)(void*, const QIcon*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QKeySequence_ref_custom_slot(qt_widgets_c_SlotWrapper_const_QKeySequence_ref* this_ptr, const QKeySequence* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QKeySequence_ref_delete(qt_widgets_c_SlotWrapper_const_QKeySequence_ref* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_const_QKeySequence_ref* qt_widgets_c_qt_widgets_c_SlotWrapper_const_QKeySequence_ref_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QKeySequence_ref_set(qt_widgets_c_SlotWrapper_const_QKeySequence_ref* this_ptr, void (*func)(void*, const QKeySequence*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QList_QModelIndex_ref_custom_slot(qt_widgets_c_SlotWrapper_const_QList_QModelIndex_ref* this_ptr, const QList< QModelIndex >* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QList_QModelIndex_ref_delete(qt_widgets_c_SlotWrapper_const_QList_QModelIndex_ref* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_const_QList_QModelIndex_ref* qt_widgets_c_qt_widgets_c_SlotWrapper_const_QList_QModelIndex_ref_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QList_QModelIndex_ref_set(qt_widgets_c_SlotWrapper_const_QList_QModelIndex_ref* this_ptr, void (*func)(void*, const QList< QModelIndex >*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QList_QRectF_ref_custom_slot(qt_widgets_c_SlotWrapper_const_QList_QRectF_ref* this_ptr, const QList< QRectF >* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QList_QRectF_ref_delete(qt_widgets_c_SlotWrapper_const_QList_QRectF_ref* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_const_QList_QRectF_ref* qt_widgets_c_qt_widgets_c_SlotWrapper_const_QList_QRectF_ref_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QList_QRectF_ref_set(qt_widgets_c_SlotWrapper_const_QList_QRectF_ref* this_ptr, void (*func)(void*, const QList< QRectF >*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QList_QUrl_ref_custom_slot(qt_widgets_c_SlotWrapper_const_QList_QUrl_ref* this_ptr, const QList< QUrl >* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QList_QUrl_ref_delete(qt_widgets_c_SlotWrapper_const_QList_QUrl_ref* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_const_QList_QUrl_ref* qt_widgets_c_qt_widgets_c_SlotWrapper_const_QList_QUrl_ref_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QList_QUrl_ref_set(qt_widgets_c_SlotWrapper_const_QList_QUrl_ref* this_ptr, void (*func)(void*, const QList< QUrl >*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QPointF_ref_custom_slot(qt_widgets_c_SlotWrapper_const_QPointF_ref* this_ptr, const QPointF* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QPointF_ref_delete(qt_widgets_c_SlotWrapper_const_QPointF_ref* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_const_QPointF_ref* qt_widgets_c_qt_widgets_c_SlotWrapper_const_QPointF_ref_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QPointF_ref_set(qt_widgets_c_SlotWrapper_const_QPointF_ref* this_ptr, void (*func)(void*, const QPointF*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QPoint_ref_custom_slot(qt_widgets_c_SlotWrapper_const_QPoint_ref* this_ptr, const QPoint* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QPoint_ref_delete(qt_widgets_c_SlotWrapper_const_QPoint_ref* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_const_QPoint_ref* qt_widgets_c_qt_widgets_c_SlotWrapper_const_QPoint_ref_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QPoint_ref_set(qt_widgets_c_SlotWrapper_const_QPoint_ref* this_ptr, void (*func)(void*, const QPoint*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QRect_ref_int_custom_slot(qt_widgets_c_SlotWrapper_const_QRect_ref_int* this_ptr, const QRect* arg0, int arg1);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QRect_ref_int_delete(qt_widgets_c_SlotWrapper_const_QRect_ref_int* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_const_QRect_ref_int* qt_widgets_c_qt_widgets_c_SlotWrapper_const_QRect_ref_int_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QRect_ref_int_set(qt_widgets_c_SlotWrapper_const_QRect_ref_int* this_ptr, void (*func)(void*, const QRect*, int), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QScrollerProperties_ref_custom_slot(qt_widgets_c_SlotWrapper_const_QScrollerProperties_ref* this_ptr, const QScrollerProperties* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QScrollerProperties_ref_delete(qt_widgets_c_SlotWrapper_const_QScrollerProperties_ref* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_const_QScrollerProperties_ref* qt_widgets_c_qt_widgets_c_SlotWrapper_const_QScrollerProperties_ref_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QScrollerProperties_ref_set(qt_widgets_c_SlotWrapper_const_QScrollerProperties_ref* this_ptr, void (*func)(void*, const QScrollerProperties*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QStringList_ref_custom_slot(qt_widgets_c_SlotWrapper_const_QStringList_ref* this_ptr, const QStringList* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QStringList_ref_delete(qt_widgets_c_SlotWrapper_const_QStringList_ref* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_const_QStringList_ref* qt_widgets_c_qt_widgets_c_SlotWrapper_const_QStringList_ref_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QStringList_ref_set(qt_widgets_c_SlotWrapper_const_QStringList_ref* this_ptr, void (*func)(void*, const QStringList*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_const_QString_ref_custom_slot(qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_const_QString_ref* this_ptr, const QString* arg0, const QString* arg1, const QString* arg2);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_const_QString_ref_delete(qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_const_QString_ref* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_const_QString_ref* qt_widgets_c_qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_const_QString_ref_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_const_QString_ref_set(qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_const_QString_ref* this_ptr, void (*func)(void*, const QString*, const QString*, const QString*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_custom_slot(qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref* this_ptr, const QString* arg0, const QString* arg1);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_delete(qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref* qt_widgets_c_qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_set(qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref* this_ptr, void (*func)(void*, const QString*, const QString*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QTextCharFormat_ref_custom_slot(qt_widgets_c_SlotWrapper_const_QTextCharFormat_ref* this_ptr, const QTextCharFormat* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QTextCharFormat_ref_delete(qt_widgets_c_SlotWrapper_const_QTextCharFormat_ref* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_const_QTextCharFormat_ref* qt_widgets_c_qt_widgets_c_SlotWrapper_const_QTextCharFormat_ref_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QTextCharFormat_ref_set(qt_widgets_c_SlotWrapper_const_QTextCharFormat_ref* this_ptr, void (*func)(void*, const QTextCharFormat*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QTime_ref_custom_slot(qt_widgets_c_SlotWrapper_const_QTime_ref* this_ptr, const QTime* arg0);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QTime_ref_delete(qt_widgets_c_SlotWrapper_const_QTime_ref* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_const_QTime_ref* qt_widgets_c_qt_widgets_c_SlotWrapper_const_QTime_ref_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_const_QTime_ref_set(qt_widgets_c_SlotWrapper_const_QTime_ref* this_ptr, void (*func)(void*, const QTime*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_int_Qt_SortOrder_custom_slot(qt_widgets_c_SlotWrapper_int_Qt_SortOrder* this_ptr, int arg0, const Qt::SortOrder* arg1);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_int_Qt_SortOrder_delete(qt_widgets_c_SlotWrapper_int_Qt_SortOrder* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_int_Qt_SortOrder* qt_widgets_c_qt_widgets_c_SlotWrapper_int_Qt_SortOrder_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_int_Qt_SortOrder_set(qt_widgets_c_SlotWrapper_int_Qt_SortOrder* this_ptr, void (*func)(void*, int, const Qt::SortOrder*), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_int_bool_custom_slot(qt_widgets_c_SlotWrapper_int_bool* this_ptr, int arg0, bool arg1);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_int_bool_delete(qt_widgets_c_SlotWrapper_int_bool* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_int_bool* qt_widgets_c_qt_widgets_c_SlotWrapper_int_bool_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_int_bool_set(qt_widgets_c_SlotWrapper_int_bool* this_ptr, void (*func)(void*, int, bool), void* data);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_int_int_int_int_custom_slot(qt_widgets_c_SlotWrapper_int_int_int_int* this_ptr, int arg0, int arg1, int arg2, int arg3);
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_int_int_int_int_delete(qt_widgets_c_SlotWrapper_int_int_int_int* this_ptr);
QT_WIDGETS_C_EXPORT qt_widgets_c_SlotWrapper_int_int_int_int* qt_widgets_c_qt_widgets_c_SlotWrapper_int_int_int_int_new();
QT_WIDGETS_C_EXPORT void qt_widgets_c_qt_widgets_c_SlotWrapper_int_int_int_int_set(qt_widgets_c_SlotWrapper_int_int_int_int* this_ptr, void (*func)(void*, int, int, int, int), void* data);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QAbstractButton_ptr(qt_widgets_c_SlotWrapper_QAbstractButton_ptr* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QAbstractButton_ptr_bool(qt_widgets_c_SlotWrapper_QAbstractButton_ptr_bool* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QAction_ptr(qt_widgets_c_SlotWrapper_QAction_ptr* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QDockWidget_ptr(qt_widgets_c_SlotWrapper_QDockWidget_ptr* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QFlags_QGraphicsBlurEffect_BlurHint(qt_widgets_c_SlotWrapper_QFlags_QGraphicsBlurEffect_BlurHint* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr(qt_widgets_c_SlotWrapper_QGraphicsItem_ptr* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr(qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason(qt_widgets_c_SlotWrapper_QGraphicsItem_ptr_QGraphicsItem_ptr_Qt_FocusReason* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QListWidgetItem_ptr(qt_widgets_c_SlotWrapper_QListWidgetItem_ptr* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_QListWidgetItem_ptr(qt_widgets_c_SlotWrapper_QListWidgetItem_ptr_QListWidgetItem_ptr* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QMdiSubWindow_ptr(qt_widgets_c_SlotWrapper_QMdiSubWindow_ptr* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QRect(qt_widgets_c_SlotWrapper_QRect* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QRect_QPointF(qt_widgets_c_SlotWrapper_QRect_QPointF* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QRect_QPointF_QPointF(qt_widgets_c_SlotWrapper_QRect_QPointF_QPointF* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QScroller_State(qt_widgets_c_SlotWrapper_QScroller_State* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QSystemTrayIcon_ActivationReason(qt_widgets_c_SlotWrapper_QSystemTrayIcon_ActivationReason* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr(qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr(qt_widgets_c_SlotWrapper_QTableWidgetItem_ptr_QTableWidgetItem_ptr* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr(qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr(qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_QTreeWidgetItem_ptr* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_int(qt_widgets_c_SlotWrapper_QTreeWidgetItem_ptr_int* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QUndoStack_ptr(qt_widgets_c_SlotWrapper_QUndoStack_ptr* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QWidget_ptr(qt_widgets_c_SlotWrapper_QWidget_ptr* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint(qt_widgets_c_SlotWrapper_QWidget_ptr_QAbstractItemDelegate_EndEditHint* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_QWidget_ptr_QWidget_ptr(qt_widgets_c_SlotWrapper_QWidget_ptr_QWidget_ptr* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_Qt_DockWidgetArea(qt_widgets_c_SlotWrapper_Qt_DockWidgetArea* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_Qt_ToolButtonStyle(qt_widgets_c_SlotWrapper_Qt_ToolButtonStyle* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QBrush_ref(qt_widgets_c_SlotWrapper_const_QBrush_ref* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QColor_ref(qt_widgets_c_SlotWrapper_const_QColor_ref* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QDateTime_ref(qt_widgets_c_SlotWrapper_const_QDateTime_ref* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QDate_ref(qt_widgets_c_SlotWrapper_const_QDate_ref* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QFont_ref(qt_widgets_c_SlotWrapper_const_QFont_ref* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QIcon_ref(qt_widgets_c_SlotWrapper_const_QIcon_ref* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QKeySequence_ref(qt_widgets_c_SlotWrapper_const_QKeySequence_ref* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QList_QModelIndex_ref(qt_widgets_c_SlotWrapper_const_QList_QModelIndex_ref* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QList_QRectF_ref(qt_widgets_c_SlotWrapper_const_QList_QRectF_ref* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QList_QUrl_ref(qt_widgets_c_SlotWrapper_const_QList_QUrl_ref* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QPointF_ref(qt_widgets_c_SlotWrapper_const_QPointF_ref* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QPoint_ref(qt_widgets_c_SlotWrapper_const_QPoint_ref* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QRect_ref_int(qt_widgets_c_SlotWrapper_const_QRect_ref_int* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QScrollerProperties_ref(qt_widgets_c_SlotWrapper_const_QScrollerProperties_ref* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QStringList_ref(qt_widgets_c_SlotWrapper_const_QStringList_ref* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref(qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_const_QString_ref(qt_widgets_c_SlotWrapper_const_QString_ref_const_QString_ref_const_QString_ref* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QTextCharFormat_ref(qt_widgets_c_SlotWrapper_const_QTextCharFormat_ref* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_const_QTime_ref(qt_widgets_c_SlotWrapper_const_QTime_ref* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_int_Qt_SortOrder(qt_widgets_c_SlotWrapper_int_Qt_SortOrder* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_int_bool(qt_widgets_c_SlotWrapper_int_bool* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_slots_G_static_cast_QObject_ptr_qt_widgets_c_SlotWrapper_int_int_int_int(qt_widgets_c_SlotWrapper_int_int_int_int* ptr);

} // extern "C"

#endif // QT_WIDGETS_C_SLOTS_H
