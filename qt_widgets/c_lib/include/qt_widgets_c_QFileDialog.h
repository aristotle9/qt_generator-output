#ifndef QT_WIDGETS_C_QFILEDIALOG_H
#define QT_WIDGETS_C_QFILEDIALOG_H

#include "qt_widgets_c_global.h"

extern "C" {

QT_WIDGETS_C_EXPORT QFileDialog* qt_widgets_c_QFileDialog_G_dynamic_cast_QFileDialog_ptr_QDialog(QDialog* ptr);
QT_WIDGETS_C_EXPORT QFileDialog* qt_widgets_c_QFileDialog_G_dynamic_cast_QFileDialog_ptr_QWidget(QWidget* ptr);
QT_WIDGETS_C_EXPORT QDialog* qt_widgets_c_QFileDialog_G_static_cast_QDialog_ptr(QFileDialog* ptr);
QT_WIDGETS_C_EXPORT QFileDialog* qt_widgets_c_QFileDialog_G_static_cast_QFileDialog_ptr_QDialog(QDialog* ptr);
QT_WIDGETS_C_EXPORT QFileDialog* qt_widgets_c_QFileDialog_G_static_cast_QFileDialog_ptr_QObject(QObject* ptr);
QT_WIDGETS_C_EXPORT QFileDialog* qt_widgets_c_QFileDialog_G_static_cast_QFileDialog_ptr_QPaintDevice(QPaintDevice* ptr);
QT_WIDGETS_C_EXPORT QFileDialog* qt_widgets_c_QFileDialog_G_static_cast_QFileDialog_ptr_QWidget(QWidget* ptr);
QT_WIDGETS_C_EXPORT QObject* qt_widgets_c_QFileDialog_G_static_cast_QObject_ptr(QFileDialog* ptr);
QT_WIDGETS_C_EXPORT QPaintDevice* qt_widgets_c_QFileDialog_G_static_cast_QPaintDevice_ptr(QFileDialog* ptr);
QT_WIDGETS_C_EXPORT QWidget* qt_widgets_c_QFileDialog_G_static_cast_QWidget_ptr(QFileDialog* ptr);
QT_WIDGETS_C_EXPORT QFileDialog::AcceptMode qt_widgets_c_QFileDialog_acceptMode(const QFileDialog* this_ptr);
QT_WIDGETS_C_EXPORT bool qt_widgets_c_QFileDialog_confirmOverwrite(const QFileDialog* this_ptr);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_defaultSuffix_to_output(const QFileDialog* this_ptr, QString* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_delete(QFileDialog* this_ptr);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_directoryUrl_to_output(const QFileDialog* this_ptr, QUrl* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_directory_to_output(const QFileDialog* this_ptr, QDir* output);
QT_WIDGETS_C_EXPORT QFileDialog::FileMode qt_widgets_c_QFileDialog_fileMode(const QFileDialog* this_ptr);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getExistingDirectoryUrl_to_output_no_args(QUrl* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getExistingDirectoryUrl_to_output_parent(QWidget* parent, QUrl* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getExistingDirectoryUrl_to_output_parent_caption(QWidget* parent, const QString* caption, QUrl* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getExistingDirectoryUrl_to_output_parent_caption_dir(QWidget* parent, const QString* caption, const QUrl* dir, QUrl* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getExistingDirectoryUrl_to_output_parent_caption_dir_options(QWidget* parent, const QString* caption, const QUrl* dir, unsigned int options, QUrl* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getExistingDirectoryUrl_to_output_parent_caption_dir_options_supportedSchemes(QWidget* parent, const QString* caption, const QUrl* dir, unsigned int options, const QStringList* supportedSchemes, QUrl* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getExistingDirectory_to_output_no_args(QString* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getExistingDirectory_to_output_parent(QWidget* parent, QString* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getExistingDirectory_to_output_parent_caption(QWidget* parent, const QString* caption, QString* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getExistingDirectory_to_output_parent_caption_dir(QWidget* parent, const QString* caption, const QString* dir, QString* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getExistingDirectory_to_output_parent_caption_dir_options(QWidget* parent, const QString* caption, const QString* dir, unsigned int options, QString* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileName_to_output_no_args(QString* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileName_to_output_parent(QWidget* parent, QString* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileName_to_output_parent_caption(QWidget* parent, const QString* caption, QString* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileName_to_output_parent_caption_dir(QWidget* parent, const QString* caption, const QString* dir, QString* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileName_to_output_parent_caption_dir_filter(QWidget* parent, const QString* caption, const QString* dir, const QString* filter, QString* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileName_to_output_parent_caption_dir_filter_selectedFilter(QWidget* parent, const QString* caption, const QString* dir, const QString* filter, QString* selectedFilter, QString* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileName_to_output_parent_caption_dir_filter_selectedFilter_options(QWidget* parent, const QString* caption, const QString* dir, const QString* filter, QString* selectedFilter, unsigned int options, QString* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileNames_to_output_no_args(QStringList* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileNames_to_output_parent(QWidget* parent, QStringList* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileNames_to_output_parent_caption(QWidget* parent, const QString* caption, QStringList* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileNames_to_output_parent_caption_dir(QWidget* parent, const QString* caption, const QString* dir, QStringList* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileNames_to_output_parent_caption_dir_filter(QWidget* parent, const QString* caption, const QString* dir, const QString* filter, QStringList* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileNames_to_output_parent_caption_dir_filter_selectedFilter(QWidget* parent, const QString* caption, const QString* dir, const QString* filter, QString* selectedFilter, QStringList* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileNames_to_output_parent_caption_dir_filter_selectedFilter_options(QWidget* parent, const QString* caption, const QString* dir, const QString* filter, QString* selectedFilter, unsigned int options, QStringList* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileUrl_to_output_no_args(QUrl* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileUrl_to_output_parent(QWidget* parent, QUrl* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileUrl_to_output_parent_caption(QWidget* parent, const QString* caption, QUrl* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileUrl_to_output_parent_caption_dir(QWidget* parent, const QString* caption, const QUrl* dir, QUrl* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileUrl_to_output_parent_caption_dir_filter(QWidget* parent, const QString* caption, const QUrl* dir, const QString* filter, QUrl* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileUrl_to_output_parent_caption_dir_filter_selectedFilter(QWidget* parent, const QString* caption, const QUrl* dir, const QString* filter, QString* selectedFilter, QUrl* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileUrl_to_output_parent_caption_dir_filter_selectedFilter_options(QWidget* parent, const QString* caption, const QUrl* dir, const QString* filter, QString* selectedFilter, unsigned int options, QUrl* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileUrl_to_output_parent_caption_dir_filter_selectedFilter_options_supportedSchemes(QWidget* parent, const QString* caption, const QUrl* dir, const QString* filter, QString* selectedFilter, unsigned int options, const QStringList* supportedSchemes, QUrl* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileUrls_to_output_no_args(QList< QUrl >* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileUrls_to_output_parent(QWidget* parent, QList< QUrl >* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileUrls_to_output_parent_caption(QWidget* parent, const QString* caption, QList< QUrl >* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileUrls_to_output_parent_caption_dir(QWidget* parent, const QString* caption, const QUrl* dir, QList< QUrl >* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileUrls_to_output_parent_caption_dir_filter(QWidget* parent, const QString* caption, const QUrl* dir, const QString* filter, QList< QUrl >* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileUrls_to_output_parent_caption_dir_filter_selectedFilter(QWidget* parent, const QString* caption, const QUrl* dir, const QString* filter, QString* selectedFilter, QList< QUrl >* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileUrls_to_output_parent_caption_dir_filter_selectedFilter_options(QWidget* parent, const QString* caption, const QUrl* dir, const QString* filter, QString* selectedFilter, unsigned int options, QList< QUrl >* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getOpenFileUrls_to_output_parent_caption_dir_filter_selectedFilter_options_supportedSchemes(QWidget* parent, const QString* caption, const QUrl* dir, const QString* filter, QString* selectedFilter, unsigned int options, const QStringList* supportedSchemes, QList< QUrl >* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getSaveFileName_to_output_no_args(QString* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getSaveFileName_to_output_parent(QWidget* parent, QString* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getSaveFileName_to_output_parent_caption(QWidget* parent, const QString* caption, QString* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getSaveFileName_to_output_parent_caption_dir(QWidget* parent, const QString* caption, const QString* dir, QString* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getSaveFileName_to_output_parent_caption_dir_filter(QWidget* parent, const QString* caption, const QString* dir, const QString* filter, QString* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getSaveFileName_to_output_parent_caption_dir_filter_selectedFilter(QWidget* parent, const QString* caption, const QString* dir, const QString* filter, QString* selectedFilter, QString* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getSaveFileName_to_output_parent_caption_dir_filter_selectedFilter_options(QWidget* parent, const QString* caption, const QString* dir, const QString* filter, QString* selectedFilter, unsigned int options, QString* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getSaveFileUrl_to_output_no_args(QUrl* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getSaveFileUrl_to_output_parent(QWidget* parent, QUrl* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getSaveFileUrl_to_output_parent_caption(QWidget* parent, const QString* caption, QUrl* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getSaveFileUrl_to_output_parent_caption_dir(QWidget* parent, const QString* caption, const QUrl* dir, QUrl* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getSaveFileUrl_to_output_parent_caption_dir_filter(QWidget* parent, const QString* caption, const QUrl* dir, const QString* filter, QUrl* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getSaveFileUrl_to_output_parent_caption_dir_filter_selectedFilter(QWidget* parent, const QString* caption, const QUrl* dir, const QString* filter, QString* selectedFilter, QUrl* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getSaveFileUrl_to_output_parent_caption_dir_filter_selectedFilter_options(QWidget* parent, const QString* caption, const QUrl* dir, const QString* filter, QString* selectedFilter, unsigned int options, QUrl* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_getSaveFileUrl_to_output_parent_caption_dir_filter_selectedFilter_options_supportedSchemes(QWidget* parent, const QString* caption, const QUrl* dir, const QString* filter, QString* selectedFilter, unsigned int options, const QStringList* supportedSchemes, QUrl* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_history_to_output(const QFileDialog* this_ptr, QStringList* output);
QT_WIDGETS_C_EXPORT QFileIconProvider* qt_widgets_c_QFileDialog_iconProvider(const QFileDialog* this_ptr);
QT_WIDGETS_C_EXPORT bool qt_widgets_c_QFileDialog_isNameFilterDetailsVisible(const QFileDialog* this_ptr);
QT_WIDGETS_C_EXPORT bool qt_widgets_c_QFileDialog_isReadOnly(const QFileDialog* this_ptr);
QT_WIDGETS_C_EXPORT QAbstractItemDelegate* qt_widgets_c_QFileDialog_itemDelegate(const QFileDialog* this_ptr);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_labelText_to_output(const QFileDialog* this_ptr, QFileDialog::DialogLabel label, QString* output);
QT_WIDGETS_C_EXPORT const QMetaObject* qt_widgets_c_QFileDialog_metaObject(const QFileDialog* this_ptr);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_mimeTypeFilters_to_output(const QFileDialog* this_ptr, QStringList* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_nameFilters_to_output(const QFileDialog* this_ptr, QStringList* output);
QT_WIDGETS_C_EXPORT QFileDialog* qt_widgets_c_QFileDialog_new_no_args();
QT_WIDGETS_C_EXPORT QFileDialog* qt_widgets_c_QFileDialog_new_parent(QWidget* parent);
QT_WIDGETS_C_EXPORT QFileDialog* qt_widgets_c_QFileDialog_new_parent_caption(QWidget* parent, const QString* caption);
QT_WIDGETS_C_EXPORT QFileDialog* qt_widgets_c_QFileDialog_new_parent_caption_directory(QWidget* parent, const QString* caption, const QString* directory);
QT_WIDGETS_C_EXPORT QFileDialog* qt_widgets_c_QFileDialog_new_parent_caption_directory_filter(QWidget* parent, const QString* caption, const QString* directory, const QString* filter);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_open(QFileDialog* this_ptr, QObject* receiver, const char* member);
QT_WIDGETS_C_EXPORT unsigned int qt_widgets_c_QFileDialog_options(const QFileDialog* this_ptr);
QT_WIDGETS_C_EXPORT QAbstractProxyModel* qt_widgets_c_QFileDialog_proxyModel(const QFileDialog* this_ptr);
QT_WIDGETS_C_EXPORT int qt_widgets_c_QFileDialog_qt_metacall(QFileDialog* this_ptr, const QMetaObject::Call* arg1, int arg2, void** arg3);
QT_WIDGETS_C_EXPORT void* qt_widgets_c_QFileDialog_qt_metacast(QFileDialog* this_ptr, const char* arg1);
QT_WIDGETS_C_EXPORT bool qt_widgets_c_QFileDialog_resolveSymlinks(const QFileDialog* this_ptr);
QT_WIDGETS_C_EXPORT bool qt_widgets_c_QFileDialog_restoreState(QFileDialog* this_ptr, const QByteArray* state);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_saveState_to_output(const QFileDialog* this_ptr, QByteArray* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_selectFile(QFileDialog* this_ptr, const QString* filename);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_selectMimeTypeFilter(QFileDialog* this_ptr, const QString* filter);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_selectNameFilter(QFileDialog* this_ptr, const QString* filter);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_selectUrl(QFileDialog* this_ptr, const QUrl* url);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_selectedFiles_to_output(const QFileDialog* this_ptr, QStringList* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_selectedMimeTypeFilter_to_output(const QFileDialog* this_ptr, QString* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_selectedNameFilter_to_output(const QFileDialog* this_ptr, QString* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_selectedUrls_to_output(const QFileDialog* this_ptr, QList< QUrl >* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setAcceptMode(QFileDialog* this_ptr, QFileDialog::AcceptMode mode);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setConfirmOverwrite(QFileDialog* this_ptr, bool enabled);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setDefaultSuffix(QFileDialog* this_ptr, const QString* suffix);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setDirectoryUrl(QFileDialog* this_ptr, const QUrl* directory);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setDirectory_QDir(QFileDialog* this_ptr, const QDir* directory);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setDirectory_QString(QFileDialog* this_ptr, const QString* directory);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setFileMode(QFileDialog* this_ptr, QFileDialog::FileMode mode);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setHistory(QFileDialog* this_ptr, const QStringList* paths);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setIconProvider(QFileDialog* this_ptr, QFileIconProvider* provider);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setItemDelegate(QFileDialog* this_ptr, QAbstractItemDelegate* delegate);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setLabelText(QFileDialog* this_ptr, QFileDialog::DialogLabel label, const QString* text);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setMimeTypeFilters(QFileDialog* this_ptr, const QStringList* filters);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setNameFilter(QFileDialog* this_ptr, const QString* filter);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setNameFilterDetailsVisible(QFileDialog* this_ptr, bool enabled);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setNameFilters(QFileDialog* this_ptr, const QStringList* filters);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setOption_option(QFileDialog* this_ptr, QFileDialog::Option option);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setOption_option_on(QFileDialog* this_ptr, QFileDialog::Option option, bool on);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setOptions(QFileDialog* this_ptr, unsigned int options);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setProxyModel(QFileDialog* this_ptr, QAbstractProxyModel* model);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setReadOnly(QFileDialog* this_ptr, bool enabled);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setResolveSymlinks(QFileDialog* this_ptr, bool enabled);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setSidebarUrls(QFileDialog* this_ptr, const QList< QUrl >* urls);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setSupportedSchemes(QFileDialog* this_ptr, const QStringList* schemes);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setViewMode(QFileDialog* this_ptr, QFileDialog::ViewMode mode);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_setVisible(QFileDialog* this_ptr, bool visible);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_sidebarUrls_to_output(const QFileDialog* this_ptr, QList< QUrl >* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_supportedSchemes_to_output(const QFileDialog* this_ptr, QStringList* output);
QT_WIDGETS_C_EXPORT bool qt_widgets_c_QFileDialog_testOption(const QFileDialog* this_ptr, QFileDialog::Option option);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_trUtf8_to_output(const char* s, const char* c, int n, QString* output);
QT_WIDGETS_C_EXPORT void qt_widgets_c_QFileDialog_tr_to_output(const char* s, const char* c, int n, QString* output);
QT_WIDGETS_C_EXPORT QFileDialog::ViewMode qt_widgets_c_QFileDialog_viewMode(const QFileDialog* this_ptr);

} // extern "C"

#endif // QT_WIDGETS_C_QFILEDIALOG_H
