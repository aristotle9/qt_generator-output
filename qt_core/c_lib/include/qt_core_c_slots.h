#ifndef QT_CORE_C_SLOTS_H
#define QT_CORE_C_SLOTS_H

#include "qt_core_c_global.h"

// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_const_QModelIndex_ref : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_const_QModelIndex_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QModelIndex*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QModelIndex& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QModelIndex*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_Qt_Orientation : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_Qt_Orientation() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const Qt::Orientation*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt::Orientation arg0) {
    if (m_func) {
      m_func(m_data, new Qt::Orientation(arg0));
    }
  }

private:
  void (*m_func)(void*, const Qt::Orientation*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_int_qint64 : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_int_qint64() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, int, qint64), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(int arg0, qint64 arg1) {
    if (m_func) {
      m_func(m_data, arg0, arg1);
    }
  }

private:
  void (*m_func)(void*, int, qint64);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_const_QModelIndex_ref_int : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_const_QModelIndex_ref_int() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QModelIndex*, int, int, const QModelIndex*, int), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QModelIndex& arg0, int arg1, int arg2, const QModelIndex& arg3, int arg4) {
    if (m_func) {
      m_func(m_data, &arg0, arg1, arg2, &arg3, arg4);
    }
  }

private:
  void (*m_func)(void*, const QModelIndex*, int, int, const QModelIndex*, int);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_QAbstractAnimation_State_QAbstractAnimation_State : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_QAbstractAnimation_State_QAbstractAnimation_State() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QAbstractAnimation::State*, const QAbstractAnimation::State*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QAbstractAnimation::State arg0, QAbstractAnimation::State arg1) {
    if (m_func) {
      m_func(m_data, new QAbstractAnimation::State(arg0), new QAbstractAnimation::State(arg1));
    }
  }

private:
  void (*m_func)(void*, const QAbstractAnimation::State*, const QAbstractAnimation::State*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_QTimeLine_State : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_QTimeLine_State() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QTimeLine::State*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QTimeLine::State arg0) {
    if (m_func) {
      m_func(m_data, new QTimeLine::State(arg0));
    }
  }

private:
  void (*m_func)(void*, const QTimeLine::State*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_QAbstractAnimation_ptr : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_QAbstractAnimation_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QAbstractAnimation*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QAbstractAnimation* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, QAbstractAnimation*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_int_QProcess_ExitStatus : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_int_QProcess_ExitStatus() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, int, const QProcess::ExitStatus*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(int arg0, QProcess::ExitStatus arg1) {
    if (m_func) {
      m_func(m_data, arg0, new QProcess::ExitStatus(arg1));
    }
  }

private:
  void (*m_func)(void*, int, const QProcess::ExitStatus*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_const_QItemSelection_ref_const_QItemSelection_ref : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_const_QItemSelection_ref_const_QItemSelection_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QItemSelection*, const QItemSelection*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QItemSelection& arg0, const QItemSelection& arg1) {
    if (m_func) {
      m_func(m_data, &arg0, &arg1);
    }
  }

private:
  void (*m_func)(void*, const QItemSelection*, const QItemSelection*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_QProcess_ProcessError : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_QProcess_ProcessError() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QProcess::ProcessError*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QProcess::ProcessError arg0) {
    if (m_func) {
      m_func(m_data, new QProcess::ProcessError(arg0));
    }
  }

private:
  void (*m_func)(void*, const QProcess::ProcessError*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_bool : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_bool() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, bool), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(bool arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, bool);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_Qt_Orientation_int : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_Qt_Orientation_int() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const Qt::Orientation*, int), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt::Orientation arg0, int arg1) {
    if (m_func) {
      m_func(m_data, new Qt::Orientation(arg0), arg1);
    }
  }

private:
  void (*m_func)(void*, const Qt::Orientation*, int);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_no_args : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_no_args() : m_func(0), m_data(0) { }
  void set(void (*func)(void*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot() {
    if (m_func) {
      m_func(m_data);
    }
  }

private:
  void (*m_func)(void*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_const_QModelIndex_ref : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_const_QModelIndex_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QModelIndex*, int, int, const QModelIndex*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QModelIndex& arg0, int arg1, int arg2, const QModelIndex& arg3) {
    if (m_func) {
      m_func(m_data, &arg0, arg1, arg2, &arg3);
    }
  }

private:
  void (*m_func)(void*, const QModelIndex*, int, int, const QModelIndex*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_QAbstractAnimation_Direction : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_QAbstractAnimation_Direction() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QAbstractAnimation::Direction*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QAbstractAnimation::Direction arg0) {
    if (m_func) {
      m_func(m_data, new QAbstractAnimation::Direction(arg0));
    }
  }

private:
  void (*m_func)(void*, const QAbstractAnimation::Direction*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_const_QModelIndex_ref_const_QModelIndex_ref : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_const_QModelIndex_ref_const_QModelIndex_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QModelIndex*, const QModelIndex*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QModelIndex& arg0, const QModelIndex& arg1) {
    if (m_func) {
      m_func(m_data, &arg0, &arg1);
    }
  }

private:
  void (*m_func)(void*, const QModelIndex*, const QModelIndex*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_const_QList_QPersistentModelIndex_ref_QAbstractItemModel_LayoutChangeHint : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_const_QList_QPersistentModelIndex_ref_QAbstractItemModel_LayoutChangeHint() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QList< QPersistentModelIndex >*, const QAbstractItemModel::LayoutChangeHint*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QList< QPersistentModelIndex >& arg0, QAbstractItemModel::LayoutChangeHint arg1) {
    if (m_func) {
      m_func(m_data, &arg0, new QAbstractItemModel::LayoutChangeHint(arg1));
    }
  }

private:
  void (*m_func)(void*, const QList< QPersistentModelIndex >*, const QAbstractItemModel::LayoutChangeHint*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QModelIndex*, int, int), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QModelIndex& arg0, int arg1, int arg2) {
    if (m_func) {
      m_func(m_data, &arg0, arg1, arg2);
    }
  }

private:
  void (*m_func)(void*, const QModelIndex*, int, int);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_double : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_double() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, double), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(double arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, double);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_QAbstractItemModel_ptr : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_QAbstractItemModel_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QAbstractItemModel*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QAbstractItemModel* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, QAbstractItemModel*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_const_QString_ref : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_const_QString_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QString*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QString& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QString*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_const_QList_QPersistentModelIndex_ref : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_const_QList_QPersistentModelIndex_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QList< QPersistentModelIndex >*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QList< QPersistentModelIndex >& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QList< QPersistentModelIndex >*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_const_QItemSelection_ref : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_const_QItemSelection_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QItemSelection*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QItemSelection& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QItemSelection*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_Qt_Orientation_int_int : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_Qt_Orientation_int_int() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const Qt::Orientation*, int, int), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt::Orientation arg0, int arg1, int arg2) {
    if (m_func) {
      m_func(m_data, new Qt::Orientation(arg0), arg1, arg2);
    }
  }

private:
  void (*m_func)(void*, const Qt::Orientation*, int, int);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_QAbstractAnimation_State : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_QAbstractAnimation_State() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QAbstractAnimation::State*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QAbstractAnimation::State arg0) {
    if (m_func) {
      m_func(m_data, new QAbstractAnimation::State(arg0));
    }
  }

private:
  void (*m_func)(void*, const QAbstractAnimation::State*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_const_QVariant_ref : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_const_QVariant_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QVariant*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QVariant& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QVariant*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_QObject_ptr : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_QObject_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QObject*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QObject* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, QObject*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_int : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_int() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, int), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(int arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, int);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_const_QModelIndex_ref_const_QModelIndex_ref_const_QVector_int_ref : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_const_QModelIndex_ref_const_QModelIndex_ref_const_QVector_int_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QModelIndex*, const QModelIndex*, const QVector< int >*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QModelIndex& arg0, const QModelIndex& arg1, const QVector< int >& arg2) {
    if (m_func) {
      m_func(m_data, &arg0, &arg1, &arg2);
    }
  }

private:
  void (*m_func)(void*, const QModelIndex*, const QModelIndex*, const QVector< int >*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_QProcess_ProcessState : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_QProcess_ProcessState() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QProcess::ProcessState*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QProcess::ProcessState arg0) {
    if (m_func) {
      m_func(m_data, new QProcess::ProcessState(arg0));
    }
  }

private:
  void (*m_func)(void*, const QProcess::ProcessState*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_const_QModelIndex_ref_int : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_const_QModelIndex_ref_int() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QModelIndex*, int), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QModelIndex& arg0, int arg1) {
    if (m_func) {
      m_func(m_data, &arg0, arg1);
    }
  }

private:
  void (*m_func)(void*, const QModelIndex*, int);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_core_c_SlotWrapper_qint64 : public QObject {
  Q_OBJECT
public:
  qt_core_c_SlotWrapper_qint64() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, qint64), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(qint64 arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, qint64);
  void* m_data;
};
extern "C" {

QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QAbstractAnimation_Direction_custom_slot(qt_core_c_SlotWrapper_QAbstractAnimation_Direction* this_ptr, const QAbstractAnimation::Direction* arg0);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QAbstractAnimation_Direction_delete(qt_core_c_SlotWrapper_QAbstractAnimation_Direction* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_QAbstractAnimation_Direction* qt_core_c_qt_core_c_SlotWrapper_QAbstractAnimation_Direction_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QAbstractAnimation_Direction_set(qt_core_c_SlotWrapper_QAbstractAnimation_Direction* this_ptr, void (*func)(void*, const QAbstractAnimation::Direction*), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QAbstractAnimation_State_QAbstractAnimation_State_custom_slot(qt_core_c_SlotWrapper_QAbstractAnimation_State_QAbstractAnimation_State* this_ptr, const QAbstractAnimation::State* arg0, const QAbstractAnimation::State* arg1);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QAbstractAnimation_State_QAbstractAnimation_State_delete(qt_core_c_SlotWrapper_QAbstractAnimation_State_QAbstractAnimation_State* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_QAbstractAnimation_State_QAbstractAnimation_State* qt_core_c_qt_core_c_SlotWrapper_QAbstractAnimation_State_QAbstractAnimation_State_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QAbstractAnimation_State_QAbstractAnimation_State_set(qt_core_c_SlotWrapper_QAbstractAnimation_State_QAbstractAnimation_State* this_ptr, void (*func)(void*, const QAbstractAnimation::State*, const QAbstractAnimation::State*), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QAbstractAnimation_State_custom_slot(qt_core_c_SlotWrapper_QAbstractAnimation_State* this_ptr, const QAbstractAnimation::State* arg0);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QAbstractAnimation_State_delete(qt_core_c_SlotWrapper_QAbstractAnimation_State* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_QAbstractAnimation_State* qt_core_c_qt_core_c_SlotWrapper_QAbstractAnimation_State_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QAbstractAnimation_State_set(qt_core_c_SlotWrapper_QAbstractAnimation_State* this_ptr, void (*func)(void*, const QAbstractAnimation::State*), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QAbstractAnimation_ptr_custom_slot(qt_core_c_SlotWrapper_QAbstractAnimation_ptr* this_ptr, QAbstractAnimation* arg0);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QAbstractAnimation_ptr_delete(qt_core_c_SlotWrapper_QAbstractAnimation_ptr* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_QAbstractAnimation_ptr* qt_core_c_qt_core_c_SlotWrapper_QAbstractAnimation_ptr_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QAbstractAnimation_ptr_set(qt_core_c_SlotWrapper_QAbstractAnimation_ptr* this_ptr, void (*func)(void*, QAbstractAnimation*), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QAbstractItemModel_ptr_custom_slot(qt_core_c_SlotWrapper_QAbstractItemModel_ptr* this_ptr, QAbstractItemModel* arg0);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QAbstractItemModel_ptr_delete(qt_core_c_SlotWrapper_QAbstractItemModel_ptr* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_QAbstractItemModel_ptr* qt_core_c_qt_core_c_SlotWrapper_QAbstractItemModel_ptr_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QAbstractItemModel_ptr_set(qt_core_c_SlotWrapper_QAbstractItemModel_ptr* this_ptr, void (*func)(void*, QAbstractItemModel*), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QObject_ptr_custom_slot(qt_core_c_SlotWrapper_QObject_ptr* this_ptr, QObject* arg0);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QObject_ptr_delete(qt_core_c_SlotWrapper_QObject_ptr* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_QObject_ptr* qt_core_c_qt_core_c_SlotWrapper_QObject_ptr_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QObject_ptr_set(qt_core_c_SlotWrapper_QObject_ptr* this_ptr, void (*func)(void*, QObject*), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QProcess_ProcessError_custom_slot(qt_core_c_SlotWrapper_QProcess_ProcessError* this_ptr, const QProcess::ProcessError* arg0);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QProcess_ProcessError_delete(qt_core_c_SlotWrapper_QProcess_ProcessError* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_QProcess_ProcessError* qt_core_c_qt_core_c_SlotWrapper_QProcess_ProcessError_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QProcess_ProcessError_set(qt_core_c_SlotWrapper_QProcess_ProcessError* this_ptr, void (*func)(void*, const QProcess::ProcessError*), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QProcess_ProcessState_custom_slot(qt_core_c_SlotWrapper_QProcess_ProcessState* this_ptr, const QProcess::ProcessState* arg0);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QProcess_ProcessState_delete(qt_core_c_SlotWrapper_QProcess_ProcessState* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_QProcess_ProcessState* qt_core_c_qt_core_c_SlotWrapper_QProcess_ProcessState_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QProcess_ProcessState_set(qt_core_c_SlotWrapper_QProcess_ProcessState* this_ptr, void (*func)(void*, const QProcess::ProcessState*), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QTimeLine_State_custom_slot(qt_core_c_SlotWrapper_QTimeLine_State* this_ptr, const QTimeLine::State* arg0);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QTimeLine_State_delete(qt_core_c_SlotWrapper_QTimeLine_State* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_QTimeLine_State* qt_core_c_qt_core_c_SlotWrapper_QTimeLine_State_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_QTimeLine_State_set(qt_core_c_SlotWrapper_QTimeLine_State* this_ptr, void (*func)(void*, const QTimeLine::State*), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_Qt_Orientation_custom_slot(qt_core_c_SlotWrapper_Qt_Orientation* this_ptr, const Qt::Orientation* arg0);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_Qt_Orientation_delete(qt_core_c_SlotWrapper_Qt_Orientation* this_ptr);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_Qt_Orientation_int_custom_slot(qt_core_c_SlotWrapper_Qt_Orientation_int* this_ptr, const Qt::Orientation* arg0, int arg1);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_Qt_Orientation_int_delete(qt_core_c_SlotWrapper_Qt_Orientation_int* this_ptr);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_Qt_Orientation_int_int_custom_slot(qt_core_c_SlotWrapper_Qt_Orientation_int_int* this_ptr, const Qt::Orientation* arg0, int arg1, int arg2);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_Qt_Orientation_int_int_delete(qt_core_c_SlotWrapper_Qt_Orientation_int_int* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_Qt_Orientation_int_int* qt_core_c_qt_core_c_SlotWrapper_Qt_Orientation_int_int_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_Qt_Orientation_int_int_set(qt_core_c_SlotWrapper_Qt_Orientation_int_int* this_ptr, void (*func)(void*, const Qt::Orientation*, int, int), void* data);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_Qt_Orientation_int* qt_core_c_qt_core_c_SlotWrapper_Qt_Orientation_int_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_Qt_Orientation_int_set(qt_core_c_SlotWrapper_Qt_Orientation_int* this_ptr, void (*func)(void*, const Qt::Orientation*, int), void* data);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_Qt_Orientation* qt_core_c_qt_core_c_SlotWrapper_Qt_Orientation_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_Qt_Orientation_set(qt_core_c_SlotWrapper_Qt_Orientation* this_ptr, void (*func)(void*, const Qt::Orientation*), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_bool_custom_slot(qt_core_c_SlotWrapper_bool* this_ptr, bool arg0);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_bool_delete(qt_core_c_SlotWrapper_bool* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_bool* qt_core_c_qt_core_c_SlotWrapper_bool_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_bool_set(qt_core_c_SlotWrapper_bool* this_ptr, void (*func)(void*, bool), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QItemSelection_ref_const_QItemSelection_ref_custom_slot(qt_core_c_SlotWrapper_const_QItemSelection_ref_const_QItemSelection_ref* this_ptr, const QItemSelection* arg0, const QItemSelection* arg1);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QItemSelection_ref_const_QItemSelection_ref_delete(qt_core_c_SlotWrapper_const_QItemSelection_ref_const_QItemSelection_ref* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_const_QItemSelection_ref_const_QItemSelection_ref* qt_core_c_qt_core_c_SlotWrapper_const_QItemSelection_ref_const_QItemSelection_ref_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QItemSelection_ref_const_QItemSelection_ref_set(qt_core_c_SlotWrapper_const_QItemSelection_ref_const_QItemSelection_ref* this_ptr, void (*func)(void*, const QItemSelection*, const QItemSelection*), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QItemSelection_ref_custom_slot(qt_core_c_SlotWrapper_const_QItemSelection_ref* this_ptr, const QItemSelection* arg0);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QItemSelection_ref_delete(qt_core_c_SlotWrapper_const_QItemSelection_ref* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_const_QItemSelection_ref* qt_core_c_qt_core_c_SlotWrapper_const_QItemSelection_ref_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QItemSelection_ref_set(qt_core_c_SlotWrapper_const_QItemSelection_ref* this_ptr, void (*func)(void*, const QItemSelection*), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QList_QPersistentModelIndex_ref_QAbstractItemModel_LayoutChangeHint_custom_slot(qt_core_c_SlotWrapper_const_QList_QPersistentModelIndex_ref_QAbstractItemModel_LayoutChangeHint* this_ptr, const QList< QPersistentModelIndex >* arg0, const QAbstractItemModel::LayoutChangeHint* arg1);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QList_QPersistentModelIndex_ref_QAbstractItemModel_LayoutChangeHint_delete(qt_core_c_SlotWrapper_const_QList_QPersistentModelIndex_ref_QAbstractItemModel_LayoutChangeHint* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_const_QList_QPersistentModelIndex_ref_QAbstractItemModel_LayoutChangeHint* qt_core_c_qt_core_c_SlotWrapper_const_QList_QPersistentModelIndex_ref_QAbstractItemModel_LayoutChangeHint_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QList_QPersistentModelIndex_ref_QAbstractItemModel_LayoutChangeHint_set(qt_core_c_SlotWrapper_const_QList_QPersistentModelIndex_ref_QAbstractItemModel_LayoutChangeHint* this_ptr, void (*func)(void*, const QList< QPersistentModelIndex >*, const QAbstractItemModel::LayoutChangeHint*), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QList_QPersistentModelIndex_ref_custom_slot(qt_core_c_SlotWrapper_const_QList_QPersistentModelIndex_ref* this_ptr, const QList< QPersistentModelIndex >* arg0);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QList_QPersistentModelIndex_ref_delete(qt_core_c_SlotWrapper_const_QList_QPersistentModelIndex_ref* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_const_QList_QPersistentModelIndex_ref* qt_core_c_qt_core_c_SlotWrapper_const_QList_QPersistentModelIndex_ref_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QList_QPersistentModelIndex_ref_set(qt_core_c_SlotWrapper_const_QList_QPersistentModelIndex_ref* this_ptr, void (*func)(void*, const QList< QPersistentModelIndex >*), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_const_QModelIndex_ref_const_QVector_int_ref_custom_slot(qt_core_c_SlotWrapper_const_QModelIndex_ref_const_QModelIndex_ref_const_QVector_int_ref* this_ptr, const QModelIndex* arg0, const QModelIndex* arg1, const QVector< int >* arg2);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_const_QModelIndex_ref_const_QVector_int_ref_delete(qt_core_c_SlotWrapper_const_QModelIndex_ref_const_QModelIndex_ref_const_QVector_int_ref* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_const_QModelIndex_ref_const_QModelIndex_ref_const_QVector_int_ref* qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_const_QModelIndex_ref_const_QVector_int_ref_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_const_QModelIndex_ref_const_QVector_int_ref_set(qt_core_c_SlotWrapper_const_QModelIndex_ref_const_QModelIndex_ref_const_QVector_int_ref* this_ptr, void (*func)(void*, const QModelIndex*, const QModelIndex*, const QVector< int >*), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_const_QModelIndex_ref_custom_slot(qt_core_c_SlotWrapper_const_QModelIndex_ref_const_QModelIndex_ref* this_ptr, const QModelIndex* arg0, const QModelIndex* arg1);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_const_QModelIndex_ref_delete(qt_core_c_SlotWrapper_const_QModelIndex_ref_const_QModelIndex_ref* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_const_QModelIndex_ref_const_QModelIndex_ref* qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_const_QModelIndex_ref_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_const_QModelIndex_ref_set(qt_core_c_SlotWrapper_const_QModelIndex_ref_const_QModelIndex_ref* this_ptr, void (*func)(void*, const QModelIndex*, const QModelIndex*), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_custom_slot(qt_core_c_SlotWrapper_const_QModelIndex_ref* this_ptr, const QModelIndex* arg0);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_delete(qt_core_c_SlotWrapper_const_QModelIndex_ref* this_ptr);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_int_custom_slot(qt_core_c_SlotWrapper_const_QModelIndex_ref_int* this_ptr, const QModelIndex* arg0, int arg1);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_int_delete(qt_core_c_SlotWrapper_const_QModelIndex_ref_int* this_ptr);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_const_QModelIndex_ref_custom_slot(qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_const_QModelIndex_ref* this_ptr, const QModelIndex* arg0, int arg1, int arg2, const QModelIndex* arg3);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_const_QModelIndex_ref_delete(qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_const_QModelIndex_ref* this_ptr);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_const_QModelIndex_ref_int_custom_slot(qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_const_QModelIndex_ref_int* this_ptr, const QModelIndex* arg0, int arg1, int arg2, const QModelIndex* arg3, int arg4);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_const_QModelIndex_ref_int_delete(qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_const_QModelIndex_ref_int* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_const_QModelIndex_ref_int* qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_const_QModelIndex_ref_int_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_const_QModelIndex_ref_int_set(qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_const_QModelIndex_ref_int* this_ptr, void (*func)(void*, const QModelIndex*, int, int, const QModelIndex*, int), void* data);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_const_QModelIndex_ref* qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_const_QModelIndex_ref_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_const_QModelIndex_ref_set(qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_const_QModelIndex_ref* this_ptr, void (*func)(void*, const QModelIndex*, int, int, const QModelIndex*), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_custom_slot(qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int* this_ptr, const QModelIndex* arg0, int arg1, int arg2);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_delete(qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int* qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_set(qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int* this_ptr, void (*func)(void*, const QModelIndex*, int, int), void* data);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_const_QModelIndex_ref_int* qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_int_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_int_set(qt_core_c_SlotWrapper_const_QModelIndex_ref_int* this_ptr, void (*func)(void*, const QModelIndex*, int), void* data);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_const_QModelIndex_ref* qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QModelIndex_ref_set(qt_core_c_SlotWrapper_const_QModelIndex_ref* this_ptr, void (*func)(void*, const QModelIndex*), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QString_ref_custom_slot(qt_core_c_SlotWrapper_const_QString_ref* this_ptr, const QString* arg0);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QString_ref_delete(qt_core_c_SlotWrapper_const_QString_ref* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_const_QString_ref* qt_core_c_qt_core_c_SlotWrapper_const_QString_ref_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QString_ref_set(qt_core_c_SlotWrapper_const_QString_ref* this_ptr, void (*func)(void*, const QString*), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QVariant_ref_custom_slot(qt_core_c_SlotWrapper_const_QVariant_ref* this_ptr, const QVariant* arg0);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QVariant_ref_delete(qt_core_c_SlotWrapper_const_QVariant_ref* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_const_QVariant_ref* qt_core_c_qt_core_c_SlotWrapper_const_QVariant_ref_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_const_QVariant_ref_set(qt_core_c_SlotWrapper_const_QVariant_ref* this_ptr, void (*func)(void*, const QVariant*), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_double_custom_slot(qt_core_c_SlotWrapper_double* this_ptr, double arg0);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_double_delete(qt_core_c_SlotWrapper_double* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_double* qt_core_c_qt_core_c_SlotWrapper_double_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_double_set(qt_core_c_SlotWrapper_double* this_ptr, void (*func)(void*, double), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_int_QProcess_ExitStatus_custom_slot(qt_core_c_SlotWrapper_int_QProcess_ExitStatus* this_ptr, int arg0, const QProcess::ExitStatus* arg1);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_int_QProcess_ExitStatus_delete(qt_core_c_SlotWrapper_int_QProcess_ExitStatus* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_int_QProcess_ExitStatus* qt_core_c_qt_core_c_SlotWrapper_int_QProcess_ExitStatus_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_int_QProcess_ExitStatus_set(qt_core_c_SlotWrapper_int_QProcess_ExitStatus* this_ptr, void (*func)(void*, int, const QProcess::ExitStatus*), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_int_custom_slot(qt_core_c_SlotWrapper_int* this_ptr, int arg0);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_int_delete(qt_core_c_SlotWrapper_int* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_int* qt_core_c_qt_core_c_SlotWrapper_int_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_int_qint64_custom_slot(qt_core_c_SlotWrapper_int_qint64* this_ptr, int arg0, qint64 arg1);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_int_qint64_delete(qt_core_c_SlotWrapper_int_qint64* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_int_qint64* qt_core_c_qt_core_c_SlotWrapper_int_qint64_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_int_qint64_set(qt_core_c_SlotWrapper_int_qint64* this_ptr, void (*func)(void*, int, qint64), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_int_set(qt_core_c_SlotWrapper_int* this_ptr, void (*func)(void*, int), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_no_args_custom_slot(qt_core_c_SlotWrapper_no_args* this_ptr);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_no_args_delete(qt_core_c_SlotWrapper_no_args* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_no_args* qt_core_c_qt_core_c_SlotWrapper_no_args_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_no_args_set(qt_core_c_SlotWrapper_no_args* this_ptr, void (*func)(void*), void* data);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_qint64_custom_slot(qt_core_c_SlotWrapper_qint64* this_ptr, qint64 arg0);
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_qint64_delete(qt_core_c_SlotWrapper_qint64* this_ptr);
QT_CORE_C_EXPORT qt_core_c_SlotWrapper_qint64* qt_core_c_qt_core_c_SlotWrapper_qint64_new();
QT_CORE_C_EXPORT void qt_core_c_qt_core_c_SlotWrapper_qint64_set(qt_core_c_SlotWrapper_qint64* this_ptr, void (*func)(void*, qint64), void* data);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_QAbstractAnimation_Direction(qt_core_c_SlotWrapper_QAbstractAnimation_Direction* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_QAbstractAnimation_State(qt_core_c_SlotWrapper_QAbstractAnimation_State* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_QAbstractAnimation_State_QAbstractAnimation_State(qt_core_c_SlotWrapper_QAbstractAnimation_State_QAbstractAnimation_State* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_QAbstractAnimation_ptr(qt_core_c_SlotWrapper_QAbstractAnimation_ptr* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_QAbstractItemModel_ptr(qt_core_c_SlotWrapper_QAbstractItemModel_ptr* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_QObject_ptr(qt_core_c_SlotWrapper_QObject_ptr* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_QProcess_ProcessError(qt_core_c_SlotWrapper_QProcess_ProcessError* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_QProcess_ProcessState(qt_core_c_SlotWrapper_QProcess_ProcessState* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_QTimeLine_State(qt_core_c_SlotWrapper_QTimeLine_State* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_Qt_Orientation(qt_core_c_SlotWrapper_Qt_Orientation* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_Qt_Orientation_int(qt_core_c_SlotWrapper_Qt_Orientation_int* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_Qt_Orientation_int_int(qt_core_c_SlotWrapper_Qt_Orientation_int_int* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_bool(qt_core_c_SlotWrapper_bool* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_const_QItemSelection_ref(qt_core_c_SlotWrapper_const_QItemSelection_ref* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_const_QItemSelection_ref_const_QItemSelection_ref(qt_core_c_SlotWrapper_const_QItemSelection_ref_const_QItemSelection_ref* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_const_QList_QPersistentModelIndex_ref(qt_core_c_SlotWrapper_const_QList_QPersistentModelIndex_ref* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_const_QList_QPersistentModelIndex_ref_QAbstractItemModel_LayoutChangeHint(qt_core_c_SlotWrapper_const_QList_QPersistentModelIndex_ref_QAbstractItemModel_LayoutChangeHint* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_const_QModelIndex_ref(qt_core_c_SlotWrapper_const_QModelIndex_ref* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_const_QModelIndex_ref_const_QModelIndex_ref(qt_core_c_SlotWrapper_const_QModelIndex_ref_const_QModelIndex_ref* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_const_QModelIndex_ref_const_QModelIndex_ref_const_QVector_int_ref(qt_core_c_SlotWrapper_const_QModelIndex_ref_const_QModelIndex_ref_const_QVector_int_ref* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_const_QModelIndex_ref_int(qt_core_c_SlotWrapper_const_QModelIndex_ref_int* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int(qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_const_QModelIndex_ref(qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_const_QModelIndex_ref* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_const_QModelIndex_ref_int(qt_core_c_SlotWrapper_const_QModelIndex_ref_int_int_const_QModelIndex_ref_int* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_const_QString_ref(qt_core_c_SlotWrapper_const_QString_ref* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_const_QVariant_ref(qt_core_c_SlotWrapper_const_QVariant_ref* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_double(qt_core_c_SlotWrapper_double* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_int(qt_core_c_SlotWrapper_int* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_int_QProcess_ExitStatus(qt_core_c_SlotWrapper_int_QProcess_ExitStatus* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_int_qint64(qt_core_c_SlotWrapper_int_qint64* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_no_args(qt_core_c_SlotWrapper_no_args* ptr);
QT_CORE_C_EXPORT QObject* qt_core_c_slots_G_static_cast_QObject_ptr_qt_core_c_SlotWrapper_qint64(qt_core_c_SlotWrapper_qint64* ptr);

} // extern "C"

#endif // QT_CORE_C_SLOTS_H
