#ifndef QT_3D_INPUT_C_SLOTS_H
#define QT_3D_INPUT_C_SLOTS_H

#include "qt_3d_input_c_global.h"

// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_input_c_SlotWrapper_Qt3DInput_QAbstractPhysicalDevice_ptr : public QObject {
  Q_OBJECT
public:
  qt_3d_input_c_SlotWrapper_Qt3DInput_QAbstractPhysicalDevice_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DInput::QAbstractPhysicalDevice*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DInput::QAbstractPhysicalDevice* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DInput::QAbstractPhysicalDevice*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_input_c_SlotWrapper_const_QVector_int_ref : public QObject {
  Q_OBJECT
public:
  qt_3d_input_c_SlotWrapper_const_QVector_int_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QVector< int >*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QVector< int >& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QVector< int >*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_input_c_SlotWrapper_Qt3DInput_QAxis_ptr : public QObject {
  Q_OBJECT
public:
  qt_3d_input_c_SlotWrapper_Qt3DInput_QAxis_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DInput::QAxis*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DInput::QAxis* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DInput::QAxis*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_input_c_SlotWrapper_Qt3DInput_QAxisAccumulator_SourceAxisType : public QObject {
  Q_OBJECT
public:
  qt_3d_input_c_SlotWrapper_Qt3DInput_QAxisAccumulator_SourceAxisType() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const Qt3DInput::QAxisAccumulator::SourceAxisType*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DInput::QAxisAccumulator::SourceAxisType arg0) {
    if (m_func) {
      m_func(m_data, new Qt3DInput::QAxisAccumulator::SourceAxisType(arg0));
    }
  }

private:
  void (*m_func)(void*, const Qt3DInput::QAxisAccumulator::SourceAxisType*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyEvent_ptr : public QObject {
  Q_OBJECT
public:
  qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyEvent_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DInput::QKeyEvent*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DInput::QKeyEvent* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DInput::QKeyEvent*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_input_c_SlotWrapper_Qt3DInput_QMouseDevice_ptr : public QObject {
  Q_OBJECT
public:
  qt_3d_input_c_SlotWrapper_Qt3DInput_QMouseDevice_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DInput::QMouseDevice*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DInput::QMouseDevice* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DInput::QMouseDevice*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyboardHandler_ptr : public QObject {
  Q_OBJECT
public:
  qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyboardHandler_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DInput::QKeyboardHandler*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DInput::QKeyboardHandler* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DInput::QKeyboardHandler*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_input_c_SlotWrapper_Qt3DInput_QMouseEvent_ptr : public QObject {
  Q_OBJECT
public:
  qt_3d_input_c_SlotWrapper_Qt3DInput_QMouseEvent_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DInput::QMouseEvent*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DInput::QMouseEvent* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DInput::QMouseEvent*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyboardDevice_ptr : public QObject {
  Q_OBJECT
public:
  qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyboardDevice_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, Qt3DInput::QKeyboardDevice*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt3DInput::QKeyboardDevice* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, Qt3DInput::QKeyboardDevice*);
  void* m_data;
};
extern "C" {

QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QAbstractPhysicalDevice_ptr_custom_slot(qt_3d_input_c_SlotWrapper_Qt3DInput_QAbstractPhysicalDevice_ptr* this_ptr, Qt3DInput::QAbstractPhysicalDevice* arg0);
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QAbstractPhysicalDevice_ptr_delete(qt_3d_input_c_SlotWrapper_Qt3DInput_QAbstractPhysicalDevice_ptr* this_ptr);
QT_3D_INPUT_C_EXPORT qt_3d_input_c_SlotWrapper_Qt3DInput_QAbstractPhysicalDevice_ptr* qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QAbstractPhysicalDevice_ptr_new();
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QAbstractPhysicalDevice_ptr_set(qt_3d_input_c_SlotWrapper_Qt3DInput_QAbstractPhysicalDevice_ptr* this_ptr, void (*func)(void*, Qt3DInput::QAbstractPhysicalDevice*), void* data);
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QAxisAccumulator_SourceAxisType_custom_slot(qt_3d_input_c_SlotWrapper_Qt3DInput_QAxisAccumulator_SourceAxisType* this_ptr, const Qt3DInput::QAxisAccumulator::SourceAxisType* arg0);
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QAxisAccumulator_SourceAxisType_delete(qt_3d_input_c_SlotWrapper_Qt3DInput_QAxisAccumulator_SourceAxisType* this_ptr);
QT_3D_INPUT_C_EXPORT qt_3d_input_c_SlotWrapper_Qt3DInput_QAxisAccumulator_SourceAxisType* qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QAxisAccumulator_SourceAxisType_new();
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QAxisAccumulator_SourceAxisType_set(qt_3d_input_c_SlotWrapper_Qt3DInput_QAxisAccumulator_SourceAxisType* this_ptr, void (*func)(void*, const Qt3DInput::QAxisAccumulator::SourceAxisType*), void* data);
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QAxis_ptr_custom_slot(qt_3d_input_c_SlotWrapper_Qt3DInput_QAxis_ptr* this_ptr, Qt3DInput::QAxis* arg0);
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QAxis_ptr_delete(qt_3d_input_c_SlotWrapper_Qt3DInput_QAxis_ptr* this_ptr);
QT_3D_INPUT_C_EXPORT qt_3d_input_c_SlotWrapper_Qt3DInput_QAxis_ptr* qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QAxis_ptr_new();
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QAxis_ptr_set(qt_3d_input_c_SlotWrapper_Qt3DInput_QAxis_ptr* this_ptr, void (*func)(void*, Qt3DInput::QAxis*), void* data);
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyEvent_ptr_custom_slot(qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyEvent_ptr* this_ptr, Qt3DInput::QKeyEvent* arg0);
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyEvent_ptr_delete(qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyEvent_ptr* this_ptr);
QT_3D_INPUT_C_EXPORT qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyEvent_ptr* qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyEvent_ptr_new();
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyEvent_ptr_set(qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyEvent_ptr* this_ptr, void (*func)(void*, Qt3DInput::QKeyEvent*), void* data);
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyboardDevice_ptr_custom_slot(qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyboardDevice_ptr* this_ptr, Qt3DInput::QKeyboardDevice* arg0);
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyboardDevice_ptr_delete(qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyboardDevice_ptr* this_ptr);
QT_3D_INPUT_C_EXPORT qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyboardDevice_ptr* qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyboardDevice_ptr_new();
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyboardDevice_ptr_set(qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyboardDevice_ptr* this_ptr, void (*func)(void*, Qt3DInput::QKeyboardDevice*), void* data);
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyboardHandler_ptr_custom_slot(qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyboardHandler_ptr* this_ptr, Qt3DInput::QKeyboardHandler* arg0);
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyboardHandler_ptr_delete(qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyboardHandler_ptr* this_ptr);
QT_3D_INPUT_C_EXPORT qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyboardHandler_ptr* qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyboardHandler_ptr_new();
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyboardHandler_ptr_set(qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyboardHandler_ptr* this_ptr, void (*func)(void*, Qt3DInput::QKeyboardHandler*), void* data);
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QMouseDevice_ptr_custom_slot(qt_3d_input_c_SlotWrapper_Qt3DInput_QMouseDevice_ptr* this_ptr, Qt3DInput::QMouseDevice* arg0);
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QMouseDevice_ptr_delete(qt_3d_input_c_SlotWrapper_Qt3DInput_QMouseDevice_ptr* this_ptr);
QT_3D_INPUT_C_EXPORT qt_3d_input_c_SlotWrapper_Qt3DInput_QMouseDevice_ptr* qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QMouseDevice_ptr_new();
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QMouseDevice_ptr_set(qt_3d_input_c_SlotWrapper_Qt3DInput_QMouseDevice_ptr* this_ptr, void (*func)(void*, Qt3DInput::QMouseDevice*), void* data);
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QMouseEvent_ptr_custom_slot(qt_3d_input_c_SlotWrapper_Qt3DInput_QMouseEvent_ptr* this_ptr, Qt3DInput::QMouseEvent* arg0);
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QMouseEvent_ptr_delete(qt_3d_input_c_SlotWrapper_Qt3DInput_QMouseEvent_ptr* this_ptr);
QT_3D_INPUT_C_EXPORT qt_3d_input_c_SlotWrapper_Qt3DInput_QMouseEvent_ptr* qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QMouseEvent_ptr_new();
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_Qt3DInput_QMouseEvent_ptr_set(qt_3d_input_c_SlotWrapper_Qt3DInput_QMouseEvent_ptr* this_ptr, void (*func)(void*, Qt3DInput::QMouseEvent*), void* data);
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_const_QVector_int_ref_custom_slot(qt_3d_input_c_SlotWrapper_const_QVector_int_ref* this_ptr, const QVector< int >* arg0);
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_const_QVector_int_ref_delete(qt_3d_input_c_SlotWrapper_const_QVector_int_ref* this_ptr);
QT_3D_INPUT_C_EXPORT qt_3d_input_c_SlotWrapper_const_QVector_int_ref* qt_3d_input_c_qt_3d_input_c_SlotWrapper_const_QVector_int_ref_new();
QT_3D_INPUT_C_EXPORT void qt_3d_input_c_qt_3d_input_c_SlotWrapper_const_QVector_int_ref_set(qt_3d_input_c_SlotWrapper_const_QVector_int_ref* this_ptr, void (*func)(void*, const QVector< int >*), void* data);
QT_3D_INPUT_C_EXPORT QObject* qt_3d_input_c_slots_G_static_cast_QObject_ptr_qt_3d_input_c_SlotWrapper_Qt3DInput_QAbstractPhysicalDevice_ptr(qt_3d_input_c_SlotWrapper_Qt3DInput_QAbstractPhysicalDevice_ptr* ptr);
QT_3D_INPUT_C_EXPORT QObject* qt_3d_input_c_slots_G_static_cast_QObject_ptr_qt_3d_input_c_SlotWrapper_Qt3DInput_QAxisAccumulator_SourceAxisType(qt_3d_input_c_SlotWrapper_Qt3DInput_QAxisAccumulator_SourceAxisType* ptr);
QT_3D_INPUT_C_EXPORT QObject* qt_3d_input_c_slots_G_static_cast_QObject_ptr_qt_3d_input_c_SlotWrapper_Qt3DInput_QAxis_ptr(qt_3d_input_c_SlotWrapper_Qt3DInput_QAxis_ptr* ptr);
QT_3D_INPUT_C_EXPORT QObject* qt_3d_input_c_slots_G_static_cast_QObject_ptr_qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyEvent_ptr(qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyEvent_ptr* ptr);
QT_3D_INPUT_C_EXPORT QObject* qt_3d_input_c_slots_G_static_cast_QObject_ptr_qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyboardDevice_ptr(qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyboardDevice_ptr* ptr);
QT_3D_INPUT_C_EXPORT QObject* qt_3d_input_c_slots_G_static_cast_QObject_ptr_qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyboardHandler_ptr(qt_3d_input_c_SlotWrapper_Qt3DInput_QKeyboardHandler_ptr* ptr);
QT_3D_INPUT_C_EXPORT QObject* qt_3d_input_c_slots_G_static_cast_QObject_ptr_qt_3d_input_c_SlotWrapper_Qt3DInput_QMouseDevice_ptr(qt_3d_input_c_SlotWrapper_Qt3DInput_QMouseDevice_ptr* ptr);
QT_3D_INPUT_C_EXPORT QObject* qt_3d_input_c_slots_G_static_cast_QObject_ptr_qt_3d_input_c_SlotWrapper_Qt3DInput_QMouseEvent_ptr(qt_3d_input_c_SlotWrapper_Qt3DInput_QMouseEvent_ptr* ptr);
QT_3D_INPUT_C_EXPORT QObject* qt_3d_input_c_slots_G_static_cast_QObject_ptr_qt_3d_input_c_SlotWrapper_const_QVector_int_ref(qt_3d_input_c_SlotWrapper_const_QVector_int_ref* ptr);

} // extern "C"

#endif // QT_3D_INPUT_C_SLOTS_H
