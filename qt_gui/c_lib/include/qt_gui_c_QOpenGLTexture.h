#ifndef QT_GUI_C_QOPENGLTEXTURE_H
#define QT_GUI_C_QOPENGLTEXTURE_H

#include "qt_gui_c_global.h"

extern "C" {

QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_allocateStorage_no_args(QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_allocateStorage_pixelFormat_pixelType(QOpenGLTexture* this_ptr, QOpenGLTexture::PixelFormat pixelFormat, QOpenGLTexture::PixelType pixelType);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_bind_no_args(QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_bind_unit(QOpenGLTexture* this_ptr, unsigned int unit);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_bind_unit_reset(QOpenGLTexture* this_ptr, unsigned int unit, QOpenGLTexture::TextureUnitReset reset);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_borderColor_float(const QOpenGLTexture* this_ptr, float* border);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_borderColor_int(const QOpenGLTexture* this_ptr, int* border);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_borderColor_to_output(const QOpenGLTexture* this_ptr, QColor* output);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_borderColor_unsigned_int(const QOpenGLTexture* this_ptr, unsigned int* border);
QT_GUI_C_EXPORT GLuint qt_gui_c_QOpenGLTexture_boundTextureId_target(QOpenGLTexture::BindingTarget target);
QT_GUI_C_EXPORT GLuint qt_gui_c_QOpenGLTexture_boundTextureId_unit_target(unsigned int unit, QOpenGLTexture::BindingTarget target);
QT_GUI_C_EXPORT QOpenGLTexture::ComparisonFunction qt_gui_c_QOpenGLTexture_comparisonFunction(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT QOpenGLTexture::ComparisonMode qt_gui_c_QOpenGLTexture_comparisonMode(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT bool qt_gui_c_QOpenGLTexture_create(QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT QOpenGLTexture* qt_gui_c_QOpenGLTexture_createTextureView(const QOpenGLTexture* this_ptr, QOpenGLTexture::Target target, QOpenGLTexture::TextureFormat viewFormat, int minimumMipmapLevel, int maximumMipmapLevel, int minimumLayer, int maximumLayer);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_delete(QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT int qt_gui_c_QOpenGLTexture_depth(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT QOpenGLTexture::DepthStencilMode qt_gui_c_QOpenGLTexture_depthStencilMode(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_destroy(QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT int qt_gui_c_QOpenGLTexture_faces(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT QOpenGLTexture::TextureFormat qt_gui_c_QOpenGLTexture_format(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_generateMipMaps_baseLevel(QOpenGLTexture* this_ptr, int baseLevel);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_generateMipMaps_baseLevel_resetBaseLevel(QOpenGLTexture* this_ptr, int baseLevel, bool resetBaseLevel);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_generateMipMaps_no_args(QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT bool qt_gui_c_QOpenGLTexture_hasFeature(QOpenGLTexture::Feature feature);
QT_GUI_C_EXPORT int qt_gui_c_QOpenGLTexture_height(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT bool qt_gui_c_QOpenGLTexture_isAutoMipMapGenerationEnabled(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT bool qt_gui_c_QOpenGLTexture_isBound_no_args(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT bool qt_gui_c_QOpenGLTexture_isBound_unit(QOpenGLTexture* this_ptr, unsigned int unit);
QT_GUI_C_EXPORT bool qt_gui_c_QOpenGLTexture_isCreated(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT bool qt_gui_c_QOpenGLTexture_isFixedSamplePositions(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT bool qt_gui_c_QOpenGLTexture_isStorageAllocated(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT bool qt_gui_c_QOpenGLTexture_isTextureView(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT int qt_gui_c_QOpenGLTexture_layers(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_levelOfDetailRange_to_output(const QOpenGLTexture* this_ptr, QPair< float, float >* output);
QT_GUI_C_EXPORT float qt_gui_c_QOpenGLTexture_levelofDetailBias(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT QOpenGLTexture::Filter qt_gui_c_QOpenGLTexture_magnificationFilter(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT float qt_gui_c_QOpenGLTexture_maximumAnisotropy(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT float qt_gui_c_QOpenGLTexture_maximumLevelOfDetail(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT int qt_gui_c_QOpenGLTexture_maximumMipLevels(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_minMagFilters_to_output(const QOpenGLTexture* this_ptr, QPair< QOpenGLTexture::Filter, QOpenGLTexture::Filter >* output);
QT_GUI_C_EXPORT QOpenGLTexture::Filter qt_gui_c_QOpenGLTexture_minificationFilter(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT float qt_gui_c_QOpenGLTexture_minimumLevelOfDetail(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT int qt_gui_c_QOpenGLTexture_mipBaseLevel(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_mipLevelRange_to_output(const QOpenGLTexture* this_ptr, QPair< int, int >* output);
QT_GUI_C_EXPORT int qt_gui_c_QOpenGLTexture_mipLevels(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT int qt_gui_c_QOpenGLTexture_mipMaxLevel(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT QOpenGLTexture* qt_gui_c_QOpenGLTexture_new_image(const QImage* image);
QT_GUI_C_EXPORT QOpenGLTexture* qt_gui_c_QOpenGLTexture_new_image_genMipMaps(const QImage* image, QOpenGLTexture::MipMapGeneration genMipMaps);
QT_GUI_C_EXPORT QOpenGLTexture* qt_gui_c_QOpenGLTexture_new_target(QOpenGLTexture::Target target);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_release_no_args(QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_release_unit(QOpenGLTexture* this_ptr, unsigned int unit);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_release_unit_reset(QOpenGLTexture* this_ptr, unsigned int unit, QOpenGLTexture::TextureUnitReset reset);
QT_GUI_C_EXPORT int qt_gui_c_QOpenGLTexture_samples(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setAutoMipMapGenerationEnabled(QOpenGLTexture* this_ptr, bool enabled);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setBorderColor_QColor(QOpenGLTexture* this_ptr, const QColor* color);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setBorderColor_float_float_float_float(QOpenGLTexture* this_ptr, float r, float g, float b, float a);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setBorderColor_int_int_int_int(QOpenGLTexture* this_ptr, int r, int g, int b, int a);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setBorderColor_unsigned_int_unsigned_int_unsigned_int_unsigned_int(QOpenGLTexture* this_ptr, unsigned int r, unsigned int g, unsigned int b, unsigned int a);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setComparisonFunction(QOpenGLTexture* this_ptr, QOpenGLTexture::ComparisonFunction function);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setComparisonMode(QOpenGLTexture* this_ptr, QOpenGLTexture::ComparisonMode mode);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setCompressedData_int_const_void_ptr(QOpenGLTexture* this_ptr, int dataSize, const void* data);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setCompressedData_int_const_void_ptr_const_QOpenGLPixelTransferOptions_ptr(QOpenGLTexture* this_ptr, int dataSize, const void* data, const QOpenGLPixelTransferOptions* options);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setCompressedData_int_int_QOpenGLTexture_CubeMapFace_int_const_void_ptr(QOpenGLTexture* this_ptr, int mipLevel, int layer, QOpenGLTexture::CubeMapFace cubeFace, int dataSize, const void* data);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setCompressedData_int_int_QOpenGLTexture_CubeMapFace_int_const_void_ptr_const_QOpenGLPixelTransferOptions_ptr(QOpenGLTexture* this_ptr, int mipLevel, int layer, QOpenGLTexture::CubeMapFace cubeFace, int dataSize, const void* data, const QOpenGLPixelTransferOptions* options);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setCompressedData_int_int_QOpenGLTexture_CubeMapFace_int_void_ptr(QOpenGLTexture* this_ptr, int mipLevel, int layer, QOpenGLTexture::CubeMapFace cubeFace, int dataSize, void* data);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setCompressedData_int_int_QOpenGLTexture_CubeMapFace_int_void_ptr_const_QOpenGLPixelTransferOptions_ptr(QOpenGLTexture* this_ptr, int mipLevel, int layer, QOpenGLTexture::CubeMapFace cubeFace, int dataSize, void* data, const QOpenGLPixelTransferOptions* options);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setCompressedData_int_int_const_void_ptr(QOpenGLTexture* this_ptr, int mipLevel, int dataSize, const void* data);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setCompressedData_int_int_const_void_ptr_const_QOpenGLPixelTransferOptions_ptr(QOpenGLTexture* this_ptr, int mipLevel, int dataSize, const void* data, const QOpenGLPixelTransferOptions* options);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setCompressedData_int_int_int_QOpenGLTexture_CubeMapFace_int_const_void_ptr(QOpenGLTexture* this_ptr, int mipLevel, int layer, int layerCount, QOpenGLTexture::CubeMapFace cubeFace, int dataSize, const void* data);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setCompressedData_int_int_int_QOpenGLTexture_CubeMapFace_int_const_void_ptr_const_QOpenGLPixelTransferOptions_ptr(QOpenGLTexture* this_ptr, int mipLevel, int layer, int layerCount, QOpenGLTexture::CubeMapFace cubeFace, int dataSize, const void* data, const QOpenGLPixelTransferOptions* options);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setCompressedData_int_int_int_const_void_ptr(QOpenGLTexture* this_ptr, int mipLevel, int layer, int dataSize, const void* data);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setCompressedData_int_int_int_const_void_ptr_const_QOpenGLPixelTransferOptions_ptr(QOpenGLTexture* this_ptr, int mipLevel, int layer, int dataSize, const void* data, const QOpenGLPixelTransferOptions* options);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setCompressedData_int_int_int_void_ptr(QOpenGLTexture* this_ptr, int mipLevel, int layer, int dataSize, void* data);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setCompressedData_int_int_int_void_ptr_const_QOpenGLPixelTransferOptions_ptr(QOpenGLTexture* this_ptr, int mipLevel, int layer, int dataSize, void* data, const QOpenGLPixelTransferOptions* options);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setCompressedData_int_int_void_ptr(QOpenGLTexture* this_ptr, int mipLevel, int dataSize, void* data);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setCompressedData_int_int_void_ptr_const_QOpenGLPixelTransferOptions_ptr(QOpenGLTexture* this_ptr, int mipLevel, int dataSize, void* data, const QOpenGLPixelTransferOptions* options);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setCompressedData_int_void_ptr(QOpenGLTexture* this_ptr, int dataSize, void* data);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setCompressedData_int_void_ptr_const_QOpenGLPixelTransferOptions_ptr(QOpenGLTexture* this_ptr, int dataSize, void* data, const QOpenGLPixelTransferOptions* options);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setData_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_const_void_ptr(QOpenGLTexture* this_ptr, QOpenGLTexture::PixelFormat sourceFormat, QOpenGLTexture::PixelType sourceType, const void* data);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setData_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_const_void_ptr_const_QOpenGLPixelTransferOptions_ptr(QOpenGLTexture* this_ptr, QOpenGLTexture::PixelFormat sourceFormat, QOpenGLTexture::PixelType sourceType, const void* data, const QOpenGLPixelTransferOptions* options);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setData_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_void_ptr(QOpenGLTexture* this_ptr, QOpenGLTexture::PixelFormat sourceFormat, QOpenGLTexture::PixelType sourceType, void* data);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setData_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_void_ptr_const_QOpenGLPixelTransferOptions_ptr(QOpenGLTexture* this_ptr, QOpenGLTexture::PixelFormat sourceFormat, QOpenGLTexture::PixelType sourceType, void* data, const QOpenGLPixelTransferOptions* options);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setData_const_QImage_ref(QOpenGLTexture* this_ptr, const QImage* image);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setData_const_QImage_ref_QOpenGLTexture_MipMapGeneration(QOpenGLTexture* this_ptr, const QImage* image, QOpenGLTexture::MipMapGeneration genMipMaps);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setData_int_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_const_void_ptr(QOpenGLTexture* this_ptr, int mipLevel, QOpenGLTexture::PixelFormat sourceFormat, QOpenGLTexture::PixelType sourceType, const void* data);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setData_int_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_const_void_ptr_const_QOpenGLPixelTransferOptions_ptr(QOpenGLTexture* this_ptr, int mipLevel, QOpenGLTexture::PixelFormat sourceFormat, QOpenGLTexture::PixelType sourceType, const void* data, const QOpenGLPixelTransferOptions* options);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setData_int_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_void_ptr(QOpenGLTexture* this_ptr, int mipLevel, QOpenGLTexture::PixelFormat sourceFormat, QOpenGLTexture::PixelType sourceType, void* data);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setData_int_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_void_ptr_const_QOpenGLPixelTransferOptions_ptr(QOpenGLTexture* this_ptr, int mipLevel, QOpenGLTexture::PixelFormat sourceFormat, QOpenGLTexture::PixelType sourceType, void* data, const QOpenGLPixelTransferOptions* options);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setData_int_int_QOpenGLTexture_CubeMapFace_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_const_void_ptr(QOpenGLTexture* this_ptr, int mipLevel, int layer, QOpenGLTexture::CubeMapFace cubeFace, QOpenGLTexture::PixelFormat sourceFormat, QOpenGLTexture::PixelType sourceType, const void* data);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setData_int_int_QOpenGLTexture_CubeMapFace_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_const_void_ptr_const_QOpenGLPixelTransferOptions_ptr(QOpenGLTexture* this_ptr, int mipLevel, int layer, QOpenGLTexture::CubeMapFace cubeFace, QOpenGLTexture::PixelFormat sourceFormat, QOpenGLTexture::PixelType sourceType, const void* data, const QOpenGLPixelTransferOptions* options);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setData_int_int_QOpenGLTexture_CubeMapFace_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_void_ptr(QOpenGLTexture* this_ptr, int mipLevel, int layer, QOpenGLTexture::CubeMapFace cubeFace, QOpenGLTexture::PixelFormat sourceFormat, QOpenGLTexture::PixelType sourceType, void* data);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setData_int_int_QOpenGLTexture_CubeMapFace_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_void_ptr_const_QOpenGLPixelTransferOptions_ptr(QOpenGLTexture* this_ptr, int mipLevel, int layer, QOpenGLTexture::CubeMapFace cubeFace, QOpenGLTexture::PixelFormat sourceFormat, QOpenGLTexture::PixelType sourceType, void* data, const QOpenGLPixelTransferOptions* options);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setData_int_int_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_const_void_ptr(QOpenGLTexture* this_ptr, int mipLevel, int layer, QOpenGLTexture::PixelFormat sourceFormat, QOpenGLTexture::PixelType sourceType, const void* data);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setData_int_int_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_const_void_ptr_const_QOpenGLPixelTransferOptions_ptr(QOpenGLTexture* this_ptr, int mipLevel, int layer, QOpenGLTexture::PixelFormat sourceFormat, QOpenGLTexture::PixelType sourceType, const void* data, const QOpenGLPixelTransferOptions* options);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setData_int_int_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_void_ptr(QOpenGLTexture* this_ptr, int mipLevel, int layer, QOpenGLTexture::PixelFormat sourceFormat, QOpenGLTexture::PixelType sourceType, void* data);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setData_int_int_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_void_ptr_const_QOpenGLPixelTransferOptions_ptr(QOpenGLTexture* this_ptr, int mipLevel, int layer, QOpenGLTexture::PixelFormat sourceFormat, QOpenGLTexture::PixelType sourceType, void* data, const QOpenGLPixelTransferOptions* options);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setData_int_int_int_QOpenGLTexture_CubeMapFace_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_const_void_ptr(QOpenGLTexture* this_ptr, int mipLevel, int layer, int layerCount, QOpenGLTexture::CubeMapFace cubeFace, QOpenGLTexture::PixelFormat sourceFormat, QOpenGLTexture::PixelType sourceType, const void* data);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setData_int_int_int_QOpenGLTexture_CubeMapFace_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_const_void_ptr_const_QOpenGLPixelTransferOptions_ptr(QOpenGLTexture* this_ptr, int mipLevel, int layer, int layerCount, QOpenGLTexture::CubeMapFace cubeFace, QOpenGLTexture::PixelFormat sourceFormat, QOpenGLTexture::PixelType sourceType, const void* data, const QOpenGLPixelTransferOptions* options);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setDepthStencilMode(QOpenGLTexture* this_ptr, QOpenGLTexture::DepthStencilMode mode);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setFixedSamplePositions(QOpenGLTexture* this_ptr, bool fixed);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setFormat(QOpenGLTexture* this_ptr, QOpenGLTexture::TextureFormat format);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setLayers(QOpenGLTexture* this_ptr, int layers);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setLevelOfDetailRange(QOpenGLTexture* this_ptr, float min, float max);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setLevelofDetailBias(QOpenGLTexture* this_ptr, float bias);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setMagnificationFilter(QOpenGLTexture* this_ptr, QOpenGLTexture::Filter filter);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setMaximumAnisotropy(QOpenGLTexture* this_ptr, float anisotropy);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setMaximumLevelOfDetail(QOpenGLTexture* this_ptr, float value);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setMinMagFilters(QOpenGLTexture* this_ptr, QOpenGLTexture::Filter minificationFilter, QOpenGLTexture::Filter magnificationFilter);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setMinificationFilter(QOpenGLTexture* this_ptr, QOpenGLTexture::Filter filter);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setMinimumLevelOfDetail(QOpenGLTexture* this_ptr, float value);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setMipBaseLevel(QOpenGLTexture* this_ptr, int baseLevel);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setMipLevelRange(QOpenGLTexture* this_ptr, int baseLevel, int maxLevel);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setMipLevels(QOpenGLTexture* this_ptr, int levels);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setMipMaxLevel(QOpenGLTexture* this_ptr, int maxLevel);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setSamples(QOpenGLTexture* this_ptr, int samples);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setSize_width(QOpenGLTexture* this_ptr, int width);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setSize_width_height(QOpenGLTexture* this_ptr, int width, int height);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setSize_width_height_depth(QOpenGLTexture* this_ptr, int width, int height, int depth);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setSwizzleMask_component_value(QOpenGLTexture* this_ptr, QOpenGLTexture::SwizzleComponent component, QOpenGLTexture::SwizzleValue value);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setSwizzleMask_r_g_b_a(QOpenGLTexture* this_ptr, QOpenGLTexture::SwizzleValue r, QOpenGLTexture::SwizzleValue g, QOpenGLTexture::SwizzleValue b, QOpenGLTexture::SwizzleValue a);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setWrapMode_direction_mode(QOpenGLTexture* this_ptr, QOpenGLTexture::CoordinateDirection direction, QOpenGLTexture::WrapMode mode);
QT_GUI_C_EXPORT void qt_gui_c_QOpenGLTexture_setWrapMode_mode(QOpenGLTexture* this_ptr, QOpenGLTexture::WrapMode mode);
QT_GUI_C_EXPORT QOpenGLTexture::SwizzleValue qt_gui_c_QOpenGLTexture_swizzleMask(const QOpenGLTexture* this_ptr, QOpenGLTexture::SwizzleComponent component);
QT_GUI_C_EXPORT QOpenGLTexture::Target qt_gui_c_QOpenGLTexture_target(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT GLuint qt_gui_c_QOpenGLTexture_textureId(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT int qt_gui_c_QOpenGLTexture_width(const QOpenGLTexture* this_ptr);
QT_GUI_C_EXPORT QOpenGLTexture::WrapMode qt_gui_c_QOpenGLTexture_wrapMode(const QOpenGLTexture* this_ptr, QOpenGLTexture::CoordinateDirection direction);

} // extern "C"

#endif // QT_GUI_C_QOPENGLTEXTURE_H
