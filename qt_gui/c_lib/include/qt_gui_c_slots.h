#ifndef QT_GUI_C_SLOTS_H
#define QT_GUI_C_SLOTS_H

#include "qt_gui_c_global.h"

// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_const_QSizeF_ref : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_const_QSizeF_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QSizeF*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QSizeF& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QSizeF*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_Qt_WindowModality : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_Qt_WindowModality() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const Qt::WindowModality*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt::WindowModality arg0) {
    if (m_func) {
      m_func(m_data, new Qt::WindowModality(arg0));
    }
  }

private:
  void (*m_func)(void*, const Qt::WindowModality*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_const_QRegExp_ref : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_const_QRegExp_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QRegExp*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QRegExp& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QRegExp*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_QStandardItem_ptr : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_QStandardItem_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QStandardItem*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QStandardItem* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, QStandardItem*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_const_QRect_ref : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_const_QRect_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QRect*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QRect& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QRect*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_Qt_ScreenOrientation : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_Qt_ScreenOrientation() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const Qt::ScreenOrientation*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt::ScreenOrientation arg0) {
    if (m_func) {
      m_func(m_data, new Qt::ScreenOrientation(arg0));
    }
  }

private:
  void (*m_func)(void*, const Qt::ScreenOrientation*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_const_QRectF_ref : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_const_QRectF_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QRectF*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QRectF& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QRectF*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_QWindow_ptr : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_QWindow_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QWindow*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QWindow* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, QWindow*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_const_QTextBlock_ref : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_const_QTextBlock_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QTextBlock*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QTextBlock& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QTextBlock*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_const_QPalette_ref : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_const_QPalette_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QPalette*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QPalette& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QPalette*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_QWindow_Visibility : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_QWindow_Visibility() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QWindow::Visibility*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QWindow::Visibility arg0) {
    if (m_func) {
      m_func(m_data, new QWindow::Visibility(arg0));
    }
  }

private:
  void (*m_func)(void*, const QWindow::Visibility*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_Qt_DropAction : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_Qt_DropAction() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const Qt::DropAction*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt::DropAction arg0) {
    if (m_func) {
      m_func(m_data, new Qt::DropAction(arg0));
    }
  }

private:
  void (*m_func)(void*, const Qt::DropAction*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_Qt_ApplicationState : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_Qt_ApplicationState() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const Qt::ApplicationState*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt::ApplicationState arg0) {
    if (m_func) {
      m_func(m_data, new Qt::ApplicationState(arg0));
    }
  }

private:
  void (*m_func)(void*, const Qt::ApplicationState*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_int_int : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_int_int() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, int, int), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(int arg0, int arg1) {
    if (m_func) {
      m_func(m_data, arg0, arg1);
    }
  }

private:
  void (*m_func)(void*, int, int);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_Qt_TabFocusBehavior : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_Qt_TabFocusBehavior() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const Qt::TabFocusBehavior*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt::TabFocusBehavior arg0) {
    if (m_func) {
      m_func(m_data, new Qt::TabFocusBehavior(arg0));
    }
  }

private:
  void (*m_func)(void*, const Qt::TabFocusBehavior*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_QImageReader_ImageReaderError : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_QImageReader_ImageReaderError() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QImageReader::ImageReaderError*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QImageReader::ImageReaderError arg0) {
    if (m_func) {
      m_func(m_data, new QImageReader::ImageReaderError(arg0));
    }
  }

private:
  void (*m_func)(void*, const QImageReader::ImageReaderError*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_const_QRegularExpression_ref : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_const_QRegularExpression_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QRegularExpression*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QRegularExpression& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QRegularExpression*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_const_QOpenGLDebugMessage_ref : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_const_QOpenGLDebugMessage_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QOpenGLDebugMessage*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QOpenGLDebugMessage& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QOpenGLDebugMessage*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_const_QSize_ref : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_const_QSize_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QSize*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QSize& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QSize*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_QMovie_MovieState : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_QMovie_MovieState() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QMovie::MovieState*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QMovie::MovieState arg0) {
    if (m_func) {
      m_func(m_data, new QMovie::MovieState(arg0));
    }
  }

private:
  void (*m_func)(void*, const QMovie::MovieState*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_QClipboard_Mode : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_QClipboard_Mode() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QClipboard::Mode*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QClipboard::Mode arg0) {
    if (m_func) {
      m_func(m_data, new QClipboard::Mode(arg0));
    }
  }

private:
  void (*m_func)(void*, const QClipboard::Mode*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_const_QTextCursor_ref : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_const_QTextCursor_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QTextCursor*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QTextCursor& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QTextCursor*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_QScreen_ptr : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_QScreen_ptr() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QScreen*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QScreen* arg0) {
    if (m_func) {
      m_func(m_data, arg0);
    }
  }

private:
  void (*m_func)(void*, QScreen*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_const_QUrl_ref : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_const_QUrl_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QUrl*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(const QUrl& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, const QUrl*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_Qt_WindowState : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_Qt_WindowState() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const Qt::WindowState*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt::WindowState arg0) {
    if (m_func) {
      m_func(m_data, new Qt::WindowState(arg0));
    }
  }

private:
  void (*m_func)(void*, const Qt::WindowState*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_Qt_LayoutDirection : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_Qt_LayoutDirection() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const Qt::LayoutDirection*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(Qt::LayoutDirection arg0) {
    if (m_func) {
      m_func(m_data, new Qt::LayoutDirection(arg0));
    }
  }

private:
  void (*m_func)(void*, const Qt::LayoutDirection*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_QSessionManager_ref : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_QSessionManager_ref() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, QSessionManager*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QSessionManager& arg0) {
    if (m_func) {
      m_func(m_data, &arg0);
    }
  }

private:
  void (*m_func)(void*, QSessionManager*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_QDoubleValidator_Notation : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_QDoubleValidator_Notation() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, const QDoubleValidator::Notation*), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(QDoubleValidator::Notation arg0) {
    if (m_func) {
      m_func(m_data, new QDoubleValidator::Notation(arg0));
    }
  }

private:
  void (*m_func)(void*, const QDoubleValidator::Notation*);
  void* m_data;
};
// Class generated by cpp_to_rust.
// See the template at "cpp_to_rust/cpp_to_rust_generator/templates/c_lib/qt_slot_wrapper.h".
class qt_gui_c_SlotWrapper_int_int_int : public QObject {
  Q_OBJECT
public:
  qt_gui_c_SlotWrapper_int_int_int() : m_func(0), m_data(0) { }
  void set(void (*func)(void*, int, int, int), void* data) {
    m_func = func;
    m_data = data;
  }

public slots:
  void custom_slot(int arg0, int arg1, int arg2) {
    if (m_func) {
      m_func(m_data, arg0, arg1, arg2);
    }
  }

private:
  void (*m_func)(void*, int, int, int);
  void* m_data;
};
extern "C" {

QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QClipboard_Mode_custom_slot(qt_gui_c_SlotWrapper_QClipboard_Mode* this_ptr, const QClipboard::Mode* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QClipboard_Mode_delete(qt_gui_c_SlotWrapper_QClipboard_Mode* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_QClipboard_Mode* qt_gui_c_qt_gui_c_SlotWrapper_QClipboard_Mode_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QClipboard_Mode_set(qt_gui_c_SlotWrapper_QClipboard_Mode* this_ptr, void (*func)(void*, const QClipboard::Mode*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QDoubleValidator_Notation_custom_slot(qt_gui_c_SlotWrapper_QDoubleValidator_Notation* this_ptr, const QDoubleValidator::Notation* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QDoubleValidator_Notation_delete(qt_gui_c_SlotWrapper_QDoubleValidator_Notation* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_QDoubleValidator_Notation* qt_gui_c_qt_gui_c_SlotWrapper_QDoubleValidator_Notation_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QDoubleValidator_Notation_set(qt_gui_c_SlotWrapper_QDoubleValidator_Notation* this_ptr, void (*func)(void*, const QDoubleValidator::Notation*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QImageReader_ImageReaderError_custom_slot(qt_gui_c_SlotWrapper_QImageReader_ImageReaderError* this_ptr, const QImageReader::ImageReaderError* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QImageReader_ImageReaderError_delete(qt_gui_c_SlotWrapper_QImageReader_ImageReaderError* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_QImageReader_ImageReaderError* qt_gui_c_qt_gui_c_SlotWrapper_QImageReader_ImageReaderError_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QImageReader_ImageReaderError_set(qt_gui_c_SlotWrapper_QImageReader_ImageReaderError* this_ptr, void (*func)(void*, const QImageReader::ImageReaderError*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QMovie_MovieState_custom_slot(qt_gui_c_SlotWrapper_QMovie_MovieState* this_ptr, const QMovie::MovieState* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QMovie_MovieState_delete(qt_gui_c_SlotWrapper_QMovie_MovieState* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_QMovie_MovieState* qt_gui_c_qt_gui_c_SlotWrapper_QMovie_MovieState_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QMovie_MovieState_set(qt_gui_c_SlotWrapper_QMovie_MovieState* this_ptr, void (*func)(void*, const QMovie::MovieState*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QScreen_ptr_custom_slot(qt_gui_c_SlotWrapper_QScreen_ptr* this_ptr, QScreen* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QScreen_ptr_delete(qt_gui_c_SlotWrapper_QScreen_ptr* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_QScreen_ptr* qt_gui_c_qt_gui_c_SlotWrapper_QScreen_ptr_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QScreen_ptr_set(qt_gui_c_SlotWrapper_QScreen_ptr* this_ptr, void (*func)(void*, QScreen*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QSessionManager_ref_custom_slot(qt_gui_c_SlotWrapper_QSessionManager_ref* this_ptr, QSessionManager* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QSessionManager_ref_delete(qt_gui_c_SlotWrapper_QSessionManager_ref* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_QSessionManager_ref* qt_gui_c_qt_gui_c_SlotWrapper_QSessionManager_ref_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QSessionManager_ref_set(qt_gui_c_SlotWrapper_QSessionManager_ref* this_ptr, void (*func)(void*, QSessionManager*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QStandardItem_ptr_custom_slot(qt_gui_c_SlotWrapper_QStandardItem_ptr* this_ptr, QStandardItem* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QStandardItem_ptr_delete(qt_gui_c_SlotWrapper_QStandardItem_ptr* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_QStandardItem_ptr* qt_gui_c_qt_gui_c_SlotWrapper_QStandardItem_ptr_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QStandardItem_ptr_set(qt_gui_c_SlotWrapper_QStandardItem_ptr* this_ptr, void (*func)(void*, QStandardItem*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QWindow_Visibility_custom_slot(qt_gui_c_SlotWrapper_QWindow_Visibility* this_ptr, const QWindow::Visibility* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QWindow_Visibility_delete(qt_gui_c_SlotWrapper_QWindow_Visibility* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_QWindow_Visibility* qt_gui_c_qt_gui_c_SlotWrapper_QWindow_Visibility_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QWindow_Visibility_set(qt_gui_c_SlotWrapper_QWindow_Visibility* this_ptr, void (*func)(void*, const QWindow::Visibility*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QWindow_ptr_custom_slot(qt_gui_c_SlotWrapper_QWindow_ptr* this_ptr, QWindow* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QWindow_ptr_delete(qt_gui_c_SlotWrapper_QWindow_ptr* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_QWindow_ptr* qt_gui_c_qt_gui_c_SlotWrapper_QWindow_ptr_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_QWindow_ptr_set(qt_gui_c_SlotWrapper_QWindow_ptr* this_ptr, void (*func)(void*, QWindow*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_Qt_ApplicationState_custom_slot(qt_gui_c_SlotWrapper_Qt_ApplicationState* this_ptr, const Qt::ApplicationState* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_Qt_ApplicationState_delete(qt_gui_c_SlotWrapper_Qt_ApplicationState* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_Qt_ApplicationState* qt_gui_c_qt_gui_c_SlotWrapper_Qt_ApplicationState_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_Qt_ApplicationState_set(qt_gui_c_SlotWrapper_Qt_ApplicationState* this_ptr, void (*func)(void*, const Qt::ApplicationState*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_Qt_DropAction_custom_slot(qt_gui_c_SlotWrapper_Qt_DropAction* this_ptr, const Qt::DropAction* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_Qt_DropAction_delete(qt_gui_c_SlotWrapper_Qt_DropAction* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_Qt_DropAction* qt_gui_c_qt_gui_c_SlotWrapper_Qt_DropAction_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_Qt_DropAction_set(qt_gui_c_SlotWrapper_Qt_DropAction* this_ptr, void (*func)(void*, const Qt::DropAction*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_Qt_LayoutDirection_custom_slot(qt_gui_c_SlotWrapper_Qt_LayoutDirection* this_ptr, const Qt::LayoutDirection* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_Qt_LayoutDirection_delete(qt_gui_c_SlotWrapper_Qt_LayoutDirection* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_Qt_LayoutDirection* qt_gui_c_qt_gui_c_SlotWrapper_Qt_LayoutDirection_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_Qt_LayoutDirection_set(qt_gui_c_SlotWrapper_Qt_LayoutDirection* this_ptr, void (*func)(void*, const Qt::LayoutDirection*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_Qt_ScreenOrientation_custom_slot(qt_gui_c_SlotWrapper_Qt_ScreenOrientation* this_ptr, const Qt::ScreenOrientation* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_Qt_ScreenOrientation_delete(qt_gui_c_SlotWrapper_Qt_ScreenOrientation* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_Qt_ScreenOrientation* qt_gui_c_qt_gui_c_SlotWrapper_Qt_ScreenOrientation_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_Qt_ScreenOrientation_set(qt_gui_c_SlotWrapper_Qt_ScreenOrientation* this_ptr, void (*func)(void*, const Qt::ScreenOrientation*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_Qt_TabFocusBehavior_custom_slot(qt_gui_c_SlotWrapper_Qt_TabFocusBehavior* this_ptr, const Qt::TabFocusBehavior* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_Qt_TabFocusBehavior_delete(qt_gui_c_SlotWrapper_Qt_TabFocusBehavior* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_Qt_TabFocusBehavior* qt_gui_c_qt_gui_c_SlotWrapper_Qt_TabFocusBehavior_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_Qt_TabFocusBehavior_set(qt_gui_c_SlotWrapper_Qt_TabFocusBehavior* this_ptr, void (*func)(void*, const Qt::TabFocusBehavior*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_Qt_WindowModality_custom_slot(qt_gui_c_SlotWrapper_Qt_WindowModality* this_ptr, const Qt::WindowModality* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_Qt_WindowModality_delete(qt_gui_c_SlotWrapper_Qt_WindowModality* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_Qt_WindowModality* qt_gui_c_qt_gui_c_SlotWrapper_Qt_WindowModality_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_Qt_WindowModality_set(qt_gui_c_SlotWrapper_Qt_WindowModality* this_ptr, void (*func)(void*, const Qt::WindowModality*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_Qt_WindowState_custom_slot(qt_gui_c_SlotWrapper_Qt_WindowState* this_ptr, const Qt::WindowState* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_Qt_WindowState_delete(qt_gui_c_SlotWrapper_Qt_WindowState* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_Qt_WindowState* qt_gui_c_qt_gui_c_SlotWrapper_Qt_WindowState_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_Qt_WindowState_set(qt_gui_c_SlotWrapper_Qt_WindowState* this_ptr, void (*func)(void*, const Qt::WindowState*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QOpenGLDebugMessage_ref_custom_slot(qt_gui_c_SlotWrapper_const_QOpenGLDebugMessage_ref* this_ptr, const QOpenGLDebugMessage* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QOpenGLDebugMessage_ref_delete(qt_gui_c_SlotWrapper_const_QOpenGLDebugMessage_ref* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_const_QOpenGLDebugMessage_ref* qt_gui_c_qt_gui_c_SlotWrapper_const_QOpenGLDebugMessage_ref_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QOpenGLDebugMessage_ref_set(qt_gui_c_SlotWrapper_const_QOpenGLDebugMessage_ref* this_ptr, void (*func)(void*, const QOpenGLDebugMessage*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QPalette_ref_custom_slot(qt_gui_c_SlotWrapper_const_QPalette_ref* this_ptr, const QPalette* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QPalette_ref_delete(qt_gui_c_SlotWrapper_const_QPalette_ref* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_const_QPalette_ref* qt_gui_c_qt_gui_c_SlotWrapper_const_QPalette_ref_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QPalette_ref_set(qt_gui_c_SlotWrapper_const_QPalette_ref* this_ptr, void (*func)(void*, const QPalette*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QRectF_ref_custom_slot(qt_gui_c_SlotWrapper_const_QRectF_ref* this_ptr, const QRectF* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QRectF_ref_delete(qt_gui_c_SlotWrapper_const_QRectF_ref* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_const_QRectF_ref* qt_gui_c_qt_gui_c_SlotWrapper_const_QRectF_ref_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QRectF_ref_set(qt_gui_c_SlotWrapper_const_QRectF_ref* this_ptr, void (*func)(void*, const QRectF*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QRect_ref_custom_slot(qt_gui_c_SlotWrapper_const_QRect_ref* this_ptr, const QRect* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QRect_ref_delete(qt_gui_c_SlotWrapper_const_QRect_ref* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_const_QRect_ref* qt_gui_c_qt_gui_c_SlotWrapper_const_QRect_ref_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QRect_ref_set(qt_gui_c_SlotWrapper_const_QRect_ref* this_ptr, void (*func)(void*, const QRect*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QRegExp_ref_custom_slot(qt_gui_c_SlotWrapper_const_QRegExp_ref* this_ptr, const QRegExp* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QRegExp_ref_delete(qt_gui_c_SlotWrapper_const_QRegExp_ref* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_const_QRegExp_ref* qt_gui_c_qt_gui_c_SlotWrapper_const_QRegExp_ref_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QRegExp_ref_set(qt_gui_c_SlotWrapper_const_QRegExp_ref* this_ptr, void (*func)(void*, const QRegExp*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QRegularExpression_ref_custom_slot(qt_gui_c_SlotWrapper_const_QRegularExpression_ref* this_ptr, const QRegularExpression* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QRegularExpression_ref_delete(qt_gui_c_SlotWrapper_const_QRegularExpression_ref* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_const_QRegularExpression_ref* qt_gui_c_qt_gui_c_SlotWrapper_const_QRegularExpression_ref_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QRegularExpression_ref_set(qt_gui_c_SlotWrapper_const_QRegularExpression_ref* this_ptr, void (*func)(void*, const QRegularExpression*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QSizeF_ref_custom_slot(qt_gui_c_SlotWrapper_const_QSizeF_ref* this_ptr, const QSizeF* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QSizeF_ref_delete(qt_gui_c_SlotWrapper_const_QSizeF_ref* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_const_QSizeF_ref* qt_gui_c_qt_gui_c_SlotWrapper_const_QSizeF_ref_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QSizeF_ref_set(qt_gui_c_SlotWrapper_const_QSizeF_ref* this_ptr, void (*func)(void*, const QSizeF*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QSize_ref_custom_slot(qt_gui_c_SlotWrapper_const_QSize_ref* this_ptr, const QSize* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QSize_ref_delete(qt_gui_c_SlotWrapper_const_QSize_ref* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_const_QSize_ref* qt_gui_c_qt_gui_c_SlotWrapper_const_QSize_ref_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QSize_ref_set(qt_gui_c_SlotWrapper_const_QSize_ref* this_ptr, void (*func)(void*, const QSize*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QTextBlock_ref_custom_slot(qt_gui_c_SlotWrapper_const_QTextBlock_ref* this_ptr, const QTextBlock* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QTextBlock_ref_delete(qt_gui_c_SlotWrapper_const_QTextBlock_ref* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_const_QTextBlock_ref* qt_gui_c_qt_gui_c_SlotWrapper_const_QTextBlock_ref_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QTextBlock_ref_set(qt_gui_c_SlotWrapper_const_QTextBlock_ref* this_ptr, void (*func)(void*, const QTextBlock*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QTextCursor_ref_custom_slot(qt_gui_c_SlotWrapper_const_QTextCursor_ref* this_ptr, const QTextCursor* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QTextCursor_ref_delete(qt_gui_c_SlotWrapper_const_QTextCursor_ref* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_const_QTextCursor_ref* qt_gui_c_qt_gui_c_SlotWrapper_const_QTextCursor_ref_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QTextCursor_ref_set(qt_gui_c_SlotWrapper_const_QTextCursor_ref* this_ptr, void (*func)(void*, const QTextCursor*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QUrl_ref_custom_slot(qt_gui_c_SlotWrapper_const_QUrl_ref* this_ptr, const QUrl* arg0);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QUrl_ref_delete(qt_gui_c_SlotWrapper_const_QUrl_ref* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_const_QUrl_ref* qt_gui_c_qt_gui_c_SlotWrapper_const_QUrl_ref_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_const_QUrl_ref_set(qt_gui_c_SlotWrapper_const_QUrl_ref* this_ptr, void (*func)(void*, const QUrl*), void* data);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_int_int_custom_slot(qt_gui_c_SlotWrapper_int_int* this_ptr, int arg0, int arg1);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_int_int_delete(qt_gui_c_SlotWrapper_int_int* this_ptr);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_int_int_int_custom_slot(qt_gui_c_SlotWrapper_int_int_int* this_ptr, int arg0, int arg1, int arg2);
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_int_int_int_delete(qt_gui_c_SlotWrapper_int_int_int* this_ptr);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_int_int_int* qt_gui_c_qt_gui_c_SlotWrapper_int_int_int_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_int_int_int_set(qt_gui_c_SlotWrapper_int_int_int* this_ptr, void (*func)(void*, int, int, int), void* data);
QT_GUI_C_EXPORT qt_gui_c_SlotWrapper_int_int* qt_gui_c_qt_gui_c_SlotWrapper_int_int_new();
QT_GUI_C_EXPORT void qt_gui_c_qt_gui_c_SlotWrapper_int_int_set(qt_gui_c_SlotWrapper_int_int* this_ptr, void (*func)(void*, int, int), void* data);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_QClipboard_Mode(qt_gui_c_SlotWrapper_QClipboard_Mode* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_QDoubleValidator_Notation(qt_gui_c_SlotWrapper_QDoubleValidator_Notation* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_QImageReader_ImageReaderError(qt_gui_c_SlotWrapper_QImageReader_ImageReaderError* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_QMovie_MovieState(qt_gui_c_SlotWrapper_QMovie_MovieState* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_QScreen_ptr(qt_gui_c_SlotWrapper_QScreen_ptr* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_QSessionManager_ref(qt_gui_c_SlotWrapper_QSessionManager_ref* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_QStandardItem_ptr(qt_gui_c_SlotWrapper_QStandardItem_ptr* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_QWindow_Visibility(qt_gui_c_SlotWrapper_QWindow_Visibility* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_QWindow_ptr(qt_gui_c_SlotWrapper_QWindow_ptr* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_Qt_ApplicationState(qt_gui_c_SlotWrapper_Qt_ApplicationState* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_Qt_DropAction(qt_gui_c_SlotWrapper_Qt_DropAction* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_Qt_LayoutDirection(qt_gui_c_SlotWrapper_Qt_LayoutDirection* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_Qt_ScreenOrientation(qt_gui_c_SlotWrapper_Qt_ScreenOrientation* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_Qt_TabFocusBehavior(qt_gui_c_SlotWrapper_Qt_TabFocusBehavior* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_Qt_WindowModality(qt_gui_c_SlotWrapper_Qt_WindowModality* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_Qt_WindowState(qt_gui_c_SlotWrapper_Qt_WindowState* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_const_QOpenGLDebugMessage_ref(qt_gui_c_SlotWrapper_const_QOpenGLDebugMessage_ref* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_const_QPalette_ref(qt_gui_c_SlotWrapper_const_QPalette_ref* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_const_QRectF_ref(qt_gui_c_SlotWrapper_const_QRectF_ref* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_const_QRect_ref(qt_gui_c_SlotWrapper_const_QRect_ref* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_const_QRegExp_ref(qt_gui_c_SlotWrapper_const_QRegExp_ref* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_const_QRegularExpression_ref(qt_gui_c_SlotWrapper_const_QRegularExpression_ref* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_const_QSizeF_ref(qt_gui_c_SlotWrapper_const_QSizeF_ref* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_const_QSize_ref(qt_gui_c_SlotWrapper_const_QSize_ref* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_const_QTextBlock_ref(qt_gui_c_SlotWrapper_const_QTextBlock_ref* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_const_QTextCursor_ref(qt_gui_c_SlotWrapper_const_QTextCursor_ref* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_const_QUrl_ref(qt_gui_c_SlotWrapper_const_QUrl_ref* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_int_int(qt_gui_c_SlotWrapper_int_int* ptr);
QT_GUI_C_EXPORT QObject* qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_int_int_int(qt_gui_c_SlotWrapper_int_int_int* ptr);

} // extern "C"

#endif // QT_GUI_C_SLOTS_H
