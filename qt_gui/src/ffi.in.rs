extern "C" {
  // Header: QAbstractTextDocumentLayout
  pub fn qt_gui_c_QAbstractTextDocumentLayout_G_static_cast_QAbstractTextDocumentLayout_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::abstract_text_document_layout::AbstractTextDocumentLayout;
  pub fn qt_gui_c_QAbstractTextDocumentLayout_G_static_cast_QObject_ptr(ptr: *mut ::abstract_text_document_layout::AbstractTextDocumentLayout) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QAbstractTextDocumentLayout_PaintContext_clip(this_ptr: *const ::abstract_text_document_layout::PaintContext) -> *const ::qt_core::rect_f::RectF;
  pub fn qt_gui_c_QAbstractTextDocumentLayout_PaintContext_clip_mut(this_ptr: *mut ::abstract_text_document_layout::PaintContext) -> *mut ::qt_core::rect_f::RectF;
  pub fn qt_gui_c_QAbstractTextDocumentLayout_PaintContext_constructor(output: *mut ::abstract_text_document_layout::PaintContext);
  pub fn qt_gui_c_QAbstractTextDocumentLayout_PaintContext_cursorPosition(this_ptr: *const ::abstract_text_document_layout::PaintContext) -> ::libc::c_int;
  pub fn qt_gui_c_QAbstractTextDocumentLayout_PaintContext_destructor(this_ptr: *mut ::abstract_text_document_layout::PaintContext);
  pub fn qt_gui_c_QAbstractTextDocumentLayout_PaintContext_palette(this_ptr: *const ::abstract_text_document_layout::PaintContext) -> *const ::palette::Palette;
  pub fn qt_gui_c_QAbstractTextDocumentLayout_PaintContext_palette_mut(this_ptr: *mut ::abstract_text_document_layout::PaintContext) -> *mut ::palette::Palette;
  pub fn qt_gui_c_QAbstractTextDocumentLayout_PaintContext_selections(this_ptr: *const ::abstract_text_document_layout::PaintContext) -> *const ::vector::VectorAbstractTextDocumentLayoutSelection;
  pub fn qt_gui_c_QAbstractTextDocumentLayout_PaintContext_selections_mut(this_ptr: *mut ::abstract_text_document_layout::PaintContext) -> *mut ::vector::VectorAbstractTextDocumentLayoutSelection;
  pub fn qt_gui_c_QAbstractTextDocumentLayout_PaintContext_set_clip(this_ptr: *mut ::abstract_text_document_layout::PaintContext, value: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QAbstractTextDocumentLayout_PaintContext_set_cursorPosition(this_ptr: *mut ::abstract_text_document_layout::PaintContext, value: ::libc::c_int);
  pub fn qt_gui_c_QAbstractTextDocumentLayout_PaintContext_set_palette(this_ptr: *mut ::abstract_text_document_layout::PaintContext, value: *const ::palette::Palette);
  pub fn qt_gui_c_QAbstractTextDocumentLayout_PaintContext_set_selections(this_ptr: *mut ::abstract_text_document_layout::PaintContext, value: *const ::vector::VectorAbstractTextDocumentLayoutSelection);
  pub fn qt_gui_c_QAbstractTextDocumentLayout_Selection_cursor(this_ptr: *const ::abstract_text_document_layout::Selection) -> *const ::text_cursor::TextCursor;
  pub fn qt_gui_c_QAbstractTextDocumentLayout_Selection_cursor_mut(this_ptr: *mut ::abstract_text_document_layout::Selection) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QAbstractTextDocumentLayout_Selection_delete(this_ptr: *mut ::abstract_text_document_layout::Selection);
  pub fn qt_gui_c_QAbstractTextDocumentLayout_Selection_format(this_ptr: *const ::abstract_text_document_layout::Selection) -> *const ::text_char_format::TextCharFormat;
  pub fn qt_gui_c_QAbstractTextDocumentLayout_Selection_format_mut(this_ptr: *mut ::abstract_text_document_layout::Selection) -> *mut ::text_char_format::TextCharFormat;
  pub fn qt_gui_c_QAbstractTextDocumentLayout_Selection_set_cursor(this_ptr: *mut ::abstract_text_document_layout::Selection, value: *const ::text_cursor::TextCursor);
  pub fn qt_gui_c_QAbstractTextDocumentLayout_Selection_set_format(this_ptr: *mut ::abstract_text_document_layout::Selection, value: *const ::text_char_format::TextCharFormat);
  pub fn qt_gui_c_QAbstractTextDocumentLayout_anchorAt_to_output(this_ptr: *const ::abstract_text_document_layout::AbstractTextDocumentLayout, pos: *const ::qt_core::point_f::PointF, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QAbstractTextDocumentLayout_blockBoundingRect_to_output(this_ptr: *const ::abstract_text_document_layout::AbstractTextDocumentLayout, block: *const ::text_block::TextBlock, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QAbstractTextDocumentLayout_delete(this_ptr: *mut ::abstract_text_document_layout::AbstractTextDocumentLayout);
  pub fn qt_gui_c_QAbstractTextDocumentLayout_document(this_ptr: *const ::abstract_text_document_layout::AbstractTextDocumentLayout) -> *mut ::text_document::TextDocument;
  pub fn qt_gui_c_QAbstractTextDocumentLayout_documentSize_to_output(this_ptr: *const ::abstract_text_document_layout::AbstractTextDocumentLayout, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_gui_c_QAbstractTextDocumentLayout_draw(this_ptr: *mut ::abstract_text_document_layout::AbstractTextDocumentLayout, painter: *mut ::painter::Painter, context: *const ::abstract_text_document_layout::PaintContext);
  pub fn qt_gui_c_QAbstractTextDocumentLayout_formatAt_to_output(this_ptr: *const ::abstract_text_document_layout::AbstractTextDocumentLayout, pos: *const ::qt_core::point_f::PointF, output: *mut ::text_format::TextFormat);
  pub fn qt_gui_c_QAbstractTextDocumentLayout_frameBoundingRect_to_output(this_ptr: *const ::abstract_text_document_layout::AbstractTextDocumentLayout, frame: *mut ::text_frame::TextFrame, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QAbstractTextDocumentLayout_handlerForObject(this_ptr: *const ::abstract_text_document_layout::AbstractTextDocumentLayout, objectType: ::libc::c_int) -> *mut ::text_object_interface::TextObjectInterface;
  pub fn qt_gui_c_QAbstractTextDocumentLayout_hitTest(this_ptr: *const ::abstract_text_document_layout::AbstractTextDocumentLayout, point: *const ::qt_core::point_f::PointF, accuracy: *const ::qt_core::qt::HitTestAccuracy) -> ::libc::c_int;
  pub fn qt_gui_c_QAbstractTextDocumentLayout_imageAt_to_output(this_ptr: *const ::abstract_text_document_layout::AbstractTextDocumentLayout, pos: *const ::qt_core::point_f::PointF, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QAbstractTextDocumentLayout_metaObject(this_ptr: *const ::abstract_text_document_layout::AbstractTextDocumentLayout) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QAbstractTextDocumentLayout_pageCount(this_ptr: *const ::abstract_text_document_layout::AbstractTextDocumentLayout) -> ::libc::c_int;
  pub fn qt_gui_c_QAbstractTextDocumentLayout_paintDevice(this_ptr: *const ::abstract_text_document_layout::AbstractTextDocumentLayout) -> *mut ::paint_device::PaintDevice;
  pub fn qt_gui_c_QAbstractTextDocumentLayout_qt_metacall(this_ptr: *mut ::abstract_text_document_layout::AbstractTextDocumentLayout, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QAbstractTextDocumentLayout_qt_metacast(this_ptr: *mut ::abstract_text_document_layout::AbstractTextDocumentLayout, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QAbstractTextDocumentLayout_registerHandler(this_ptr: *mut ::abstract_text_document_layout::AbstractTextDocumentLayout, objectType: ::libc::c_int, component: *mut ::qt_core::object::Object);
  pub fn qt_gui_c_QAbstractTextDocumentLayout_setPaintDevice(this_ptr: *mut ::abstract_text_document_layout::AbstractTextDocumentLayout, device: *mut ::paint_device::PaintDevice);
  pub fn qt_gui_c_QAbstractTextDocumentLayout_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QAbstractTextDocumentLayout_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QAbstractTextDocumentLayout_unregisterHandler_objectType(this_ptr: *mut ::abstract_text_document_layout::AbstractTextDocumentLayout, objectType: ::libc::c_int);
  pub fn qt_gui_c_QAbstractTextDocumentLayout_unregisterHandler_objectType_component(this_ptr: *mut ::abstract_text_document_layout::AbstractTextDocumentLayout, objectType: ::libc::c_int, component: *mut ::qt_core::object::Object);

  // Header: QAbstractUndoItem
  pub fn qt_gui_c_QAbstractUndoItem_delete(this_ptr: *mut ::abstract_undo_item::AbstractUndoItem);
  pub fn qt_gui_c_QAbstractUndoItem_redo(this_ptr: *mut ::abstract_undo_item::AbstractUndoItem);
  pub fn qt_gui_c_QAbstractUndoItem_undo(this_ptr: *mut ::abstract_undo_item::AbstractUndoItem);

  // Header: QAccessible
  pub fn qt_gui_c_QAccessible_G_operator_eq(first: *const ::accessible::State, second: *const ::accessible::State) -> bool;
  pub fn qt_gui_c_QAccessible_G_operator_shl_to_output_d_ev(d: *const ::qt_core::debug::Debug, ev: *const ::accessible_event::AccessibleEvent, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QAccessible_G_operator_shl_to_output_d_iface(d: *const ::qt_core::debug::Debug, iface: *const ::accessible_interface::AccessibleInterface, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QAccessible_G_qAccessibleEventString(event: *const ::accessible::Event) -> *const ::libc::c_char;
  pub fn qt_gui_c_QAccessible_G_qAccessibleLocalizedActionDescription_to_output(actionName: *const ::qt_core::string::String, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QAccessible_G_qAccessibleRoleString(role: *const ::accessible::Role) -> *const ::libc::c_char;
  pub fn qt_gui_c_QAccessible_State_active(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_animated(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_busy(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_checkStateMixed(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_checkable(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_checked(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_collapsed(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_constructor(output: *mut ::accessible::State);
  pub fn qt_gui_c_QAccessible_State_defaultButton(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_destructor(this_ptr: *mut ::accessible::State);
  pub fn qt_gui_c_QAccessible_State_disabled(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_editable(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_expandable(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_expanded(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_extSelectable(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_focusable(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_focused(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_hasPopup(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_hotTracked(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_invalid(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_invisible(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_linked(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_marqueed(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_modal(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_movable(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_multiLine(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_multiSelectable(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_offscreen(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_passwordEdit(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_pressed(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_readOnly(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_searchEdit(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_selectable(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_selectableText(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_selected(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_selfVoicing(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_set_active(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_animated(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_busy(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_checkStateMixed(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_checkable(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_checked(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_collapsed(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_defaultButton(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_disabled(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_editable(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_expandable(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_expanded(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_extSelectable(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_focusable(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_focused(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_hasPopup(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_hotTracked(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_invalid(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_invisible(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_linked(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_marqueed(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_modal(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_movable(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_multiLine(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_multiSelectable(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_offscreen(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_passwordEdit(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_pressed(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_readOnly(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_searchEdit(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_selectable(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_selectableText(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_selected(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_selfVoicing(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_sizeable(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_supportsAutoCompletion(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_set_traversed(this_ptr: *mut ::accessible::State, value: u64);
  pub fn qt_gui_c_QAccessible_State_sizeable(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_supportsAutoCompletion(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_State_traversed(this_ptr: *const ::accessible::State) -> u64;
  pub fn qt_gui_c_QAccessible_accessibleInterface(uniqueId: ::libc::c_uint) -> *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QAccessible_cleanup();
  pub fn qt_gui_c_QAccessible_delete(this_ptr: *mut ::accessible::Accessible);
  pub fn qt_gui_c_QAccessible_deleteAccessibleInterface(uniqueId: ::libc::c_uint);
  pub fn qt_gui_c_QAccessible_installRootObjectHandler(arg1: extern "C" fn(*mut ::qt_core::object::Object)) -> extern "C" fn(*mut ::qt_core::object::Object);
  pub fn qt_gui_c_QAccessible_installUpdateHandler(arg1: extern "C" fn(*mut ::accessible_event::AccessibleEvent)) -> extern "C" fn(*mut ::accessible_event::AccessibleEvent);
  pub fn qt_gui_c_QAccessible_isActive() -> bool;
  pub fn qt_gui_c_QAccessible_qAccessibleTextBoundaryHelper_to_output(cursor: *const ::text_cursor::TextCursor, boundaryType: ::accessible::TextBoundaryType, output: *mut ::pair::PairCIntCInt);
  pub fn qt_gui_c_QAccessible_queryAccessibleInterface(arg1: *mut ::qt_core::object::Object) -> *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QAccessible_registerAccessibleInterface(iface: *mut ::accessible_interface::AccessibleInterface) -> ::libc::c_uint;
  pub fn qt_gui_c_QAccessible_setActive(active: bool);
  pub fn qt_gui_c_QAccessible_setRootObject(object: *mut ::qt_core::object::Object);
  pub fn qt_gui_c_QAccessible_uniqueId(iface: *mut ::accessible_interface::AccessibleInterface) -> ::libc::c_uint;
  pub fn qt_gui_c_QAccessible_updateAccessibility(event: *mut ::accessible_event::AccessibleEvent);

  // Header: QAccessibleActionInterface
  pub fn qt_gui_c_QAccessibleActionInterface_actionNames_to_output(this_ptr: *const ::accessible_action_interface::AccessibleActionInterface, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QAccessibleActionInterface_decreaseAction() -> *const ::qt_core::string::String;
  pub fn qt_gui_c_QAccessibleActionInterface_delete(this_ptr: *mut ::accessible_action_interface::AccessibleActionInterface);
  pub fn qt_gui_c_QAccessibleActionInterface_doAction(this_ptr: *mut ::accessible_action_interface::AccessibleActionInterface, actionName: *const ::qt_core::string::String);
  pub fn qt_gui_c_QAccessibleActionInterface_increaseAction() -> *const ::qt_core::string::String;
  pub fn qt_gui_c_QAccessibleActionInterface_keyBindingsForAction_to_output(this_ptr: *const ::accessible_action_interface::AccessibleActionInterface, actionName: *const ::qt_core::string::String, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QAccessibleActionInterface_localizedActionDescription_to_output(this_ptr: *const ::accessible_action_interface::AccessibleActionInterface, name: *const ::qt_core::string::String, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QAccessibleActionInterface_localizedActionName_to_output(this_ptr: *const ::accessible_action_interface::AccessibleActionInterface, name: *const ::qt_core::string::String, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QAccessibleActionInterface_nextPageAction_to_output(output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QAccessibleActionInterface_pressAction() -> *const ::qt_core::string::String;
  pub fn qt_gui_c_QAccessibleActionInterface_previousPageAction_to_output(output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QAccessibleActionInterface_scrollDownAction_to_output(output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QAccessibleActionInterface_scrollLeftAction_to_output(output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QAccessibleActionInterface_scrollRightAction_to_output(output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QAccessibleActionInterface_scrollUpAction_to_output(output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QAccessibleActionInterface_setFocusAction() -> *const ::qt_core::string::String;
  pub fn qt_gui_c_QAccessibleActionInterface_showMenuAction() -> *const ::qt_core::string::String;
  pub fn qt_gui_c_QAccessibleActionInterface_toggleAction() -> *const ::qt_core::string::String;
  pub fn qt_gui_c_QAccessibleActionInterface_trUtf8_to_output(sourceText: *const ::libc::c_char, disambiguation: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QAccessibleActionInterface_tr_to_output(sourceText: *const ::libc::c_char, disambiguation: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QAccessibleEditableTextInterface
  pub fn qt_gui_c_QAccessibleEditableTextInterface_delete(this_ptr: *mut ::accessible_editable_text_interface::AccessibleEditableTextInterface);
  pub fn qt_gui_c_QAccessibleEditableTextInterface_deleteText(this_ptr: *mut ::accessible_editable_text_interface::AccessibleEditableTextInterface, startOffset: ::libc::c_int, endOffset: ::libc::c_int);
  pub fn qt_gui_c_QAccessibleEditableTextInterface_insertText(this_ptr: *mut ::accessible_editable_text_interface::AccessibleEditableTextInterface, offset: ::libc::c_int, text: *const ::qt_core::string::String);
  pub fn qt_gui_c_QAccessibleEditableTextInterface_replaceText(this_ptr: *mut ::accessible_editable_text_interface::AccessibleEditableTextInterface, startOffset: ::libc::c_int, endOffset: ::libc::c_int, text: *const ::qt_core::string::String);

  // Header: QAccessibleEvent
  pub fn qt_gui_c_QAccessibleEvent_accessibleInterface(this_ptr: *const ::accessible_event::AccessibleEvent) -> *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QAccessibleEvent_child(this_ptr: *const ::accessible_event::AccessibleEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleEvent_delete(this_ptr: *mut ::accessible_event::AccessibleEvent);
  pub fn qt_gui_c_QAccessibleEvent_new_iface_typ(iface: *mut ::accessible_interface::AccessibleInterface, typ: *const ::accessible::Event) -> *mut ::accessible_event::AccessibleEvent;
  pub fn qt_gui_c_QAccessibleEvent_new_obj_typ(obj: *mut ::qt_core::object::Object, typ: *const ::accessible::Event) -> *mut ::accessible_event::AccessibleEvent;
  pub fn qt_gui_c_QAccessibleEvent_object(this_ptr: *const ::accessible_event::AccessibleEvent) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QAccessibleEvent_setChild(this_ptr: *mut ::accessible_event::AccessibleEvent, chld: ::libc::c_int);

  // Header: QAccessibleInterface
  pub fn qt_gui_c_QAccessibleInterface_actionInterface(this_ptr: *mut ::accessible_interface::AccessibleInterface) -> *mut ::accessible_action_interface::AccessibleActionInterface;
  pub fn qt_gui_c_QAccessibleInterface_backgroundColor_to_output(this_ptr: *const ::accessible_interface::AccessibleInterface, output: *mut ::color::Color);
  pub fn qt_gui_c_QAccessibleInterface_child(this_ptr: *const ::accessible_interface::AccessibleInterface, index: ::libc::c_int) -> *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QAccessibleInterface_childAt(this_ptr: *const ::accessible_interface::AccessibleInterface, x: ::libc::c_int, y: ::libc::c_int) -> *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QAccessibleInterface_childCount(this_ptr: *const ::accessible_interface::AccessibleInterface) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleInterface_editableTextInterface(this_ptr: *mut ::accessible_interface::AccessibleInterface) -> *mut ::accessible_editable_text_interface::AccessibleEditableTextInterface;
  pub fn qt_gui_c_QAccessibleInterface_focusChild(this_ptr: *const ::accessible_interface::AccessibleInterface) -> *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QAccessibleInterface_foregroundColor_to_output(this_ptr: *const ::accessible_interface::AccessibleInterface, output: *mut ::color::Color);
  pub fn qt_gui_c_QAccessibleInterface_indexOfChild(this_ptr: *const ::accessible_interface::AccessibleInterface, arg1: *const ::accessible_interface::AccessibleInterface) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleInterface_interface_cast(this_ptr: *mut ::accessible_interface::AccessibleInterface, arg1: *const ::accessible::InterfaceType) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QAccessibleInterface_isValid(this_ptr: *const ::accessible_interface::AccessibleInterface) -> bool;
  pub fn qt_gui_c_QAccessibleInterface_object(this_ptr: *const ::accessible_interface::AccessibleInterface) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QAccessibleInterface_parent(this_ptr: *const ::accessible_interface::AccessibleInterface) -> *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QAccessibleInterface_rect_to_output(this_ptr: *const ::accessible_interface::AccessibleInterface, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QAccessibleInterface_setText(this_ptr: *mut ::accessible_interface::AccessibleInterface, t: *const ::accessible::Text, text: *const ::qt_core::string::String);
  pub fn qt_gui_c_QAccessibleInterface_state_to_output(this_ptr: *const ::accessible_interface::AccessibleInterface, output: *mut ::accessible::State);
  pub fn qt_gui_c_QAccessibleInterface_tableCellInterface(this_ptr: *mut ::accessible_interface::AccessibleInterface) -> *mut ::accessible_table_cell_interface::AccessibleTableCellInterface;
  pub fn qt_gui_c_QAccessibleInterface_tableInterface(this_ptr: *mut ::accessible_interface::AccessibleInterface) -> *mut ::accessible_table_interface::AccessibleTableInterface;
  pub fn qt_gui_c_QAccessibleInterface_textInterface(this_ptr: *mut ::accessible_interface::AccessibleInterface) -> *mut ::accessible_text_interface::AccessibleTextInterface;
  pub fn qt_gui_c_QAccessibleInterface_text_to_output(this_ptr: *const ::accessible_interface::AccessibleInterface, t: *const ::accessible::Text, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QAccessibleInterface_valueInterface(this_ptr: *mut ::accessible_interface::AccessibleInterface) -> *mut ::accessible_value_interface::AccessibleValueInterface;
  pub fn qt_gui_c_QAccessibleInterface_virtual_hook(this_ptr: *mut ::accessible_interface::AccessibleInterface, id: ::libc::c_int, data: *mut ::libc::c_void);
  pub fn qt_gui_c_QAccessibleInterface_window(this_ptr: *const ::accessible_interface::AccessibleInterface) -> *mut ::window::Window;

  // Header: QAccessibleObject
  pub fn qt_gui_c_QAccessibleObject_G_dynamic_cast_QAccessibleObject_ptr(ptr: *mut ::accessible_interface::AccessibleInterface) -> *mut ::accessible_object::AccessibleObject;
  pub fn qt_gui_c_QAccessibleObject_G_static_cast_QAccessibleInterface_ptr(ptr: *mut ::accessible_object::AccessibleObject) -> *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QAccessibleObject_G_static_cast_QAccessibleObject_ptr(ptr: *mut ::accessible_interface::AccessibleInterface) -> *mut ::accessible_object::AccessibleObject;
  pub fn qt_gui_c_QAccessibleObject_childAt(this_ptr: *const ::accessible_object::AccessibleObject, x: ::libc::c_int, y: ::libc::c_int) -> *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QAccessibleObject_isValid(this_ptr: *const ::accessible_object::AccessibleObject) -> bool;
  pub fn qt_gui_c_QAccessibleObject_object(this_ptr: *const ::accessible_object::AccessibleObject) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QAccessibleObject_rect_to_output(this_ptr: *const ::accessible_object::AccessibleObject, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QAccessibleObject_setText(this_ptr: *mut ::accessible_object::AccessibleObject, t: *const ::accessible::Text, text: *const ::qt_core::string::String);

  // Header: QAccessiblePlugin
  pub fn qt_gui_c_QAccessiblePlugin_G_static_cast_QAccessiblePlugin_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::accessible_plugin::AccessiblePlugin;
  pub fn qt_gui_c_QAccessiblePlugin_G_static_cast_QObject_ptr(ptr: *mut ::accessible_plugin::AccessiblePlugin) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QAccessiblePlugin_create(this_ptr: *mut ::accessible_plugin::AccessiblePlugin, key: *const ::qt_core::string::String, object: *mut ::qt_core::object::Object) -> *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QAccessiblePlugin_delete(this_ptr: *mut ::accessible_plugin::AccessiblePlugin);
  pub fn qt_gui_c_QAccessiblePlugin_metaObject(this_ptr: *const ::accessible_plugin::AccessiblePlugin) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QAccessiblePlugin_qt_metacall(this_ptr: *mut ::accessible_plugin::AccessiblePlugin, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessiblePlugin_qt_metacast(this_ptr: *mut ::accessible_plugin::AccessiblePlugin, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QAccessiblePlugin_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QAccessiblePlugin_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QAccessibleStateChangeEvent
  pub fn qt_gui_c_QAccessibleStateChangeEvent_G_dynamic_cast_QAccessibleStateChangeEvent_ptr(ptr: *mut ::accessible_event::AccessibleEvent) -> *mut ::accessible_state_change_event::AccessibleStateChangeEvent;
  pub fn qt_gui_c_QAccessibleStateChangeEvent_G_static_cast_QAccessibleEvent_ptr(ptr: *mut ::accessible_state_change_event::AccessibleStateChangeEvent) -> *mut ::accessible_event::AccessibleEvent;
  pub fn qt_gui_c_QAccessibleStateChangeEvent_G_static_cast_QAccessibleStateChangeEvent_ptr(ptr: *mut ::accessible_event::AccessibleEvent) -> *mut ::accessible_state_change_event::AccessibleStateChangeEvent;
  pub fn qt_gui_c_QAccessibleStateChangeEvent_changedStates_to_output(this_ptr: *const ::accessible_state_change_event::AccessibleStateChangeEvent, output: *mut ::accessible::State);
  pub fn qt_gui_c_QAccessibleStateChangeEvent_delete(this_ptr: *mut ::accessible_state_change_event::AccessibleStateChangeEvent);
  pub fn qt_gui_c_QAccessibleStateChangeEvent_new_iface_state(iface: *mut ::accessible_interface::AccessibleInterface, state: *const ::accessible::State) -> *mut ::accessible_state_change_event::AccessibleStateChangeEvent;
  pub fn qt_gui_c_QAccessibleStateChangeEvent_new_obj_state(obj: *mut ::qt_core::object::Object, state: *const ::accessible::State) -> *mut ::accessible_state_change_event::AccessibleStateChangeEvent;

  // Header: QAccessibleTableCellInterface
  pub fn qt_gui_c_QAccessibleTableCellInterface_columnExtent(this_ptr: *const ::accessible_table_cell_interface::AccessibleTableCellInterface) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleTableCellInterface_columnHeaderCells_to_output(this_ptr: *const ::accessible_table_cell_interface::AccessibleTableCellInterface, output: *mut ::list::ListAccessibleInterfaceMutPtr);
  pub fn qt_gui_c_QAccessibleTableCellInterface_columnIndex(this_ptr: *const ::accessible_table_cell_interface::AccessibleTableCellInterface) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleTableCellInterface_delete(this_ptr: *mut ::accessible_table_cell_interface::AccessibleTableCellInterface);
  pub fn qt_gui_c_QAccessibleTableCellInterface_isSelected(this_ptr: *const ::accessible_table_cell_interface::AccessibleTableCellInterface) -> bool;
  pub fn qt_gui_c_QAccessibleTableCellInterface_rowExtent(this_ptr: *const ::accessible_table_cell_interface::AccessibleTableCellInterface) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleTableCellInterface_rowHeaderCells_to_output(this_ptr: *const ::accessible_table_cell_interface::AccessibleTableCellInterface, output: *mut ::list::ListAccessibleInterfaceMutPtr);
  pub fn qt_gui_c_QAccessibleTableCellInterface_rowIndex(this_ptr: *const ::accessible_table_cell_interface::AccessibleTableCellInterface) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleTableCellInterface_table(this_ptr: *const ::accessible_table_cell_interface::AccessibleTableCellInterface) -> *mut ::accessible_interface::AccessibleInterface;

  // Header: QAccessibleTableInterface
  pub fn qt_gui_c_QAccessibleTableInterface_caption(this_ptr: *const ::accessible_table_interface::AccessibleTableInterface) -> *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QAccessibleTableInterface_cellAt(this_ptr: *const ::accessible_table_interface::AccessibleTableInterface, row: ::libc::c_int, column: ::libc::c_int) -> *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QAccessibleTableInterface_columnCount(this_ptr: *const ::accessible_table_interface::AccessibleTableInterface) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleTableInterface_columnDescription_to_output(this_ptr: *const ::accessible_table_interface::AccessibleTableInterface, column: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QAccessibleTableInterface_delete(this_ptr: *mut ::accessible_table_interface::AccessibleTableInterface);
  pub fn qt_gui_c_QAccessibleTableInterface_isColumnSelected(this_ptr: *const ::accessible_table_interface::AccessibleTableInterface, column: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QAccessibleTableInterface_isRowSelected(this_ptr: *const ::accessible_table_interface::AccessibleTableInterface, row: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QAccessibleTableInterface_modelChange(this_ptr: *mut ::accessible_table_interface::AccessibleTableInterface, event: *mut ::accessible_table_model_change_event::AccessibleTableModelChangeEvent);
  pub fn qt_gui_c_QAccessibleTableInterface_rowCount(this_ptr: *const ::accessible_table_interface::AccessibleTableInterface) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleTableInterface_rowDescription_to_output(this_ptr: *const ::accessible_table_interface::AccessibleTableInterface, row: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QAccessibleTableInterface_selectColumn(this_ptr: *mut ::accessible_table_interface::AccessibleTableInterface, column: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QAccessibleTableInterface_selectRow(this_ptr: *mut ::accessible_table_interface::AccessibleTableInterface, row: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QAccessibleTableInterface_selectedCellCount(this_ptr: *const ::accessible_table_interface::AccessibleTableInterface) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleTableInterface_selectedCells_to_output(this_ptr: *const ::accessible_table_interface::AccessibleTableInterface, output: *mut ::list::ListAccessibleInterfaceMutPtr);
  pub fn qt_gui_c_QAccessibleTableInterface_selectedColumnCount(this_ptr: *const ::accessible_table_interface::AccessibleTableInterface) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleTableInterface_selectedColumns_to_output(this_ptr: *const ::accessible_table_interface::AccessibleTableInterface, output: *mut ::qt_core::list::ListCInt);
  pub fn qt_gui_c_QAccessibleTableInterface_selectedRowCount(this_ptr: *const ::accessible_table_interface::AccessibleTableInterface) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleTableInterface_selectedRows_to_output(this_ptr: *const ::accessible_table_interface::AccessibleTableInterface, output: *mut ::qt_core::list::ListCInt);
  pub fn qt_gui_c_QAccessibleTableInterface_summary(this_ptr: *const ::accessible_table_interface::AccessibleTableInterface) -> *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QAccessibleTableInterface_unselectColumn(this_ptr: *mut ::accessible_table_interface::AccessibleTableInterface, column: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QAccessibleTableInterface_unselectRow(this_ptr: *mut ::accessible_table_interface::AccessibleTableInterface, row: ::libc::c_int) -> bool;

  // Header: QAccessibleTableModelChangeEvent
  pub fn qt_gui_c_QAccessibleTableModelChangeEvent_G_dynamic_cast_QAccessibleTableModelChangeEvent_ptr(ptr: *mut ::accessible_event::AccessibleEvent) -> *mut ::accessible_table_model_change_event::AccessibleTableModelChangeEvent;
  pub fn qt_gui_c_QAccessibleTableModelChangeEvent_G_static_cast_QAccessibleEvent_ptr(ptr: *mut ::accessible_table_model_change_event::AccessibleTableModelChangeEvent) -> *mut ::accessible_event::AccessibleEvent;
  pub fn qt_gui_c_QAccessibleTableModelChangeEvent_G_static_cast_QAccessibleTableModelChangeEvent_ptr(ptr: *mut ::accessible_event::AccessibleEvent) -> *mut ::accessible_table_model_change_event::AccessibleTableModelChangeEvent;
  pub fn qt_gui_c_QAccessibleTableModelChangeEvent_delete(this_ptr: *mut ::accessible_table_model_change_event::AccessibleTableModelChangeEvent);
  pub fn qt_gui_c_QAccessibleTableModelChangeEvent_firstColumn(this_ptr: *const ::accessible_table_model_change_event::AccessibleTableModelChangeEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleTableModelChangeEvent_firstRow(this_ptr: *const ::accessible_table_model_change_event::AccessibleTableModelChangeEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleTableModelChangeEvent_lastColumn(this_ptr: *const ::accessible_table_model_change_event::AccessibleTableModelChangeEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleTableModelChangeEvent_lastRow(this_ptr: *const ::accessible_table_model_change_event::AccessibleTableModelChangeEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleTableModelChangeEvent_modelChangeType(this_ptr: *const ::accessible_table_model_change_event::AccessibleTableModelChangeEvent) -> ::accessible_table_model_change_event::ModelChangeType;
  pub fn qt_gui_c_QAccessibleTableModelChangeEvent_new_iface_changeType(iface: *mut ::accessible_interface::AccessibleInterface, changeType: ::accessible_table_model_change_event::ModelChangeType) -> *mut ::accessible_table_model_change_event::AccessibleTableModelChangeEvent;
  pub fn qt_gui_c_QAccessibleTableModelChangeEvent_new_obj_changeType(obj: *mut ::qt_core::object::Object, changeType: ::accessible_table_model_change_event::ModelChangeType) -> *mut ::accessible_table_model_change_event::AccessibleTableModelChangeEvent;
  pub fn qt_gui_c_QAccessibleTableModelChangeEvent_setFirstColumn(this_ptr: *mut ::accessible_table_model_change_event::AccessibleTableModelChangeEvent, col: ::libc::c_int);
  pub fn qt_gui_c_QAccessibleTableModelChangeEvent_setFirstRow(this_ptr: *mut ::accessible_table_model_change_event::AccessibleTableModelChangeEvent, row: ::libc::c_int);
  pub fn qt_gui_c_QAccessibleTableModelChangeEvent_setLastColumn(this_ptr: *mut ::accessible_table_model_change_event::AccessibleTableModelChangeEvent, col: ::libc::c_int);
  pub fn qt_gui_c_QAccessibleTableModelChangeEvent_setLastRow(this_ptr: *mut ::accessible_table_model_change_event::AccessibleTableModelChangeEvent, row: ::libc::c_int);
  pub fn qt_gui_c_QAccessibleTableModelChangeEvent_setModelChangeType(this_ptr: *mut ::accessible_table_model_change_event::AccessibleTableModelChangeEvent, changeType: ::accessible_table_model_change_event::ModelChangeType);

  // Header: QAccessibleTextCursorEvent
  pub fn qt_gui_c_QAccessibleTextCursorEvent_G_dynamic_cast_QAccessibleTextCursorEvent_ptr(ptr: *mut ::accessible_event::AccessibleEvent) -> *mut ::accessible_text_cursor_event::AccessibleTextCursorEvent;
  pub fn qt_gui_c_QAccessibleTextCursorEvent_G_static_cast_QAccessibleEvent_ptr(ptr: *mut ::accessible_text_cursor_event::AccessibleTextCursorEvent) -> *mut ::accessible_event::AccessibleEvent;
  pub fn qt_gui_c_QAccessibleTextCursorEvent_G_static_cast_QAccessibleTextCursorEvent_ptr(ptr: *mut ::accessible_event::AccessibleEvent) -> *mut ::accessible_text_cursor_event::AccessibleTextCursorEvent;
  pub fn qt_gui_c_QAccessibleTextCursorEvent_cursorPosition(this_ptr: *const ::accessible_text_cursor_event::AccessibleTextCursorEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleTextCursorEvent_delete(this_ptr: *mut ::accessible_text_cursor_event::AccessibleTextCursorEvent);
  pub fn qt_gui_c_QAccessibleTextCursorEvent_new_iface_cursorPos(iface: *mut ::accessible_interface::AccessibleInterface, cursorPos: ::libc::c_int) -> *mut ::accessible_text_cursor_event::AccessibleTextCursorEvent;
  pub fn qt_gui_c_QAccessibleTextCursorEvent_new_obj_cursorPos(obj: *mut ::qt_core::object::Object, cursorPos: ::libc::c_int) -> *mut ::accessible_text_cursor_event::AccessibleTextCursorEvent;
  pub fn qt_gui_c_QAccessibleTextCursorEvent_setCursorPosition(this_ptr: *mut ::accessible_text_cursor_event::AccessibleTextCursorEvent, position: ::libc::c_int);

  // Header: QAccessibleTextInsertEvent
  pub fn qt_gui_c_QAccessibleTextInsertEvent_G_dynamic_cast_QAccessibleTextInsertEvent_ptr_QAccessibleEvent(ptr: *mut ::accessible_event::AccessibleEvent) -> *mut ::accessible_text_insert_event::AccessibleTextInsertEvent;
  pub fn qt_gui_c_QAccessibleTextInsertEvent_G_dynamic_cast_QAccessibleTextInsertEvent_ptr_QAccessibleTextCursorEvent(ptr: *mut ::accessible_text_cursor_event::AccessibleTextCursorEvent) -> *mut ::accessible_text_insert_event::AccessibleTextInsertEvent;
  pub fn qt_gui_c_QAccessibleTextInsertEvent_G_static_cast_QAccessibleEvent_ptr(ptr: *mut ::accessible_text_insert_event::AccessibleTextInsertEvent) -> *mut ::accessible_event::AccessibleEvent;
  pub fn qt_gui_c_QAccessibleTextInsertEvent_G_static_cast_QAccessibleTextCursorEvent_ptr(ptr: *mut ::accessible_text_insert_event::AccessibleTextInsertEvent) -> *mut ::accessible_text_cursor_event::AccessibleTextCursorEvent;
  pub fn qt_gui_c_QAccessibleTextInsertEvent_G_static_cast_QAccessibleTextInsertEvent_ptr_QAccessibleEvent(ptr: *mut ::accessible_event::AccessibleEvent) -> *mut ::accessible_text_insert_event::AccessibleTextInsertEvent;
  pub fn qt_gui_c_QAccessibleTextInsertEvent_G_static_cast_QAccessibleTextInsertEvent_ptr_QAccessibleTextCursorEvent(ptr: *mut ::accessible_text_cursor_event::AccessibleTextCursorEvent) -> *mut ::accessible_text_insert_event::AccessibleTextInsertEvent;
  pub fn qt_gui_c_QAccessibleTextInsertEvent_changePosition(this_ptr: *const ::accessible_text_insert_event::AccessibleTextInsertEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleTextInsertEvent_delete(this_ptr: *mut ::accessible_text_insert_event::AccessibleTextInsertEvent);
  pub fn qt_gui_c_QAccessibleTextInsertEvent_new_iface_position_text(iface: *mut ::accessible_interface::AccessibleInterface, position: ::libc::c_int, text: *const ::qt_core::string::String) -> *mut ::accessible_text_insert_event::AccessibleTextInsertEvent;
  pub fn qt_gui_c_QAccessibleTextInsertEvent_new_obj_position_text(obj: *mut ::qt_core::object::Object, position: ::libc::c_int, text: *const ::qt_core::string::String) -> *mut ::accessible_text_insert_event::AccessibleTextInsertEvent;
  pub fn qt_gui_c_QAccessibleTextInsertEvent_textInserted_to_output(this_ptr: *const ::accessible_text_insert_event::AccessibleTextInsertEvent, output: *mut ::qt_core::string::String);

  // Header: QAccessibleTextInterface
  pub fn qt_gui_c_QAccessibleTextInterface_addSelection(this_ptr: *mut ::accessible_text_interface::AccessibleTextInterface, startOffset: ::libc::c_int, endOffset: ::libc::c_int);
  pub fn qt_gui_c_QAccessibleTextInterface_attributes_to_output(this_ptr: *const ::accessible_text_interface::AccessibleTextInterface, offset: ::libc::c_int, startOffset: *mut ::libc::c_int, endOffset: *mut ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QAccessibleTextInterface_characterCount(this_ptr: *const ::accessible_text_interface::AccessibleTextInterface) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleTextInterface_characterRect_to_output(this_ptr: *const ::accessible_text_interface::AccessibleTextInterface, offset: ::libc::c_int, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QAccessibleTextInterface_cursorPosition(this_ptr: *const ::accessible_text_interface::AccessibleTextInterface) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleTextInterface_delete(this_ptr: *mut ::accessible_text_interface::AccessibleTextInterface);
  pub fn qt_gui_c_QAccessibleTextInterface_offsetAtPoint(this_ptr: *const ::accessible_text_interface::AccessibleTextInterface, point: *const ::qt_core::point::Point) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleTextInterface_removeSelection(this_ptr: *mut ::accessible_text_interface::AccessibleTextInterface, selectionIndex: ::libc::c_int);
  pub fn qt_gui_c_QAccessibleTextInterface_scrollToSubstring(this_ptr: *mut ::accessible_text_interface::AccessibleTextInterface, startIndex: ::libc::c_int, endIndex: ::libc::c_int);
  pub fn qt_gui_c_QAccessibleTextInterface_selection(this_ptr: *const ::accessible_text_interface::AccessibleTextInterface, selectionIndex: ::libc::c_int, startOffset: *mut ::libc::c_int, endOffset: *mut ::libc::c_int);
  pub fn qt_gui_c_QAccessibleTextInterface_selectionCount(this_ptr: *const ::accessible_text_interface::AccessibleTextInterface) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleTextInterface_setCursorPosition(this_ptr: *mut ::accessible_text_interface::AccessibleTextInterface, position: ::libc::c_int);
  pub fn qt_gui_c_QAccessibleTextInterface_setSelection(this_ptr: *mut ::accessible_text_interface::AccessibleTextInterface, selectionIndex: ::libc::c_int, startOffset: ::libc::c_int, endOffset: ::libc::c_int);
  pub fn qt_gui_c_QAccessibleTextInterface_textAfterOffset_to_output(this_ptr: *const ::accessible_text_interface::AccessibleTextInterface, offset: ::libc::c_int, boundaryType: *const ::accessible::TextBoundaryType, startOffset: *mut ::libc::c_int, endOffset: *mut ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QAccessibleTextInterface_textAtOffset_to_output(this_ptr: *const ::accessible_text_interface::AccessibleTextInterface, offset: ::libc::c_int, boundaryType: *const ::accessible::TextBoundaryType, startOffset: *mut ::libc::c_int, endOffset: *mut ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QAccessibleTextInterface_textBeforeOffset_to_output(this_ptr: *const ::accessible_text_interface::AccessibleTextInterface, offset: ::libc::c_int, boundaryType: *const ::accessible::TextBoundaryType, startOffset: *mut ::libc::c_int, endOffset: *mut ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QAccessibleTextInterface_text_to_output(this_ptr: *const ::accessible_text_interface::AccessibleTextInterface, startOffset: ::libc::c_int, endOffset: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QAccessibleTextRemoveEvent
  pub fn qt_gui_c_QAccessibleTextRemoveEvent_G_dynamic_cast_QAccessibleTextRemoveEvent_ptr_QAccessibleEvent(ptr: *mut ::accessible_event::AccessibleEvent) -> *mut ::accessible_text_remove_event::AccessibleTextRemoveEvent;
  pub fn qt_gui_c_QAccessibleTextRemoveEvent_G_dynamic_cast_QAccessibleTextRemoveEvent_ptr_QAccessibleTextCursorEvent(ptr: *mut ::accessible_text_cursor_event::AccessibleTextCursorEvent) -> *mut ::accessible_text_remove_event::AccessibleTextRemoveEvent;
  pub fn qt_gui_c_QAccessibleTextRemoveEvent_G_static_cast_QAccessibleEvent_ptr(ptr: *mut ::accessible_text_remove_event::AccessibleTextRemoveEvent) -> *mut ::accessible_event::AccessibleEvent;
  pub fn qt_gui_c_QAccessibleTextRemoveEvent_G_static_cast_QAccessibleTextCursorEvent_ptr(ptr: *mut ::accessible_text_remove_event::AccessibleTextRemoveEvent) -> *mut ::accessible_text_cursor_event::AccessibleTextCursorEvent;
  pub fn qt_gui_c_QAccessibleTextRemoveEvent_G_static_cast_QAccessibleTextRemoveEvent_ptr_QAccessibleEvent(ptr: *mut ::accessible_event::AccessibleEvent) -> *mut ::accessible_text_remove_event::AccessibleTextRemoveEvent;
  pub fn qt_gui_c_QAccessibleTextRemoveEvent_G_static_cast_QAccessibleTextRemoveEvent_ptr_QAccessibleTextCursorEvent(ptr: *mut ::accessible_text_cursor_event::AccessibleTextCursorEvent) -> *mut ::accessible_text_remove_event::AccessibleTextRemoveEvent;
  pub fn qt_gui_c_QAccessibleTextRemoveEvent_changePosition(this_ptr: *const ::accessible_text_remove_event::AccessibleTextRemoveEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleTextRemoveEvent_delete(this_ptr: *mut ::accessible_text_remove_event::AccessibleTextRemoveEvent);
  pub fn qt_gui_c_QAccessibleTextRemoveEvent_new_iface_position_text(iface: *mut ::accessible_interface::AccessibleInterface, position: ::libc::c_int, text: *const ::qt_core::string::String) -> *mut ::accessible_text_remove_event::AccessibleTextRemoveEvent;
  pub fn qt_gui_c_QAccessibleTextRemoveEvent_new_obj_position_text(obj: *mut ::qt_core::object::Object, position: ::libc::c_int, text: *const ::qt_core::string::String) -> *mut ::accessible_text_remove_event::AccessibleTextRemoveEvent;
  pub fn qt_gui_c_QAccessibleTextRemoveEvent_textRemoved_to_output(this_ptr: *const ::accessible_text_remove_event::AccessibleTextRemoveEvent, output: *mut ::qt_core::string::String);

  // Header: QAccessibleTextSelectionEvent
  pub fn qt_gui_c_QAccessibleTextSelectionEvent_G_dynamic_cast_QAccessibleTextSelectionEvent_ptr_QAccessibleEvent(ptr: *mut ::accessible_event::AccessibleEvent) -> *mut ::accessible_text_selection_event::AccessibleTextSelectionEvent;
  pub fn qt_gui_c_QAccessibleTextSelectionEvent_G_dynamic_cast_QAccessibleTextSelectionEvent_ptr_QAccessibleTextCursorEvent(ptr: *mut ::accessible_text_cursor_event::AccessibleTextCursorEvent) -> *mut ::accessible_text_selection_event::AccessibleTextSelectionEvent;
  pub fn qt_gui_c_QAccessibleTextSelectionEvent_G_static_cast_QAccessibleEvent_ptr(ptr: *mut ::accessible_text_selection_event::AccessibleTextSelectionEvent) -> *mut ::accessible_event::AccessibleEvent;
  pub fn qt_gui_c_QAccessibleTextSelectionEvent_G_static_cast_QAccessibleTextCursorEvent_ptr(ptr: *mut ::accessible_text_selection_event::AccessibleTextSelectionEvent) -> *mut ::accessible_text_cursor_event::AccessibleTextCursorEvent;
  pub fn qt_gui_c_QAccessibleTextSelectionEvent_G_static_cast_QAccessibleTextSelectionEvent_ptr_QAccessibleEvent(ptr: *mut ::accessible_event::AccessibleEvent) -> *mut ::accessible_text_selection_event::AccessibleTextSelectionEvent;
  pub fn qt_gui_c_QAccessibleTextSelectionEvent_G_static_cast_QAccessibleTextSelectionEvent_ptr_QAccessibleTextCursorEvent(ptr: *mut ::accessible_text_cursor_event::AccessibleTextCursorEvent) -> *mut ::accessible_text_selection_event::AccessibleTextSelectionEvent;
  pub fn qt_gui_c_QAccessibleTextSelectionEvent_delete(this_ptr: *mut ::accessible_text_selection_event::AccessibleTextSelectionEvent);
  pub fn qt_gui_c_QAccessibleTextSelectionEvent_new_iface_start_end(iface: *mut ::accessible_interface::AccessibleInterface, start: ::libc::c_int, end: ::libc::c_int) -> *mut ::accessible_text_selection_event::AccessibleTextSelectionEvent;
  pub fn qt_gui_c_QAccessibleTextSelectionEvent_new_obj_start_end(obj: *mut ::qt_core::object::Object, start: ::libc::c_int, end: ::libc::c_int) -> *mut ::accessible_text_selection_event::AccessibleTextSelectionEvent;
  pub fn qt_gui_c_QAccessibleTextSelectionEvent_selectionEnd(this_ptr: *const ::accessible_text_selection_event::AccessibleTextSelectionEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleTextSelectionEvent_selectionStart(this_ptr: *const ::accessible_text_selection_event::AccessibleTextSelectionEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleTextSelectionEvent_setSelection(this_ptr: *mut ::accessible_text_selection_event::AccessibleTextSelectionEvent, start: ::libc::c_int, end: ::libc::c_int);

  // Header: QAccessibleTextUpdateEvent
  pub fn qt_gui_c_QAccessibleTextUpdateEvent_G_dynamic_cast_QAccessibleTextUpdateEvent_ptr_QAccessibleEvent(ptr: *mut ::accessible_event::AccessibleEvent) -> *mut ::accessible_text_update_event::AccessibleTextUpdateEvent;
  pub fn qt_gui_c_QAccessibleTextUpdateEvent_G_dynamic_cast_QAccessibleTextUpdateEvent_ptr_QAccessibleTextCursorEvent(ptr: *mut ::accessible_text_cursor_event::AccessibleTextCursorEvent) -> *mut ::accessible_text_update_event::AccessibleTextUpdateEvent;
  pub fn qt_gui_c_QAccessibleTextUpdateEvent_G_static_cast_QAccessibleEvent_ptr(ptr: *mut ::accessible_text_update_event::AccessibleTextUpdateEvent) -> *mut ::accessible_event::AccessibleEvent;
  pub fn qt_gui_c_QAccessibleTextUpdateEvent_G_static_cast_QAccessibleTextCursorEvent_ptr(ptr: *mut ::accessible_text_update_event::AccessibleTextUpdateEvent) -> *mut ::accessible_text_cursor_event::AccessibleTextCursorEvent;
  pub fn qt_gui_c_QAccessibleTextUpdateEvent_G_static_cast_QAccessibleTextUpdateEvent_ptr_QAccessibleEvent(ptr: *mut ::accessible_event::AccessibleEvent) -> *mut ::accessible_text_update_event::AccessibleTextUpdateEvent;
  pub fn qt_gui_c_QAccessibleTextUpdateEvent_G_static_cast_QAccessibleTextUpdateEvent_ptr_QAccessibleTextCursorEvent(ptr: *mut ::accessible_text_cursor_event::AccessibleTextCursorEvent) -> *mut ::accessible_text_update_event::AccessibleTextUpdateEvent;
  pub fn qt_gui_c_QAccessibleTextUpdateEvent_changePosition(this_ptr: *const ::accessible_text_update_event::AccessibleTextUpdateEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QAccessibleTextUpdateEvent_delete(this_ptr: *mut ::accessible_text_update_event::AccessibleTextUpdateEvent);
  pub fn qt_gui_c_QAccessibleTextUpdateEvent_new_iface_position_oldText_text(iface: *mut ::accessible_interface::AccessibleInterface, position: ::libc::c_int, oldText: *const ::qt_core::string::String, text: *const ::qt_core::string::String) -> *mut ::accessible_text_update_event::AccessibleTextUpdateEvent;
  pub fn qt_gui_c_QAccessibleTextUpdateEvent_new_obj_position_oldText_text(obj: *mut ::qt_core::object::Object, position: ::libc::c_int, oldText: *const ::qt_core::string::String, text: *const ::qt_core::string::String) -> *mut ::accessible_text_update_event::AccessibleTextUpdateEvent;
  pub fn qt_gui_c_QAccessibleTextUpdateEvent_textInserted_to_output(this_ptr: *const ::accessible_text_update_event::AccessibleTextUpdateEvent, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QAccessibleTextUpdateEvent_textRemoved_to_output(this_ptr: *const ::accessible_text_update_event::AccessibleTextUpdateEvent, output: *mut ::qt_core::string::String);

  // Header: QAccessibleValueChangeEvent
  pub fn qt_gui_c_QAccessibleValueChangeEvent_G_dynamic_cast_QAccessibleValueChangeEvent_ptr(ptr: *mut ::accessible_event::AccessibleEvent) -> *mut ::accessible_value_change_event::AccessibleValueChangeEvent;
  pub fn qt_gui_c_QAccessibleValueChangeEvent_G_static_cast_QAccessibleEvent_ptr(ptr: *mut ::accessible_value_change_event::AccessibleValueChangeEvent) -> *mut ::accessible_event::AccessibleEvent;
  pub fn qt_gui_c_QAccessibleValueChangeEvent_G_static_cast_QAccessibleValueChangeEvent_ptr(ptr: *mut ::accessible_event::AccessibleEvent) -> *mut ::accessible_value_change_event::AccessibleValueChangeEvent;
  pub fn qt_gui_c_QAccessibleValueChangeEvent_delete(this_ptr: *mut ::accessible_value_change_event::AccessibleValueChangeEvent);
  pub fn qt_gui_c_QAccessibleValueChangeEvent_new_iface_val(iface: *mut ::accessible_interface::AccessibleInterface, val: *const ::qt_core::variant::Variant) -> *mut ::accessible_value_change_event::AccessibleValueChangeEvent;
  pub fn qt_gui_c_QAccessibleValueChangeEvent_new_obj_val(obj: *mut ::qt_core::object::Object, val: *const ::qt_core::variant::Variant) -> *mut ::accessible_value_change_event::AccessibleValueChangeEvent;
  pub fn qt_gui_c_QAccessibleValueChangeEvent_setValue(this_ptr: *mut ::accessible_value_change_event::AccessibleValueChangeEvent, val: *const ::qt_core::variant::Variant);
  pub fn qt_gui_c_QAccessibleValueChangeEvent_value_to_output(this_ptr: *const ::accessible_value_change_event::AccessibleValueChangeEvent, output: *mut ::qt_core::variant::Variant);

  // Header: QAccessibleValueInterface
  pub fn qt_gui_c_QAccessibleValueInterface_currentValue_to_output(this_ptr: *const ::accessible_value_interface::AccessibleValueInterface, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QAccessibleValueInterface_delete(this_ptr: *mut ::accessible_value_interface::AccessibleValueInterface);
  pub fn qt_gui_c_QAccessibleValueInterface_maximumValue_to_output(this_ptr: *const ::accessible_value_interface::AccessibleValueInterface, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QAccessibleValueInterface_minimumStepSize_to_output(this_ptr: *const ::accessible_value_interface::AccessibleValueInterface, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QAccessibleValueInterface_minimumValue_to_output(this_ptr: *const ::accessible_value_interface::AccessibleValueInterface, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QAccessibleValueInterface_setCurrentValue(this_ptr: *mut ::accessible_value_interface::AccessibleValueInterface, value: *const ::qt_core::variant::Variant);

  // Header: QActionEvent
  pub fn qt_gui_c_QActionEvent_G_operator_eq_e_key(e: *mut ::key_event::KeyEvent, key: *const ::key_sequence::StandardKey) -> bool;
  pub fn qt_gui_c_QActionEvent_G_operator_eq_key_e(key: *const ::key_sequence::StandardKey, e: *mut ::key_event::KeyEvent) -> bool;
  pub fn qt_gui_c_QActionEvent_G_operator_eq_lhs_rhs(lhs: *const ::pointing_device_unique_id::PointingDeviceUniqueId, rhs: *const ::pointing_device_unique_id::PointingDeviceUniqueId) -> bool;
  pub fn qt_gui_c_QActionEvent_G_operator_neq(lhs: *const ::pointing_device_unique_id::PointingDeviceUniqueId, rhs: *const ::pointing_device_unique_id::PointingDeviceUniqueId) -> bool;
  pub fn qt_gui_c_QActionEvent_G_operator_shl_to_output_QDebug_QEvent(arg1: *const ::qt_core::debug::Debug, arg2: *const ::qt_core::event::Event, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QActionEvent_G_operator_shl_to_output_QDebug_QTouchEvent_TouchPoint(arg1: *const ::qt_core::debug::Debug, arg2: *const ::touch_event::TouchPoint, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QActionEvent_G_qHash_key(key: *const ::pointing_device_unique_id::PointingDeviceUniqueId) -> ::libc::c_uint;
  pub fn qt_gui_c_QActionEvent_G_qHash_key_seed(key: *const ::pointing_device_unique_id::PointingDeviceUniqueId, seed: ::libc::c_uint) -> ::libc::c_uint;
  pub fn qt_gui_c_QActionEvent_G_static_cast_QActionEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::action_event::ActionEvent;
  pub fn qt_gui_c_QActionEvent_G_static_cast_QEvent_ptr(ptr: *mut ::action_event::ActionEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QActionEvent_delete(this_ptr: *mut ::action_event::ActionEvent);

  // Header: QApplicationStateChangeEvent
  pub fn qt_gui_c_QApplicationStateChangeEvent_G_static_cast_QApplicationStateChangeEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::application_state_change_event::ApplicationStateChangeEvent;
  pub fn qt_gui_c_QApplicationStateChangeEvent_G_static_cast_QEvent_ptr(ptr: *mut ::application_state_change_event::ApplicationStateChangeEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QApplicationStateChangeEvent_delete(this_ptr: *mut ::application_state_change_event::ApplicationStateChangeEvent);
  pub fn qt_gui_c_QApplicationStateChangeEvent_new(state: *const ::qt_core::qt::ApplicationState) -> *mut ::application_state_change_event::ApplicationStateChangeEvent;

  // Header: QBackingStore
  pub fn qt_gui_c_QBackingStore_beginPaint(this_ptr: *mut ::backing_store::BackingStore, arg1: *const ::region::Region);
  pub fn qt_gui_c_QBackingStore_delete(this_ptr: *mut ::backing_store::BackingStore);
  pub fn qt_gui_c_QBackingStore_endPaint(this_ptr: *mut ::backing_store::BackingStore);
  pub fn qt_gui_c_QBackingStore_flush_region(this_ptr: *mut ::backing_store::BackingStore, region: *const ::region::Region);
  pub fn qt_gui_c_QBackingStore_flush_region_window(this_ptr: *mut ::backing_store::BackingStore, region: *const ::region::Region, window: *mut ::window::Window);
  pub fn qt_gui_c_QBackingStore_flush_region_window_offset(this_ptr: *mut ::backing_store::BackingStore, region: *const ::region::Region, window: *mut ::window::Window, offset: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QBackingStore_hasStaticContents(this_ptr: *const ::backing_store::BackingStore) -> bool;
  pub fn qt_gui_c_QBackingStore_new(window: *mut ::window::Window) -> *mut ::backing_store::BackingStore;
  pub fn qt_gui_c_QBackingStore_paintDevice(this_ptr: *mut ::backing_store::BackingStore) -> *mut ::paint_device::PaintDevice;
  pub fn qt_gui_c_QBackingStore_resize(this_ptr: *mut ::backing_store::BackingStore, size: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QBackingStore_scroll(this_ptr: *mut ::backing_store::BackingStore, area: *const ::region::Region, dx: ::libc::c_int, dy: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QBackingStore_setStaticContents(this_ptr: *mut ::backing_store::BackingStore, region: *const ::region::Region);
  pub fn qt_gui_c_QBackingStore_size_to_output(this_ptr: *const ::backing_store::BackingStore, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QBackingStore_staticContents_as_ptr(this_ptr: *const ::backing_store::BackingStore) -> *mut ::region::Region;
  pub fn qt_gui_c_QBackingStore_window(this_ptr: *const ::backing_store::BackingStore) -> *mut ::window::Window;

  // Header: QBitmap
  pub fn qt_gui_c_QBitmap_G_dynamic_cast_QBitmap_ptr_QPaintDevice(ptr: *mut ::paint_device::PaintDevice) -> *mut ::bitmap::Bitmap;
  pub fn qt_gui_c_QBitmap_G_dynamic_cast_QBitmap_ptr_QPixmap(ptr: *mut ::pixmap::Pixmap) -> *mut ::bitmap::Bitmap;
  pub fn qt_gui_c_QBitmap_G_static_cast_QBitmap_ptr_QPaintDevice(ptr: *mut ::paint_device::PaintDevice) -> *mut ::bitmap::Bitmap;
  pub fn qt_gui_c_QBitmap_G_static_cast_QBitmap_ptr_QPixmap(ptr: *mut ::pixmap::Pixmap) -> *mut ::bitmap::Bitmap;
  pub fn qt_gui_c_QBitmap_G_static_cast_QPaintDevice_ptr(ptr: *mut ::bitmap::Bitmap) -> *mut ::paint_device::PaintDevice;
  pub fn qt_gui_c_QBitmap_G_static_cast_QPixmap_ptr(ptr: *mut ::bitmap::Bitmap) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QBitmap_G_swap(value1: *mut ::bitmap::Bitmap, value2: *mut ::bitmap::Bitmap);
  pub fn qt_gui_c_QBitmap_clear(this_ptr: *mut ::bitmap::Bitmap);
  pub fn qt_gui_c_QBitmap_convert_to_QVariant_to_output(this_ptr: *const ::bitmap::Bitmap, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QBitmap_delete(this_ptr: *mut ::bitmap::Bitmap);
  pub fn qt_gui_c_QBitmap_fromData_as_ptr_size_bits(size: *const ::qt_core::size::Size, bits: *const ::libc::c_uchar) -> *mut ::bitmap::Bitmap;
  pub fn qt_gui_c_QBitmap_fromData_as_ptr_size_bits_monoFormat(size: *const ::qt_core::size::Size, bits: *const ::libc::c_uchar, monoFormat: *const ::image::Format) -> *mut ::bitmap::Bitmap;
  pub fn qt_gui_c_QBitmap_new_QBitmap(other: *const ::bitmap::Bitmap) -> *mut ::bitmap::Bitmap;
  pub fn qt_gui_c_QBitmap_new_QPixmap(arg1: *const ::pixmap::Pixmap) -> *mut ::bitmap::Bitmap;
  pub fn qt_gui_c_QBitmap_new_QSize(arg1: *const ::qt_core::size::Size) -> *mut ::bitmap::Bitmap;
  pub fn qt_gui_c_QBitmap_new_QString(fileName: *const ::qt_core::string::String) -> *mut ::bitmap::Bitmap;
  pub fn qt_gui_c_QBitmap_new_QString_char(fileName: *const ::qt_core::string::String, format: *const ::libc::c_char) -> *mut ::bitmap::Bitmap;
  pub fn qt_gui_c_QBitmap_new_int_int(w: ::libc::c_int, h: ::libc::c_int) -> *mut ::bitmap::Bitmap;
  pub fn qt_gui_c_QBitmap_new_no_args() -> *mut ::bitmap::Bitmap;
  pub fn qt_gui_c_QBitmap_operator_assign_arg1(this_ptr: *mut ::bitmap::Bitmap, arg1: *const ::pixmap::Pixmap) -> *mut ::bitmap::Bitmap;
  pub fn qt_gui_c_QBitmap_operator_assign_other(this_ptr: *mut ::bitmap::Bitmap, other: *const ::bitmap::Bitmap) -> *mut ::bitmap::Bitmap;
  pub fn qt_gui_c_QBitmap_swap(this_ptr: *mut ::bitmap::Bitmap, other: *mut ::bitmap::Bitmap);
  pub fn qt_gui_c_QBitmap_transformed_as_ptr_arg1(this_ptr: *const ::bitmap::Bitmap, arg1: *const ::matrix::Matrix) -> *mut ::bitmap::Bitmap;
  pub fn qt_gui_c_QBitmap_transformed_as_ptr_matrix(this_ptr: *const ::bitmap::Bitmap, matrix: *const ::transform::Transform) -> *mut ::bitmap::Bitmap;

  // Header: QBrush
  pub fn qt_gui_c_QBrush_G_operator_shl(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *const ::brush::Brush) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QBrush_G_operator_shl_to_output(arg1: *const ::qt_core::debug::Debug, arg2: *const ::brush::Brush, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QBrush_G_operator_shr(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *mut ::brush::Brush) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QBrush_G_swap(value1: *mut ::brush::Brush, value2: *mut ::brush::Brush);
  pub fn qt_gui_c_QBrush_color(this_ptr: *const ::brush::Brush) -> *const ::color::Color;
  pub fn qt_gui_c_QBrush_constructor_QBrush(brush: *const ::brush::Brush, output: *mut ::brush::Brush);
  pub fn qt_gui_c_QBrush_constructor_QColor(color: *const ::color::Color, output: *mut ::brush::Brush);
  pub fn qt_gui_c_QBrush_constructor_QColor_QPixmap(color: *const ::color::Color, pixmap: *const ::pixmap::Pixmap, output: *mut ::brush::Brush);
  pub fn qt_gui_c_QBrush_constructor_QColor_Qt_BrushStyle(color: *const ::color::Color, bs: *const ::qt_core::qt::BrushStyle, output: *mut ::brush::Brush);
  pub fn qt_gui_c_QBrush_constructor_QGradient(gradient: *const ::gradient::Gradient, output: *mut ::brush::Brush);
  pub fn qt_gui_c_QBrush_constructor_QImage(image: *const ::image::Image, output: *mut ::brush::Brush);
  pub fn qt_gui_c_QBrush_constructor_QPixmap(pixmap: *const ::pixmap::Pixmap, output: *mut ::brush::Brush);
  pub fn qt_gui_c_QBrush_constructor_Qt_BrushStyle(bs: *const ::qt_core::qt::BrushStyle, output: *mut ::brush::Brush);
  pub fn qt_gui_c_QBrush_constructor_Qt_GlobalColor(color: *const ::qt_core::qt::GlobalColor, output: *mut ::brush::Brush);
  pub fn qt_gui_c_QBrush_constructor_Qt_GlobalColor_QPixmap(color: *const ::qt_core::qt::GlobalColor, pixmap: *const ::pixmap::Pixmap, output: *mut ::brush::Brush);
  pub fn qt_gui_c_QBrush_constructor_Qt_GlobalColor_Qt_BrushStyle(color: *const ::qt_core::qt::GlobalColor, bs: *const ::qt_core::qt::BrushStyle, output: *mut ::brush::Brush);
  pub fn qt_gui_c_QBrush_constructor_no_args(output: *mut ::brush::Brush);
  pub fn qt_gui_c_QBrush_convert_to_QVariant_to_output(this_ptr: *const ::brush::Brush, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QBrush_destructor(this_ptr: *mut ::brush::Brush);
  pub fn qt_gui_c_QBrush_gradient(this_ptr: *const ::brush::Brush) -> *const ::gradient::Gradient;
  pub fn qt_gui_c_QBrush_isDetached(this_ptr: *const ::brush::Brush) -> bool;
  pub fn qt_gui_c_QBrush_isOpaque(this_ptr: *const ::brush::Brush) -> bool;
  pub fn qt_gui_c_QBrush_matrix(this_ptr: *const ::brush::Brush) -> *const ::matrix::Matrix;
  pub fn qt_gui_c_QBrush_operator_assign(this_ptr: *mut ::brush::Brush, brush: *const ::brush::Brush) -> *mut ::brush::Brush;
  pub fn qt_gui_c_QBrush_operator_eq(this_ptr: *const ::brush::Brush, b: *const ::brush::Brush) -> bool;
  pub fn qt_gui_c_QBrush_operator_neq(this_ptr: *const ::brush::Brush, b: *const ::brush::Brush) -> bool;
  pub fn qt_gui_c_QBrush_setColor_QColor(this_ptr: *mut ::brush::Brush, color: *const ::color::Color);
  pub fn qt_gui_c_QBrush_setColor_Qt_GlobalColor(this_ptr: *mut ::brush::Brush, color: *const ::qt_core::qt::GlobalColor);
  pub fn qt_gui_c_QBrush_setMatrix(this_ptr: *mut ::brush::Brush, mat: *const ::matrix::Matrix);
  pub fn qt_gui_c_QBrush_setStyle(this_ptr: *mut ::brush::Brush, arg1: *const ::qt_core::qt::BrushStyle);
  pub fn qt_gui_c_QBrush_setTexture(this_ptr: *mut ::brush::Brush, pixmap: *const ::pixmap::Pixmap);
  pub fn qt_gui_c_QBrush_setTextureImage(this_ptr: *mut ::brush::Brush, image: *const ::image::Image);
  pub fn qt_gui_c_QBrush_setTransform(this_ptr: *mut ::brush::Brush, arg1: *const ::transform::Transform);
  pub fn qt_gui_c_QBrush_swap(this_ptr: *mut ::brush::Brush, other: *mut ::brush::Brush);
  pub fn qt_gui_c_QBrush_textureImage_as_ptr(this_ptr: *const ::brush::Brush) -> *mut ::image::Image;
  pub fn qt_gui_c_QBrush_texture_as_ptr(this_ptr: *const ::brush::Brush) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QBrush_transform_to_output(this_ptr: *const ::brush::Brush, output: *mut ::transform::Transform);

  // Header: QClipboard
  pub fn qt_gui_c_QClipboard_G_static_cast_QClipboard_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::clipboard::Clipboard;
  pub fn qt_gui_c_QClipboard_G_static_cast_QObject_ptr(ptr: *mut ::clipboard::Clipboard) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QClipboard_clear_mode(this_ptr: *mut ::clipboard::Clipboard, mode: ::clipboard::Mode);
  pub fn qt_gui_c_QClipboard_clear_no_args(this_ptr: *mut ::clipboard::Clipboard);
  pub fn qt_gui_c_QClipboard_image_as_ptr_mode(this_ptr: *const ::clipboard::Clipboard, mode: ::clipboard::Mode) -> *mut ::image::Image;
  pub fn qt_gui_c_QClipboard_image_as_ptr_no_args(this_ptr: *const ::clipboard::Clipboard) -> *mut ::image::Image;
  pub fn qt_gui_c_QClipboard_metaObject(this_ptr: *const ::clipboard::Clipboard) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QClipboard_mimeData_mode(this_ptr: *const ::clipboard::Clipboard, mode: ::clipboard::Mode) -> *const ::qt_core::mime_data::MimeData;
  pub fn qt_gui_c_QClipboard_mimeData_no_args(this_ptr: *const ::clipboard::Clipboard) -> *const ::qt_core::mime_data::MimeData;
  pub fn qt_gui_c_QClipboard_ownsClipboard(this_ptr: *const ::clipboard::Clipboard) -> bool;
  pub fn qt_gui_c_QClipboard_ownsFindBuffer(this_ptr: *const ::clipboard::Clipboard) -> bool;
  pub fn qt_gui_c_QClipboard_ownsSelection(this_ptr: *const ::clipboard::Clipboard) -> bool;
  pub fn qt_gui_c_QClipboard_pixmap_as_ptr_mode(this_ptr: *const ::clipboard::Clipboard, mode: ::clipboard::Mode) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QClipboard_pixmap_as_ptr_no_args(this_ptr: *const ::clipboard::Clipboard) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QClipboard_qt_metacall(this_ptr: *mut ::clipboard::Clipboard, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QClipboard_qt_metacast(this_ptr: *mut ::clipboard::Clipboard, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QClipboard_setImage_arg1(this_ptr: *mut ::clipboard::Clipboard, arg1: *const ::image::Image);
  pub fn qt_gui_c_QClipboard_setImage_arg1_mode(this_ptr: *mut ::clipboard::Clipboard, arg1: *const ::image::Image, mode: ::clipboard::Mode);
  pub fn qt_gui_c_QClipboard_setMimeData_data(this_ptr: *mut ::clipboard::Clipboard, data: *mut ::qt_core::mime_data::MimeData);
  pub fn qt_gui_c_QClipboard_setMimeData_data_mode(this_ptr: *mut ::clipboard::Clipboard, data: *mut ::qt_core::mime_data::MimeData, mode: ::clipboard::Mode);
  pub fn qt_gui_c_QClipboard_setPixmap_arg1(this_ptr: *mut ::clipboard::Clipboard, arg1: *const ::pixmap::Pixmap);
  pub fn qt_gui_c_QClipboard_setPixmap_arg1_mode(this_ptr: *mut ::clipboard::Clipboard, arg1: *const ::pixmap::Pixmap, mode: ::clipboard::Mode);
  pub fn qt_gui_c_QClipboard_setText_arg1(this_ptr: *mut ::clipboard::Clipboard, arg1: *const ::qt_core::string::String);
  pub fn qt_gui_c_QClipboard_setText_arg1_mode(this_ptr: *mut ::clipboard::Clipboard, arg1: *const ::qt_core::string::String, mode: ::clipboard::Mode);
  pub fn qt_gui_c_QClipboard_supportsFindBuffer(this_ptr: *const ::clipboard::Clipboard) -> bool;
  pub fn qt_gui_c_QClipboard_supportsSelection(this_ptr: *const ::clipboard::Clipboard) -> bool;
  pub fn qt_gui_c_QClipboard_text_to_output_mode(this_ptr: *const ::clipboard::Clipboard, mode: ::clipboard::Mode, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QClipboard_text_to_output_no_args(this_ptr: *const ::clipboard::Clipboard, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QClipboard_text_to_output_subtype(this_ptr: *const ::clipboard::Clipboard, subtype: *mut ::qt_core::string::String, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QClipboard_text_to_output_subtype_mode(this_ptr: *const ::clipboard::Clipboard, subtype: *mut ::qt_core::string::String, mode: ::clipboard::Mode, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QClipboard_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QClipboard_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QCloseEvent
  pub fn qt_gui_c_QCloseEvent_G_static_cast_QCloseEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::close_event::CloseEvent;
  pub fn qt_gui_c_QCloseEvent_G_static_cast_QEvent_ptr(ptr: *mut ::close_event::CloseEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QCloseEvent_delete(this_ptr: *mut ::close_event::CloseEvent);
  pub fn qt_gui_c_QCloseEvent_new() -> *mut ::close_event::CloseEvent;

  // Header: QColor
  pub fn qt_gui_c_QColor_G_operator_shl(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *const ::color::Color) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QColor_G_operator_shl_to_output(arg1: *const ::qt_core::debug::Debug, arg2: *const ::color::Color, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QColor_G_operator_shr(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *mut ::color::Color) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QColor_alpha(this_ptr: *const ::color::Color) -> ::libc::c_int;
  pub fn qt_gui_c_QColor_alphaF(this_ptr: *const ::color::Color) -> ::libc::c_double;
  pub fn qt_gui_c_QColor_black(this_ptr: *const ::color::Color) -> ::libc::c_int;
  pub fn qt_gui_c_QColor_blackF(this_ptr: *const ::color::Color) -> ::libc::c_double;
  pub fn qt_gui_c_QColor_blue(this_ptr: *const ::color::Color) -> ::libc::c_int;
  pub fn qt_gui_c_QColor_blueF(this_ptr: *const ::color::Color) -> ::libc::c_double;
  pub fn qt_gui_c_QColor_colorNames_to_output(output: *mut ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QColor_constructor_QColor(color: *const ::color::Color, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_constructor_QColor_Spec(spec: ::color::Spec, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_constructor_QLatin1String(name: *const ::qt_core::latin1_string::Latin1String, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_constructor_QRgba64(rgba64: *const ::rgba64::Rgba64, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_constructor_QString(name: *const ::qt_core::string::String, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_constructor_Qt_GlobalColor(color: *const ::qt_core::qt::GlobalColor, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_constructor_char(aname: *const ::libc::c_char, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_constructor_int_int_int(r: ::libc::c_int, g: ::libc::c_int, b: ::libc::c_int, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_constructor_int_int_int_int(r: ::libc::c_int, g: ::libc::c_int, b: ::libc::c_int, a: ::libc::c_int, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_constructor_no_args(output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_constructor_unsigned_int(rgb: ::libc::c_uint, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_convertTo_to_output(this_ptr: *const ::color::Color, colorSpec: ::color::Spec, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_convert_to_QVariant_to_output(this_ptr: *const ::color::Color, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QColor_cyan(this_ptr: *const ::color::Color) -> ::libc::c_int;
  pub fn qt_gui_c_QColor_cyanF(this_ptr: *const ::color::Color) -> ::libc::c_double;
  pub fn qt_gui_c_QColor_dark_to_output_f(this_ptr: *const ::color::Color, f: ::libc::c_int, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_dark_to_output_no_args(this_ptr: *const ::color::Color, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_darker_to_output_f(this_ptr: *const ::color::Color, f: ::libc::c_int, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_darker_to_output_no_args(this_ptr: *const ::color::Color, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_destructor(this_ptr: *mut ::color::Color);
  pub fn qt_gui_c_QColor_fromCmykF_to_output_c_m_y_k(c: ::libc::c_double, m: ::libc::c_double, y: ::libc::c_double, k: ::libc::c_double, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_fromCmykF_to_output_c_m_y_k_a(c: ::libc::c_double, m: ::libc::c_double, y: ::libc::c_double, k: ::libc::c_double, a: ::libc::c_double, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_fromCmyk_to_output_c_m_y_k(c: ::libc::c_int, m: ::libc::c_int, y: ::libc::c_int, k: ::libc::c_int, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_fromCmyk_to_output_c_m_y_k_a(c: ::libc::c_int, m: ::libc::c_int, y: ::libc::c_int, k: ::libc::c_int, a: ::libc::c_int, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_fromHslF_to_output_h_s_l(h: ::libc::c_double, s: ::libc::c_double, l: ::libc::c_double, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_fromHslF_to_output_h_s_l_a(h: ::libc::c_double, s: ::libc::c_double, l: ::libc::c_double, a: ::libc::c_double, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_fromHsl_to_output_h_s_l(h: ::libc::c_int, s: ::libc::c_int, l: ::libc::c_int, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_fromHsl_to_output_h_s_l_a(h: ::libc::c_int, s: ::libc::c_int, l: ::libc::c_int, a: ::libc::c_int, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_fromHsvF_to_output_h_s_v(h: ::libc::c_double, s: ::libc::c_double, v: ::libc::c_double, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_fromHsvF_to_output_h_s_v_a(h: ::libc::c_double, s: ::libc::c_double, v: ::libc::c_double, a: ::libc::c_double, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_fromHsv_to_output_h_s_v(h: ::libc::c_int, s: ::libc::c_int, v: ::libc::c_int, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_fromHsv_to_output_h_s_v_a(h: ::libc::c_int, s: ::libc::c_int, v: ::libc::c_int, a: ::libc::c_int, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_fromRgbF_to_output_r_g_b(r: ::libc::c_double, g: ::libc::c_double, b: ::libc::c_double, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_fromRgbF_to_output_r_g_b_a(r: ::libc::c_double, g: ::libc::c_double, b: ::libc::c_double, a: ::libc::c_double, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_fromRgb_to_output_r_g_b(r: ::libc::c_int, g: ::libc::c_int, b: ::libc::c_int, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_fromRgb_to_output_r_g_b_a(r: ::libc::c_int, g: ::libc::c_int, b: ::libc::c_int, a: ::libc::c_int, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_fromRgb_to_output_rgb(rgb: ::libc::c_uint, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_fromRgba64_to_output_r_g_b(r: ::libc::c_ushort, g: ::libc::c_ushort, b: ::libc::c_ushort, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_fromRgba64_to_output_r_g_b_a(r: ::libc::c_ushort, g: ::libc::c_ushort, b: ::libc::c_ushort, a: ::libc::c_ushort, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_fromRgba64_to_output_rgba(rgba: *const ::rgba64::Rgba64, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_fromRgba_to_output(rgba: ::libc::c_uint, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_getCmykF_c_m_y_k(this_ptr: *mut ::color::Color, c: *mut ::libc::c_double, m: *mut ::libc::c_double, y: *mut ::libc::c_double, k: *mut ::libc::c_double);
  pub fn qt_gui_c_QColor_getCmykF_c_m_y_k_a(this_ptr: *mut ::color::Color, c: *mut ::libc::c_double, m: *mut ::libc::c_double, y: *mut ::libc::c_double, k: *mut ::libc::c_double, a: *mut ::libc::c_double);
  pub fn qt_gui_c_QColor_getCmyk_c_m_y_k(this_ptr: *mut ::color::Color, c: *mut ::libc::c_int, m: *mut ::libc::c_int, y: *mut ::libc::c_int, k: *mut ::libc::c_int);
  pub fn qt_gui_c_QColor_getCmyk_c_m_y_k_a(this_ptr: *mut ::color::Color, c: *mut ::libc::c_int, m: *mut ::libc::c_int, y: *mut ::libc::c_int, k: *mut ::libc::c_int, a: *mut ::libc::c_int);
  pub fn qt_gui_c_QColor_getHslF_h_s_l(this_ptr: *const ::color::Color, h: *mut ::libc::c_double, s: *mut ::libc::c_double, l: *mut ::libc::c_double);
  pub fn qt_gui_c_QColor_getHslF_h_s_l_a(this_ptr: *const ::color::Color, h: *mut ::libc::c_double, s: *mut ::libc::c_double, l: *mut ::libc::c_double, a: *mut ::libc::c_double);
  pub fn qt_gui_c_QColor_getHsl_h_s_l(this_ptr: *const ::color::Color, h: *mut ::libc::c_int, s: *mut ::libc::c_int, l: *mut ::libc::c_int);
  pub fn qt_gui_c_QColor_getHsl_h_s_l_a(this_ptr: *const ::color::Color, h: *mut ::libc::c_int, s: *mut ::libc::c_int, l: *mut ::libc::c_int, a: *mut ::libc::c_int);
  pub fn qt_gui_c_QColor_getHsvF_h_s_v(this_ptr: *const ::color::Color, h: *mut ::libc::c_double, s: *mut ::libc::c_double, v: *mut ::libc::c_double);
  pub fn qt_gui_c_QColor_getHsvF_h_s_v_a(this_ptr: *const ::color::Color, h: *mut ::libc::c_double, s: *mut ::libc::c_double, v: *mut ::libc::c_double, a: *mut ::libc::c_double);
  pub fn qt_gui_c_QColor_getHsv_h_s_v(this_ptr: *const ::color::Color, h: *mut ::libc::c_int, s: *mut ::libc::c_int, v: *mut ::libc::c_int);
  pub fn qt_gui_c_QColor_getHsv_h_s_v_a(this_ptr: *const ::color::Color, h: *mut ::libc::c_int, s: *mut ::libc::c_int, v: *mut ::libc::c_int, a: *mut ::libc::c_int);
  pub fn qt_gui_c_QColor_getRgbF_r_g_b(this_ptr: *const ::color::Color, r: *mut ::libc::c_double, g: *mut ::libc::c_double, b: *mut ::libc::c_double);
  pub fn qt_gui_c_QColor_getRgbF_r_g_b_a(this_ptr: *const ::color::Color, r: *mut ::libc::c_double, g: *mut ::libc::c_double, b: *mut ::libc::c_double, a: *mut ::libc::c_double);
  pub fn qt_gui_c_QColor_getRgb_r_g_b(this_ptr: *const ::color::Color, r: *mut ::libc::c_int, g: *mut ::libc::c_int, b: *mut ::libc::c_int);
  pub fn qt_gui_c_QColor_getRgb_r_g_b_a(this_ptr: *const ::color::Color, r: *mut ::libc::c_int, g: *mut ::libc::c_int, b: *mut ::libc::c_int, a: *mut ::libc::c_int);
  pub fn qt_gui_c_QColor_green(this_ptr: *const ::color::Color) -> ::libc::c_int;
  pub fn qt_gui_c_QColor_greenF(this_ptr: *const ::color::Color) -> ::libc::c_double;
  pub fn qt_gui_c_QColor_hslHue(this_ptr: *const ::color::Color) -> ::libc::c_int;
  pub fn qt_gui_c_QColor_hslHueF(this_ptr: *const ::color::Color) -> ::libc::c_double;
  pub fn qt_gui_c_QColor_hslSaturation(this_ptr: *const ::color::Color) -> ::libc::c_int;
  pub fn qt_gui_c_QColor_hslSaturationF(this_ptr: *const ::color::Color) -> ::libc::c_double;
  pub fn qt_gui_c_QColor_hsvHue(this_ptr: *const ::color::Color) -> ::libc::c_int;
  pub fn qt_gui_c_QColor_hsvHueF(this_ptr: *const ::color::Color) -> ::libc::c_double;
  pub fn qt_gui_c_QColor_hsvSaturation(this_ptr: *const ::color::Color) -> ::libc::c_int;
  pub fn qt_gui_c_QColor_hsvSaturationF(this_ptr: *const ::color::Color) -> ::libc::c_double;
  pub fn qt_gui_c_QColor_hue(this_ptr: *const ::color::Color) -> ::libc::c_int;
  pub fn qt_gui_c_QColor_hueF(this_ptr: *const ::color::Color) -> ::libc::c_double;
  pub fn qt_gui_c_QColor_isValid(this_ptr: *const ::color::Color) -> bool;
  pub fn qt_gui_c_QColor_isValidColor_arg1(arg1: *const ::qt_core::latin1_string::Latin1String) -> bool;
  pub fn qt_gui_c_QColor_isValidColor_name(name: *const ::qt_core::string::String) -> bool;
  pub fn qt_gui_c_QColor_light_to_output_f(this_ptr: *const ::color::Color, f: ::libc::c_int, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_light_to_output_no_args(this_ptr: *const ::color::Color, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_lighter_to_output_f(this_ptr: *const ::color::Color, f: ::libc::c_int, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_lighter_to_output_no_args(this_ptr: *const ::color::Color, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_lightness(this_ptr: *const ::color::Color) -> ::libc::c_int;
  pub fn qt_gui_c_QColor_lightnessF(this_ptr: *const ::color::Color) -> ::libc::c_double;
  pub fn qt_gui_c_QColor_magenta(this_ptr: *const ::color::Color) -> ::libc::c_int;
  pub fn qt_gui_c_QColor_magentaF(this_ptr: *const ::color::Color) -> ::libc::c_double;
  pub fn qt_gui_c_QColor_name_to_output_format(this_ptr: *const ::color::Color, format: ::color::NameFormat, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QColor_name_to_output_no_args(this_ptr: *const ::color::Color, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QColor_operator_assign_arg1(this_ptr: *mut ::color::Color, arg1: *const ::color::Color) -> *mut ::color::Color;
  pub fn qt_gui_c_QColor_operator_assign_color(this_ptr: *mut ::color::Color, color: *const ::qt_core::qt::GlobalColor) -> *mut ::color::Color;
  pub fn qt_gui_c_QColor_operator_eq(this_ptr: *const ::color::Color, c: *const ::color::Color) -> bool;
  pub fn qt_gui_c_QColor_operator_neq(this_ptr: *const ::color::Color, c: *const ::color::Color) -> bool;
  pub fn qt_gui_c_QColor_red(this_ptr: *const ::color::Color) -> ::libc::c_int;
  pub fn qt_gui_c_QColor_redF(this_ptr: *const ::color::Color) -> ::libc::c_double;
  pub fn qt_gui_c_QColor_rgb(this_ptr: *const ::color::Color) -> ::libc::c_uint;
  pub fn qt_gui_c_QColor_rgba(this_ptr: *const ::color::Color) -> ::libc::c_uint;
  pub fn qt_gui_c_QColor_rgba64_to_output(this_ptr: *const ::color::Color, output: *mut ::rgba64::Rgba64);
  pub fn qt_gui_c_QColor_saturation(this_ptr: *const ::color::Color) -> ::libc::c_int;
  pub fn qt_gui_c_QColor_saturationF(this_ptr: *const ::color::Color) -> ::libc::c_double;
  pub fn qt_gui_c_QColor_setAlpha(this_ptr: *mut ::color::Color, alpha: ::libc::c_int);
  pub fn qt_gui_c_QColor_setAlphaF(this_ptr: *mut ::color::Color, alpha: ::libc::c_double);
  pub fn qt_gui_c_QColor_setBlue(this_ptr: *mut ::color::Color, blue: ::libc::c_int);
  pub fn qt_gui_c_QColor_setBlueF(this_ptr: *mut ::color::Color, blue: ::libc::c_double);
  pub fn qt_gui_c_QColor_setCmykF_c_m_y_k(this_ptr: *mut ::color::Color, c: ::libc::c_double, m: ::libc::c_double, y: ::libc::c_double, k: ::libc::c_double);
  pub fn qt_gui_c_QColor_setCmykF_c_m_y_k_a(this_ptr: *mut ::color::Color, c: ::libc::c_double, m: ::libc::c_double, y: ::libc::c_double, k: ::libc::c_double, a: ::libc::c_double);
  pub fn qt_gui_c_QColor_setCmyk_c_m_y_k(this_ptr: *mut ::color::Color, c: ::libc::c_int, m: ::libc::c_int, y: ::libc::c_int, k: ::libc::c_int);
  pub fn qt_gui_c_QColor_setCmyk_c_m_y_k_a(this_ptr: *mut ::color::Color, c: ::libc::c_int, m: ::libc::c_int, y: ::libc::c_int, k: ::libc::c_int, a: ::libc::c_int);
  pub fn qt_gui_c_QColor_setGreen(this_ptr: *mut ::color::Color, green: ::libc::c_int);
  pub fn qt_gui_c_QColor_setGreenF(this_ptr: *mut ::color::Color, green: ::libc::c_double);
  pub fn qt_gui_c_QColor_setHslF_h_s_l(this_ptr: *mut ::color::Color, h: ::libc::c_double, s: ::libc::c_double, l: ::libc::c_double);
  pub fn qt_gui_c_QColor_setHslF_h_s_l_a(this_ptr: *mut ::color::Color, h: ::libc::c_double, s: ::libc::c_double, l: ::libc::c_double, a: ::libc::c_double);
  pub fn qt_gui_c_QColor_setHsl_h_s_l(this_ptr: *mut ::color::Color, h: ::libc::c_int, s: ::libc::c_int, l: ::libc::c_int);
  pub fn qt_gui_c_QColor_setHsl_h_s_l_a(this_ptr: *mut ::color::Color, h: ::libc::c_int, s: ::libc::c_int, l: ::libc::c_int, a: ::libc::c_int);
  pub fn qt_gui_c_QColor_setHsvF_h_s_v(this_ptr: *mut ::color::Color, h: ::libc::c_double, s: ::libc::c_double, v: ::libc::c_double);
  pub fn qt_gui_c_QColor_setHsvF_h_s_v_a(this_ptr: *mut ::color::Color, h: ::libc::c_double, s: ::libc::c_double, v: ::libc::c_double, a: ::libc::c_double);
  pub fn qt_gui_c_QColor_setHsv_h_s_v(this_ptr: *mut ::color::Color, h: ::libc::c_int, s: ::libc::c_int, v: ::libc::c_int);
  pub fn qt_gui_c_QColor_setHsv_h_s_v_a(this_ptr: *mut ::color::Color, h: ::libc::c_int, s: ::libc::c_int, v: ::libc::c_int, a: ::libc::c_int);
  pub fn qt_gui_c_QColor_setNamedColor_QLatin1String(this_ptr: *mut ::color::Color, name: *const ::qt_core::latin1_string::Latin1String);
  pub fn qt_gui_c_QColor_setNamedColor_QString(this_ptr: *mut ::color::Color, name: *const ::qt_core::string::String);
  pub fn qt_gui_c_QColor_setRed(this_ptr: *mut ::color::Color, red: ::libc::c_int);
  pub fn qt_gui_c_QColor_setRedF(this_ptr: *mut ::color::Color, red: ::libc::c_double);
  pub fn qt_gui_c_QColor_setRgbF_r_g_b(this_ptr: *mut ::color::Color, r: ::libc::c_double, g: ::libc::c_double, b: ::libc::c_double);
  pub fn qt_gui_c_QColor_setRgbF_r_g_b_a(this_ptr: *mut ::color::Color, r: ::libc::c_double, g: ::libc::c_double, b: ::libc::c_double, a: ::libc::c_double);
  pub fn qt_gui_c_QColor_setRgb_r_g_b(this_ptr: *mut ::color::Color, r: ::libc::c_int, g: ::libc::c_int, b: ::libc::c_int);
  pub fn qt_gui_c_QColor_setRgb_r_g_b_a(this_ptr: *mut ::color::Color, r: ::libc::c_int, g: ::libc::c_int, b: ::libc::c_int, a: ::libc::c_int);
  pub fn qt_gui_c_QColor_setRgb_rgb(this_ptr: *mut ::color::Color, rgb: ::libc::c_uint);
  pub fn qt_gui_c_QColor_setRgba(this_ptr: *mut ::color::Color, rgba: ::libc::c_uint);
  pub fn qt_gui_c_QColor_setRgba64(this_ptr: *mut ::color::Color, rgba: *const ::rgba64::Rgba64);
  pub fn qt_gui_c_QColor_spec(this_ptr: *const ::color::Color) -> ::color::Spec;
  pub fn qt_gui_c_QColor_toCmyk_to_output(this_ptr: *const ::color::Color, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_toHsl_to_output(this_ptr: *const ::color::Color, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_toHsv_to_output(this_ptr: *const ::color::Color, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_toRgb_to_output(this_ptr: *const ::color::Color, output: *mut ::color::Color);
  pub fn qt_gui_c_QColor_value(this_ptr: *const ::color::Color) -> ::libc::c_int;
  pub fn qt_gui_c_QColor_valueF(this_ptr: *const ::color::Color) -> ::libc::c_double;
  pub fn qt_gui_c_QColor_yellow(this_ptr: *const ::color::Color) -> ::libc::c_int;
  pub fn qt_gui_c_QColor_yellowF(this_ptr: *const ::color::Color) -> ::libc::c_double;

  // Header: QConicalGradient
  pub fn qt_gui_c_QConicalGradient_G_static_cast_QConicalGradient_ptr(ptr: *mut ::gradient::Gradient) -> *mut ::conical_gradient::ConicalGradient;
  pub fn qt_gui_c_QConicalGradient_G_static_cast_QGradient_ptr(ptr: *mut ::conical_gradient::ConicalGradient) -> *mut ::gradient::Gradient;
  pub fn qt_gui_c_QConicalGradient_angle(this_ptr: *const ::conical_gradient::ConicalGradient) -> ::libc::c_double;
  pub fn qt_gui_c_QConicalGradient_center_to_output(this_ptr: *const ::conical_gradient::ConicalGradient, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QConicalGradient_delete(this_ptr: *mut ::conical_gradient::ConicalGradient);
  pub fn qt_gui_c_QConicalGradient_new_center_startAngle(center: *const ::qt_core::point_f::PointF, startAngle: ::libc::c_double) -> *mut ::conical_gradient::ConicalGradient;
  pub fn qt_gui_c_QConicalGradient_new_cx_cy_startAngle(cx: ::libc::c_double, cy: ::libc::c_double, startAngle: ::libc::c_double) -> *mut ::conical_gradient::ConicalGradient;
  pub fn qt_gui_c_QConicalGradient_new_no_args() -> *mut ::conical_gradient::ConicalGradient;
  pub fn qt_gui_c_QConicalGradient_setAngle(this_ptr: *mut ::conical_gradient::ConicalGradient, angle: ::libc::c_double);
  pub fn qt_gui_c_QConicalGradient_setCenter_center(this_ptr: *mut ::conical_gradient::ConicalGradient, center: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QConicalGradient_setCenter_x_y(this_ptr: *mut ::conical_gradient::ConicalGradient, x: ::libc::c_double, y: ::libc::c_double);

  // Header: QContextMenuEvent
  pub fn qt_gui_c_QContextMenuEvent_G_dynamic_cast_QContextMenuEvent_ptr(ptr: *mut ::input_event::InputEvent) -> *mut ::context_menu_event::ContextMenuEvent;
  pub fn qt_gui_c_QContextMenuEvent_G_static_cast_QContextMenuEvent_ptr_QEvent(ptr: *mut ::qt_core::event::Event) -> *mut ::context_menu_event::ContextMenuEvent;
  pub fn qt_gui_c_QContextMenuEvent_G_static_cast_QContextMenuEvent_ptr_QInputEvent(ptr: *mut ::input_event::InputEvent) -> *mut ::context_menu_event::ContextMenuEvent;
  pub fn qt_gui_c_QContextMenuEvent_G_static_cast_QEvent_ptr(ptr: *mut ::context_menu_event::ContextMenuEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QContextMenuEvent_G_static_cast_QInputEvent_ptr(ptr: *mut ::context_menu_event::ContextMenuEvent) -> *mut ::input_event::InputEvent;
  pub fn qt_gui_c_QContextMenuEvent_delete(this_ptr: *mut ::context_menu_event::ContextMenuEvent);
  pub fn qt_gui_c_QContextMenuEvent_globalPos(this_ptr: *const ::context_menu_event::ContextMenuEvent) -> *const ::qt_core::point::Point;
  pub fn qt_gui_c_QContextMenuEvent_globalX(this_ptr: *const ::context_menu_event::ContextMenuEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QContextMenuEvent_globalY(this_ptr: *const ::context_menu_event::ContextMenuEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QContextMenuEvent_new_reason_pos(reason: ::context_menu_event::Reason, pos: *const ::qt_core::point::Point) -> *mut ::context_menu_event::ContextMenuEvent;
  pub fn qt_gui_c_QContextMenuEvent_new_reason_pos_globalPos(reason: ::context_menu_event::Reason, pos: *const ::qt_core::point::Point, globalPos: *const ::qt_core::point::Point) -> *mut ::context_menu_event::ContextMenuEvent;
  pub fn qt_gui_c_QContextMenuEvent_pos(this_ptr: *const ::context_menu_event::ContextMenuEvent) -> *const ::qt_core::point::Point;
  pub fn qt_gui_c_QContextMenuEvent_reason(this_ptr: *const ::context_menu_event::ContextMenuEvent) -> ::context_menu_event::Reason;
  pub fn qt_gui_c_QContextMenuEvent_x(this_ptr: *const ::context_menu_event::ContextMenuEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QContextMenuEvent_y(this_ptr: *const ::context_menu_event::ContextMenuEvent) -> ::libc::c_int;

  // Header: QCursor
  pub fn qt_gui_c_QCursor_G_operator_shl(outS: *mut ::qt_core::data_stream::DataStream, cursor: *const ::cursor::Cursor) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QCursor_G_operator_shl_to_output(arg1: *const ::qt_core::debug::Debug, arg2: *const ::cursor::Cursor, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QCursor_G_operator_shr(inS: *mut ::qt_core::data_stream::DataStream, cursor: *mut ::cursor::Cursor) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QCursor_G_swap(value1: *mut ::cursor::Cursor, value2: *mut ::cursor::Cursor);
  pub fn qt_gui_c_QCursor_bitmap(this_ptr: *const ::cursor::Cursor) -> *const ::bitmap::Bitmap;
  pub fn qt_gui_c_QCursor_convert_to_QVariant_to_output(this_ptr: *const ::cursor::Cursor, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QCursor_delete(this_ptr: *mut ::cursor::Cursor);
  pub fn qt_gui_c_QCursor_hotSpot_to_output(this_ptr: *const ::cursor::Cursor, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QCursor_mask(this_ptr: *const ::cursor::Cursor) -> *const ::bitmap::Bitmap;
  pub fn qt_gui_c_QCursor_new_bitmap_mask(bitmap: *const ::bitmap::Bitmap, mask: *const ::bitmap::Bitmap) -> *mut ::cursor::Cursor;
  pub fn qt_gui_c_QCursor_new_bitmap_mask_hotX(bitmap: *const ::bitmap::Bitmap, mask: *const ::bitmap::Bitmap, hotX: ::libc::c_int) -> *mut ::cursor::Cursor;
  pub fn qt_gui_c_QCursor_new_bitmap_mask_hotX_hotY(bitmap: *const ::bitmap::Bitmap, mask: *const ::bitmap::Bitmap, hotX: ::libc::c_int, hotY: ::libc::c_int) -> *mut ::cursor::Cursor;
  pub fn qt_gui_c_QCursor_new_cursor(cursor: *const ::cursor::Cursor) -> *mut ::cursor::Cursor;
  pub fn qt_gui_c_QCursor_new_no_args() -> *mut ::cursor::Cursor;
  pub fn qt_gui_c_QCursor_new_pixmap(pixmap: *const ::pixmap::Pixmap) -> *mut ::cursor::Cursor;
  pub fn qt_gui_c_QCursor_new_pixmap_hotX(pixmap: *const ::pixmap::Pixmap, hotX: ::libc::c_int) -> *mut ::cursor::Cursor;
  pub fn qt_gui_c_QCursor_new_pixmap_hotX_hotY(pixmap: *const ::pixmap::Pixmap, hotX: ::libc::c_int, hotY: ::libc::c_int) -> *mut ::cursor::Cursor;
  pub fn qt_gui_c_QCursor_new_shape(shape: *const ::qt_core::qt::CursorShape) -> *mut ::cursor::Cursor;
  pub fn qt_gui_c_QCursor_operator_assign(this_ptr: *mut ::cursor::Cursor, cursor: *const ::cursor::Cursor) -> *mut ::cursor::Cursor;
  pub fn qt_gui_c_QCursor_pixmap_as_ptr(this_ptr: *const ::cursor::Cursor) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QCursor_pos_to_output_no_args(output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QCursor_pos_to_output_screen(screen: *const ::screen::Screen, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QCursor_setPos_p(p: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QCursor_setPos_screen_p(screen: *mut ::screen::Screen, p: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QCursor_setPos_screen_x_y(screen: *mut ::screen::Screen, x: ::libc::c_int, y: ::libc::c_int);
  pub fn qt_gui_c_QCursor_setPos_x_y(x: ::libc::c_int, y: ::libc::c_int);
  pub fn qt_gui_c_QCursor_setShape(this_ptr: *mut ::cursor::Cursor, newShape: *const ::qt_core::qt::CursorShape);
  pub fn qt_gui_c_QCursor_swap(this_ptr: *mut ::cursor::Cursor, other: *mut ::cursor::Cursor);

  // Header: QDesktopServices
  pub fn qt_gui_c_QDesktopServices_delete(this_ptr: *mut ::desktop_services::DesktopServices);
  pub fn qt_gui_c_QDesktopServices_openUrl(url: *const ::qt_core::url::Url) -> bool;
  pub fn qt_gui_c_QDesktopServices_setUrlHandler(scheme: *const ::qt_core::string::String, receiver: *mut ::qt_core::object::Object, method: *const ::libc::c_char);
  pub fn qt_gui_c_QDesktopServices_unsetUrlHandler(scheme: *const ::qt_core::string::String);

  // Header: QDoubleValidator
  pub fn qt_gui_c_QDoubleValidator_G_dynamic_cast_QDoubleValidator_ptr(ptr: *mut ::validator::Validator) -> *mut ::double_validator::DoubleValidator;
  pub fn qt_gui_c_QDoubleValidator_G_static_cast_QDoubleValidator_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::double_validator::DoubleValidator;
  pub fn qt_gui_c_QDoubleValidator_G_static_cast_QDoubleValidator_ptr_QValidator(ptr: *mut ::validator::Validator) -> *mut ::double_validator::DoubleValidator;
  pub fn qt_gui_c_QDoubleValidator_G_static_cast_QObject_ptr(ptr: *mut ::double_validator::DoubleValidator) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QDoubleValidator_G_static_cast_QValidator_ptr(ptr: *mut ::double_validator::DoubleValidator) -> *mut ::validator::Validator;
  pub fn qt_gui_c_QDoubleValidator_bottom(this_ptr: *const ::double_validator::DoubleValidator) -> ::libc::c_double;
  pub fn qt_gui_c_QDoubleValidator_decimals(this_ptr: *const ::double_validator::DoubleValidator) -> ::libc::c_int;
  pub fn qt_gui_c_QDoubleValidator_delete(this_ptr: *mut ::double_validator::DoubleValidator);
  pub fn qt_gui_c_QDoubleValidator_metaObject(this_ptr: *const ::double_validator::DoubleValidator) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QDoubleValidator_new_bottom_top_decimals(bottom: ::libc::c_double, top: ::libc::c_double, decimals: ::libc::c_int) -> *mut ::double_validator::DoubleValidator;
  pub fn qt_gui_c_QDoubleValidator_new_bottom_top_decimals_parent(bottom: ::libc::c_double, top: ::libc::c_double, decimals: ::libc::c_int, parent: *mut ::qt_core::object::Object) -> *mut ::double_validator::DoubleValidator;
  pub fn qt_gui_c_QDoubleValidator_new_no_args() -> *mut ::double_validator::DoubleValidator;
  pub fn qt_gui_c_QDoubleValidator_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::double_validator::DoubleValidator;
  pub fn qt_gui_c_QDoubleValidator_notation(this_ptr: *const ::double_validator::DoubleValidator) -> ::double_validator::Notation;
  pub fn qt_gui_c_QDoubleValidator_qt_metacall(this_ptr: *mut ::double_validator::DoubleValidator, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QDoubleValidator_qt_metacast(this_ptr: *mut ::double_validator::DoubleValidator, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QDoubleValidator_setBottom(this_ptr: *mut ::double_validator::DoubleValidator, arg1: ::libc::c_double);
  pub fn qt_gui_c_QDoubleValidator_setDecimals(this_ptr: *mut ::double_validator::DoubleValidator, arg1: ::libc::c_int);
  pub fn qt_gui_c_QDoubleValidator_setNotation(this_ptr: *mut ::double_validator::DoubleValidator, arg1: ::double_validator::Notation);
  pub fn qt_gui_c_QDoubleValidator_setRange_bottom_top(this_ptr: *mut ::double_validator::DoubleValidator, bottom: ::libc::c_double, top: ::libc::c_double);
  pub fn qt_gui_c_QDoubleValidator_setRange_bottom_top_decimals(this_ptr: *mut ::double_validator::DoubleValidator, bottom: ::libc::c_double, top: ::libc::c_double, decimals: ::libc::c_int);
  pub fn qt_gui_c_QDoubleValidator_setTop(this_ptr: *mut ::double_validator::DoubleValidator, arg1: ::libc::c_double);
  pub fn qt_gui_c_QDoubleValidator_top(this_ptr: *const ::double_validator::DoubleValidator) -> ::libc::c_double;
  pub fn qt_gui_c_QDoubleValidator_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QDoubleValidator_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QDrag
  pub fn qt_gui_c_QDrag_G_static_cast_QDrag_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::drag::Drag;
  pub fn qt_gui_c_QDrag_G_static_cast_QObject_ptr(ptr: *mut ::drag::Drag) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QDrag_cancel();
  pub fn qt_gui_c_QDrag_delete(this_ptr: *mut ::drag::Drag);
  pub fn qt_gui_c_QDrag_dragCursor_as_ptr(this_ptr: *const ::drag::Drag, action: *const ::qt_core::qt::DropAction) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QDrag_hotSpot_to_output(this_ptr: *const ::drag::Drag, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QDrag_metaObject(this_ptr: *const ::drag::Drag) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QDrag_mimeData(this_ptr: *const ::drag::Drag) -> *mut ::qt_core::mime_data::MimeData;
  pub fn qt_gui_c_QDrag_new(dragSource: *mut ::qt_core::object::Object) -> *mut ::drag::Drag;
  pub fn qt_gui_c_QDrag_pixmap_as_ptr(this_ptr: *const ::drag::Drag) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QDrag_qt_metacall(this_ptr: *mut ::drag::Drag, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QDrag_qt_metacast(this_ptr: *mut ::drag::Drag, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QDrag_setDragCursor(this_ptr: *mut ::drag::Drag, cursor: *const ::pixmap::Pixmap, action: *const ::qt_core::qt::DropAction);
  pub fn qt_gui_c_QDrag_setHotSpot(this_ptr: *mut ::drag::Drag, hotspot: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QDrag_setMimeData(this_ptr: *mut ::drag::Drag, data: *mut ::qt_core::mime_data::MimeData);
  pub fn qt_gui_c_QDrag_setPixmap(this_ptr: *mut ::drag::Drag, arg1: *const ::pixmap::Pixmap);
  pub fn qt_gui_c_QDrag_source(this_ptr: *const ::drag::Drag) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QDrag_target(this_ptr: *const ::drag::Drag) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QDrag_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QDrag_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QDragEnterEvent
  pub fn qt_gui_c_QDragEnterEvent_G_dynamic_cast_QDragEnterEvent_ptr_QDragMoveEvent(ptr: *mut ::drag_move_event::DragMoveEvent) -> *mut ::drag_enter_event::DragEnterEvent;
  pub fn qt_gui_c_QDragEnterEvent_G_dynamic_cast_QDragEnterEvent_ptr_QDropEvent(ptr: *mut ::drop_event::DropEvent) -> *mut ::drag_enter_event::DragEnterEvent;
  pub fn qt_gui_c_QDragEnterEvent_G_static_cast_QDragEnterEvent_ptr_QDragMoveEvent(ptr: *mut ::drag_move_event::DragMoveEvent) -> *mut ::drag_enter_event::DragEnterEvent;
  pub fn qt_gui_c_QDragEnterEvent_G_static_cast_QDragEnterEvent_ptr_QDropEvent(ptr: *mut ::drop_event::DropEvent) -> *mut ::drag_enter_event::DragEnterEvent;
  pub fn qt_gui_c_QDragEnterEvent_G_static_cast_QDragEnterEvent_ptr_QEvent(ptr: *mut ::qt_core::event::Event) -> *mut ::drag_enter_event::DragEnterEvent;
  pub fn qt_gui_c_QDragEnterEvent_G_static_cast_QDragMoveEvent_ptr(ptr: *mut ::drag_enter_event::DragEnterEvent) -> *mut ::drag_move_event::DragMoveEvent;
  pub fn qt_gui_c_QDragEnterEvent_G_static_cast_QDropEvent_ptr(ptr: *mut ::drag_enter_event::DragEnterEvent) -> *mut ::drop_event::DropEvent;
  pub fn qt_gui_c_QDragEnterEvent_G_static_cast_QEvent_ptr(ptr: *mut ::drag_enter_event::DragEnterEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QDragEnterEvent_delete(this_ptr: *mut ::drag_enter_event::DragEnterEvent);

  // Header: QDragLeaveEvent
  pub fn qt_gui_c_QDragLeaveEvent_G_static_cast_QDragLeaveEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::drag_leave_event::DragLeaveEvent;
  pub fn qt_gui_c_QDragLeaveEvent_G_static_cast_QEvent_ptr(ptr: *mut ::drag_leave_event::DragLeaveEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QDragLeaveEvent_delete(this_ptr: *mut ::drag_leave_event::DragLeaveEvent);
  pub fn qt_gui_c_QDragLeaveEvent_new() -> *mut ::drag_leave_event::DragLeaveEvent;

  // Header: QDragMoveEvent
  pub fn qt_gui_c_QDragMoveEvent_G_dynamic_cast_QDragMoveEvent_ptr(ptr: *mut ::drop_event::DropEvent) -> *mut ::drag_move_event::DragMoveEvent;
  pub fn qt_gui_c_QDragMoveEvent_G_static_cast_QDragMoveEvent_ptr_QDropEvent(ptr: *mut ::drop_event::DropEvent) -> *mut ::drag_move_event::DragMoveEvent;
  pub fn qt_gui_c_QDragMoveEvent_G_static_cast_QDragMoveEvent_ptr_QEvent(ptr: *mut ::qt_core::event::Event) -> *mut ::drag_move_event::DragMoveEvent;
  pub fn qt_gui_c_QDragMoveEvent_G_static_cast_QDropEvent_ptr(ptr: *mut ::drag_move_event::DragMoveEvent) -> *mut ::drop_event::DropEvent;
  pub fn qt_gui_c_QDragMoveEvent_G_static_cast_QEvent_ptr(ptr: *mut ::drag_move_event::DragMoveEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QDragMoveEvent_accept_no_args(this_ptr: *mut ::drag_move_event::DragMoveEvent);
  pub fn qt_gui_c_QDragMoveEvent_accept_r(this_ptr: *mut ::drag_move_event::DragMoveEvent, r: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QDragMoveEvent_answerRect_to_output(this_ptr: *const ::drag_move_event::DragMoveEvent, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QDragMoveEvent_delete(this_ptr: *mut ::drag_move_event::DragMoveEvent);
  pub fn qt_gui_c_QDragMoveEvent_ignore_no_args(this_ptr: *mut ::drag_move_event::DragMoveEvent);
  pub fn qt_gui_c_QDragMoveEvent_ignore_r(this_ptr: *mut ::drag_move_event::DragMoveEvent, r: *const ::qt_core::rect::Rect);

  // Header: QDropEvent
  pub fn qt_gui_c_QDropEvent_G_static_cast_QDropEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::drop_event::DropEvent;
  pub fn qt_gui_c_QDropEvent_G_static_cast_QEvent_ptr(ptr: *mut ::drop_event::DropEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QDropEvent_acceptProposedAction(this_ptr: *mut ::drop_event::DropEvent);
  pub fn qt_gui_c_QDropEvent_delete(this_ptr: *mut ::drop_event::DropEvent);
  pub fn qt_gui_c_QDropEvent_mimeData(this_ptr: *const ::drop_event::DropEvent) -> *const ::qt_core::mime_data::MimeData;
  pub fn qt_gui_c_QDropEvent_posF(this_ptr: *const ::drop_event::DropEvent) -> *const ::qt_core::point_f::PointF;
  pub fn qt_gui_c_QDropEvent_pos_to_output(this_ptr: *const ::drop_event::DropEvent, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QDropEvent_setDropAction(this_ptr: *mut ::drop_event::DropEvent, action: *const ::qt_core::qt::DropAction);
  pub fn qt_gui_c_QDropEvent_source(this_ptr: *const ::drop_event::DropEvent) -> *mut ::qt_core::object::Object;

  // Header: QEnterEvent
  pub fn qt_gui_c_QEnterEvent_G_static_cast_QEnterEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::enter_event::EnterEvent;
  pub fn qt_gui_c_QEnterEvent_G_static_cast_QEvent_ptr(ptr: *mut ::enter_event::EnterEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QEnterEvent_delete(this_ptr: *mut ::enter_event::EnterEvent);
  pub fn qt_gui_c_QEnterEvent_globalPos_to_output(this_ptr: *const ::enter_event::EnterEvent, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QEnterEvent_globalX(this_ptr: *const ::enter_event::EnterEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QEnterEvent_globalY(this_ptr: *const ::enter_event::EnterEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QEnterEvent_localPos(this_ptr: *const ::enter_event::EnterEvent) -> *const ::qt_core::point_f::PointF;
  pub fn qt_gui_c_QEnterEvent_new(localPos: *const ::qt_core::point_f::PointF, windowPos: *const ::qt_core::point_f::PointF, screenPos: *const ::qt_core::point_f::PointF) -> *mut ::enter_event::EnterEvent;
  pub fn qt_gui_c_QEnterEvent_pos_to_output(this_ptr: *const ::enter_event::EnterEvent, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QEnterEvent_screenPos(this_ptr: *const ::enter_event::EnterEvent) -> *const ::qt_core::point_f::PointF;
  pub fn qt_gui_c_QEnterEvent_windowPos(this_ptr: *const ::enter_event::EnterEvent) -> *const ::qt_core::point_f::PointF;
  pub fn qt_gui_c_QEnterEvent_x(this_ptr: *const ::enter_event::EnterEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QEnterEvent_y(this_ptr: *const ::enter_event::EnterEvent) -> ::libc::c_int;

  // Header: QExposeEvent
  pub fn qt_gui_c_QExposeEvent_G_static_cast_QEvent_ptr(ptr: *mut ::expose_event::ExposeEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QExposeEvent_G_static_cast_QExposeEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::expose_event::ExposeEvent;
  pub fn qt_gui_c_QExposeEvent_delete(this_ptr: *mut ::expose_event::ExposeEvent);
  pub fn qt_gui_c_QExposeEvent_new(rgn: *const ::region::Region) -> *mut ::expose_event::ExposeEvent;
  pub fn qt_gui_c_QExposeEvent_region(this_ptr: *const ::expose_event::ExposeEvent) -> *const ::region::Region;

  // Header: QFileOpenEvent
  pub fn qt_gui_c_QFileOpenEvent_G_static_cast_QEvent_ptr(ptr: *mut ::file_open_event::FileOpenEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QFileOpenEvent_G_static_cast_QFileOpenEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::file_open_event::FileOpenEvent;
  pub fn qt_gui_c_QFileOpenEvent_delete(this_ptr: *mut ::file_open_event::FileOpenEvent);
  pub fn qt_gui_c_QFileOpenEvent_file_to_output(this_ptr: *const ::file_open_event::FileOpenEvent, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QFileOpenEvent_new_file(file: *const ::qt_core::string::String) -> *mut ::file_open_event::FileOpenEvent;
  pub fn qt_gui_c_QFileOpenEvent_new_url(url: *const ::qt_core::url::Url) -> *mut ::file_open_event::FileOpenEvent;
  pub fn qt_gui_c_QFileOpenEvent_url_to_output(this_ptr: *const ::file_open_event::FileOpenEvent, output: *mut ::qt_core::url::Url);

  // Header: QFocusEvent
  pub fn qt_gui_c_QFocusEvent_G_static_cast_QEvent_ptr(ptr: *mut ::focus_event::FocusEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QFocusEvent_G_static_cast_QFocusEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::focus_event::FocusEvent;
  pub fn qt_gui_c_QFocusEvent_delete(this_ptr: *mut ::focus_event::FocusEvent);
  pub fn qt_gui_c_QFocusEvent_gotFocus(this_ptr: *const ::focus_event::FocusEvent) -> bool;
  pub fn qt_gui_c_QFocusEvent_lostFocus(this_ptr: *const ::focus_event::FocusEvent) -> bool;
  pub fn qt_gui_c_QFocusEvent_new_type(type_: ::qt_core::event::Type) -> *mut ::focus_event::FocusEvent;
  pub fn qt_gui_c_QFocusEvent_new_type_reason(type_: ::qt_core::event::Type, reason: *const ::qt_core::qt::FocusReason) -> *mut ::focus_event::FocusEvent;

  // Header: QFont
  pub fn qt_gui_c_QFont_G_operator_shl_to_output(arg1: *const ::qt_core::debug::Debug, arg2: *const ::font::Font, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QFont_G_qHash_font(font: *const ::font::Font) -> ::libc::c_uint;
  pub fn qt_gui_c_QFont_G_qHash_font_seed(font: *const ::font::Font, seed: ::libc::c_uint) -> ::libc::c_uint;
  pub fn qt_gui_c_QFont_G_swap(value1: *mut ::font::Font, value2: *mut ::font::Font);
  pub fn qt_gui_c_QFont_bold(this_ptr: *const ::font::Font) -> bool;
  pub fn qt_gui_c_QFont_cacheStatistics();
  pub fn qt_gui_c_QFont_capitalization(this_ptr: *const ::font::Font) -> ::font::Capitalization;
  pub fn qt_gui_c_QFont_cleanup();
  pub fn qt_gui_c_QFont_constructor_arg1(arg1: *const ::font::Font, output: *mut ::font::Font);
  pub fn qt_gui_c_QFont_constructor_arg1_pd(arg1: *const ::font::Font, pd: *mut ::paint_device::PaintDevice, output: *mut ::font::Font);
  pub fn qt_gui_c_QFont_constructor_family(family: *const ::qt_core::string::String, output: *mut ::font::Font);
  pub fn qt_gui_c_QFont_constructor_family_pointSize(family: *const ::qt_core::string::String, pointSize: ::libc::c_int, output: *mut ::font::Font);
  pub fn qt_gui_c_QFont_constructor_family_pointSize_weight(family: *const ::qt_core::string::String, pointSize: ::libc::c_int, weight: ::libc::c_int, output: *mut ::font::Font);
  pub fn qt_gui_c_QFont_constructor_family_pointSize_weight_italic(family: *const ::qt_core::string::String, pointSize: ::libc::c_int, weight: ::libc::c_int, italic: bool, output: *mut ::font::Font);
  pub fn qt_gui_c_QFont_constructor_no_args(output: *mut ::font::Font);
  pub fn qt_gui_c_QFont_convert_to_QVariant_to_output(this_ptr: *const ::font::Font, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QFont_defaultFamily_to_output(this_ptr: *const ::font::Font, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QFont_destructor(this_ptr: *mut ::font::Font);
  pub fn qt_gui_c_QFont_exactMatch(this_ptr: *const ::font::Font) -> bool;
  pub fn qt_gui_c_QFont_family_to_output(this_ptr: *const ::font::Font, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QFont_fixedPitch(this_ptr: *const ::font::Font) -> bool;
  pub fn qt_gui_c_QFont_fromString(this_ptr: *mut ::font::Font, arg1: *const ::qt_core::string::String) -> bool;
  pub fn qt_gui_c_QFont_hintingPreference(this_ptr: *const ::font::Font) -> ::font::HintingPreference;
  pub fn qt_gui_c_QFont_initialize();
  pub fn qt_gui_c_QFont_insertSubstitution(arg1: *const ::qt_core::string::String, arg2: *const ::qt_core::string::String);
  pub fn qt_gui_c_QFont_insertSubstitutions(arg1: *const ::qt_core::string::String, arg2: *const ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QFont_isCopyOf(this_ptr: *const ::font::Font, arg1: *const ::font::Font) -> bool;
  pub fn qt_gui_c_QFont_italic(this_ptr: *const ::font::Font) -> bool;
  pub fn qt_gui_c_QFont_kerning(this_ptr: *const ::font::Font) -> bool;
  pub fn qt_gui_c_QFont_key_to_output(this_ptr: *const ::font::Font, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QFont_lastResortFamily_to_output(this_ptr: *const ::font::Font, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QFont_lastResortFont_to_output(this_ptr: *const ::font::Font, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QFont_letterSpacing(this_ptr: *const ::font::Font) -> ::libc::c_double;
  pub fn qt_gui_c_QFont_letterSpacingType(this_ptr: *const ::font::Font) -> ::font::SpacingType;
  pub fn qt_gui_c_QFont_operator_assign(this_ptr: *mut ::font::Font, arg1: *const ::font::Font) -> *mut ::font::Font;
  pub fn qt_gui_c_QFont_operator_eq(this_ptr: *const ::font::Font, arg1: *const ::font::Font) -> bool;
  pub fn qt_gui_c_QFont_operator_lt(this_ptr: *const ::font::Font, arg1: *const ::font::Font) -> bool;
  pub fn qt_gui_c_QFont_operator_neq(this_ptr: *const ::font::Font, arg1: *const ::font::Font) -> bool;
  pub fn qt_gui_c_QFont_overline(this_ptr: *const ::font::Font) -> bool;
  pub fn qt_gui_c_QFont_pixelSize(this_ptr: *const ::font::Font) -> ::libc::c_int;
  pub fn qt_gui_c_QFont_pointSize(this_ptr: *const ::font::Font) -> ::libc::c_int;
  pub fn qt_gui_c_QFont_pointSizeF(this_ptr: *const ::font::Font) -> ::libc::c_double;
  pub fn qt_gui_c_QFont_rawMode(this_ptr: *const ::font::Font) -> bool;
  pub fn qt_gui_c_QFont_rawName_to_output(this_ptr: *const ::font::Font, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QFont_removeSubstitutions(arg1: *const ::qt_core::string::String);
  pub fn qt_gui_c_QFont_resolve_mask(this_ptr: *mut ::font::Font, mask: ::libc::c_uint);
  pub fn qt_gui_c_QFont_resolve_no_args(this_ptr: *const ::font::Font) -> ::libc::c_uint;
  pub fn qt_gui_c_QFont_resolve_to_output(this_ptr: *const ::font::Font, arg1: *const ::font::Font, output: *mut ::font::Font);
  pub fn qt_gui_c_QFont_setBold(this_ptr: *mut ::font::Font, arg1: bool);
  pub fn qt_gui_c_QFont_setCapitalization(this_ptr: *mut ::font::Font, arg1: ::font::Capitalization);
  pub fn qt_gui_c_QFont_setFamily(this_ptr: *mut ::font::Font, arg1: *const ::qt_core::string::String);
  pub fn qt_gui_c_QFont_setFixedPitch(this_ptr: *mut ::font::Font, arg1: bool);
  pub fn qt_gui_c_QFont_setHintingPreference(this_ptr: *mut ::font::Font, hintingPreference: ::font::HintingPreference);
  pub fn qt_gui_c_QFont_setItalic(this_ptr: *mut ::font::Font, b: bool);
  pub fn qt_gui_c_QFont_setKerning(this_ptr: *mut ::font::Font, arg1: bool);
  pub fn qt_gui_c_QFont_setLetterSpacing(this_ptr: *mut ::font::Font, type_: ::font::SpacingType, spacing: ::libc::c_double);
  pub fn qt_gui_c_QFont_setOverline(this_ptr: *mut ::font::Font, arg1: bool);
  pub fn qt_gui_c_QFont_setPixelSize(this_ptr: *mut ::font::Font, arg1: ::libc::c_int);
  pub fn qt_gui_c_QFont_setPointSize(this_ptr: *mut ::font::Font, arg1: ::libc::c_int);
  pub fn qt_gui_c_QFont_setPointSizeF(this_ptr: *mut ::font::Font, arg1: ::libc::c_double);
  pub fn qt_gui_c_QFont_setRawMode(this_ptr: *mut ::font::Font, arg1: bool);
  pub fn qt_gui_c_QFont_setRawName(this_ptr: *mut ::font::Font, arg1: *const ::qt_core::string::String);
  pub fn qt_gui_c_QFont_setStretch(this_ptr: *mut ::font::Font, arg1: ::libc::c_int);
  pub fn qt_gui_c_QFont_setStrikeOut(this_ptr: *mut ::font::Font, arg1: bool);
  pub fn qt_gui_c_QFont_setStyle(this_ptr: *mut ::font::Font, style: ::font::Style);
  pub fn qt_gui_c_QFont_setStyleHint_arg1(this_ptr: *mut ::font::Font, arg1: ::font::StyleHint);
  pub fn qt_gui_c_QFont_setStyleHint_arg1_arg2(this_ptr: *mut ::font::Font, arg1: ::font::StyleHint, arg2: ::font::StyleStrategy);
  pub fn qt_gui_c_QFont_setStyleName(this_ptr: *mut ::font::Font, arg1: *const ::qt_core::string::String);
  pub fn qt_gui_c_QFont_setStyleStrategy(this_ptr: *mut ::font::Font, s: ::font::StyleStrategy);
  pub fn qt_gui_c_QFont_setUnderline(this_ptr: *mut ::font::Font, arg1: bool);
  pub fn qt_gui_c_QFont_setWeight(this_ptr: *mut ::font::Font, arg1: ::libc::c_int);
  pub fn qt_gui_c_QFont_setWordSpacing(this_ptr: *mut ::font::Font, spacing: ::libc::c_double);
  pub fn qt_gui_c_QFont_stretch(this_ptr: *const ::font::Font) -> ::libc::c_int;
  pub fn qt_gui_c_QFont_strikeOut(this_ptr: *const ::font::Font) -> bool;
  pub fn qt_gui_c_QFont_style(this_ptr: *const ::font::Font) -> ::font::Style;
  pub fn qt_gui_c_QFont_styleHint(this_ptr: *const ::font::Font) -> ::font::StyleHint;
  pub fn qt_gui_c_QFont_styleName_to_output(this_ptr: *const ::font::Font, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QFont_styleStrategy(this_ptr: *const ::font::Font) -> ::font::StyleStrategy;
  pub fn qt_gui_c_QFont_substitute_to_output(arg1: *const ::qt_core::string::String, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QFont_substitutes_to_output(arg1: *const ::qt_core::string::String, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QFont_substitutions_to_output(output: *mut ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QFont_swap(this_ptr: *mut ::font::Font, other: *mut ::font::Font);
  pub fn qt_gui_c_QFont_toString_to_output(this_ptr: *const ::font::Font, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QFont_underline(this_ptr: *const ::font::Font) -> bool;
  pub fn qt_gui_c_QFont_weight(this_ptr: *const ::font::Font) -> ::libc::c_int;
  pub fn qt_gui_c_QFont_wordSpacing(this_ptr: *const ::font::Font) -> ::libc::c_double;

  // Header: QFontDatabase
  pub fn qt_gui_c_QFontDatabase_addApplicationFont(fileName: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_gui_c_QFontDatabase_addApplicationFontFromData(fontData: *const ::qt_core::byte_array::ByteArray) -> ::libc::c_int;
  pub fn qt_gui_c_QFontDatabase_applicationFontFamilies_to_output(id: ::libc::c_int, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QFontDatabase_bold(this_ptr: *const ::font_database::FontDatabase, family: *const ::qt_core::string::String, style: *const ::qt_core::string::String) -> bool;
  pub fn qt_gui_c_QFontDatabase_delete(this_ptr: *mut ::font_database::FontDatabase);
  pub fn qt_gui_c_QFontDatabase_families_to_output_no_args(this_ptr: *const ::font_database::FontDatabase, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QFontDatabase_families_to_output_writingSystem(this_ptr: *const ::font_database::FontDatabase, writingSystem: ::font_database::WritingSystem, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QFontDatabase_font_to_output(this_ptr: *const ::font_database::FontDatabase, family: *const ::qt_core::string::String, style: *const ::qt_core::string::String, pointSize: ::libc::c_int, output: *mut ::font::Font);
  pub fn qt_gui_c_QFontDatabase_hasFamily(this_ptr: *const ::font_database::FontDatabase, family: *const ::qt_core::string::String) -> bool;
  pub fn qt_gui_c_QFontDatabase_isBitmapScalable_family(this_ptr: *const ::font_database::FontDatabase, family: *const ::qt_core::string::String) -> bool;
  pub fn qt_gui_c_QFontDatabase_isBitmapScalable_family_style(this_ptr: *const ::font_database::FontDatabase, family: *const ::qt_core::string::String, style: *const ::qt_core::string::String) -> bool;
  pub fn qt_gui_c_QFontDatabase_isFixedPitch_family(this_ptr: *const ::font_database::FontDatabase, family: *const ::qt_core::string::String) -> bool;
  pub fn qt_gui_c_QFontDatabase_isFixedPitch_family_style(this_ptr: *const ::font_database::FontDatabase, family: *const ::qt_core::string::String, style: *const ::qt_core::string::String) -> bool;
  pub fn qt_gui_c_QFontDatabase_isPrivateFamily(this_ptr: *const ::font_database::FontDatabase, family: *const ::qt_core::string::String) -> bool;
  pub fn qt_gui_c_QFontDatabase_isScalable_family(this_ptr: *const ::font_database::FontDatabase, family: *const ::qt_core::string::String) -> bool;
  pub fn qt_gui_c_QFontDatabase_isScalable_family_style(this_ptr: *const ::font_database::FontDatabase, family: *const ::qt_core::string::String, style: *const ::qt_core::string::String) -> bool;
  pub fn qt_gui_c_QFontDatabase_isSmoothlyScalable_family(this_ptr: *const ::font_database::FontDatabase, family: *const ::qt_core::string::String) -> bool;
  pub fn qt_gui_c_QFontDatabase_isSmoothlyScalable_family_style(this_ptr: *const ::font_database::FontDatabase, family: *const ::qt_core::string::String, style: *const ::qt_core::string::String) -> bool;
  pub fn qt_gui_c_QFontDatabase_italic(this_ptr: *const ::font_database::FontDatabase, family: *const ::qt_core::string::String, style: *const ::qt_core::string::String) -> bool;
  pub fn qt_gui_c_QFontDatabase_new() -> *mut ::font_database::FontDatabase;
  pub fn qt_gui_c_QFontDatabase_pointSizes_to_output_family(this_ptr: *mut ::font_database::FontDatabase, family: *const ::qt_core::string::String, output: *mut ::qt_core::list::ListCInt);
  pub fn qt_gui_c_QFontDatabase_pointSizes_to_output_family_style(this_ptr: *mut ::font_database::FontDatabase, family: *const ::qt_core::string::String, style: *const ::qt_core::string::String, output: *mut ::qt_core::list::ListCInt);
  pub fn qt_gui_c_QFontDatabase_removeAllApplicationFonts() -> bool;
  pub fn qt_gui_c_QFontDatabase_removeApplicationFont(id: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QFontDatabase_smoothSizes_to_output(this_ptr: *mut ::font_database::FontDatabase, family: *const ::qt_core::string::String, style: *const ::qt_core::string::String, output: *mut ::qt_core::list::ListCInt);
  pub fn qt_gui_c_QFontDatabase_standardSizes_to_output(output: *mut ::qt_core::list::ListCInt);
  pub fn qt_gui_c_QFontDatabase_styleString_to_output_font(this_ptr: *mut ::font_database::FontDatabase, font: *const ::font::Font, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QFontDatabase_styleString_to_output_fontInfo(this_ptr: *mut ::font_database::FontDatabase, fontInfo: *const ::font_info::FontInfo, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QFontDatabase_styles_to_output(this_ptr: *const ::font_database::FontDatabase, family: *const ::qt_core::string::String, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QFontDatabase_supportsThreadedFontRendering() -> bool;
  pub fn qt_gui_c_QFontDatabase_systemFont_to_output(type_: ::font_database::SystemFont, output: *mut ::font::Font);
  pub fn qt_gui_c_QFontDatabase_weight(this_ptr: *const ::font_database::FontDatabase, family: *const ::qt_core::string::String, style: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_gui_c_QFontDatabase_writingSystemName_to_output(writingSystem: ::font_database::WritingSystem, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QFontDatabase_writingSystemSample_to_output(writingSystem: ::font_database::WritingSystem, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QFontDatabase_writingSystems_to_output_family(this_ptr: *const ::font_database::FontDatabase, family: *const ::qt_core::string::String, output: *mut ::list::ListFontDatabaseWritingSystem);
  pub fn qt_gui_c_QFontDatabase_writingSystems_to_output_no_args(this_ptr: *const ::font_database::FontDatabase, output: *mut ::list::ListFontDatabaseWritingSystem);

  // Header: QFontInfo
  pub fn qt_gui_c_QFontInfo_G_swap(value1: *mut ::font_info::FontInfo, value2: *mut ::font_info::FontInfo);
  pub fn qt_gui_c_QFontInfo_bold(this_ptr: *const ::font_info::FontInfo) -> bool;
  pub fn qt_gui_c_QFontInfo_constructor_QFont(arg1: *const ::font::Font, output: *mut ::font_info::FontInfo);
  pub fn qt_gui_c_QFontInfo_constructor_QFontInfo(arg1: *const ::font_info::FontInfo, output: *mut ::font_info::FontInfo);
  pub fn qt_gui_c_QFontInfo_destructor(this_ptr: *mut ::font_info::FontInfo);
  pub fn qt_gui_c_QFontInfo_exactMatch(this_ptr: *const ::font_info::FontInfo) -> bool;
  pub fn qt_gui_c_QFontInfo_family_to_output(this_ptr: *const ::font_info::FontInfo, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QFontInfo_fixedPitch(this_ptr: *const ::font_info::FontInfo) -> bool;
  pub fn qt_gui_c_QFontInfo_italic(this_ptr: *const ::font_info::FontInfo) -> bool;
  pub fn qt_gui_c_QFontInfo_operator_assign(this_ptr: *mut ::font_info::FontInfo, arg1: *const ::font_info::FontInfo) -> *mut ::font_info::FontInfo;
  pub fn qt_gui_c_QFontInfo_overline(this_ptr: *const ::font_info::FontInfo) -> bool;
  pub fn qt_gui_c_QFontInfo_pixelSize(this_ptr: *const ::font_info::FontInfo) -> ::libc::c_int;
  pub fn qt_gui_c_QFontInfo_pointSize(this_ptr: *const ::font_info::FontInfo) -> ::libc::c_int;
  pub fn qt_gui_c_QFontInfo_pointSizeF(this_ptr: *const ::font_info::FontInfo) -> ::libc::c_double;
  pub fn qt_gui_c_QFontInfo_rawMode(this_ptr: *const ::font_info::FontInfo) -> bool;
  pub fn qt_gui_c_QFontInfo_strikeOut(this_ptr: *const ::font_info::FontInfo) -> bool;
  pub fn qt_gui_c_QFontInfo_styleName_to_output(this_ptr: *const ::font_info::FontInfo, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QFontInfo_swap(this_ptr: *mut ::font_info::FontInfo, other: *mut ::font_info::FontInfo);
  pub fn qt_gui_c_QFontInfo_underline(this_ptr: *const ::font_info::FontInfo) -> bool;
  pub fn qt_gui_c_QFontInfo_weight(this_ptr: *const ::font_info::FontInfo) -> ::libc::c_int;

  // Header: QFontMetrics
  pub fn qt_gui_c_QFontMetrics_G_swap_QFontMetricsF_QFontMetricsF(value1: *mut ::font_metrics_f::FontMetricsF, value2: *mut ::font_metrics_f::FontMetricsF);
  pub fn qt_gui_c_QFontMetrics_G_swap_QFontMetrics_QFontMetrics(value1: *mut ::font_metrics::FontMetrics, value2: *mut ::font_metrics::FontMetrics);
  pub fn qt_gui_c_QFontMetrics_ascent(this_ptr: *const ::font_metrics::FontMetrics) -> ::libc::c_int;
  pub fn qt_gui_c_QFontMetrics_averageCharWidth(this_ptr: *const ::font_metrics::FontMetrics) -> ::libc::c_int;
  pub fn qt_gui_c_QFontMetrics_boundingRect_to_output_arg1(this_ptr: *const ::font_metrics::FontMetrics, arg1: *const ::qt_core::char::Char, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QFontMetrics_boundingRect_to_output_r_flags_text(this_ptr: *const ::font_metrics::FontMetrics, r: *const ::qt_core::rect::Rect, flags: ::libc::c_int, text: *const ::qt_core::string::String, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QFontMetrics_boundingRect_to_output_r_flags_text_tabstops(this_ptr: *const ::font_metrics::FontMetrics, r: *const ::qt_core::rect::Rect, flags: ::libc::c_int, text: *const ::qt_core::string::String, tabstops: ::libc::c_int, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QFontMetrics_boundingRect_to_output_r_flags_text_tabstops_tabarray(this_ptr: *const ::font_metrics::FontMetrics, r: *const ::qt_core::rect::Rect, flags: ::libc::c_int, text: *const ::qt_core::string::String, tabstops: ::libc::c_int, tabarray: *mut ::libc::c_int, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QFontMetrics_boundingRect_to_output_text(this_ptr: *const ::font_metrics::FontMetrics, text: *const ::qt_core::string::String, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QFontMetrics_boundingRect_to_output_x_y_w_h_flags_text(this_ptr: *const ::font_metrics::FontMetrics, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, flags: ::libc::c_int, text: *const ::qt_core::string::String, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QFontMetrics_boundingRect_to_output_x_y_w_h_flags_text_tabstops(this_ptr: *const ::font_metrics::FontMetrics, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, flags: ::libc::c_int, text: *const ::qt_core::string::String, tabstops: ::libc::c_int, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QFontMetrics_boundingRect_to_output_x_y_w_h_flags_text_tabstops_tabarray(this_ptr: *const ::font_metrics::FontMetrics, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, flags: ::libc::c_int, text: *const ::qt_core::string::String, tabstops: ::libc::c_int, tabarray: *mut ::libc::c_int, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QFontMetrics_capHeight(this_ptr: *const ::font_metrics::FontMetrics) -> ::libc::c_int;
  pub fn qt_gui_c_QFontMetrics_charWidth(this_ptr: *const ::font_metrics::FontMetrics, str: *const ::qt_core::string::String, pos: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QFontMetrics_constructor_QFont(arg1: *const ::font::Font, output: *mut ::font_metrics::FontMetrics);
  pub fn qt_gui_c_QFontMetrics_constructor_QFontMetrics(arg1: *const ::font_metrics::FontMetrics, output: *mut ::font_metrics::FontMetrics);
  pub fn qt_gui_c_QFontMetrics_constructor_QFont_QPaintDevice(arg1: *const ::font::Font, pd: *mut ::paint_device::PaintDevice, output: *mut ::font_metrics::FontMetrics);
  pub fn qt_gui_c_QFontMetrics_descent(this_ptr: *const ::font_metrics::FontMetrics) -> ::libc::c_int;
  pub fn qt_gui_c_QFontMetrics_destructor(this_ptr: *mut ::font_metrics::FontMetrics);
  pub fn qt_gui_c_QFontMetrics_elidedText_to_output_text_mode_width(this_ptr: *const ::font_metrics::FontMetrics, text: *const ::qt_core::string::String, mode: *const ::qt_core::qt::TextElideMode, width: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QFontMetrics_elidedText_to_output_text_mode_width_flags(this_ptr: *const ::font_metrics::FontMetrics, text: *const ::qt_core::string::String, mode: *const ::qt_core::qt::TextElideMode, width: ::libc::c_int, flags: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QFontMetrics_height(this_ptr: *const ::font_metrics::FontMetrics) -> ::libc::c_int;
  pub fn qt_gui_c_QFontMetrics_inFont(this_ptr: *const ::font_metrics::FontMetrics, arg1: *const ::qt_core::char::Char) -> bool;
  pub fn qt_gui_c_QFontMetrics_inFontUcs4(this_ptr: *const ::font_metrics::FontMetrics, ucs4: ::libc::c_uint) -> bool;
  pub fn qt_gui_c_QFontMetrics_leading(this_ptr: *const ::font_metrics::FontMetrics) -> ::libc::c_int;
  pub fn qt_gui_c_QFontMetrics_leftBearing(this_ptr: *const ::font_metrics::FontMetrics, arg1: *const ::qt_core::char::Char) -> ::libc::c_int;
  pub fn qt_gui_c_QFontMetrics_lineSpacing(this_ptr: *const ::font_metrics::FontMetrics) -> ::libc::c_int;
  pub fn qt_gui_c_QFontMetrics_lineWidth(this_ptr: *const ::font_metrics::FontMetrics) -> ::libc::c_int;
  pub fn qt_gui_c_QFontMetrics_maxWidth(this_ptr: *const ::font_metrics::FontMetrics) -> ::libc::c_int;
  pub fn qt_gui_c_QFontMetrics_minLeftBearing(this_ptr: *const ::font_metrics::FontMetrics) -> ::libc::c_int;
  pub fn qt_gui_c_QFontMetrics_minRightBearing(this_ptr: *const ::font_metrics::FontMetrics) -> ::libc::c_int;
  pub fn qt_gui_c_QFontMetrics_operator_assign(this_ptr: *mut ::font_metrics::FontMetrics, arg1: *const ::font_metrics::FontMetrics) -> *mut ::font_metrics::FontMetrics;
  pub fn qt_gui_c_QFontMetrics_operator_eq(this_ptr: *const ::font_metrics::FontMetrics, other: *const ::font_metrics::FontMetrics) -> bool;
  pub fn qt_gui_c_QFontMetrics_operator_neq(this_ptr: *const ::font_metrics::FontMetrics, other: *const ::font_metrics::FontMetrics) -> bool;
  pub fn qt_gui_c_QFontMetrics_overlinePos(this_ptr: *const ::font_metrics::FontMetrics) -> ::libc::c_int;
  pub fn qt_gui_c_QFontMetrics_rightBearing(this_ptr: *const ::font_metrics::FontMetrics, arg1: *const ::qt_core::char::Char) -> ::libc::c_int;
  pub fn qt_gui_c_QFontMetrics_size_to_output_flags_str(this_ptr: *const ::font_metrics::FontMetrics, flags: ::libc::c_int, str: *const ::qt_core::string::String, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QFontMetrics_size_to_output_flags_str_tabstops(this_ptr: *const ::font_metrics::FontMetrics, flags: ::libc::c_int, str: *const ::qt_core::string::String, tabstops: ::libc::c_int, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QFontMetrics_size_to_output_flags_str_tabstops_tabarray(this_ptr: *const ::font_metrics::FontMetrics, flags: ::libc::c_int, str: *const ::qt_core::string::String, tabstops: ::libc::c_int, tabarray: *mut ::libc::c_int, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QFontMetrics_strikeOutPos(this_ptr: *const ::font_metrics::FontMetrics) -> ::libc::c_int;
  pub fn qt_gui_c_QFontMetrics_swap(this_ptr: *mut ::font_metrics::FontMetrics, other: *mut ::font_metrics::FontMetrics);
  pub fn qt_gui_c_QFontMetrics_tightBoundingRect_to_output(this_ptr: *const ::font_metrics::FontMetrics, text: *const ::qt_core::string::String, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QFontMetrics_underlinePos(this_ptr: *const ::font_metrics::FontMetrics) -> ::libc::c_int;
  pub fn qt_gui_c_QFontMetrics_width_QChar(this_ptr: *const ::font_metrics::FontMetrics, arg1: *const ::qt_core::char::Char) -> ::libc::c_int;
  pub fn qt_gui_c_QFontMetrics_width_QString(this_ptr: *const ::font_metrics::FontMetrics, arg1: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_gui_c_QFontMetrics_width_QString_int(this_ptr: *const ::font_metrics::FontMetrics, arg1: *const ::qt_core::string::String, len: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QFontMetrics_width_QString_int_int(this_ptr: *const ::font_metrics::FontMetrics, arg1: *const ::qt_core::string::String, len: ::libc::c_int, flags: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QFontMetrics_xHeight(this_ptr: *const ::font_metrics::FontMetrics) -> ::libc::c_int;

  // Header: QFontMetricsF
  pub fn qt_gui_c_QFontMetricsF_ascent(this_ptr: *const ::font_metrics_f::FontMetricsF) -> ::libc::c_double;
  pub fn qt_gui_c_QFontMetricsF_averageCharWidth(this_ptr: *const ::font_metrics_f::FontMetricsF) -> ::libc::c_double;
  pub fn qt_gui_c_QFontMetricsF_boundingRect_to_output_arg1(this_ptr: *const ::font_metrics_f::FontMetricsF, arg1: *const ::qt_core::char::Char, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QFontMetricsF_boundingRect_to_output_r_flags_string(this_ptr: *const ::font_metrics_f::FontMetricsF, r: *const ::qt_core::rect_f::RectF, flags: ::libc::c_int, string: *const ::qt_core::string::String, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QFontMetricsF_boundingRect_to_output_r_flags_string_tabstops(this_ptr: *const ::font_metrics_f::FontMetricsF, r: *const ::qt_core::rect_f::RectF, flags: ::libc::c_int, string: *const ::qt_core::string::String, tabstops: ::libc::c_int, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QFontMetricsF_boundingRect_to_output_r_flags_string_tabstops_tabarray(this_ptr: *const ::font_metrics_f::FontMetricsF, r: *const ::qt_core::rect_f::RectF, flags: ::libc::c_int, string: *const ::qt_core::string::String, tabstops: ::libc::c_int, tabarray: *mut ::libc::c_int, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QFontMetricsF_boundingRect_to_output_string(this_ptr: *const ::font_metrics_f::FontMetricsF, string: *const ::qt_core::string::String, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QFontMetricsF_capHeight(this_ptr: *const ::font_metrics_f::FontMetricsF) -> ::libc::c_double;
  pub fn qt_gui_c_QFontMetricsF_constructor_QFont(arg1: *const ::font::Font, output: *mut ::font_metrics_f::FontMetricsF);
  pub fn qt_gui_c_QFontMetricsF_constructor_QFontMetrics(arg1: *const ::font_metrics::FontMetrics, output: *mut ::font_metrics_f::FontMetricsF);
  pub fn qt_gui_c_QFontMetricsF_constructor_QFontMetricsF(arg1: *const ::font_metrics_f::FontMetricsF, output: *mut ::font_metrics_f::FontMetricsF);
  pub fn qt_gui_c_QFontMetricsF_constructor_QFont_QPaintDevice(arg1: *const ::font::Font, pd: *mut ::paint_device::PaintDevice, output: *mut ::font_metrics_f::FontMetricsF);
  pub fn qt_gui_c_QFontMetricsF_descent(this_ptr: *const ::font_metrics_f::FontMetricsF) -> ::libc::c_double;
  pub fn qt_gui_c_QFontMetricsF_destructor(this_ptr: *mut ::font_metrics_f::FontMetricsF);
  pub fn qt_gui_c_QFontMetricsF_elidedText_to_output_text_mode_width(this_ptr: *const ::font_metrics_f::FontMetricsF, text: *const ::qt_core::string::String, mode: *const ::qt_core::qt::TextElideMode, width: ::libc::c_double, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QFontMetricsF_elidedText_to_output_text_mode_width_flags(this_ptr: *const ::font_metrics_f::FontMetricsF, text: *const ::qt_core::string::String, mode: *const ::qt_core::qt::TextElideMode, width: ::libc::c_double, flags: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QFontMetricsF_height(this_ptr: *const ::font_metrics_f::FontMetricsF) -> ::libc::c_double;
  pub fn qt_gui_c_QFontMetricsF_inFont(this_ptr: *const ::font_metrics_f::FontMetricsF, arg1: *const ::qt_core::char::Char) -> bool;
  pub fn qt_gui_c_QFontMetricsF_inFontUcs4(this_ptr: *const ::font_metrics_f::FontMetricsF, ucs4: ::libc::c_uint) -> bool;
  pub fn qt_gui_c_QFontMetricsF_leading(this_ptr: *const ::font_metrics_f::FontMetricsF) -> ::libc::c_double;
  pub fn qt_gui_c_QFontMetricsF_leftBearing(this_ptr: *const ::font_metrics_f::FontMetricsF, arg1: *const ::qt_core::char::Char) -> ::libc::c_double;
  pub fn qt_gui_c_QFontMetricsF_lineSpacing(this_ptr: *const ::font_metrics_f::FontMetricsF) -> ::libc::c_double;
  pub fn qt_gui_c_QFontMetricsF_lineWidth(this_ptr: *const ::font_metrics_f::FontMetricsF) -> ::libc::c_double;
  pub fn qt_gui_c_QFontMetricsF_maxWidth(this_ptr: *const ::font_metrics_f::FontMetricsF) -> ::libc::c_double;
  pub fn qt_gui_c_QFontMetricsF_minLeftBearing(this_ptr: *const ::font_metrics_f::FontMetricsF) -> ::libc::c_double;
  pub fn qt_gui_c_QFontMetricsF_minRightBearing(this_ptr: *const ::font_metrics_f::FontMetricsF) -> ::libc::c_double;
  pub fn qt_gui_c_QFontMetricsF_operator_assign_QFontMetrics(this_ptr: *mut ::font_metrics_f::FontMetricsF, arg1: *const ::font_metrics::FontMetrics) -> *mut ::font_metrics_f::FontMetricsF;
  pub fn qt_gui_c_QFontMetricsF_operator_assign_QFontMetricsF(this_ptr: *mut ::font_metrics_f::FontMetricsF, arg1: *const ::font_metrics_f::FontMetricsF) -> *mut ::font_metrics_f::FontMetricsF;
  pub fn qt_gui_c_QFontMetricsF_operator_eq(this_ptr: *const ::font_metrics_f::FontMetricsF, other: *const ::font_metrics_f::FontMetricsF) -> bool;
  pub fn qt_gui_c_QFontMetricsF_operator_neq(this_ptr: *const ::font_metrics_f::FontMetricsF, other: *const ::font_metrics_f::FontMetricsF) -> bool;
  pub fn qt_gui_c_QFontMetricsF_overlinePos(this_ptr: *const ::font_metrics_f::FontMetricsF) -> ::libc::c_double;
  pub fn qt_gui_c_QFontMetricsF_rightBearing(this_ptr: *const ::font_metrics_f::FontMetricsF, arg1: *const ::qt_core::char::Char) -> ::libc::c_double;
  pub fn qt_gui_c_QFontMetricsF_size_to_output_flags_str(this_ptr: *const ::font_metrics_f::FontMetricsF, flags: ::libc::c_int, str: *const ::qt_core::string::String, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_gui_c_QFontMetricsF_size_to_output_flags_str_tabstops(this_ptr: *const ::font_metrics_f::FontMetricsF, flags: ::libc::c_int, str: *const ::qt_core::string::String, tabstops: ::libc::c_int, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_gui_c_QFontMetricsF_size_to_output_flags_str_tabstops_tabarray(this_ptr: *const ::font_metrics_f::FontMetricsF, flags: ::libc::c_int, str: *const ::qt_core::string::String, tabstops: ::libc::c_int, tabarray: *mut ::libc::c_int, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_gui_c_QFontMetricsF_strikeOutPos(this_ptr: *const ::font_metrics_f::FontMetricsF) -> ::libc::c_double;
  pub fn qt_gui_c_QFontMetricsF_swap(this_ptr: *mut ::font_metrics_f::FontMetricsF, other: *mut ::font_metrics_f::FontMetricsF);
  pub fn qt_gui_c_QFontMetricsF_tightBoundingRect_to_output(this_ptr: *const ::font_metrics_f::FontMetricsF, text: *const ::qt_core::string::String, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QFontMetricsF_underlinePos(this_ptr: *const ::font_metrics_f::FontMetricsF) -> ::libc::c_double;
  pub fn qt_gui_c_QFontMetricsF_width_arg1(this_ptr: *const ::font_metrics_f::FontMetricsF, arg1: *const ::qt_core::char::Char) -> ::libc::c_double;
  pub fn qt_gui_c_QFontMetricsF_width_string(this_ptr: *const ::font_metrics_f::FontMetricsF, string: *const ::qt_core::string::String) -> ::libc::c_double;
  pub fn qt_gui_c_QFontMetricsF_xHeight(this_ptr: *const ::font_metrics_f::FontMetricsF) -> ::libc::c_double;

  // Header: QGenericPlugin
  pub fn qt_gui_c_QGenericPlugin_G_static_cast_QGenericPlugin_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::generic_plugin::GenericPlugin;
  pub fn qt_gui_c_QGenericPlugin_G_static_cast_QObject_ptr(ptr: *mut ::generic_plugin::GenericPlugin) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QGenericPlugin_create(this_ptr: *mut ::generic_plugin::GenericPlugin, name: *const ::qt_core::string::String, spec: *const ::qt_core::string::String) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QGenericPlugin_delete(this_ptr: *mut ::generic_plugin::GenericPlugin);
  pub fn qt_gui_c_QGenericPlugin_metaObject(this_ptr: *const ::generic_plugin::GenericPlugin) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QGenericPlugin_qt_metacall(this_ptr: *mut ::generic_plugin::GenericPlugin, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QGenericPlugin_qt_metacast(this_ptr: *mut ::generic_plugin::GenericPlugin, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QGenericPlugin_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QGenericPlugin_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QGenericPluginFactory
  pub fn qt_gui_c_QGenericPluginFactory_create(arg1: *const ::qt_core::string::String, arg2: *const ::qt_core::string::String) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QGenericPluginFactory_delete(this_ptr: *mut ::generic_plugin_factory::GenericPluginFactory);
  pub fn qt_gui_c_QGenericPluginFactory_keys_to_output(output: *mut ::qt_core::string_list::StringList);

  // Header: QGlyphRun
  pub fn qt_gui_c_QGlyphRun_G_swap(value1: *mut ::glyph_run::GlyphRun, value2: *mut ::glyph_run::GlyphRun);
  pub fn qt_gui_c_QGlyphRun_boundingRect_to_output(this_ptr: *const ::glyph_run::GlyphRun, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QGlyphRun_clear(this_ptr: *mut ::glyph_run::GlyphRun);
  pub fn qt_gui_c_QGlyphRun_constructor_no_args(output: *mut ::glyph_run::GlyphRun);
  pub fn qt_gui_c_QGlyphRun_constructor_other(other: *const ::glyph_run::GlyphRun, output: *mut ::glyph_run::GlyphRun);
  pub fn qt_gui_c_QGlyphRun_destructor(this_ptr: *mut ::glyph_run::GlyphRun);
  pub fn qt_gui_c_QGlyphRun_flags(this_ptr: *const ::glyph_run::GlyphRun) -> ::libc::c_uint;
  pub fn qt_gui_c_QGlyphRun_glyphIndexes_to_output(this_ptr: *const ::glyph_run::GlyphRun, output: *mut ::vector::VectorU32);
  pub fn qt_gui_c_QGlyphRun_isEmpty(this_ptr: *const ::glyph_run::GlyphRun) -> bool;
  pub fn qt_gui_c_QGlyphRun_isRightToLeft(this_ptr: *const ::glyph_run::GlyphRun) -> bool;
  pub fn qt_gui_c_QGlyphRun_operator_assign(this_ptr: *mut ::glyph_run::GlyphRun, other: *const ::glyph_run::GlyphRun) -> *mut ::glyph_run::GlyphRun;
  pub fn qt_gui_c_QGlyphRun_operator_eq(this_ptr: *const ::glyph_run::GlyphRun, other: *const ::glyph_run::GlyphRun) -> bool;
  pub fn qt_gui_c_QGlyphRun_operator_neq(this_ptr: *const ::glyph_run::GlyphRun, other: *const ::glyph_run::GlyphRun) -> bool;
  pub fn qt_gui_c_QGlyphRun_overline(this_ptr: *const ::glyph_run::GlyphRun) -> bool;
  pub fn qt_gui_c_QGlyphRun_positions_to_output(this_ptr: *const ::glyph_run::GlyphRun, output: *mut ::qt_core::vector::VectorPointF);
  pub fn qt_gui_c_QGlyphRun_rawFont_to_output(this_ptr: *const ::glyph_run::GlyphRun, output: *mut ::raw_font::RawFont);
  pub fn qt_gui_c_QGlyphRun_setBoundingRect(this_ptr: *mut ::glyph_run::GlyphRun, boundingRect: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QGlyphRun_setFlag_flag(this_ptr: *mut ::glyph_run::GlyphRun, flag: ::glyph_run::GlyphRunFlag);
  pub fn qt_gui_c_QGlyphRun_setFlag_flag_enabled(this_ptr: *mut ::glyph_run::GlyphRun, flag: ::glyph_run::GlyphRunFlag, enabled: bool);
  pub fn qt_gui_c_QGlyphRun_setFlags(this_ptr: *mut ::glyph_run::GlyphRun, flags: ::libc::c_uint);
  pub fn qt_gui_c_QGlyphRun_setGlyphIndexes(this_ptr: *mut ::glyph_run::GlyphRun, glyphIndexes: *const ::vector::VectorU32);
  pub fn qt_gui_c_QGlyphRun_setOverline(this_ptr: *mut ::glyph_run::GlyphRun, overline: bool);
  pub fn qt_gui_c_QGlyphRun_setPositions(this_ptr: *mut ::glyph_run::GlyphRun, positions: *const ::qt_core::vector::VectorPointF);
  pub fn qt_gui_c_QGlyphRun_setRawData(this_ptr: *mut ::glyph_run::GlyphRun, glyphIndexArray: *const u32, glyphPositionArray: *const ::qt_core::point_f::PointF, size: ::libc::c_int);
  pub fn qt_gui_c_QGlyphRun_setRawFont(this_ptr: *mut ::glyph_run::GlyphRun, rawFont: *const ::raw_font::RawFont);
  pub fn qt_gui_c_QGlyphRun_setRightToLeft(this_ptr: *mut ::glyph_run::GlyphRun, on: bool);
  pub fn qt_gui_c_QGlyphRun_setStrikeOut(this_ptr: *mut ::glyph_run::GlyphRun, strikeOut: bool);
  pub fn qt_gui_c_QGlyphRun_setUnderline(this_ptr: *mut ::glyph_run::GlyphRun, underline: bool);
  pub fn qt_gui_c_QGlyphRun_strikeOut(this_ptr: *const ::glyph_run::GlyphRun) -> bool;
  pub fn qt_gui_c_QGlyphRun_swap(this_ptr: *mut ::glyph_run::GlyphRun, other: *mut ::glyph_run::GlyphRun);
  pub fn qt_gui_c_QGlyphRun_underline(this_ptr: *const ::glyph_run::GlyphRun) -> bool;

  // Header: QGradient
  pub fn qt_gui_c_QGradient_coordinateMode(this_ptr: *const ::gradient::Gradient) -> ::gradient::CoordinateMode;
  pub fn qt_gui_c_QGradient_delete(this_ptr: *mut ::gradient::Gradient);
  pub fn qt_gui_c_QGradient_interpolationMode(this_ptr: *const ::gradient::Gradient) -> ::gradient::InterpolationMode;
  pub fn qt_gui_c_QGradient_new() -> *mut ::gradient::Gradient;
  pub fn qt_gui_c_QGradient_operator_eq(this_ptr: *const ::gradient::Gradient, gradient: *const ::gradient::Gradient) -> bool;
  pub fn qt_gui_c_QGradient_operator_neq(this_ptr: *const ::gradient::Gradient, other: *const ::gradient::Gradient) -> bool;
  pub fn qt_gui_c_QGradient_setColorAt(this_ptr: *mut ::gradient::Gradient, pos: ::libc::c_double, color: *const ::color::Color);
  pub fn qt_gui_c_QGradient_setCoordinateMode(this_ptr: *mut ::gradient::Gradient, mode: ::gradient::CoordinateMode);
  pub fn qt_gui_c_QGradient_setInterpolationMode(this_ptr: *mut ::gradient::Gradient, mode: ::gradient::InterpolationMode);
  pub fn qt_gui_c_QGradient_setSpread(this_ptr: *mut ::gradient::Gradient, spread: ::gradient::Spread);
  pub fn qt_gui_c_QGradient_setStops(this_ptr: *mut ::gradient::Gradient, stops: *const ::vector::VectorPairPairCDoubleColor);
  pub fn qt_gui_c_QGradient_spread(this_ptr: *const ::gradient::Gradient) -> ::gradient::Spread;
  pub fn qt_gui_c_QGradient_stops_to_output(this_ptr: *const ::gradient::Gradient, output: *mut ::vector::VectorPairPairCDoubleColor);
  pub fn qt_gui_c_QGradient_type(this_ptr: *const ::gradient::Gradient) -> ::gradient::Type;

  // Header: QGuiApplication
  pub fn qt_gui_c_QGuiApplication_G_static_cast_QCoreApplication_ptr(ptr: *mut ::gui_application::GuiApplication) -> *mut ::qt_core::core_application::CoreApplication;
  pub fn qt_gui_c_QGuiApplication_G_static_cast_QGuiApplication_ptr_QCoreApplication(ptr: *mut ::qt_core::core_application::CoreApplication) -> *mut ::gui_application::GuiApplication;
  pub fn qt_gui_c_QGuiApplication_G_static_cast_QGuiApplication_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::gui_application::GuiApplication;
  pub fn qt_gui_c_QGuiApplication_G_static_cast_QObject_ptr(ptr: *mut ::gui_application::GuiApplication) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QGuiApplication_allWindows_to_output(output: *mut ::list::ListWindowMutPtr);
  pub fn qt_gui_c_QGuiApplication_applicationDisplayName_to_output(output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QGuiApplication_changeOverrideCursor(arg1: *const ::cursor::Cursor);
  pub fn qt_gui_c_QGuiApplication_clipboard() -> *mut ::clipboard::Clipboard;
  pub fn qt_gui_c_QGuiApplication_delete(this_ptr: *mut ::gui_application::GuiApplication);
  pub fn qt_gui_c_QGuiApplication_desktopFileName_to_output(output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QGuiApplication_desktopSettingsAware() -> bool;
  pub fn qt_gui_c_QGuiApplication_devicePixelRatio(this_ptr: *const ::gui_application::GuiApplication) -> ::libc::c_double;
  pub fn qt_gui_c_QGuiApplication_exec() -> ::libc::c_int;
  pub fn qt_gui_c_QGuiApplication_focusObject() -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QGuiApplication_focusWindow() -> *mut ::window::Window;
  pub fn qt_gui_c_QGuiApplication_font_to_output(output: *mut ::font::Font);
  pub fn qt_gui_c_QGuiApplication_inputMethod() -> *mut ::input_method::InputMethod;
  pub fn qt_gui_c_QGuiApplication_isFallbackSessionManagementEnabled() -> bool;
  pub fn qt_gui_c_QGuiApplication_isLeftToRight() -> bool;
  pub fn qt_gui_c_QGuiApplication_isRightToLeft() -> bool;
  pub fn qt_gui_c_QGuiApplication_isSavingSession(this_ptr: *const ::gui_application::GuiApplication) -> bool;
  pub fn qt_gui_c_QGuiApplication_isSessionRestored(this_ptr: *const ::gui_application::GuiApplication) -> bool;
  pub fn qt_gui_c_QGuiApplication_metaObject(this_ptr: *const ::gui_application::GuiApplication) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QGuiApplication_modalWindow() -> *mut ::window::Window;
  pub fn qt_gui_c_QGuiApplication_new_argc_argv(argc: *mut ::libc::c_int, argv: *mut *mut ::libc::c_char) -> *mut ::gui_application::GuiApplication;
  pub fn qt_gui_c_QGuiApplication_new_argc_argv_arg3(argc: *mut ::libc::c_int, argv: *mut *mut ::libc::c_char, arg3: ::libc::c_int) -> *mut ::gui_application::GuiApplication;
  pub fn qt_gui_c_QGuiApplication_notify(this_ptr: *mut ::gui_application::GuiApplication, arg1: *mut ::qt_core::object::Object, arg2: *mut ::qt_core::event::Event) -> bool;
  pub fn qt_gui_c_QGuiApplication_overrideCursor() -> *mut ::cursor::Cursor;
  pub fn qt_gui_c_QGuiApplication_palette_to_output(output: *mut ::palette::Palette);
  pub fn qt_gui_c_QGuiApplication_platformFunction(function: *const ::qt_core::byte_array::ByteArray) -> extern "C" fn();
  pub fn qt_gui_c_QGuiApplication_platformName_to_output(output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QGuiApplication_primaryScreen() -> *mut ::screen::Screen;
  pub fn qt_gui_c_QGuiApplication_qt_metacall(this_ptr: *mut ::gui_application::GuiApplication, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QGuiApplication_qt_metacast(this_ptr: *mut ::gui_application::GuiApplication, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QGuiApplication_quitOnLastWindowClosed() -> bool;
  pub fn qt_gui_c_QGuiApplication_restoreOverrideCursor();
  pub fn qt_gui_c_QGuiApplication_screens_to_output(output: *mut ::list::ListScreenMutPtr);
  pub fn qt_gui_c_QGuiApplication_sessionId_to_output(this_ptr: *const ::gui_application::GuiApplication, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QGuiApplication_sessionKey_to_output(this_ptr: *const ::gui_application::GuiApplication, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QGuiApplication_setApplicationDisplayName(name: *const ::qt_core::string::String);
  pub fn qt_gui_c_QGuiApplication_setDesktopFileName(name: *const ::qt_core::string::String);
  pub fn qt_gui_c_QGuiApplication_setDesktopSettingsAware(on: bool);
  pub fn qt_gui_c_QGuiApplication_setFallbackSessionManagementEnabled(arg1: bool);
  pub fn qt_gui_c_QGuiApplication_setFont(arg1: *const ::font::Font);
  pub fn qt_gui_c_QGuiApplication_setLayoutDirection(direction: *const ::qt_core::qt::LayoutDirection);
  pub fn qt_gui_c_QGuiApplication_setOverrideCursor(arg1: *const ::cursor::Cursor);
  pub fn qt_gui_c_QGuiApplication_setPalette(pal: *const ::palette::Palette);
  pub fn qt_gui_c_QGuiApplication_setQuitOnLastWindowClosed(quit: bool);
  pub fn qt_gui_c_QGuiApplication_setWindowIcon(icon: *const ::icon::Icon);
  pub fn qt_gui_c_QGuiApplication_styleHints() -> *mut ::style_hints::StyleHints;
  pub fn qt_gui_c_QGuiApplication_sync();
  pub fn qt_gui_c_QGuiApplication_topLevelAt(pos: *const ::qt_core::point::Point) -> *mut ::window::Window;
  pub fn qt_gui_c_QGuiApplication_topLevelWindows_to_output(output: *mut ::list::ListWindowMutPtr);
  pub fn qt_gui_c_QGuiApplication_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QGuiApplication_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QGuiApplication_windowIcon_to_output(output: *mut ::icon::Icon);

  // Header: QHelpEvent
  pub fn qt_gui_c_QHelpEvent_G_static_cast_QEvent_ptr(ptr: *mut ::help_event::HelpEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QHelpEvent_G_static_cast_QHelpEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::help_event::HelpEvent;
  pub fn qt_gui_c_QHelpEvent_delete(this_ptr: *mut ::help_event::HelpEvent);
  pub fn qt_gui_c_QHelpEvent_globalPos(this_ptr: *const ::help_event::HelpEvent) -> *const ::qt_core::point::Point;
  pub fn qt_gui_c_QHelpEvent_globalX(this_ptr: *const ::help_event::HelpEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QHelpEvent_globalY(this_ptr: *const ::help_event::HelpEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QHelpEvent_new(type_: ::qt_core::event::Type, pos: *const ::qt_core::point::Point, globalPos: *const ::qt_core::point::Point) -> *mut ::help_event::HelpEvent;
  pub fn qt_gui_c_QHelpEvent_pos(this_ptr: *const ::help_event::HelpEvent) -> *const ::qt_core::point::Point;
  pub fn qt_gui_c_QHelpEvent_x(this_ptr: *const ::help_event::HelpEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QHelpEvent_y(this_ptr: *const ::help_event::HelpEvent) -> ::libc::c_int;

  // Header: QHideEvent
  pub fn qt_gui_c_QHideEvent_G_static_cast_QEvent_ptr(ptr: *mut ::hide_event::HideEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QHideEvent_G_static_cast_QHideEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::hide_event::HideEvent;
  pub fn qt_gui_c_QHideEvent_delete(this_ptr: *mut ::hide_event::HideEvent);
  pub fn qt_gui_c_QHideEvent_new() -> *mut ::hide_event::HideEvent;

  // Header: QHoverEvent
  pub fn qt_gui_c_QHoverEvent_G_dynamic_cast_QHoverEvent_ptr(ptr: *mut ::input_event::InputEvent) -> *mut ::hover_event::HoverEvent;
  pub fn qt_gui_c_QHoverEvent_G_static_cast_QEvent_ptr(ptr: *mut ::hover_event::HoverEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QHoverEvent_G_static_cast_QHoverEvent_ptr_QEvent(ptr: *mut ::qt_core::event::Event) -> *mut ::hover_event::HoverEvent;
  pub fn qt_gui_c_QHoverEvent_G_static_cast_QHoverEvent_ptr_QInputEvent(ptr: *mut ::input_event::InputEvent) -> *mut ::hover_event::HoverEvent;
  pub fn qt_gui_c_QHoverEvent_G_static_cast_QInputEvent_ptr(ptr: *mut ::hover_event::HoverEvent) -> *mut ::input_event::InputEvent;
  pub fn qt_gui_c_QHoverEvent_delete(this_ptr: *mut ::hover_event::HoverEvent);
  pub fn qt_gui_c_QHoverEvent_oldPosF(this_ptr: *const ::hover_event::HoverEvent) -> *const ::qt_core::point_f::PointF;
  pub fn qt_gui_c_QHoverEvent_oldPos_to_output(this_ptr: *const ::hover_event::HoverEvent, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QHoverEvent_posF(this_ptr: *const ::hover_event::HoverEvent) -> *const ::qt_core::point_f::PointF;
  pub fn qt_gui_c_QHoverEvent_pos_to_output(this_ptr: *const ::hover_event::HoverEvent, output: *mut ::qt_core::point::Point);

  // Header: QIcon
  pub fn qt_gui_c_QIcon_G_operator_shl_to_output(dbg: *const ::qt_core::debug::Debug, arg2: *const ::icon::Icon, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QIcon_G_qt_findAtNxFile_to_output_baseFileName_targetDevicePixelRatio(baseFileName: *const ::qt_core::string::String, targetDevicePixelRatio: ::libc::c_double, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QIcon_G_qt_findAtNxFile_to_output_baseFileName_targetDevicePixelRatio_sourceDevicePixelRatio(baseFileName: *const ::qt_core::string::String, targetDevicePixelRatio: ::libc::c_double, sourceDevicePixelRatio: *mut ::libc::c_double, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QIcon_G_swap(value1: *mut ::icon::Icon, value2: *mut ::icon::Icon);
  pub fn qt_gui_c_QIcon_actualSize_to_output_size(this_ptr: *const ::icon::Icon, size: *const ::qt_core::size::Size, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QIcon_actualSize_to_output_size_mode(this_ptr: *const ::icon::Icon, size: *const ::qt_core::size::Size, mode: ::icon::Mode, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QIcon_actualSize_to_output_size_mode_state(this_ptr: *const ::icon::Icon, size: *const ::qt_core::size::Size, mode: ::icon::Mode, state: ::icon::State, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QIcon_actualSize_to_output_window_size(this_ptr: *const ::icon::Icon, window: *mut ::window::Window, size: *const ::qt_core::size::Size, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QIcon_actualSize_to_output_window_size_mode(this_ptr: *const ::icon::Icon, window: *mut ::window::Window, size: *const ::qt_core::size::Size, mode: ::icon::Mode, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QIcon_actualSize_to_output_window_size_mode_state(this_ptr: *const ::icon::Icon, window: *mut ::window::Window, size: *const ::qt_core::size::Size, mode: ::icon::Mode, state: ::icon::State, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QIcon_addFile_fileName(this_ptr: *mut ::icon::Icon, fileName: *const ::qt_core::string::String);
  pub fn qt_gui_c_QIcon_addFile_fileName_size(this_ptr: *mut ::icon::Icon, fileName: *const ::qt_core::string::String, size: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QIcon_addFile_fileName_size_mode(this_ptr: *mut ::icon::Icon, fileName: *const ::qt_core::string::String, size: *const ::qt_core::size::Size, mode: ::icon::Mode);
  pub fn qt_gui_c_QIcon_addFile_fileName_size_mode_state(this_ptr: *mut ::icon::Icon, fileName: *const ::qt_core::string::String, size: *const ::qt_core::size::Size, mode: ::icon::Mode, state: ::icon::State);
  pub fn qt_gui_c_QIcon_addPixmap_pixmap(this_ptr: *mut ::icon::Icon, pixmap: *const ::pixmap::Pixmap);
  pub fn qt_gui_c_QIcon_addPixmap_pixmap_mode(this_ptr: *mut ::icon::Icon, pixmap: *const ::pixmap::Pixmap, mode: ::icon::Mode);
  pub fn qt_gui_c_QIcon_addPixmap_pixmap_mode_state(this_ptr: *mut ::icon::Icon, pixmap: *const ::pixmap::Pixmap, mode: ::icon::Mode, state: ::icon::State);
  pub fn qt_gui_c_QIcon_availableSizes_to_output_mode(this_ptr: *const ::icon::Icon, mode: ::icon::Mode, output: *mut ::list::ListQtCoreSize);
  pub fn qt_gui_c_QIcon_availableSizes_to_output_mode_state(this_ptr: *const ::icon::Icon, mode: ::icon::Mode, state: ::icon::State, output: *mut ::list::ListQtCoreSize);
  pub fn qt_gui_c_QIcon_availableSizes_to_output_no_args(this_ptr: *const ::icon::Icon, output: *mut ::list::ListQtCoreSize);
  pub fn qt_gui_c_QIcon_cacheKey(this_ptr: *const ::icon::Icon) -> i64;
  pub fn qt_gui_c_QIcon_constructor_engine(engine: *mut ::icon_engine::IconEngine, output: *mut ::icon::Icon);
  pub fn qt_gui_c_QIcon_constructor_fileName(fileName: *const ::qt_core::string::String, output: *mut ::icon::Icon);
  pub fn qt_gui_c_QIcon_constructor_no_args(output: *mut ::icon::Icon);
  pub fn qt_gui_c_QIcon_constructor_other(other: *const ::icon::Icon, output: *mut ::icon::Icon);
  pub fn qt_gui_c_QIcon_constructor_pixmap(pixmap: *const ::pixmap::Pixmap, output: *mut ::icon::Icon);
  pub fn qt_gui_c_QIcon_convert_to_QVariant_to_output(this_ptr: *const ::icon::Icon, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QIcon_destructor(this_ptr: *mut ::icon::Icon);
  pub fn qt_gui_c_QIcon_detach(this_ptr: *mut ::icon::Icon);
  pub fn qt_gui_c_QIcon_fromTheme_to_output_name(name: *const ::qt_core::string::String, output: *mut ::icon::Icon);
  pub fn qt_gui_c_QIcon_fromTheme_to_output_name_fallback(name: *const ::qt_core::string::String, fallback: *const ::icon::Icon, output: *mut ::icon::Icon);
  pub fn qt_gui_c_QIcon_hasThemeIcon(name: *const ::qt_core::string::String) -> bool;
  pub fn qt_gui_c_QIcon_isDetached(this_ptr: *const ::icon::Icon) -> bool;
  pub fn qt_gui_c_QIcon_isMask(this_ptr: *const ::icon::Icon) -> bool;
  pub fn qt_gui_c_QIcon_isNull(this_ptr: *const ::icon::Icon) -> bool;
  pub fn qt_gui_c_QIcon_name_to_output(this_ptr: *const ::icon::Icon, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QIcon_operator_assign(this_ptr: *mut ::icon::Icon, other: *const ::icon::Icon) -> *mut ::icon::Icon;
  pub fn qt_gui_c_QIcon_pixmap_as_ptr_extent(this_ptr: *const ::icon::Icon, extent: ::libc::c_int) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QIcon_pixmap_as_ptr_extent_mode(this_ptr: *const ::icon::Icon, extent: ::libc::c_int, mode: ::icon::Mode) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QIcon_pixmap_as_ptr_extent_mode_state(this_ptr: *const ::icon::Icon, extent: ::libc::c_int, mode: ::icon::Mode, state: ::icon::State) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QIcon_pixmap_as_ptr_size(this_ptr: *const ::icon::Icon, size: *const ::qt_core::size::Size) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QIcon_pixmap_as_ptr_size_mode(this_ptr: *const ::icon::Icon, size: *const ::qt_core::size::Size, mode: ::icon::Mode) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QIcon_pixmap_as_ptr_size_mode_state(this_ptr: *const ::icon::Icon, size: *const ::qt_core::size::Size, mode: ::icon::Mode, state: ::icon::State) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QIcon_pixmap_as_ptr_w_h(this_ptr: *const ::icon::Icon, w: ::libc::c_int, h: ::libc::c_int) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QIcon_pixmap_as_ptr_w_h_mode(this_ptr: *const ::icon::Icon, w: ::libc::c_int, h: ::libc::c_int, mode: ::icon::Mode) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QIcon_pixmap_as_ptr_w_h_mode_state(this_ptr: *const ::icon::Icon, w: ::libc::c_int, h: ::libc::c_int, mode: ::icon::Mode, state: ::icon::State) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QIcon_pixmap_as_ptr_window_size(this_ptr: *const ::icon::Icon, window: *mut ::window::Window, size: *const ::qt_core::size::Size) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QIcon_pixmap_as_ptr_window_size_mode(this_ptr: *const ::icon::Icon, window: *mut ::window::Window, size: *const ::qt_core::size::Size, mode: ::icon::Mode) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QIcon_pixmap_as_ptr_window_size_mode_state(this_ptr: *const ::icon::Icon, window: *mut ::window::Window, size: *const ::qt_core::size::Size, mode: ::icon::Mode, state: ::icon::State) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QIcon_setIsMask(this_ptr: *mut ::icon::Icon, isMask: bool);
  pub fn qt_gui_c_QIcon_setThemeName(path: *const ::qt_core::string::String);
  pub fn qt_gui_c_QIcon_setThemeSearchPaths(searchpath: *const ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QIcon_swap(this_ptr: *mut ::icon::Icon, other: *mut ::icon::Icon);
  pub fn qt_gui_c_QIcon_themeName_to_output(output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QIcon_themeSearchPaths_to_output(output: *mut ::qt_core::string_list::StringList);

  // Header: QIconDragEvent
  pub fn qt_gui_c_QIconDragEvent_G_static_cast_QEvent_ptr(ptr: *mut ::icon_drag_event::IconDragEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QIconDragEvent_G_static_cast_QIconDragEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::icon_drag_event::IconDragEvent;
  pub fn qt_gui_c_QIconDragEvent_delete(this_ptr: *mut ::icon_drag_event::IconDragEvent);
  pub fn qt_gui_c_QIconDragEvent_new() -> *mut ::icon_drag_event::IconDragEvent;

  // Header: QIconEngine
  pub fn qt_gui_c_QIconEngine_AvailableSizesArgument_delete(this_ptr: *mut ::icon_engine::AvailableSizesArgument);
  pub fn qt_gui_c_QIconEngine_AvailableSizesArgument_mode(this_ptr: *const ::icon_engine::AvailableSizesArgument) -> *const ::icon::Mode;
  pub fn qt_gui_c_QIconEngine_AvailableSizesArgument_mode_mut(this_ptr: *mut ::icon_engine::AvailableSizesArgument) -> *mut ::icon::Mode;
  pub fn qt_gui_c_QIconEngine_AvailableSizesArgument_set_mode(this_ptr: *mut ::icon_engine::AvailableSizesArgument, value: *const ::icon::Mode);
  pub fn qt_gui_c_QIconEngine_AvailableSizesArgument_set_sizes(this_ptr: *mut ::icon_engine::AvailableSizesArgument, value: *const ::list::ListQtCoreSize);
  pub fn qt_gui_c_QIconEngine_AvailableSizesArgument_set_state(this_ptr: *mut ::icon_engine::AvailableSizesArgument, value: *const ::icon::State);
  pub fn qt_gui_c_QIconEngine_AvailableSizesArgument_sizes(this_ptr: *const ::icon_engine::AvailableSizesArgument) -> *const ::list::ListQtCoreSize;
  pub fn qt_gui_c_QIconEngine_AvailableSizesArgument_sizes_mut(this_ptr: *mut ::icon_engine::AvailableSizesArgument) -> *mut ::list::ListQtCoreSize;
  pub fn qt_gui_c_QIconEngine_AvailableSizesArgument_state(this_ptr: *const ::icon_engine::AvailableSizesArgument) -> *const ::icon::State;
  pub fn qt_gui_c_QIconEngine_AvailableSizesArgument_state_mut(this_ptr: *mut ::icon_engine::AvailableSizesArgument) -> *mut ::icon::State;
  pub fn qt_gui_c_QIconEngine_ScaledPixmapArgument_delete(this_ptr: *mut ::icon_engine::ScaledPixmapArgument);
  pub fn qt_gui_c_QIconEngine_ScaledPixmapArgument_mode(this_ptr: *const ::icon_engine::ScaledPixmapArgument) -> *const ::icon::Mode;
  pub fn qt_gui_c_QIconEngine_ScaledPixmapArgument_mode_mut(this_ptr: *mut ::icon_engine::ScaledPixmapArgument) -> *mut ::icon::Mode;
  pub fn qt_gui_c_QIconEngine_ScaledPixmapArgument_pixmap(this_ptr: *const ::icon_engine::ScaledPixmapArgument) -> *const ::pixmap::Pixmap;
  pub fn qt_gui_c_QIconEngine_ScaledPixmapArgument_pixmap_mut(this_ptr: *mut ::icon_engine::ScaledPixmapArgument) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QIconEngine_ScaledPixmapArgument_scale(this_ptr: *const ::icon_engine::ScaledPixmapArgument) -> ::libc::c_double;
  pub fn qt_gui_c_QIconEngine_ScaledPixmapArgument_set_mode(this_ptr: *mut ::icon_engine::ScaledPixmapArgument, value: *const ::icon::Mode);
  pub fn qt_gui_c_QIconEngine_ScaledPixmapArgument_set_pixmap(this_ptr: *mut ::icon_engine::ScaledPixmapArgument, value: *const ::pixmap::Pixmap);
  pub fn qt_gui_c_QIconEngine_ScaledPixmapArgument_set_scale(this_ptr: *mut ::icon_engine::ScaledPixmapArgument, value: ::libc::c_double);
  pub fn qt_gui_c_QIconEngine_ScaledPixmapArgument_set_size(this_ptr: *mut ::icon_engine::ScaledPixmapArgument, value: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QIconEngine_ScaledPixmapArgument_set_state(this_ptr: *mut ::icon_engine::ScaledPixmapArgument, value: *const ::icon::State);
  pub fn qt_gui_c_QIconEngine_ScaledPixmapArgument_size(this_ptr: *const ::icon_engine::ScaledPixmapArgument) -> *const ::qt_core::size::Size;
  pub fn qt_gui_c_QIconEngine_ScaledPixmapArgument_size_mut(this_ptr: *mut ::icon_engine::ScaledPixmapArgument) -> *mut ::qt_core::size::Size;
  pub fn qt_gui_c_QIconEngine_ScaledPixmapArgument_state(this_ptr: *const ::icon_engine::ScaledPixmapArgument) -> *const ::icon::State;
  pub fn qt_gui_c_QIconEngine_ScaledPixmapArgument_state_mut(this_ptr: *mut ::icon_engine::ScaledPixmapArgument) -> *mut ::icon::State;
  pub fn qt_gui_c_QIconEngine_actualSize_to_output(this_ptr: *mut ::icon_engine::IconEngine, size: *const ::qt_core::size::Size, mode: *const ::icon::Mode, state: *const ::icon::State, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QIconEngine_addFile(this_ptr: *mut ::icon_engine::IconEngine, fileName: *const ::qt_core::string::String, size: *const ::qt_core::size::Size, mode: *const ::icon::Mode, state: *const ::icon::State);
  pub fn qt_gui_c_QIconEngine_addPixmap(this_ptr: *mut ::icon_engine::IconEngine, pixmap: *const ::pixmap::Pixmap, mode: *const ::icon::Mode, state: *const ::icon::State);
  pub fn qt_gui_c_QIconEngine_availableSizes_to_output_mode(this_ptr: *const ::icon_engine::IconEngine, mode: *const ::icon::Mode, output: *mut ::list::ListQtCoreSize);
  pub fn qt_gui_c_QIconEngine_availableSizes_to_output_mode_state(this_ptr: *const ::icon_engine::IconEngine, mode: *const ::icon::Mode, state: *const ::icon::State, output: *mut ::list::ListQtCoreSize);
  pub fn qt_gui_c_QIconEngine_availableSizes_to_output_no_args(this_ptr: *const ::icon_engine::IconEngine, output: *mut ::list::ListQtCoreSize);
  pub fn qt_gui_c_QIconEngine_clone(this_ptr: *const ::icon_engine::IconEngine) -> *mut ::icon_engine::IconEngine;
  pub fn qt_gui_c_QIconEngine_delete(this_ptr: *mut ::icon_engine::IconEngine);
  pub fn qt_gui_c_QIconEngine_iconName_to_output(this_ptr: *const ::icon_engine::IconEngine, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QIconEngine_isNull(this_ptr: *const ::icon_engine::IconEngine) -> bool;
  pub fn qt_gui_c_QIconEngine_key_to_output(this_ptr: *const ::icon_engine::IconEngine, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QIconEngine_paint(this_ptr: *mut ::icon_engine::IconEngine, painter: *mut ::painter::Painter, rect: *const ::qt_core::rect::Rect, mode: *const ::icon::Mode, state: *const ::icon::State);
  pub fn qt_gui_c_QIconEngine_pixmap_as_ptr(this_ptr: *mut ::icon_engine::IconEngine, size: *const ::qt_core::size::Size, mode: *const ::icon::Mode, state: *const ::icon::State) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QIconEngine_read(this_ptr: *mut ::icon_engine::IconEngine, in_: *mut ::qt_core::data_stream::DataStream) -> bool;
  pub fn qt_gui_c_QIconEngine_scaledPixmap_as_ptr(this_ptr: *mut ::icon_engine::IconEngine, size: *const ::qt_core::size::Size, mode: *const ::icon::Mode, state: *const ::icon::State, scale: ::libc::c_double) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QIconEngine_virtual_hook(this_ptr: *mut ::icon_engine::IconEngine, id: ::libc::c_int, data: *mut ::libc::c_void);
  pub fn qt_gui_c_QIconEngine_write(this_ptr: *const ::icon_engine::IconEngine, out: *mut ::qt_core::data_stream::DataStream) -> bool;

  // Header: QIconEnginePlugin
  pub fn qt_gui_c_QIconEnginePlugin_G_static_cast_QIconEnginePlugin_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::icon_engine_plugin::IconEnginePlugin;
  pub fn qt_gui_c_QIconEnginePlugin_G_static_cast_QObject_ptr(ptr: *mut ::icon_engine_plugin::IconEnginePlugin) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QIconEnginePlugin_create_filename(this_ptr: *mut ::icon_engine_plugin::IconEnginePlugin, filename: *const ::qt_core::string::String) -> *mut ::icon_engine::IconEngine;
  pub fn qt_gui_c_QIconEnginePlugin_create_no_args(this_ptr: *mut ::icon_engine_plugin::IconEnginePlugin) -> *mut ::icon_engine::IconEngine;
  pub fn qt_gui_c_QIconEnginePlugin_delete(this_ptr: *mut ::icon_engine_plugin::IconEnginePlugin);
  pub fn qt_gui_c_QIconEnginePlugin_metaObject(this_ptr: *const ::icon_engine_plugin::IconEnginePlugin) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QIconEnginePlugin_qt_metacall(this_ptr: *mut ::icon_engine_plugin::IconEnginePlugin, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QIconEnginePlugin_qt_metacast(this_ptr: *mut ::icon_engine_plugin::IconEnginePlugin, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QIconEnginePlugin_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QIconEnginePlugin_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QImage
  pub fn qt_gui_c_QImage_G_dynamic_cast_QImage_ptr(ptr: *mut ::paint_device::PaintDevice) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_G_operator_shl(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *const ::image::Image) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QImage_G_operator_shl_to_output(arg1: *const ::qt_core::debug::Debug, arg2: *const ::image::Image, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QImage_G_operator_shr(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *mut ::image::Image) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QImage_G_static_cast_QImage_ptr(ptr: *mut ::paint_device::PaintDevice) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_G_static_cast_QPaintDevice_ptr(ptr: *mut ::image::Image) -> *mut ::paint_device::PaintDevice;
  pub fn qt_gui_c_QImage_G_swap(value1: *mut ::image::Image, value2: *mut ::image::Image);
  pub fn qt_gui_c_QImage_allGray(this_ptr: *const ::image::Image) -> bool;
  pub fn qt_gui_c_QImage_alphaChannel_as_ptr(this_ptr: *const ::image::Image) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_bitPlaneCount(this_ptr: *const ::image::Image) -> ::libc::c_int;
  pub fn qt_gui_c_QImage_bits(this_ptr: *mut ::image::Image) -> *mut ::libc::c_uchar;
  pub fn qt_gui_c_QImage_bits_const(this_ptr: *const ::image::Image) -> *const ::libc::c_uchar;
  pub fn qt_gui_c_QImage_byteCount(this_ptr: *const ::image::Image) -> ::libc::c_int;
  pub fn qt_gui_c_QImage_bytesPerLine(this_ptr: *const ::image::Image) -> ::libc::c_int;
  pub fn qt_gui_c_QImage_cacheKey(this_ptr: *const ::image::Image) -> i64;
  pub fn qt_gui_c_QImage_color(this_ptr: *const ::image::Image, i: ::libc::c_int) -> ::libc::c_uint;
  pub fn qt_gui_c_QImage_colorCount(this_ptr: *const ::image::Image) -> ::libc::c_int;
  pub fn qt_gui_c_QImage_colorTable_to_output(this_ptr: *const ::image::Image, output: *mut ::qt_core::vector::VectorCUint);
  pub fn qt_gui_c_QImage_constBits(this_ptr: *const ::image::Image) -> *const ::libc::c_uchar;
  pub fn qt_gui_c_QImage_constScanLine(this_ptr: *const ::image::Image, arg1: ::libc::c_int) -> *const ::libc::c_uchar;
  pub fn qt_gui_c_QImage_convert_to_QVariant_to_output(this_ptr: *const ::image::Image, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QImage_copy_as_ptr_no_args(this_ptr: *const ::image::Image) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_copy_as_ptr_rect(this_ptr: *const ::image::Image, rect: *const ::qt_core::rect::Rect) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_copy_as_ptr_x_y_w_h(this_ptr: *const ::image::Image, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_createHeuristicMask_as_ptr_clipTight(this_ptr: *const ::image::Image, clipTight: bool) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_createHeuristicMask_as_ptr_no_args(this_ptr: *const ::image::Image) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_createMaskFromColor_as_ptr_color(this_ptr: *const ::image::Image, color: ::libc::c_uint) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_createMaskFromColor_as_ptr_color_mode(this_ptr: *const ::image::Image, color: ::libc::c_uint, mode: *const ::qt_core::qt::MaskMode) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_delete(this_ptr: *mut ::image::Image);
  pub fn qt_gui_c_QImage_depth(this_ptr: *const ::image::Image) -> ::libc::c_int;
  pub fn qt_gui_c_QImage_detach(this_ptr: *mut ::image::Image);
  pub fn qt_gui_c_QImage_devType(this_ptr: *const ::image::Image) -> ::libc::c_int;
  pub fn qt_gui_c_QImage_devicePixelRatio(this_ptr: *const ::image::Image) -> ::libc::c_double;
  pub fn qt_gui_c_QImage_dotsPerMeterX(this_ptr: *const ::image::Image) -> ::libc::c_int;
  pub fn qt_gui_c_QImage_dotsPerMeterY(this_ptr: *const ::image::Image) -> ::libc::c_int;
  pub fn qt_gui_c_QImage_fill_QColor(this_ptr: *mut ::image::Image, color: *const ::color::Color);
  pub fn qt_gui_c_QImage_fill_Qt_GlobalColor(this_ptr: *mut ::image::Image, color: *const ::qt_core::qt::GlobalColor);
  pub fn qt_gui_c_QImage_fill_unsigned_int(this_ptr: *mut ::image::Image, pixel: ::libc::c_uint);
  pub fn qt_gui_c_QImage_format(this_ptr: *const ::image::Image) -> ::image::Format;
  pub fn qt_gui_c_QImage_fromData_as_ptr_data(data: *const ::qt_core::byte_array::ByteArray) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_fromData_as_ptr_data_format(data: *const ::qt_core::byte_array::ByteArray, format: *const ::libc::c_char) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_fromData_as_ptr_data_size(data: *const ::libc::c_uchar, size: ::libc::c_int) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_fromData_as_ptr_data_size_format(data: *const ::libc::c_uchar, size: ::libc::c_int, format: *const ::libc::c_char) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_hasAlphaChannel(this_ptr: *const ::image::Image) -> bool;
  pub fn qt_gui_c_QImage_height(this_ptr: *const ::image::Image) -> ::libc::c_int;
  pub fn qt_gui_c_QImage_invertPixels_arg1(this_ptr: *mut ::image::Image, arg1: ::image::InvertMode);
  pub fn qt_gui_c_QImage_invertPixels_no_args(this_ptr: *mut ::image::Image);
  pub fn qt_gui_c_QImage_isDetached(this_ptr: *const ::image::Image) -> bool;
  pub fn qt_gui_c_QImage_isGrayscale(this_ptr: *const ::image::Image) -> bool;
  pub fn qt_gui_c_QImage_isNull(this_ptr: *const ::image::Image) -> bool;
  pub fn qt_gui_c_QImage_loadFromData_buf_len(this_ptr: *mut ::image::Image, buf: *const ::libc::c_uchar, len: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QImage_loadFromData_buf_len_format(this_ptr: *mut ::image::Image, buf: *const ::libc::c_uchar, len: ::libc::c_int, format: *const ::libc::c_char) -> bool;
  pub fn qt_gui_c_QImage_loadFromData_data(this_ptr: *mut ::image::Image, data: *const ::qt_core::byte_array::ByteArray) -> bool;
  pub fn qt_gui_c_QImage_loadFromData_data_aformat(this_ptr: *mut ::image::Image, data: *const ::qt_core::byte_array::ByteArray, aformat: *const ::libc::c_char) -> bool;
  pub fn qt_gui_c_QImage_load_device_format(this_ptr: *mut ::image::Image, device: *mut ::qt_core::io_device::IODevice, format: *const ::libc::c_char) -> bool;
  pub fn qt_gui_c_QImage_load_fileName(this_ptr: *mut ::image::Image, fileName: *const ::qt_core::string::String) -> bool;
  pub fn qt_gui_c_QImage_load_fileName_format(this_ptr: *mut ::image::Image, fileName: *const ::qt_core::string::String, format: *const ::libc::c_char) -> bool;
  pub fn qt_gui_c_QImage_mirrored_as_ptr_horizontally(this_ptr: *const ::image::Image, horizontally: bool) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_mirrored_as_ptr_horizontally_vertically(this_ptr: *const ::image::Image, horizontally: bool, vertically: bool) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_mirrored_as_ptr_no_args(this_ptr: *const ::image::Image) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_new_const_QImage_ref(arg1: *const ::image::Image) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_new_const_QSize_ref_QImage_Format(size: *const ::qt_core::size::Size, format: ::image::Format) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_new_const_QString_ref(fileName: *const ::qt_core::string::String) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_new_const_QString_ref_const_char_ptr(fileName: *const ::qt_core::string::String, format: *const ::libc::c_char) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_new_const_unsigned_char_ptr_int_int_QImage_Format(data: *const ::libc::c_uchar, width: ::libc::c_int, height: ::libc::c_int, format: ::image::Format) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_new_const_unsigned_char_ptr_int_int_QImage_Format_void_func_void_ptr(data: *const ::libc::c_uchar, width: ::libc::c_int, height: ::libc::c_int, format: ::image::Format, cleanupFunction: extern "C" fn(*mut ::libc::c_void)) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_new_const_unsigned_char_ptr_int_int_QImage_Format_void_func_void_ptr_void_ptr(data: *const ::libc::c_uchar, width: ::libc::c_int, height: ::libc::c_int, format: ::image::Format, cleanupFunction: extern "C" fn(*mut ::libc::c_void), cleanupInfo: *mut ::libc::c_void) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_new_const_unsigned_char_ptr_int_int_int_QImage_Format(data: *const ::libc::c_uchar, width: ::libc::c_int, height: ::libc::c_int, bytesPerLine: ::libc::c_int, format: ::image::Format) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_new_const_unsigned_char_ptr_int_int_int_QImage_Format_void_func_void_ptr(data: *const ::libc::c_uchar, width: ::libc::c_int, height: ::libc::c_int, bytesPerLine: ::libc::c_int, format: ::image::Format, cleanupFunction: extern "C" fn(*mut ::libc::c_void)) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_new_const_unsigned_char_ptr_int_int_int_QImage_Format_void_func_void_ptr_void_ptr(data: *const ::libc::c_uchar, width: ::libc::c_int, height: ::libc::c_int, bytesPerLine: ::libc::c_int, format: ::image::Format, cleanupFunction: extern "C" fn(*mut ::libc::c_void), cleanupInfo: *mut ::libc::c_void) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_new_int_int_QImage_Format(width: ::libc::c_int, height: ::libc::c_int, format: ::image::Format) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_new_no_args() -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_new_unsigned_char_ptr_int_int_QImage_Format(data: *mut ::libc::c_uchar, width: ::libc::c_int, height: ::libc::c_int, format: ::image::Format) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_new_unsigned_char_ptr_int_int_QImage_Format_void_func_void_ptr(data: *mut ::libc::c_uchar, width: ::libc::c_int, height: ::libc::c_int, format: ::image::Format, cleanupFunction: extern "C" fn(*mut ::libc::c_void)) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_new_unsigned_char_ptr_int_int_QImage_Format_void_func_void_ptr_void_ptr(data: *mut ::libc::c_uchar, width: ::libc::c_int, height: ::libc::c_int, format: ::image::Format, cleanupFunction: extern "C" fn(*mut ::libc::c_void), cleanupInfo: *mut ::libc::c_void) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_new_unsigned_char_ptr_int_int_int_QImage_Format(data: *mut ::libc::c_uchar, width: ::libc::c_int, height: ::libc::c_int, bytesPerLine: ::libc::c_int, format: ::image::Format) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_new_unsigned_char_ptr_int_int_int_QImage_Format_void_func_void_ptr(data: *mut ::libc::c_uchar, width: ::libc::c_int, height: ::libc::c_int, bytesPerLine: ::libc::c_int, format: ::image::Format, cleanupFunction: extern "C" fn(*mut ::libc::c_void)) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_new_unsigned_char_ptr_int_int_int_QImage_Format_void_func_void_ptr_void_ptr(data: *mut ::libc::c_uchar, width: ::libc::c_int, height: ::libc::c_int, bytesPerLine: ::libc::c_int, format: ::image::Format, cleanupFunction: extern "C" fn(*mut ::libc::c_void), cleanupInfo: *mut ::libc::c_void) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_offset_to_output(this_ptr: *const ::image::Image, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QImage_operator_assign(this_ptr: *mut ::image::Image, arg1: *const ::image::Image) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_operator_eq(this_ptr: *const ::image::Image, arg1: *const ::image::Image) -> bool;
  pub fn qt_gui_c_QImage_operator_neq(this_ptr: *const ::image::Image, arg1: *const ::image::Image) -> bool;
  pub fn qt_gui_c_QImage_paintEngine(this_ptr: *const ::image::Image) -> *mut ::paint_engine::PaintEngine;
  pub fn qt_gui_c_QImage_pixelColor_to_output_pt(this_ptr: *const ::image::Image, pt: *const ::qt_core::point::Point, output: *mut ::color::Color);
  pub fn qt_gui_c_QImage_pixelColor_to_output_x_y(this_ptr: *const ::image::Image, x: ::libc::c_int, y: ::libc::c_int, output: *mut ::color::Color);
  pub fn qt_gui_c_QImage_pixelFormat_to_output(this_ptr: *const ::image::Image, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QImage_pixelIndex_pt(this_ptr: *const ::image::Image, pt: *const ::qt_core::point::Point) -> ::libc::c_int;
  pub fn qt_gui_c_QImage_pixelIndex_x_y(this_ptr: *const ::image::Image, x: ::libc::c_int, y: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QImage_pixel_pt(this_ptr: *const ::image::Image, pt: *const ::qt_core::point::Point) -> ::libc::c_uint;
  pub fn qt_gui_c_QImage_pixel_x_y(this_ptr: *const ::image::Image, x: ::libc::c_int, y: ::libc::c_int) -> ::libc::c_uint;
  pub fn qt_gui_c_QImage_rect_to_output(this_ptr: *const ::image::Image, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QImage_reinterpretAsFormat(this_ptr: *mut ::image::Image, f: ::image::Format) -> bool;
  pub fn qt_gui_c_QImage_rgbSwapped_as_ptr(this_ptr: *const ::image::Image) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_save_device(this_ptr: *const ::image::Image, device: *mut ::qt_core::io_device::IODevice) -> bool;
  pub fn qt_gui_c_QImage_save_device_format(this_ptr: *const ::image::Image, device: *mut ::qt_core::io_device::IODevice, format: *const ::libc::c_char) -> bool;
  pub fn qt_gui_c_QImage_save_device_format_quality(this_ptr: *const ::image::Image, device: *mut ::qt_core::io_device::IODevice, format: *const ::libc::c_char, quality: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QImage_save_fileName(this_ptr: *const ::image::Image, fileName: *const ::qt_core::string::String) -> bool;
  pub fn qt_gui_c_QImage_save_fileName_format(this_ptr: *const ::image::Image, fileName: *const ::qt_core::string::String, format: *const ::libc::c_char) -> bool;
  pub fn qt_gui_c_QImage_save_fileName_format_quality(this_ptr: *const ::image::Image, fileName: *const ::qt_core::string::String, format: *const ::libc::c_char, quality: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QImage_scaledToHeight_as_ptr_h(this_ptr: *const ::image::Image, h: ::libc::c_int) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_scaledToHeight_as_ptr_h_mode(this_ptr: *const ::image::Image, h: ::libc::c_int, mode: *const ::qt_core::qt::TransformationMode) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_scaledToWidth_as_ptr_w(this_ptr: *const ::image::Image, w: ::libc::c_int) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_scaledToWidth_as_ptr_w_mode(this_ptr: *const ::image::Image, w: ::libc::c_int, mode: *const ::qt_core::qt::TransformationMode) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_scaled_as_ptr_s(this_ptr: *const ::image::Image, s: *const ::qt_core::size::Size) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_scaled_as_ptr_s_aspectMode(this_ptr: *const ::image::Image, s: *const ::qt_core::size::Size, aspectMode: *const ::qt_core::qt::AspectRatioMode) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_scaled_as_ptr_s_aspectMode_mode(this_ptr: *const ::image::Image, s: *const ::qt_core::size::Size, aspectMode: *const ::qt_core::qt::AspectRatioMode, mode: *const ::qt_core::qt::TransformationMode) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_scaled_as_ptr_w_h(this_ptr: *const ::image::Image, w: ::libc::c_int, h: ::libc::c_int) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_scaled_as_ptr_w_h_aspectMode(this_ptr: *const ::image::Image, w: ::libc::c_int, h: ::libc::c_int, aspectMode: *const ::qt_core::qt::AspectRatioMode) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_scaled_as_ptr_w_h_aspectMode_mode(this_ptr: *const ::image::Image, w: ::libc::c_int, h: ::libc::c_int, aspectMode: *const ::qt_core::qt::AspectRatioMode, mode: *const ::qt_core::qt::TransformationMode) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_scanLine(this_ptr: *mut ::image::Image, arg1: ::libc::c_int) -> *mut ::libc::c_uchar;
  pub fn qt_gui_c_QImage_scanLine_const(this_ptr: *const ::image::Image, arg1: ::libc::c_int) -> *const ::libc::c_uchar;
  pub fn qt_gui_c_QImage_setAlphaChannel(this_ptr: *mut ::image::Image, alphaChannel: *const ::image::Image);
  pub fn qt_gui_c_QImage_setColor(this_ptr: *mut ::image::Image, i: ::libc::c_int, c: ::libc::c_uint);
  pub fn qt_gui_c_QImage_setColorCount(this_ptr: *mut ::image::Image, arg1: ::libc::c_int);
  pub fn qt_gui_c_QImage_setColorTable(this_ptr: *mut ::image::Image, colors: *const ::qt_core::vector::VectorCUint);
  pub fn qt_gui_c_QImage_setDevicePixelRatio(this_ptr: *mut ::image::Image, scaleFactor: ::libc::c_double);
  pub fn qt_gui_c_QImage_setDotsPerMeterX(this_ptr: *mut ::image::Image, arg1: ::libc::c_int);
  pub fn qt_gui_c_QImage_setDotsPerMeterY(this_ptr: *mut ::image::Image, arg1: ::libc::c_int);
  pub fn qt_gui_c_QImage_setOffset(this_ptr: *mut ::image::Image, arg1: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QImage_setPixelColor_pt_c(this_ptr: *mut ::image::Image, pt: *const ::qt_core::point::Point, c: *const ::color::Color);
  pub fn qt_gui_c_QImage_setPixelColor_x_y_c(this_ptr: *mut ::image::Image, x: ::libc::c_int, y: ::libc::c_int, c: *const ::color::Color);
  pub fn qt_gui_c_QImage_setPixel_pt_index_or_rgb(this_ptr: *mut ::image::Image, pt: *const ::qt_core::point::Point, index_or_rgb: ::libc::c_uint);
  pub fn qt_gui_c_QImage_setPixel_x_y_index_or_rgb(this_ptr: *mut ::image::Image, x: ::libc::c_int, y: ::libc::c_int, index_or_rgb: ::libc::c_uint);
  pub fn qt_gui_c_QImage_setText(this_ptr: *mut ::image::Image, key: *const ::qt_core::string::String, value: *const ::qt_core::string::String);
  pub fn qt_gui_c_QImage_size_to_output(this_ptr: *const ::image::Image, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QImage_swap(this_ptr: *mut ::image::Image, other: *mut ::image::Image);
  pub fn qt_gui_c_QImage_textKeys_to_output(this_ptr: *const ::image::Image, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QImage_text_to_output_key(this_ptr: *const ::image::Image, key: *const ::qt_core::string::String, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QImage_text_to_output_no_args(this_ptr: *const ::image::Image, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QImage_toPixelFormat_to_output(format: *const ::image::Format, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QImage_transformed_as_ptr_QMatrix(this_ptr: *const ::image::Image, matrix: *const ::matrix::Matrix) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_transformed_as_ptr_QMatrix_Qt_TransformationMode(this_ptr: *const ::image::Image, matrix: *const ::matrix::Matrix, mode: *const ::qt_core::qt::TransformationMode) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_transformed_as_ptr_QTransform(this_ptr: *const ::image::Image, matrix: *const ::transform::Transform) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_transformed_as_ptr_QTransform_Qt_TransformationMode(this_ptr: *const ::image::Image, matrix: *const ::transform::Transform, mode: *const ::qt_core::qt::TransformationMode) -> *mut ::image::Image;
  pub fn qt_gui_c_QImage_trueMatrix_to_output_QMatrix_int_int(arg1: *const ::matrix::Matrix, w: ::libc::c_int, h: ::libc::c_int, output: *mut ::matrix::Matrix);
  pub fn qt_gui_c_QImage_trueMatrix_to_output_QTransform_int_int(arg1: *const ::transform::Transform, w: ::libc::c_int, h: ::libc::c_int, output: *mut ::transform::Transform);
  pub fn qt_gui_c_QImage_valid_pt(this_ptr: *const ::image::Image, pt: *const ::qt_core::point::Point) -> bool;
  pub fn qt_gui_c_QImage_valid_x_y(this_ptr: *const ::image::Image, x: ::libc::c_int, y: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QImage_width(this_ptr: *const ::image::Image) -> ::libc::c_int;

  // Header: QImageIOHandler
  pub fn qt_gui_c_QImageIOHandler_canRead(this_ptr: *const ::image_io_handler::ImageIOHandler) -> bool;
  pub fn qt_gui_c_QImageIOHandler_currentImageNumber(this_ptr: *const ::image_io_handler::ImageIOHandler) -> ::libc::c_int;
  pub fn qt_gui_c_QImageIOHandler_currentImageRect_to_output(this_ptr: *const ::image_io_handler::ImageIOHandler, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QImageIOHandler_delete(this_ptr: *mut ::image_io_handler::ImageIOHandler);
  pub fn qt_gui_c_QImageIOHandler_device(this_ptr: *const ::image_io_handler::ImageIOHandler) -> *mut ::qt_core::io_device::IODevice;
  pub fn qt_gui_c_QImageIOHandler_format_to_output(this_ptr: *const ::image_io_handler::ImageIOHandler, output: *mut ::qt_core::byte_array::ByteArray);
  pub fn qt_gui_c_QImageIOHandler_imageCount(this_ptr: *const ::image_io_handler::ImageIOHandler) -> ::libc::c_int;
  pub fn qt_gui_c_QImageIOHandler_jumpToImage(this_ptr: *mut ::image_io_handler::ImageIOHandler, imageNumber: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QImageIOHandler_jumpToNextImage(this_ptr: *mut ::image_io_handler::ImageIOHandler) -> bool;
  pub fn qt_gui_c_QImageIOHandler_loopCount(this_ptr: *const ::image_io_handler::ImageIOHandler) -> ::libc::c_int;
  pub fn qt_gui_c_QImageIOHandler_name_to_output(this_ptr: *const ::image_io_handler::ImageIOHandler, output: *mut ::qt_core::byte_array::ByteArray);
  pub fn qt_gui_c_QImageIOHandler_nextImageDelay(this_ptr: *const ::image_io_handler::ImageIOHandler) -> ::libc::c_int;
  pub fn qt_gui_c_QImageIOHandler_option_to_output(this_ptr: *const ::image_io_handler::ImageIOHandler, option: ::image_io_handler::ImageOption, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QImageIOHandler_read(this_ptr: *mut ::image_io_handler::ImageIOHandler, image: *mut ::image::Image) -> bool;
  pub fn qt_gui_c_QImageIOHandler_setDevice(this_ptr: *mut ::image_io_handler::ImageIOHandler, device: *mut ::qt_core::io_device::IODevice);
  pub fn qt_gui_c_QImageIOHandler_setFormat(this_ptr: *mut ::image_io_handler::ImageIOHandler, format: *const ::qt_core::byte_array::ByteArray);
  pub fn qt_gui_c_QImageIOHandler_setFormat_const(this_ptr: *const ::image_io_handler::ImageIOHandler, format: *const ::qt_core::byte_array::ByteArray);
  pub fn qt_gui_c_QImageIOHandler_setOption(this_ptr: *mut ::image_io_handler::ImageIOHandler, option: ::image_io_handler::ImageOption, value: *const ::qt_core::variant::Variant);
  pub fn qt_gui_c_QImageIOHandler_supportsOption(this_ptr: *const ::image_io_handler::ImageIOHandler, option: ::image_io_handler::ImageOption) -> bool;
  pub fn qt_gui_c_QImageIOHandler_write(this_ptr: *mut ::image_io_handler::ImageIOHandler, image: *const ::image::Image) -> bool;

  // Header: QImageIOPlugin
  pub fn qt_gui_c_QImageIOPlugin_G_static_cast_QImageIOPlugin_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::image_io_plugin::ImageIOPlugin;
  pub fn qt_gui_c_QImageIOPlugin_G_static_cast_QObject_ptr(ptr: *mut ::image_io_plugin::ImageIOPlugin) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QImageIOPlugin_capabilities(this_ptr: *const ::image_io_plugin::ImageIOPlugin, device: *mut ::qt_core::io_device::IODevice, format: *const ::qt_core::byte_array::ByteArray) -> ::libc::c_uint;
  pub fn qt_gui_c_QImageIOPlugin_create_device(this_ptr: *const ::image_io_plugin::ImageIOPlugin, device: *mut ::qt_core::io_device::IODevice) -> *mut ::image_io_handler::ImageIOHandler;
  pub fn qt_gui_c_QImageIOPlugin_create_device_format(this_ptr: *const ::image_io_plugin::ImageIOPlugin, device: *mut ::qt_core::io_device::IODevice, format: *const ::qt_core::byte_array::ByteArray) -> *mut ::image_io_handler::ImageIOHandler;
  pub fn qt_gui_c_QImageIOPlugin_delete(this_ptr: *mut ::image_io_plugin::ImageIOPlugin);
  pub fn qt_gui_c_QImageIOPlugin_metaObject(this_ptr: *const ::image_io_plugin::ImageIOPlugin) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QImageIOPlugin_qt_metacall(this_ptr: *mut ::image_io_plugin::ImageIOPlugin, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QImageIOPlugin_qt_metacast(this_ptr: *mut ::image_io_plugin::ImageIOPlugin, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QImageIOPlugin_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QImageIOPlugin_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QImageReader
  pub fn qt_gui_c_QImageReader_autoDetectImageFormat(this_ptr: *const ::image_reader::ImageReader) -> bool;
  pub fn qt_gui_c_QImageReader_autoTransform(this_ptr: *const ::image_reader::ImageReader) -> bool;
  pub fn qt_gui_c_QImageReader_backgroundColor_to_output(this_ptr: *const ::image_reader::ImageReader, output: *mut ::color::Color);
  pub fn qt_gui_c_QImageReader_canRead(this_ptr: *const ::image_reader::ImageReader) -> bool;
  pub fn qt_gui_c_QImageReader_clipRect_to_output(this_ptr: *const ::image_reader::ImageReader, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QImageReader_constructor_device(device: *mut ::qt_core::io_device::IODevice, output: *mut ::image_reader::ImageReader);
  pub fn qt_gui_c_QImageReader_constructor_device_format(device: *mut ::qt_core::io_device::IODevice, format: *const ::qt_core::byte_array::ByteArray, output: *mut ::image_reader::ImageReader);
  pub fn qt_gui_c_QImageReader_constructor_fileName(fileName: *const ::qt_core::string::String, output: *mut ::image_reader::ImageReader);
  pub fn qt_gui_c_QImageReader_constructor_fileName_format(fileName: *const ::qt_core::string::String, format: *const ::qt_core::byte_array::ByteArray, output: *mut ::image_reader::ImageReader);
  pub fn qt_gui_c_QImageReader_constructor_no_args(output: *mut ::image_reader::ImageReader);
  pub fn qt_gui_c_QImageReader_currentImageNumber(this_ptr: *const ::image_reader::ImageReader) -> ::libc::c_int;
  pub fn qt_gui_c_QImageReader_currentImageRect_to_output(this_ptr: *const ::image_reader::ImageReader, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QImageReader_decideFormatFromContent(this_ptr: *const ::image_reader::ImageReader) -> bool;
  pub fn qt_gui_c_QImageReader_destructor(this_ptr: *mut ::image_reader::ImageReader);
  pub fn qt_gui_c_QImageReader_device(this_ptr: *const ::image_reader::ImageReader) -> *mut ::qt_core::io_device::IODevice;
  pub fn qt_gui_c_QImageReader_error(this_ptr: *const ::image_reader::ImageReader) -> ::image_reader::ImageReaderError;
  pub fn qt_gui_c_QImageReader_errorString_to_output(this_ptr: *const ::image_reader::ImageReader, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QImageReader_fileName_to_output(this_ptr: *const ::image_reader::ImageReader, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QImageReader_format_to_output(this_ptr: *const ::image_reader::ImageReader, output: *mut ::qt_core::byte_array::ByteArray);
  pub fn qt_gui_c_QImageReader_gamma(this_ptr: *const ::image_reader::ImageReader) -> ::libc::c_float;
  pub fn qt_gui_c_QImageReader_imageCount(this_ptr: *const ::image_reader::ImageReader) -> ::libc::c_int;
  pub fn qt_gui_c_QImageReader_imageFormat_to_output_device(device: *mut ::qt_core::io_device::IODevice, output: *mut ::qt_core::byte_array::ByteArray);
  pub fn qt_gui_c_QImageReader_imageFormat_to_output_fileName(fileName: *const ::qt_core::string::String, output: *mut ::qt_core::byte_array::ByteArray);
  pub fn qt_gui_c_QImageReader_jumpToImage(this_ptr: *mut ::image_reader::ImageReader, imageNumber: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QImageReader_jumpToNextImage(this_ptr: *mut ::image_reader::ImageReader) -> bool;
  pub fn qt_gui_c_QImageReader_loopCount(this_ptr: *const ::image_reader::ImageReader) -> ::libc::c_int;
  pub fn qt_gui_c_QImageReader_nextImageDelay(this_ptr: *const ::image_reader::ImageReader) -> ::libc::c_int;
  pub fn qt_gui_c_QImageReader_quality(this_ptr: *const ::image_reader::ImageReader) -> ::libc::c_int;
  pub fn qt_gui_c_QImageReader_read(this_ptr: *mut ::image_reader::ImageReader, image: *mut ::image::Image) -> bool;
  pub fn qt_gui_c_QImageReader_read_as_ptr(this_ptr: *mut ::image_reader::ImageReader) -> *mut ::image::Image;
  pub fn qt_gui_c_QImageReader_scaledClipRect_to_output(this_ptr: *const ::image_reader::ImageReader, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QImageReader_scaledSize_to_output(this_ptr: *const ::image_reader::ImageReader, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QImageReader_setAutoDetectImageFormat(this_ptr: *mut ::image_reader::ImageReader, enabled: bool);
  pub fn qt_gui_c_QImageReader_setAutoTransform(this_ptr: *mut ::image_reader::ImageReader, enabled: bool);
  pub fn qt_gui_c_QImageReader_setBackgroundColor(this_ptr: *mut ::image_reader::ImageReader, color: *const ::color::Color);
  pub fn qt_gui_c_QImageReader_setClipRect(this_ptr: *mut ::image_reader::ImageReader, rect: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QImageReader_setDecideFormatFromContent(this_ptr: *mut ::image_reader::ImageReader, ignored: bool);
  pub fn qt_gui_c_QImageReader_setDevice(this_ptr: *mut ::image_reader::ImageReader, device: *mut ::qt_core::io_device::IODevice);
  pub fn qt_gui_c_QImageReader_setFileName(this_ptr: *mut ::image_reader::ImageReader, fileName: *const ::qt_core::string::String);
  pub fn qt_gui_c_QImageReader_setFormat(this_ptr: *mut ::image_reader::ImageReader, format: *const ::qt_core::byte_array::ByteArray);
  pub fn qt_gui_c_QImageReader_setGamma(this_ptr: *mut ::image_reader::ImageReader, gamma: ::libc::c_float);
  pub fn qt_gui_c_QImageReader_setQuality(this_ptr: *mut ::image_reader::ImageReader, quality: ::libc::c_int);
  pub fn qt_gui_c_QImageReader_setScaledClipRect(this_ptr: *mut ::image_reader::ImageReader, rect: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QImageReader_setScaledSize(this_ptr: *mut ::image_reader::ImageReader, size: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QImageReader_size_to_output(this_ptr: *const ::image_reader::ImageReader, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QImageReader_subType_to_output(this_ptr: *const ::image_reader::ImageReader, output: *mut ::qt_core::byte_array::ByteArray);
  pub fn qt_gui_c_QImageReader_supportedImageFormats_to_output(output: *mut ::qt_core::list::ListByteArray);
  pub fn qt_gui_c_QImageReader_supportedMimeTypes_to_output(output: *mut ::qt_core::list::ListByteArray);
  pub fn qt_gui_c_QImageReader_supportedSubTypes_to_output(this_ptr: *const ::image_reader::ImageReader, output: *mut ::qt_core::list::ListByteArray);
  pub fn qt_gui_c_QImageReader_supportsAnimation(this_ptr: *const ::image_reader::ImageReader) -> bool;
  pub fn qt_gui_c_QImageReader_supportsOption(this_ptr: *const ::image_reader::ImageReader, option: *const ::image_io_handler::ImageOption) -> bool;
  pub fn qt_gui_c_QImageReader_textKeys_to_output(this_ptr: *const ::image_reader::ImageReader, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QImageReader_text_to_output(this_ptr: *const ::image_reader::ImageReader, key: *const ::qt_core::string::String, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QImageReader_trUtf8_to_output(sourceText: *const ::libc::c_char, disambiguation: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QImageReader_tr_to_output(sourceText: *const ::libc::c_char, disambiguation: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QImageWriter
  pub fn qt_gui_c_QImageWriter_canWrite(this_ptr: *const ::image_writer::ImageWriter) -> bool;
  pub fn qt_gui_c_QImageWriter_compression(this_ptr: *const ::image_writer::ImageWriter) -> ::libc::c_int;
  pub fn qt_gui_c_QImageWriter_delete(this_ptr: *mut ::image_writer::ImageWriter);
  pub fn qt_gui_c_QImageWriter_description_to_output(this_ptr: *const ::image_writer::ImageWriter, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QImageWriter_device(this_ptr: *const ::image_writer::ImageWriter) -> *mut ::qt_core::io_device::IODevice;
  pub fn qt_gui_c_QImageWriter_error(this_ptr: *const ::image_writer::ImageWriter) -> ::image_writer::ImageWriterError;
  pub fn qt_gui_c_QImageWriter_errorString_to_output(this_ptr: *const ::image_writer::ImageWriter, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QImageWriter_fileName_to_output(this_ptr: *const ::image_writer::ImageWriter, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QImageWriter_format_to_output(this_ptr: *const ::image_writer::ImageWriter, output: *mut ::qt_core::byte_array::ByteArray);
  pub fn qt_gui_c_QImageWriter_gamma(this_ptr: *const ::image_writer::ImageWriter) -> ::libc::c_float;
  pub fn qt_gui_c_QImageWriter_new_device_format(device: *mut ::qt_core::io_device::IODevice, format: *const ::qt_core::byte_array::ByteArray) -> *mut ::image_writer::ImageWriter;
  pub fn qt_gui_c_QImageWriter_new_fileName(fileName: *const ::qt_core::string::String) -> *mut ::image_writer::ImageWriter;
  pub fn qt_gui_c_QImageWriter_new_fileName_format(fileName: *const ::qt_core::string::String, format: *const ::qt_core::byte_array::ByteArray) -> *mut ::image_writer::ImageWriter;
  pub fn qt_gui_c_QImageWriter_new_no_args() -> *mut ::image_writer::ImageWriter;
  pub fn qt_gui_c_QImageWriter_optimizedWrite(this_ptr: *const ::image_writer::ImageWriter) -> bool;
  pub fn qt_gui_c_QImageWriter_progressiveScanWrite(this_ptr: *const ::image_writer::ImageWriter) -> bool;
  pub fn qt_gui_c_QImageWriter_quality(this_ptr: *const ::image_writer::ImageWriter) -> ::libc::c_int;
  pub fn qt_gui_c_QImageWriter_setCompression(this_ptr: *mut ::image_writer::ImageWriter, compression: ::libc::c_int);
  pub fn qt_gui_c_QImageWriter_setDescription(this_ptr: *mut ::image_writer::ImageWriter, description: *const ::qt_core::string::String);
  pub fn qt_gui_c_QImageWriter_setDevice(this_ptr: *mut ::image_writer::ImageWriter, device: *mut ::qt_core::io_device::IODevice);
  pub fn qt_gui_c_QImageWriter_setFileName(this_ptr: *mut ::image_writer::ImageWriter, fileName: *const ::qt_core::string::String);
  pub fn qt_gui_c_QImageWriter_setFormat(this_ptr: *mut ::image_writer::ImageWriter, format: *const ::qt_core::byte_array::ByteArray);
  pub fn qt_gui_c_QImageWriter_setGamma(this_ptr: *mut ::image_writer::ImageWriter, gamma: ::libc::c_float);
  pub fn qt_gui_c_QImageWriter_setOptimizedWrite(this_ptr: *mut ::image_writer::ImageWriter, optimize: bool);
  pub fn qt_gui_c_QImageWriter_setProgressiveScanWrite(this_ptr: *mut ::image_writer::ImageWriter, progressive: bool);
  pub fn qt_gui_c_QImageWriter_setQuality(this_ptr: *mut ::image_writer::ImageWriter, quality: ::libc::c_int);
  pub fn qt_gui_c_QImageWriter_setSubType(this_ptr: *mut ::image_writer::ImageWriter, type_: *const ::qt_core::byte_array::ByteArray);
  pub fn qt_gui_c_QImageWriter_setText(this_ptr: *mut ::image_writer::ImageWriter, key: *const ::qt_core::string::String, text: *const ::qt_core::string::String);
  pub fn qt_gui_c_QImageWriter_subType_to_output(this_ptr: *const ::image_writer::ImageWriter, output: *mut ::qt_core::byte_array::ByteArray);
  pub fn qt_gui_c_QImageWriter_supportedImageFormats_to_output(output: *mut ::qt_core::list::ListByteArray);
  pub fn qt_gui_c_QImageWriter_supportedMimeTypes_to_output(output: *mut ::qt_core::list::ListByteArray);
  pub fn qt_gui_c_QImageWriter_supportedSubTypes_to_output(this_ptr: *const ::image_writer::ImageWriter, output: *mut ::qt_core::list::ListByteArray);
  pub fn qt_gui_c_QImageWriter_supportsOption(this_ptr: *const ::image_writer::ImageWriter, option: *const ::image_io_handler::ImageOption) -> bool;
  pub fn qt_gui_c_QImageWriter_trUtf8_to_output(sourceText: *const ::libc::c_char, disambiguation: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QImageWriter_tr_to_output(sourceText: *const ::libc::c_char, disambiguation: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QImageWriter_write(this_ptr: *mut ::image_writer::ImageWriter, image: *const ::image::Image) -> bool;

  // Header: QInputEvent
  pub fn qt_gui_c_QInputEvent_G_static_cast_QEvent_ptr(ptr: *mut ::input_event::InputEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QInputEvent_G_static_cast_QInputEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::input_event::InputEvent;
  pub fn qt_gui_c_QInputEvent_delete(this_ptr: *mut ::input_event::InputEvent);
  pub fn qt_gui_c_QInputEvent_setTimestamp(this_ptr: *mut ::input_event::InputEvent, atimestamp: ::libc::c_ulong);
  pub fn qt_gui_c_QInputEvent_timestamp(this_ptr: *const ::input_event::InputEvent) -> ::libc::c_ulong;

  // Header: QInputMethod
  pub fn qt_gui_c_QInputMethod_G_static_cast_QInputMethod_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::input_method::InputMethod;
  pub fn qt_gui_c_QInputMethod_G_static_cast_QObject_ptr(ptr: *mut ::input_method::InputMethod) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QInputMethod_anchorRectangle_to_output(this_ptr: *const ::input_method::InputMethod, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QInputMethod_commit(this_ptr: *mut ::input_method::InputMethod);
  pub fn qt_gui_c_QInputMethod_cursorRectangle_to_output(this_ptr: *const ::input_method::InputMethod, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QInputMethod_hide(this_ptr: *mut ::input_method::InputMethod);
  pub fn qt_gui_c_QInputMethod_inputItemClipRectangle_to_output(this_ptr: *const ::input_method::InputMethod, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QInputMethod_inputItemRectangle_to_output(this_ptr: *const ::input_method::InputMethod, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QInputMethod_inputItemTransform_to_output(this_ptr: *const ::input_method::InputMethod, output: *mut ::transform::Transform);
  pub fn qt_gui_c_QInputMethod_invokeAction(this_ptr: *mut ::input_method::InputMethod, a: ::input_method::Action, cursorPosition: ::libc::c_int);
  pub fn qt_gui_c_QInputMethod_isAnimating(this_ptr: *const ::input_method::InputMethod) -> bool;
  pub fn qt_gui_c_QInputMethod_isVisible(this_ptr: *const ::input_method::InputMethod) -> bool;
  pub fn qt_gui_c_QInputMethod_keyboardRectangle_to_output(this_ptr: *const ::input_method::InputMethod, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QInputMethod_locale_to_output(this_ptr: *const ::input_method::InputMethod, output: *mut ::qt_core::locale::Locale);
  pub fn qt_gui_c_QInputMethod_metaObject(this_ptr: *const ::input_method::InputMethod) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QInputMethod_qt_metacall(this_ptr: *mut ::input_method::InputMethod, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QInputMethod_qt_metacast(this_ptr: *mut ::input_method::InputMethod, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QInputMethod_queryFocusObject_to_output(query: *const ::qt_core::qt::InputMethodQuery, argument: *const ::qt_core::variant::Variant, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QInputMethod_reset(this_ptr: *mut ::input_method::InputMethod);
  pub fn qt_gui_c_QInputMethod_setInputItemRectangle(this_ptr: *mut ::input_method::InputMethod, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QInputMethod_setInputItemTransform(this_ptr: *mut ::input_method::InputMethod, transform: *const ::transform::Transform);
  pub fn qt_gui_c_QInputMethod_setVisible(this_ptr: *mut ::input_method::InputMethod, visible: bool);
  pub fn qt_gui_c_QInputMethod_show(this_ptr: *mut ::input_method::InputMethod);
  pub fn qt_gui_c_QInputMethod_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QInputMethod_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QInputMethodEvent
  pub fn qt_gui_c_QInputMethodEvent_Attribute_constructor_typ_s_l(typ: ::input_method_event::AttributeType, s: ::libc::c_int, l: ::libc::c_int, output: *mut ::input_method_event::Attribute);
  pub fn qt_gui_c_QInputMethodEvent_Attribute_constructor_typ_s_l_val(typ: ::input_method_event::AttributeType, s: ::libc::c_int, l: ::libc::c_int, val: *const ::qt_core::variant::Variant, output: *mut ::input_method_event::Attribute);
  pub fn qt_gui_c_QInputMethodEvent_Attribute_destructor(this_ptr: *mut ::input_method_event::Attribute);
  pub fn qt_gui_c_QInputMethodEvent_Attribute_length(this_ptr: *const ::input_method_event::Attribute) -> ::libc::c_int;
  pub fn qt_gui_c_QInputMethodEvent_Attribute_set_length(this_ptr: *mut ::input_method_event::Attribute, value: ::libc::c_int);
  pub fn qt_gui_c_QInputMethodEvent_Attribute_set_start(this_ptr: *mut ::input_method_event::Attribute, value: ::libc::c_int);
  pub fn qt_gui_c_QInputMethodEvent_Attribute_set_type(this_ptr: *mut ::input_method_event::Attribute, value: ::input_method_event::AttributeType);
  pub fn qt_gui_c_QInputMethodEvent_Attribute_set_value(this_ptr: *mut ::input_method_event::Attribute, value: *const ::qt_core::variant::Variant);
  pub fn qt_gui_c_QInputMethodEvent_Attribute_start(this_ptr: *const ::input_method_event::Attribute) -> ::libc::c_int;
  pub fn qt_gui_c_QInputMethodEvent_Attribute_type(this_ptr: *const ::input_method_event::Attribute) -> ::input_method_event::AttributeType;
  pub fn qt_gui_c_QInputMethodEvent_Attribute_value(this_ptr: *const ::input_method_event::Attribute) -> *const ::qt_core::variant::Variant;
  pub fn qt_gui_c_QInputMethodEvent_Attribute_value_mut(this_ptr: *mut ::input_method_event::Attribute) -> *mut ::qt_core::variant::Variant;
  pub fn qt_gui_c_QInputMethodEvent_G_static_cast_QEvent_ptr(ptr: *mut ::input_method_event::InputMethodEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QInputMethodEvent_G_static_cast_QInputMethodEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::input_method_event::InputMethodEvent;
  pub fn qt_gui_c_QInputMethodEvent_attributes(this_ptr: *const ::input_method_event::InputMethodEvent) -> *const ::list::ListInputMethodEventAttribute;
  pub fn qt_gui_c_QInputMethodEvent_commitString(this_ptr: *const ::input_method_event::InputMethodEvent) -> *const ::qt_core::string::String;
  pub fn qt_gui_c_QInputMethodEvent_delete(this_ptr: *mut ::input_method_event::InputMethodEvent);
  pub fn qt_gui_c_QInputMethodEvent_new_no_args() -> *mut ::input_method_event::InputMethodEvent;
  pub fn qt_gui_c_QInputMethodEvent_new_other(other: *const ::input_method_event::InputMethodEvent) -> *mut ::input_method_event::InputMethodEvent;
  pub fn qt_gui_c_QInputMethodEvent_new_preeditText_attributes(preeditText: *const ::qt_core::string::String, attributes: *const ::list::ListInputMethodEventAttribute) -> *mut ::input_method_event::InputMethodEvent;
  pub fn qt_gui_c_QInputMethodEvent_preeditString(this_ptr: *const ::input_method_event::InputMethodEvent) -> *const ::qt_core::string::String;
  pub fn qt_gui_c_QInputMethodEvent_replacementLength(this_ptr: *const ::input_method_event::InputMethodEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QInputMethodEvent_replacementStart(this_ptr: *const ::input_method_event::InputMethodEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QInputMethodEvent_setCommitString_commitString(this_ptr: *mut ::input_method_event::InputMethodEvent, commitString: *const ::qt_core::string::String);
  pub fn qt_gui_c_QInputMethodEvent_setCommitString_commitString_replaceFrom(this_ptr: *mut ::input_method_event::InputMethodEvent, commitString: *const ::qt_core::string::String, replaceFrom: ::libc::c_int);
  pub fn qt_gui_c_QInputMethodEvent_setCommitString_commitString_replaceFrom_replaceLength(this_ptr: *mut ::input_method_event::InputMethodEvent, commitString: *const ::qt_core::string::String, replaceFrom: ::libc::c_int, replaceLength: ::libc::c_int);

  // Header: QInputMethodQueryEvent
  pub fn qt_gui_c_QInputMethodQueryEvent_G_static_cast_QEvent_ptr(ptr: *mut ::input_method_query_event::InputMethodQueryEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QInputMethodQueryEvent_G_static_cast_QInputMethodQueryEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::input_method_query_event::InputMethodQueryEvent;
  pub fn qt_gui_c_QInputMethodQueryEvent_delete(this_ptr: *mut ::input_method_query_event::InputMethodQueryEvent);
  pub fn qt_gui_c_QInputMethodQueryEvent_setValue(this_ptr: *mut ::input_method_query_event::InputMethodQueryEvent, query: *const ::qt_core::qt::InputMethodQuery, value: *const ::qt_core::variant::Variant);
  pub fn qt_gui_c_QInputMethodQueryEvent_value_to_output(this_ptr: *const ::input_method_query_event::InputMethodQueryEvent, query: *const ::qt_core::qt::InputMethodQuery, output: *mut ::qt_core::variant::Variant);

  // Header: QIntValidator
  pub fn qt_gui_c_QIntValidator_G_dynamic_cast_QIntValidator_ptr(ptr: *mut ::validator::Validator) -> *mut ::int_validator::IntValidator;
  pub fn qt_gui_c_QIntValidator_G_static_cast_QIntValidator_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::int_validator::IntValidator;
  pub fn qt_gui_c_QIntValidator_G_static_cast_QIntValidator_ptr_QValidator(ptr: *mut ::validator::Validator) -> *mut ::int_validator::IntValidator;
  pub fn qt_gui_c_QIntValidator_G_static_cast_QObject_ptr(ptr: *mut ::int_validator::IntValidator) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QIntValidator_G_static_cast_QValidator_ptr(ptr: *mut ::int_validator::IntValidator) -> *mut ::validator::Validator;
  pub fn qt_gui_c_QIntValidator_bottom(this_ptr: *const ::int_validator::IntValidator) -> ::libc::c_int;
  pub fn qt_gui_c_QIntValidator_delete(this_ptr: *mut ::int_validator::IntValidator);
  pub fn qt_gui_c_QIntValidator_fixup(this_ptr: *const ::int_validator::IntValidator, input: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QIntValidator_metaObject(this_ptr: *const ::int_validator::IntValidator) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QIntValidator_new_bottom_top(bottom: ::libc::c_int, top: ::libc::c_int) -> *mut ::int_validator::IntValidator;
  pub fn qt_gui_c_QIntValidator_new_bottom_top_parent(bottom: ::libc::c_int, top: ::libc::c_int, parent: *mut ::qt_core::object::Object) -> *mut ::int_validator::IntValidator;
  pub fn qt_gui_c_QIntValidator_new_no_args() -> *mut ::int_validator::IntValidator;
  pub fn qt_gui_c_QIntValidator_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::int_validator::IntValidator;
  pub fn qt_gui_c_QIntValidator_qt_metacall(this_ptr: *mut ::int_validator::IntValidator, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QIntValidator_qt_metacast(this_ptr: *mut ::int_validator::IntValidator, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QIntValidator_setBottom(this_ptr: *mut ::int_validator::IntValidator, arg1: ::libc::c_int);
  pub fn qt_gui_c_QIntValidator_setRange(this_ptr: *mut ::int_validator::IntValidator, bottom: ::libc::c_int, top: ::libc::c_int);
  pub fn qt_gui_c_QIntValidator_setTop(this_ptr: *mut ::int_validator::IntValidator, arg1: ::libc::c_int);
  pub fn qt_gui_c_QIntValidator_top(this_ptr: *const ::int_validator::IntValidator) -> ::libc::c_int;
  pub fn qt_gui_c_QIntValidator_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QIntValidator_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QKeyEvent
  pub fn qt_gui_c_QKeyEvent_G_dynamic_cast_QKeyEvent_ptr(ptr: *mut ::input_event::InputEvent) -> *mut ::key_event::KeyEvent;
  pub fn qt_gui_c_QKeyEvent_G_static_cast_QEvent_ptr(ptr: *mut ::key_event::KeyEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QKeyEvent_G_static_cast_QInputEvent_ptr(ptr: *mut ::key_event::KeyEvent) -> *mut ::input_event::InputEvent;
  pub fn qt_gui_c_QKeyEvent_G_static_cast_QKeyEvent_ptr_QEvent(ptr: *mut ::qt_core::event::Event) -> *mut ::key_event::KeyEvent;
  pub fn qt_gui_c_QKeyEvent_G_static_cast_QKeyEvent_ptr_QInputEvent(ptr: *mut ::input_event::InputEvent) -> *mut ::key_event::KeyEvent;
  pub fn qt_gui_c_QKeyEvent_count(this_ptr: *const ::key_event::KeyEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QKeyEvent_delete(this_ptr: *mut ::key_event::KeyEvent);
  pub fn qt_gui_c_QKeyEvent_isAutoRepeat(this_ptr: *const ::key_event::KeyEvent) -> bool;
  pub fn qt_gui_c_QKeyEvent_key(this_ptr: *const ::key_event::KeyEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QKeyEvent_matches(this_ptr: *const ::key_event::KeyEvent, key: *const ::key_sequence::StandardKey) -> bool;
  pub fn qt_gui_c_QKeyEvent_nativeModifiers(this_ptr: *const ::key_event::KeyEvent) -> u32;
  pub fn qt_gui_c_QKeyEvent_nativeScanCode(this_ptr: *const ::key_event::KeyEvent) -> u32;
  pub fn qt_gui_c_QKeyEvent_nativeVirtualKey(this_ptr: *const ::key_event::KeyEvent) -> u32;
  pub fn qt_gui_c_QKeyEvent_text_to_output(this_ptr: *const ::key_event::KeyEvent, output: *mut ::qt_core::string::String);

  // Header: QKeySequence
  pub fn qt_gui_c_QKeySequence_G_operator_shl(in_: *mut ::qt_core::data_stream::DataStream, ks: *const ::key_sequence::KeySequence) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QKeySequence_G_operator_shl_to_output(arg1: *const ::qt_core::debug::Debug, arg2: *const ::key_sequence::KeySequence, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QKeySequence_G_operator_shr(out: *mut ::qt_core::data_stream::DataStream, ks: *mut ::key_sequence::KeySequence) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QKeySequence_G_qHash_key(key: *const ::key_sequence::KeySequence) -> ::libc::c_uint;
  pub fn qt_gui_c_QKeySequence_G_qHash_key_seed(key: *const ::key_sequence::KeySequence, seed: ::libc::c_uint) -> ::libc::c_uint;
  pub fn qt_gui_c_QKeySequence_G_swap(value1: *mut ::key_sequence::KeySequence, value2: *mut ::key_sequence::KeySequence);
  pub fn qt_gui_c_QKeySequence_constructor_QKeySequence(ks: *const ::key_sequence::KeySequence, output: *mut ::key_sequence::KeySequence);
  pub fn qt_gui_c_QKeySequence_constructor_QKeySequence_StandardKey(key: ::key_sequence::StandardKey, output: *mut ::key_sequence::KeySequence);
  pub fn qt_gui_c_QKeySequence_constructor_QString(key: *const ::qt_core::string::String, output: *mut ::key_sequence::KeySequence);
  pub fn qt_gui_c_QKeySequence_constructor_QString_QKeySequence_SequenceFormat(key: *const ::qt_core::string::String, format: ::key_sequence::SequenceFormat, output: *mut ::key_sequence::KeySequence);
  pub fn qt_gui_c_QKeySequence_constructor_int(k1: ::libc::c_int, output: *mut ::key_sequence::KeySequence);
  pub fn qt_gui_c_QKeySequence_constructor_int_int(k1: ::libc::c_int, k2: ::libc::c_int, output: *mut ::key_sequence::KeySequence);
  pub fn qt_gui_c_QKeySequence_constructor_int_int_int(k1: ::libc::c_int, k2: ::libc::c_int, k3: ::libc::c_int, output: *mut ::key_sequence::KeySequence);
  pub fn qt_gui_c_QKeySequence_constructor_int_int_int_int(k1: ::libc::c_int, k2: ::libc::c_int, k3: ::libc::c_int, k4: ::libc::c_int, output: *mut ::key_sequence::KeySequence);
  pub fn qt_gui_c_QKeySequence_constructor_no_args(output: *mut ::key_sequence::KeySequence);
  pub fn qt_gui_c_QKeySequence_convert_to_QVariant_to_output(this_ptr: *const ::key_sequence::KeySequence, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QKeySequence_count(this_ptr: *const ::key_sequence::KeySequence) -> ::libc::c_int;
  pub fn qt_gui_c_QKeySequence_destructor(this_ptr: *mut ::key_sequence::KeySequence);
  pub fn qt_gui_c_QKeySequence_fromString_to_output_str(str: *const ::qt_core::string::String, output: *mut ::key_sequence::KeySequence);
  pub fn qt_gui_c_QKeySequence_fromString_to_output_str_format(str: *const ::qt_core::string::String, format: ::key_sequence::SequenceFormat, output: *mut ::key_sequence::KeySequence);
  pub fn qt_gui_c_QKeySequence_isEmpty(this_ptr: *const ::key_sequence::KeySequence) -> bool;
  pub fn qt_gui_c_QKeySequence_keyBindings_to_output(key: ::key_sequence::StandardKey, output: *mut ::list::ListKeySequence);
  pub fn qt_gui_c_QKeySequence_listFromString_to_output_str(str: *const ::qt_core::string::String, output: *mut ::list::ListKeySequence);
  pub fn qt_gui_c_QKeySequence_listFromString_to_output_str_format(str: *const ::qt_core::string::String, format: ::key_sequence::SequenceFormat, output: *mut ::list::ListKeySequence);
  pub fn qt_gui_c_QKeySequence_listToString_to_output_list(list: *const ::list::ListKeySequence, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QKeySequence_listToString_to_output_list_format(list: *const ::list::ListKeySequence, format: ::key_sequence::SequenceFormat, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QKeySequence_matches(this_ptr: *const ::key_sequence::KeySequence, seq: *const ::key_sequence::KeySequence) -> ::key_sequence::SequenceMatch;
  pub fn qt_gui_c_QKeySequence_mnemonic_to_output(text: *const ::qt_core::string::String, output: *mut ::key_sequence::KeySequence);
  pub fn qt_gui_c_QKeySequence_operator_assign(this_ptr: *mut ::key_sequence::KeySequence, other: *const ::key_sequence::KeySequence) -> *mut ::key_sequence::KeySequence;
  pub fn qt_gui_c_QKeySequence_operator_eq(this_ptr: *const ::key_sequence::KeySequence, other: *const ::key_sequence::KeySequence) -> bool;
  pub fn qt_gui_c_QKeySequence_operator_ge(this_ptr: *const ::key_sequence::KeySequence, other: *const ::key_sequence::KeySequence) -> bool;
  pub fn qt_gui_c_QKeySequence_operator_gt(this_ptr: *const ::key_sequence::KeySequence, other: *const ::key_sequence::KeySequence) -> bool;
  pub fn qt_gui_c_QKeySequence_operator_index(this_ptr: *const ::key_sequence::KeySequence, i: ::libc::c_uint) -> ::libc::c_int;
  pub fn qt_gui_c_QKeySequence_operator_le(this_ptr: *const ::key_sequence::KeySequence, other: *const ::key_sequence::KeySequence) -> bool;
  pub fn qt_gui_c_QKeySequence_operator_lt(this_ptr: *const ::key_sequence::KeySequence, ks: *const ::key_sequence::KeySequence) -> bool;
  pub fn qt_gui_c_QKeySequence_operator_neq(this_ptr: *const ::key_sequence::KeySequence, other: *const ::key_sequence::KeySequence) -> bool;
  pub fn qt_gui_c_QKeySequence_swap(this_ptr: *mut ::key_sequence::KeySequence, other: *mut ::key_sequence::KeySequence);
  pub fn qt_gui_c_QKeySequence_toString_to_output_format(this_ptr: *const ::key_sequence::KeySequence, format: ::key_sequence::SequenceFormat, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QKeySequence_toString_to_output_no_args(this_ptr: *const ::key_sequence::KeySequence, output: *mut ::qt_core::string::String);

  // Header: QLinearGradient
  pub fn qt_gui_c_QLinearGradient_G_static_cast_QGradient_ptr(ptr: *mut ::linear_gradient::LinearGradient) -> *mut ::gradient::Gradient;
  pub fn qt_gui_c_QLinearGradient_G_static_cast_QLinearGradient_ptr(ptr: *mut ::gradient::Gradient) -> *mut ::linear_gradient::LinearGradient;
  pub fn qt_gui_c_QLinearGradient_delete(this_ptr: *mut ::linear_gradient::LinearGradient);
  pub fn qt_gui_c_QLinearGradient_finalStop_to_output(this_ptr: *const ::linear_gradient::LinearGradient, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QLinearGradient_new_no_args() -> *mut ::linear_gradient::LinearGradient;
  pub fn qt_gui_c_QLinearGradient_new_start_finalStop(start: *const ::qt_core::point_f::PointF, finalStop: *const ::qt_core::point_f::PointF) -> *mut ::linear_gradient::LinearGradient;
  pub fn qt_gui_c_QLinearGradient_new_xStart_yStart_xFinalStop_yFinalStop(xStart: ::libc::c_double, yStart: ::libc::c_double, xFinalStop: ::libc::c_double, yFinalStop: ::libc::c_double) -> *mut ::linear_gradient::LinearGradient;
  pub fn qt_gui_c_QLinearGradient_setFinalStop_stop(this_ptr: *mut ::linear_gradient::LinearGradient, stop: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QLinearGradient_setFinalStop_x_y(this_ptr: *mut ::linear_gradient::LinearGradient, x: ::libc::c_double, y: ::libc::c_double);
  pub fn qt_gui_c_QLinearGradient_setStart_start(this_ptr: *mut ::linear_gradient::LinearGradient, start: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QLinearGradient_setStart_x_y(this_ptr: *mut ::linear_gradient::LinearGradient, x: ::libc::c_double, y: ::libc::c_double);
  pub fn qt_gui_c_QLinearGradient_start_to_output(this_ptr: *const ::linear_gradient::LinearGradient, output: *mut ::qt_core::point_f::PointF);

  // Header: QList
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_append_QAccessibleInterface(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr, t: *const *mut ::accessible_interface::AccessibleInterface);
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_append_QList_QAccessibleInterface_ptr(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr, t: *const ::list::ListAccessibleInterfaceMutPtr);
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_at(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr, i: ::libc::c_int) -> *const *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_back(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr) -> *mut *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_back_const(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr) -> *const *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_clear(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr);
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_constFirst(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr) -> *const *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_constLast(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr) -> *const *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_constructor_l(l: *const ::list::ListAccessibleInterfaceMutPtr, output: *mut ::list::ListAccessibleInterfaceMutPtr);
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_constructor_no_args(output: *mut ::list::ListAccessibleInterfaceMutPtr);
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_contains(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr, t: *const *mut ::accessible_interface::AccessibleInterface) -> bool;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_count_no_args(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_count_t(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr, t: *const *mut ::accessible_interface::AccessibleInterface) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_destructor(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr);
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_empty(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr) -> bool;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_endsWith(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr, t: *const *mut ::accessible_interface::AccessibleInterface) -> bool;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_first(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr) -> *mut *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_first_const(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr) -> *const *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_front(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr) -> *mut *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_front_const(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr) -> *const *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_indexOf_t(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr, t: *const *mut ::accessible_interface::AccessibleInterface) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_indexOf_t_from(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr, t: *const *mut ::accessible_interface::AccessibleInterface, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_insert(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr, i: ::libc::c_int, t: *const *mut ::accessible_interface::AccessibleInterface);
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_isEmpty(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr) -> bool;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_last(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr) -> *mut *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_lastIndexOf_t(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr, t: *const *mut ::accessible_interface::AccessibleInterface) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_lastIndexOf_t_from(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr, t: *const *mut ::accessible_interface::AccessibleInterface, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_last_const(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr) -> *const *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_length(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_mid_to_output_pos(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr, pos: ::libc::c_int, output: *mut ::list::ListAccessibleInterfaceMutPtr);
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_mid_to_output_pos_length(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListAccessibleInterfaceMutPtr);
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_move(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_operator_add_assign_l(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr, l: *const ::list::ListAccessibleInterfaceMutPtr) -> *mut ::list::ListAccessibleInterfaceMutPtr;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_operator_add_assign_t(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr, t: *const *mut ::accessible_interface::AccessibleInterface) -> *mut ::list::ListAccessibleInterfaceMutPtr;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_operator_add_to_output(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr, l: *const ::list::ListAccessibleInterfaceMutPtr, output: *mut ::list::ListAccessibleInterfaceMutPtr);
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_operator_assign(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr, l: *const ::list::ListAccessibleInterfaceMutPtr) -> *mut ::list::ListAccessibleInterfaceMutPtr;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_operator_eq(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr, l: *const ::list::ListAccessibleInterfaceMutPtr) -> bool;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_operator_index(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr, i: ::libc::c_int) -> *mut *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_operator_index_const(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr, i: ::libc::c_int) -> *const *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_operator_neq(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr, l: *const ::list::ListAccessibleInterfaceMutPtr) -> bool;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_operator_shl_l(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr, l: *const ::list::ListAccessibleInterfaceMutPtr) -> *mut ::list::ListAccessibleInterfaceMutPtr;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_operator_shl_t(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr, t: *const *mut ::accessible_interface::AccessibleInterface) -> *mut ::list::ListAccessibleInterfaceMutPtr;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_pop_back(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr);
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_pop_front(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr);
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_prepend(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr, t: *const *mut ::accessible_interface::AccessibleInterface);
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_push_back(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr, t: *const *mut ::accessible_interface::AccessibleInterface);
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_push_front(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr, t: *const *mut ::accessible_interface::AccessibleInterface);
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_removeAll(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr, t: *const *mut ::accessible_interface::AccessibleInterface) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_removeAt(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr, i: ::libc::c_int);
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_removeFirst(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr);
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_removeLast(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr);
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_removeOne(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr, t: *const *mut ::accessible_interface::AccessibleInterface) -> bool;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_replace(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr, i: ::libc::c_int, t: *const *mut ::accessible_interface::AccessibleInterface);
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_reserve(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr, size: ::libc::c_int);
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_size(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_startsWith(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr, t: *const *mut ::accessible_interface::AccessibleInterface) -> bool;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_swap_i_j(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_swap_other(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr, other: *mut ::list::ListAccessibleInterfaceMutPtr);
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_takeAt(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr, i: ::libc::c_int) -> *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_takeFirst(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr) -> *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_takeLast(this_ptr: *mut ::list::ListAccessibleInterfaceMutPtr) -> *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_value_i(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr, i: ::libc::c_int) -> *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QList_QAccessibleInterface_ptr_value_i_defaultValue(this_ptr: *const ::list::ListAccessibleInterfaceMutPtr, i: ::libc::c_int, defaultValue: *const *mut ::accessible_interface::AccessibleInterface) -> *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_append_QFontDatabase_WritingSystem(this_ptr: *mut ::list::ListFontDatabaseWritingSystem, t: *const ::font_database::WritingSystem);
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_append_QList_QFontDatabase_WritingSystem(this_ptr: *mut ::list::ListFontDatabaseWritingSystem, t: *const ::list::ListFontDatabaseWritingSystem);
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_at(this_ptr: *const ::list::ListFontDatabaseWritingSystem, i: ::libc::c_int) -> *const ::font_database::WritingSystem;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_back(this_ptr: *mut ::list::ListFontDatabaseWritingSystem) -> *mut ::font_database::WritingSystem;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_back_const(this_ptr: *const ::list::ListFontDatabaseWritingSystem) -> *const ::font_database::WritingSystem;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_clear(this_ptr: *mut ::list::ListFontDatabaseWritingSystem);
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_constFirst(this_ptr: *const ::list::ListFontDatabaseWritingSystem) -> *const ::font_database::WritingSystem;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_constLast(this_ptr: *const ::list::ListFontDatabaseWritingSystem) -> *const ::font_database::WritingSystem;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_constructor_l(l: *const ::list::ListFontDatabaseWritingSystem, output: *mut ::list::ListFontDatabaseWritingSystem);
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_constructor_no_args(output: *mut ::list::ListFontDatabaseWritingSystem);
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_contains(this_ptr: *const ::list::ListFontDatabaseWritingSystem, t: *const ::font_database::WritingSystem) -> bool;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_count_no_args(this_ptr: *const ::list::ListFontDatabaseWritingSystem) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_count_t(this_ptr: *const ::list::ListFontDatabaseWritingSystem, t: *const ::font_database::WritingSystem) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_destructor(this_ptr: *mut ::list::ListFontDatabaseWritingSystem);
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_empty(this_ptr: *const ::list::ListFontDatabaseWritingSystem) -> bool;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_endsWith(this_ptr: *const ::list::ListFontDatabaseWritingSystem, t: *const ::font_database::WritingSystem) -> bool;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_first(this_ptr: *mut ::list::ListFontDatabaseWritingSystem) -> *mut ::font_database::WritingSystem;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_first_const(this_ptr: *const ::list::ListFontDatabaseWritingSystem) -> *const ::font_database::WritingSystem;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_front(this_ptr: *mut ::list::ListFontDatabaseWritingSystem) -> *mut ::font_database::WritingSystem;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_front_const(this_ptr: *const ::list::ListFontDatabaseWritingSystem) -> *const ::font_database::WritingSystem;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_indexOf_t(this_ptr: *const ::list::ListFontDatabaseWritingSystem, t: *const ::font_database::WritingSystem) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_indexOf_t_from(this_ptr: *const ::list::ListFontDatabaseWritingSystem, t: *const ::font_database::WritingSystem, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_insert(this_ptr: *mut ::list::ListFontDatabaseWritingSystem, i: ::libc::c_int, t: *const ::font_database::WritingSystem);
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_isEmpty(this_ptr: *const ::list::ListFontDatabaseWritingSystem) -> bool;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_last(this_ptr: *mut ::list::ListFontDatabaseWritingSystem) -> *mut ::font_database::WritingSystem;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_lastIndexOf_t(this_ptr: *const ::list::ListFontDatabaseWritingSystem, t: *const ::font_database::WritingSystem) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_lastIndexOf_t_from(this_ptr: *const ::list::ListFontDatabaseWritingSystem, t: *const ::font_database::WritingSystem, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_last_const(this_ptr: *const ::list::ListFontDatabaseWritingSystem) -> *const ::font_database::WritingSystem;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_length(this_ptr: *const ::list::ListFontDatabaseWritingSystem) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_mid_to_output_pos(this_ptr: *const ::list::ListFontDatabaseWritingSystem, pos: ::libc::c_int, output: *mut ::list::ListFontDatabaseWritingSystem);
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_mid_to_output_pos_length(this_ptr: *const ::list::ListFontDatabaseWritingSystem, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListFontDatabaseWritingSystem);
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_move(this_ptr: *mut ::list::ListFontDatabaseWritingSystem, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_operator_add_assign_l(this_ptr: *mut ::list::ListFontDatabaseWritingSystem, l: *const ::list::ListFontDatabaseWritingSystem) -> *mut ::list::ListFontDatabaseWritingSystem;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_operator_add_assign_t(this_ptr: *mut ::list::ListFontDatabaseWritingSystem, t: *const ::font_database::WritingSystem) -> *mut ::list::ListFontDatabaseWritingSystem;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_operator_add_to_output(this_ptr: *const ::list::ListFontDatabaseWritingSystem, l: *const ::list::ListFontDatabaseWritingSystem, output: *mut ::list::ListFontDatabaseWritingSystem);
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_operator_assign(this_ptr: *mut ::list::ListFontDatabaseWritingSystem, l: *const ::list::ListFontDatabaseWritingSystem) -> *mut ::list::ListFontDatabaseWritingSystem;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_operator_eq(this_ptr: *const ::list::ListFontDatabaseWritingSystem, l: *const ::list::ListFontDatabaseWritingSystem) -> bool;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_operator_index(this_ptr: *mut ::list::ListFontDatabaseWritingSystem, i: ::libc::c_int) -> *mut ::font_database::WritingSystem;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_operator_index_const(this_ptr: *const ::list::ListFontDatabaseWritingSystem, i: ::libc::c_int) -> *const ::font_database::WritingSystem;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_operator_neq(this_ptr: *const ::list::ListFontDatabaseWritingSystem, l: *const ::list::ListFontDatabaseWritingSystem) -> bool;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_operator_shl_l(this_ptr: *mut ::list::ListFontDatabaseWritingSystem, l: *const ::list::ListFontDatabaseWritingSystem) -> *mut ::list::ListFontDatabaseWritingSystem;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_operator_shl_t(this_ptr: *mut ::list::ListFontDatabaseWritingSystem, t: *const ::font_database::WritingSystem) -> *mut ::list::ListFontDatabaseWritingSystem;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_pop_back(this_ptr: *mut ::list::ListFontDatabaseWritingSystem);
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_pop_front(this_ptr: *mut ::list::ListFontDatabaseWritingSystem);
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_prepend(this_ptr: *mut ::list::ListFontDatabaseWritingSystem, t: *const ::font_database::WritingSystem);
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_push_back(this_ptr: *mut ::list::ListFontDatabaseWritingSystem, t: *const ::font_database::WritingSystem);
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_push_front(this_ptr: *mut ::list::ListFontDatabaseWritingSystem, t: *const ::font_database::WritingSystem);
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_removeAll(this_ptr: *mut ::list::ListFontDatabaseWritingSystem, t: *const ::font_database::WritingSystem) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_removeAt(this_ptr: *mut ::list::ListFontDatabaseWritingSystem, i: ::libc::c_int);
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_removeFirst(this_ptr: *mut ::list::ListFontDatabaseWritingSystem);
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_removeLast(this_ptr: *mut ::list::ListFontDatabaseWritingSystem);
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_removeOne(this_ptr: *mut ::list::ListFontDatabaseWritingSystem, t: *const ::font_database::WritingSystem) -> bool;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_replace(this_ptr: *mut ::list::ListFontDatabaseWritingSystem, i: ::libc::c_int, t: *const ::font_database::WritingSystem);
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_reserve(this_ptr: *mut ::list::ListFontDatabaseWritingSystem, size: ::libc::c_int);
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_size(this_ptr: *const ::list::ListFontDatabaseWritingSystem) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_startsWith(this_ptr: *const ::list::ListFontDatabaseWritingSystem, t: *const ::font_database::WritingSystem) -> bool;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_swap_i_j(this_ptr: *mut ::list::ListFontDatabaseWritingSystem, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_swap_other(this_ptr: *mut ::list::ListFontDatabaseWritingSystem, other: *mut ::list::ListFontDatabaseWritingSystem);
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_takeAt(this_ptr: *mut ::list::ListFontDatabaseWritingSystem, i: ::libc::c_int) -> ::font_database::WritingSystem;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_takeFirst(this_ptr: *mut ::list::ListFontDatabaseWritingSystem) -> ::font_database::WritingSystem;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_takeLast(this_ptr: *mut ::list::ListFontDatabaseWritingSystem) -> ::font_database::WritingSystem;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_value_i(this_ptr: *const ::list::ListFontDatabaseWritingSystem, i: ::libc::c_int) -> ::font_database::WritingSystem;
  pub fn qt_gui_c_QList_QFontDatabase_WritingSystem_value_i_defaultValue(this_ptr: *const ::list::ListFontDatabaseWritingSystem, i: ::libc::c_int, defaultValue: *const ::font_database::WritingSystem) -> ::font_database::WritingSystem;
  pub fn qt_gui_c_QList_QGlyphRun_append_QGlyphRun(this_ptr: *mut ::list::ListGlyphRun, t: *const ::glyph_run::GlyphRun);
  pub fn qt_gui_c_QList_QGlyphRun_append_QList_QGlyphRun(this_ptr: *mut ::list::ListGlyphRun, t: *const ::list::ListGlyphRun);
  pub fn qt_gui_c_QList_QGlyphRun_at(this_ptr: *const ::list::ListGlyphRun, i: ::libc::c_int) -> *const ::glyph_run::GlyphRun;
  pub fn qt_gui_c_QList_QGlyphRun_back(this_ptr: *mut ::list::ListGlyphRun) -> *mut ::glyph_run::GlyphRun;
  pub fn qt_gui_c_QList_QGlyphRun_back_const(this_ptr: *const ::list::ListGlyphRun) -> *const ::glyph_run::GlyphRun;
  pub fn qt_gui_c_QList_QGlyphRun_clear(this_ptr: *mut ::list::ListGlyphRun);
  pub fn qt_gui_c_QList_QGlyphRun_constFirst(this_ptr: *const ::list::ListGlyphRun) -> *const ::glyph_run::GlyphRun;
  pub fn qt_gui_c_QList_QGlyphRun_constLast(this_ptr: *const ::list::ListGlyphRun) -> *const ::glyph_run::GlyphRun;
  pub fn qt_gui_c_QList_QGlyphRun_constructor_l(l: *const ::list::ListGlyphRun, output: *mut ::list::ListGlyphRun);
  pub fn qt_gui_c_QList_QGlyphRun_constructor_no_args(output: *mut ::list::ListGlyphRun);
  pub fn qt_gui_c_QList_QGlyphRun_contains(this_ptr: *const ::list::ListGlyphRun, t: *const ::glyph_run::GlyphRun) -> bool;
  pub fn qt_gui_c_QList_QGlyphRun_count_no_args(this_ptr: *const ::list::ListGlyphRun) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QGlyphRun_count_t(this_ptr: *const ::list::ListGlyphRun, t: *const ::glyph_run::GlyphRun) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QGlyphRun_destructor(this_ptr: *mut ::list::ListGlyphRun);
  pub fn qt_gui_c_QList_QGlyphRun_empty(this_ptr: *const ::list::ListGlyphRun) -> bool;
  pub fn qt_gui_c_QList_QGlyphRun_endsWith(this_ptr: *const ::list::ListGlyphRun, t: *const ::glyph_run::GlyphRun) -> bool;
  pub fn qt_gui_c_QList_QGlyphRun_first(this_ptr: *mut ::list::ListGlyphRun) -> *mut ::glyph_run::GlyphRun;
  pub fn qt_gui_c_QList_QGlyphRun_first_const(this_ptr: *const ::list::ListGlyphRun) -> *const ::glyph_run::GlyphRun;
  pub fn qt_gui_c_QList_QGlyphRun_front(this_ptr: *mut ::list::ListGlyphRun) -> *mut ::glyph_run::GlyphRun;
  pub fn qt_gui_c_QList_QGlyphRun_front_const(this_ptr: *const ::list::ListGlyphRun) -> *const ::glyph_run::GlyphRun;
  pub fn qt_gui_c_QList_QGlyphRun_indexOf_t(this_ptr: *const ::list::ListGlyphRun, t: *const ::glyph_run::GlyphRun) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QGlyphRun_indexOf_t_from(this_ptr: *const ::list::ListGlyphRun, t: *const ::glyph_run::GlyphRun, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QGlyphRun_insert(this_ptr: *mut ::list::ListGlyphRun, i: ::libc::c_int, t: *const ::glyph_run::GlyphRun);
  pub fn qt_gui_c_QList_QGlyphRun_isEmpty(this_ptr: *const ::list::ListGlyphRun) -> bool;
  pub fn qt_gui_c_QList_QGlyphRun_last(this_ptr: *mut ::list::ListGlyphRun) -> *mut ::glyph_run::GlyphRun;
  pub fn qt_gui_c_QList_QGlyphRun_lastIndexOf_t(this_ptr: *const ::list::ListGlyphRun, t: *const ::glyph_run::GlyphRun) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QGlyphRun_lastIndexOf_t_from(this_ptr: *const ::list::ListGlyphRun, t: *const ::glyph_run::GlyphRun, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QGlyphRun_last_const(this_ptr: *const ::list::ListGlyphRun) -> *const ::glyph_run::GlyphRun;
  pub fn qt_gui_c_QList_QGlyphRun_length(this_ptr: *const ::list::ListGlyphRun) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QGlyphRun_mid_to_output_pos(this_ptr: *const ::list::ListGlyphRun, pos: ::libc::c_int, output: *mut ::list::ListGlyphRun);
  pub fn qt_gui_c_QList_QGlyphRun_mid_to_output_pos_length(this_ptr: *const ::list::ListGlyphRun, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListGlyphRun);
  pub fn qt_gui_c_QList_QGlyphRun_move(this_ptr: *mut ::list::ListGlyphRun, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QList_QGlyphRun_operator_add_assign_l(this_ptr: *mut ::list::ListGlyphRun, l: *const ::list::ListGlyphRun) -> *mut ::list::ListGlyphRun;
  pub fn qt_gui_c_QList_QGlyphRun_operator_add_assign_t(this_ptr: *mut ::list::ListGlyphRun, t: *const ::glyph_run::GlyphRun) -> *mut ::list::ListGlyphRun;
  pub fn qt_gui_c_QList_QGlyphRun_operator_add_to_output(this_ptr: *const ::list::ListGlyphRun, l: *const ::list::ListGlyphRun, output: *mut ::list::ListGlyphRun);
  pub fn qt_gui_c_QList_QGlyphRun_operator_assign(this_ptr: *mut ::list::ListGlyphRun, l: *const ::list::ListGlyphRun) -> *mut ::list::ListGlyphRun;
  pub fn qt_gui_c_QList_QGlyphRun_operator_eq(this_ptr: *const ::list::ListGlyphRun, l: *const ::list::ListGlyphRun) -> bool;
  pub fn qt_gui_c_QList_QGlyphRun_operator_index(this_ptr: *mut ::list::ListGlyphRun, i: ::libc::c_int) -> *mut ::glyph_run::GlyphRun;
  pub fn qt_gui_c_QList_QGlyphRun_operator_index_const(this_ptr: *const ::list::ListGlyphRun, i: ::libc::c_int) -> *const ::glyph_run::GlyphRun;
  pub fn qt_gui_c_QList_QGlyphRun_operator_neq(this_ptr: *const ::list::ListGlyphRun, l: *const ::list::ListGlyphRun) -> bool;
  pub fn qt_gui_c_QList_QGlyphRun_operator_shl_l(this_ptr: *mut ::list::ListGlyphRun, l: *const ::list::ListGlyphRun) -> *mut ::list::ListGlyphRun;
  pub fn qt_gui_c_QList_QGlyphRun_operator_shl_t(this_ptr: *mut ::list::ListGlyphRun, t: *const ::glyph_run::GlyphRun) -> *mut ::list::ListGlyphRun;
  pub fn qt_gui_c_QList_QGlyphRun_pop_back(this_ptr: *mut ::list::ListGlyphRun);
  pub fn qt_gui_c_QList_QGlyphRun_pop_front(this_ptr: *mut ::list::ListGlyphRun);
  pub fn qt_gui_c_QList_QGlyphRun_prepend(this_ptr: *mut ::list::ListGlyphRun, t: *const ::glyph_run::GlyphRun);
  pub fn qt_gui_c_QList_QGlyphRun_push_back(this_ptr: *mut ::list::ListGlyphRun, t: *const ::glyph_run::GlyphRun);
  pub fn qt_gui_c_QList_QGlyphRun_push_front(this_ptr: *mut ::list::ListGlyphRun, t: *const ::glyph_run::GlyphRun);
  pub fn qt_gui_c_QList_QGlyphRun_removeAll(this_ptr: *mut ::list::ListGlyphRun, t: *const ::glyph_run::GlyphRun) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QGlyphRun_removeAt(this_ptr: *mut ::list::ListGlyphRun, i: ::libc::c_int);
  pub fn qt_gui_c_QList_QGlyphRun_removeFirst(this_ptr: *mut ::list::ListGlyphRun);
  pub fn qt_gui_c_QList_QGlyphRun_removeLast(this_ptr: *mut ::list::ListGlyphRun);
  pub fn qt_gui_c_QList_QGlyphRun_removeOne(this_ptr: *mut ::list::ListGlyphRun, t: *const ::glyph_run::GlyphRun) -> bool;
  pub fn qt_gui_c_QList_QGlyphRun_replace(this_ptr: *mut ::list::ListGlyphRun, i: ::libc::c_int, t: *const ::glyph_run::GlyphRun);
  pub fn qt_gui_c_QList_QGlyphRun_reserve(this_ptr: *mut ::list::ListGlyphRun, size: ::libc::c_int);
  pub fn qt_gui_c_QList_QGlyphRun_size(this_ptr: *const ::list::ListGlyphRun) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QGlyphRun_startsWith(this_ptr: *const ::list::ListGlyphRun, t: *const ::glyph_run::GlyphRun) -> bool;
  pub fn qt_gui_c_QList_QGlyphRun_swap_i_j(this_ptr: *mut ::list::ListGlyphRun, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_gui_c_QList_QGlyphRun_swap_other(this_ptr: *mut ::list::ListGlyphRun, other: *mut ::list::ListGlyphRun);
  pub fn qt_gui_c_QList_QGlyphRun_takeAt_to_output(this_ptr: *mut ::list::ListGlyphRun, i: ::libc::c_int, output: *mut ::glyph_run::GlyphRun);
  pub fn qt_gui_c_QList_QGlyphRun_takeFirst_to_output(this_ptr: *mut ::list::ListGlyphRun, output: *mut ::glyph_run::GlyphRun);
  pub fn qt_gui_c_QList_QGlyphRun_takeLast_to_output(this_ptr: *mut ::list::ListGlyphRun, output: *mut ::glyph_run::GlyphRun);
  pub fn qt_gui_c_QList_QGlyphRun_value_to_output_i(this_ptr: *const ::list::ListGlyphRun, i: ::libc::c_int, output: *mut ::glyph_run::GlyphRun);
  pub fn qt_gui_c_QList_QGlyphRun_value_to_output_i_defaultValue(this_ptr: *const ::list::ListGlyphRun, i: ::libc::c_int, defaultValue: *const ::glyph_run::GlyphRun, output: *mut ::glyph_run::GlyphRun);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_append_QInputMethodEvent_Attribute(this_ptr: *mut ::list::ListInputMethodEventAttribute, t: *const ::input_method_event::Attribute);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_append_QList_QInputMethodEvent_Attribute(this_ptr: *mut ::list::ListInputMethodEventAttribute, t: *const ::list::ListInputMethodEventAttribute);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_at(this_ptr: *const ::list::ListInputMethodEventAttribute, i: ::libc::c_int) -> *const ::input_method_event::Attribute;
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_back(this_ptr: *mut ::list::ListInputMethodEventAttribute) -> *mut ::input_method_event::Attribute;
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_back_const(this_ptr: *const ::list::ListInputMethodEventAttribute) -> *const ::input_method_event::Attribute;
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_clear(this_ptr: *mut ::list::ListInputMethodEventAttribute);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_constFirst(this_ptr: *const ::list::ListInputMethodEventAttribute) -> *const ::input_method_event::Attribute;
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_constLast(this_ptr: *const ::list::ListInputMethodEventAttribute) -> *const ::input_method_event::Attribute;
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_constructor_l(l: *const ::list::ListInputMethodEventAttribute, output: *mut ::list::ListInputMethodEventAttribute);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_constructor_no_args(output: *mut ::list::ListInputMethodEventAttribute);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_count(this_ptr: *const ::list::ListInputMethodEventAttribute) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_destructor(this_ptr: *mut ::list::ListInputMethodEventAttribute);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_empty(this_ptr: *const ::list::ListInputMethodEventAttribute) -> bool;
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_first(this_ptr: *mut ::list::ListInputMethodEventAttribute) -> *mut ::input_method_event::Attribute;
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_first_const(this_ptr: *const ::list::ListInputMethodEventAttribute) -> *const ::input_method_event::Attribute;
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_front(this_ptr: *mut ::list::ListInputMethodEventAttribute) -> *mut ::input_method_event::Attribute;
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_front_const(this_ptr: *const ::list::ListInputMethodEventAttribute) -> *const ::input_method_event::Attribute;
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_insert(this_ptr: *mut ::list::ListInputMethodEventAttribute, i: ::libc::c_int, t: *const ::input_method_event::Attribute);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_isEmpty(this_ptr: *const ::list::ListInputMethodEventAttribute) -> bool;
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_last(this_ptr: *mut ::list::ListInputMethodEventAttribute) -> *mut ::input_method_event::Attribute;
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_last_const(this_ptr: *const ::list::ListInputMethodEventAttribute) -> *const ::input_method_event::Attribute;
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_length(this_ptr: *const ::list::ListInputMethodEventAttribute) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_mid_to_output_pos(this_ptr: *const ::list::ListInputMethodEventAttribute, pos: ::libc::c_int, output: *mut ::list::ListInputMethodEventAttribute);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_mid_to_output_pos_length(this_ptr: *const ::list::ListInputMethodEventAttribute, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListInputMethodEventAttribute);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_move(this_ptr: *mut ::list::ListInputMethodEventAttribute, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_operator_add_assign_l(this_ptr: *mut ::list::ListInputMethodEventAttribute, l: *const ::list::ListInputMethodEventAttribute) -> *mut ::list::ListInputMethodEventAttribute;
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_operator_add_assign_t(this_ptr: *mut ::list::ListInputMethodEventAttribute, t: *const ::input_method_event::Attribute) -> *mut ::list::ListInputMethodEventAttribute;
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_operator_add_to_output(this_ptr: *const ::list::ListInputMethodEventAttribute, l: *const ::list::ListInputMethodEventAttribute, output: *mut ::list::ListInputMethodEventAttribute);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_operator_assign(this_ptr: *mut ::list::ListInputMethodEventAttribute, l: *const ::list::ListInputMethodEventAttribute) -> *mut ::list::ListInputMethodEventAttribute;
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_operator_index(this_ptr: *mut ::list::ListInputMethodEventAttribute, i: ::libc::c_int) -> *mut ::input_method_event::Attribute;
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_operator_index_const(this_ptr: *const ::list::ListInputMethodEventAttribute, i: ::libc::c_int) -> *const ::input_method_event::Attribute;
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_operator_shl_l(this_ptr: *mut ::list::ListInputMethodEventAttribute, l: *const ::list::ListInputMethodEventAttribute) -> *mut ::list::ListInputMethodEventAttribute;
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_operator_shl_t(this_ptr: *mut ::list::ListInputMethodEventAttribute, t: *const ::input_method_event::Attribute) -> *mut ::list::ListInputMethodEventAttribute;
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_pop_back(this_ptr: *mut ::list::ListInputMethodEventAttribute);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_pop_front(this_ptr: *mut ::list::ListInputMethodEventAttribute);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_prepend(this_ptr: *mut ::list::ListInputMethodEventAttribute, t: *const ::input_method_event::Attribute);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_push_back(this_ptr: *mut ::list::ListInputMethodEventAttribute, t: *const ::input_method_event::Attribute);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_push_front(this_ptr: *mut ::list::ListInputMethodEventAttribute, t: *const ::input_method_event::Attribute);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_removeAt(this_ptr: *mut ::list::ListInputMethodEventAttribute, i: ::libc::c_int);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_removeFirst(this_ptr: *mut ::list::ListInputMethodEventAttribute);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_removeLast(this_ptr: *mut ::list::ListInputMethodEventAttribute);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_replace(this_ptr: *mut ::list::ListInputMethodEventAttribute, i: ::libc::c_int, t: *const ::input_method_event::Attribute);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_reserve(this_ptr: *mut ::list::ListInputMethodEventAttribute, size: ::libc::c_int);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_size(this_ptr: *const ::list::ListInputMethodEventAttribute) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_swap_i_j(this_ptr: *mut ::list::ListInputMethodEventAttribute, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_swap_other(this_ptr: *mut ::list::ListInputMethodEventAttribute, other: *mut ::list::ListInputMethodEventAttribute);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_takeAt_to_output(this_ptr: *mut ::list::ListInputMethodEventAttribute, i: ::libc::c_int, output: *mut ::input_method_event::Attribute);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_takeFirst_to_output(this_ptr: *mut ::list::ListInputMethodEventAttribute, output: *mut ::input_method_event::Attribute);
  pub fn qt_gui_c_QList_QInputMethodEvent_Attribute_takeLast_to_output(this_ptr: *mut ::list::ListInputMethodEventAttribute, output: *mut ::input_method_event::Attribute);
  pub fn qt_gui_c_QList_QKeySequence_append_QKeySequence(this_ptr: *mut ::list::ListKeySequence, t: *const ::key_sequence::KeySequence);
  pub fn qt_gui_c_QList_QKeySequence_append_QList_QKeySequence(this_ptr: *mut ::list::ListKeySequence, t: *const ::list::ListKeySequence);
  pub fn qt_gui_c_QList_QKeySequence_at(this_ptr: *const ::list::ListKeySequence, i: ::libc::c_int) -> *const ::key_sequence::KeySequence;
  pub fn qt_gui_c_QList_QKeySequence_back(this_ptr: *mut ::list::ListKeySequence) -> *mut ::key_sequence::KeySequence;
  pub fn qt_gui_c_QList_QKeySequence_back_const(this_ptr: *const ::list::ListKeySequence) -> *const ::key_sequence::KeySequence;
  pub fn qt_gui_c_QList_QKeySequence_clear(this_ptr: *mut ::list::ListKeySequence);
  pub fn qt_gui_c_QList_QKeySequence_constFirst(this_ptr: *const ::list::ListKeySequence) -> *const ::key_sequence::KeySequence;
  pub fn qt_gui_c_QList_QKeySequence_constLast(this_ptr: *const ::list::ListKeySequence) -> *const ::key_sequence::KeySequence;
  pub fn qt_gui_c_QList_QKeySequence_constructor_l(l: *const ::list::ListKeySequence, output: *mut ::list::ListKeySequence);
  pub fn qt_gui_c_QList_QKeySequence_constructor_no_args(output: *mut ::list::ListKeySequence);
  pub fn qt_gui_c_QList_QKeySequence_contains(this_ptr: *const ::list::ListKeySequence, t: *const ::key_sequence::KeySequence) -> bool;
  pub fn qt_gui_c_QList_QKeySequence_count_no_args(this_ptr: *const ::list::ListKeySequence) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QKeySequence_count_t(this_ptr: *const ::list::ListKeySequence, t: *const ::key_sequence::KeySequence) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QKeySequence_destructor(this_ptr: *mut ::list::ListKeySequence);
  pub fn qt_gui_c_QList_QKeySequence_empty(this_ptr: *const ::list::ListKeySequence) -> bool;
  pub fn qt_gui_c_QList_QKeySequence_endsWith(this_ptr: *const ::list::ListKeySequence, t: *const ::key_sequence::KeySequence) -> bool;
  pub fn qt_gui_c_QList_QKeySequence_first(this_ptr: *mut ::list::ListKeySequence) -> *mut ::key_sequence::KeySequence;
  pub fn qt_gui_c_QList_QKeySequence_first_const(this_ptr: *const ::list::ListKeySequence) -> *const ::key_sequence::KeySequence;
  pub fn qt_gui_c_QList_QKeySequence_front(this_ptr: *mut ::list::ListKeySequence) -> *mut ::key_sequence::KeySequence;
  pub fn qt_gui_c_QList_QKeySequence_front_const(this_ptr: *const ::list::ListKeySequence) -> *const ::key_sequence::KeySequence;
  pub fn qt_gui_c_QList_QKeySequence_indexOf_t(this_ptr: *const ::list::ListKeySequence, t: *const ::key_sequence::KeySequence) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QKeySequence_indexOf_t_from(this_ptr: *const ::list::ListKeySequence, t: *const ::key_sequence::KeySequence, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QKeySequence_insert(this_ptr: *mut ::list::ListKeySequence, i: ::libc::c_int, t: *const ::key_sequence::KeySequence);
  pub fn qt_gui_c_QList_QKeySequence_isEmpty(this_ptr: *const ::list::ListKeySequence) -> bool;
  pub fn qt_gui_c_QList_QKeySequence_last(this_ptr: *mut ::list::ListKeySequence) -> *mut ::key_sequence::KeySequence;
  pub fn qt_gui_c_QList_QKeySequence_lastIndexOf_t(this_ptr: *const ::list::ListKeySequence, t: *const ::key_sequence::KeySequence) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QKeySequence_lastIndexOf_t_from(this_ptr: *const ::list::ListKeySequence, t: *const ::key_sequence::KeySequence, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QKeySequence_last_const(this_ptr: *const ::list::ListKeySequence) -> *const ::key_sequence::KeySequence;
  pub fn qt_gui_c_QList_QKeySequence_length(this_ptr: *const ::list::ListKeySequence) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QKeySequence_mid_to_output_pos(this_ptr: *const ::list::ListKeySequence, pos: ::libc::c_int, output: *mut ::list::ListKeySequence);
  pub fn qt_gui_c_QList_QKeySequence_mid_to_output_pos_length(this_ptr: *const ::list::ListKeySequence, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListKeySequence);
  pub fn qt_gui_c_QList_QKeySequence_move(this_ptr: *mut ::list::ListKeySequence, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QList_QKeySequence_operator_add_assign_l(this_ptr: *mut ::list::ListKeySequence, l: *const ::list::ListKeySequence) -> *mut ::list::ListKeySequence;
  pub fn qt_gui_c_QList_QKeySequence_operator_add_assign_t(this_ptr: *mut ::list::ListKeySequence, t: *const ::key_sequence::KeySequence) -> *mut ::list::ListKeySequence;
  pub fn qt_gui_c_QList_QKeySequence_operator_add_to_output(this_ptr: *const ::list::ListKeySequence, l: *const ::list::ListKeySequence, output: *mut ::list::ListKeySequence);
  pub fn qt_gui_c_QList_QKeySequence_operator_assign(this_ptr: *mut ::list::ListKeySequence, l: *const ::list::ListKeySequence) -> *mut ::list::ListKeySequence;
  pub fn qt_gui_c_QList_QKeySequence_operator_eq(this_ptr: *const ::list::ListKeySequence, l: *const ::list::ListKeySequence) -> bool;
  pub fn qt_gui_c_QList_QKeySequence_operator_index(this_ptr: *mut ::list::ListKeySequence, i: ::libc::c_int) -> *mut ::key_sequence::KeySequence;
  pub fn qt_gui_c_QList_QKeySequence_operator_index_const(this_ptr: *const ::list::ListKeySequence, i: ::libc::c_int) -> *const ::key_sequence::KeySequence;
  pub fn qt_gui_c_QList_QKeySequence_operator_neq(this_ptr: *const ::list::ListKeySequence, l: *const ::list::ListKeySequence) -> bool;
  pub fn qt_gui_c_QList_QKeySequence_operator_shl_l(this_ptr: *mut ::list::ListKeySequence, l: *const ::list::ListKeySequence) -> *mut ::list::ListKeySequence;
  pub fn qt_gui_c_QList_QKeySequence_operator_shl_t(this_ptr: *mut ::list::ListKeySequence, t: *const ::key_sequence::KeySequence) -> *mut ::list::ListKeySequence;
  pub fn qt_gui_c_QList_QKeySequence_pop_back(this_ptr: *mut ::list::ListKeySequence);
  pub fn qt_gui_c_QList_QKeySequence_pop_front(this_ptr: *mut ::list::ListKeySequence);
  pub fn qt_gui_c_QList_QKeySequence_prepend(this_ptr: *mut ::list::ListKeySequence, t: *const ::key_sequence::KeySequence);
  pub fn qt_gui_c_QList_QKeySequence_push_back(this_ptr: *mut ::list::ListKeySequence, t: *const ::key_sequence::KeySequence);
  pub fn qt_gui_c_QList_QKeySequence_push_front(this_ptr: *mut ::list::ListKeySequence, t: *const ::key_sequence::KeySequence);
  pub fn qt_gui_c_QList_QKeySequence_removeAll(this_ptr: *mut ::list::ListKeySequence, t: *const ::key_sequence::KeySequence) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QKeySequence_removeAt(this_ptr: *mut ::list::ListKeySequence, i: ::libc::c_int);
  pub fn qt_gui_c_QList_QKeySequence_removeFirst(this_ptr: *mut ::list::ListKeySequence);
  pub fn qt_gui_c_QList_QKeySequence_removeLast(this_ptr: *mut ::list::ListKeySequence);
  pub fn qt_gui_c_QList_QKeySequence_removeOne(this_ptr: *mut ::list::ListKeySequence, t: *const ::key_sequence::KeySequence) -> bool;
  pub fn qt_gui_c_QList_QKeySequence_replace(this_ptr: *mut ::list::ListKeySequence, i: ::libc::c_int, t: *const ::key_sequence::KeySequence);
  pub fn qt_gui_c_QList_QKeySequence_reserve(this_ptr: *mut ::list::ListKeySequence, size: ::libc::c_int);
  pub fn qt_gui_c_QList_QKeySequence_size(this_ptr: *const ::list::ListKeySequence) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QKeySequence_startsWith(this_ptr: *const ::list::ListKeySequence, t: *const ::key_sequence::KeySequence) -> bool;
  pub fn qt_gui_c_QList_QKeySequence_swap_i_j(this_ptr: *mut ::list::ListKeySequence, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_gui_c_QList_QKeySequence_swap_other(this_ptr: *mut ::list::ListKeySequence, other: *mut ::list::ListKeySequence);
  pub fn qt_gui_c_QList_QKeySequence_takeAt_to_output(this_ptr: *mut ::list::ListKeySequence, i: ::libc::c_int, output: *mut ::key_sequence::KeySequence);
  pub fn qt_gui_c_QList_QKeySequence_takeFirst_to_output(this_ptr: *mut ::list::ListKeySequence, output: *mut ::key_sequence::KeySequence);
  pub fn qt_gui_c_QList_QKeySequence_takeLast_to_output(this_ptr: *mut ::list::ListKeySequence, output: *mut ::key_sequence::KeySequence);
  pub fn qt_gui_c_QList_QKeySequence_value_to_output_i(this_ptr: *const ::list::ListKeySequence, i: ::libc::c_int, output: *mut ::key_sequence::KeySequence);
  pub fn qt_gui_c_QList_QKeySequence_value_to_output_i_defaultValue(this_ptr: *const ::list::ListKeySequence, i: ::libc::c_int, defaultValue: *const ::key_sequence::KeySequence, output: *mut ::key_sequence::KeySequence);
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_append_QList_QOpenGLContext_ptr(this_ptr: *mut ::list::ListOpenglContextMutPtr, t: *const ::list::ListOpenglContextMutPtr);
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_append_QOpenGLContext(this_ptr: *mut ::list::ListOpenglContextMutPtr, t: *const *mut ::opengl_context::OpenGLContext);
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_at(this_ptr: *const ::list::ListOpenglContextMutPtr, i: ::libc::c_int) -> *const *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_back(this_ptr: *mut ::list::ListOpenglContextMutPtr) -> *mut *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_back_const(this_ptr: *const ::list::ListOpenglContextMutPtr) -> *const *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_clear(this_ptr: *mut ::list::ListOpenglContextMutPtr);
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_constFirst(this_ptr: *const ::list::ListOpenglContextMutPtr) -> *const *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_constLast(this_ptr: *const ::list::ListOpenglContextMutPtr) -> *const *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_constructor_l(l: *const ::list::ListOpenglContextMutPtr, output: *mut ::list::ListOpenglContextMutPtr);
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_constructor_no_args(output: *mut ::list::ListOpenglContextMutPtr);
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_contains(this_ptr: *const ::list::ListOpenglContextMutPtr, t: *const *mut ::opengl_context::OpenGLContext) -> bool;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_count_no_args(this_ptr: *const ::list::ListOpenglContextMutPtr) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_count_t(this_ptr: *const ::list::ListOpenglContextMutPtr, t: *const *mut ::opengl_context::OpenGLContext) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_destructor(this_ptr: *mut ::list::ListOpenglContextMutPtr);
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_empty(this_ptr: *const ::list::ListOpenglContextMutPtr) -> bool;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_endsWith(this_ptr: *const ::list::ListOpenglContextMutPtr, t: *const *mut ::opengl_context::OpenGLContext) -> bool;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_first(this_ptr: *mut ::list::ListOpenglContextMutPtr) -> *mut *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_first_const(this_ptr: *const ::list::ListOpenglContextMutPtr) -> *const *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_front(this_ptr: *mut ::list::ListOpenglContextMutPtr) -> *mut *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_front_const(this_ptr: *const ::list::ListOpenglContextMutPtr) -> *const *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_indexOf_t(this_ptr: *const ::list::ListOpenglContextMutPtr, t: *const *mut ::opengl_context::OpenGLContext) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_indexOf_t_from(this_ptr: *const ::list::ListOpenglContextMutPtr, t: *const *mut ::opengl_context::OpenGLContext, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_insert(this_ptr: *mut ::list::ListOpenglContextMutPtr, i: ::libc::c_int, t: *const *mut ::opengl_context::OpenGLContext);
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_isEmpty(this_ptr: *const ::list::ListOpenglContextMutPtr) -> bool;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_last(this_ptr: *mut ::list::ListOpenglContextMutPtr) -> *mut *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_lastIndexOf_t(this_ptr: *const ::list::ListOpenglContextMutPtr, t: *const *mut ::opengl_context::OpenGLContext) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_lastIndexOf_t_from(this_ptr: *const ::list::ListOpenglContextMutPtr, t: *const *mut ::opengl_context::OpenGLContext, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_last_const(this_ptr: *const ::list::ListOpenglContextMutPtr) -> *const *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_length(this_ptr: *const ::list::ListOpenglContextMutPtr) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_mid_to_output_pos(this_ptr: *const ::list::ListOpenglContextMutPtr, pos: ::libc::c_int, output: *mut ::list::ListOpenglContextMutPtr);
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_mid_to_output_pos_length(this_ptr: *const ::list::ListOpenglContextMutPtr, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListOpenglContextMutPtr);
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_move(this_ptr: *mut ::list::ListOpenglContextMutPtr, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_operator_add_assign_l(this_ptr: *mut ::list::ListOpenglContextMutPtr, l: *const ::list::ListOpenglContextMutPtr) -> *mut ::list::ListOpenglContextMutPtr;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_operator_add_assign_t(this_ptr: *mut ::list::ListOpenglContextMutPtr, t: *const *mut ::opengl_context::OpenGLContext) -> *mut ::list::ListOpenglContextMutPtr;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_operator_add_to_output(this_ptr: *const ::list::ListOpenglContextMutPtr, l: *const ::list::ListOpenglContextMutPtr, output: *mut ::list::ListOpenglContextMutPtr);
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_operator_assign(this_ptr: *mut ::list::ListOpenglContextMutPtr, l: *const ::list::ListOpenglContextMutPtr) -> *mut ::list::ListOpenglContextMutPtr;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_operator_eq(this_ptr: *const ::list::ListOpenglContextMutPtr, l: *const ::list::ListOpenglContextMutPtr) -> bool;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_operator_index(this_ptr: *mut ::list::ListOpenglContextMutPtr, i: ::libc::c_int) -> *mut *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_operator_index_const(this_ptr: *const ::list::ListOpenglContextMutPtr, i: ::libc::c_int) -> *const *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_operator_neq(this_ptr: *const ::list::ListOpenglContextMutPtr, l: *const ::list::ListOpenglContextMutPtr) -> bool;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_operator_shl_l(this_ptr: *mut ::list::ListOpenglContextMutPtr, l: *const ::list::ListOpenglContextMutPtr) -> *mut ::list::ListOpenglContextMutPtr;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_operator_shl_t(this_ptr: *mut ::list::ListOpenglContextMutPtr, t: *const *mut ::opengl_context::OpenGLContext) -> *mut ::list::ListOpenglContextMutPtr;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_pop_back(this_ptr: *mut ::list::ListOpenglContextMutPtr);
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_pop_front(this_ptr: *mut ::list::ListOpenglContextMutPtr);
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_prepend(this_ptr: *mut ::list::ListOpenglContextMutPtr, t: *const *mut ::opengl_context::OpenGLContext);
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_push_back(this_ptr: *mut ::list::ListOpenglContextMutPtr, t: *const *mut ::opengl_context::OpenGLContext);
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_push_front(this_ptr: *mut ::list::ListOpenglContextMutPtr, t: *const *mut ::opengl_context::OpenGLContext);
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_removeAll(this_ptr: *mut ::list::ListOpenglContextMutPtr, t: *const *mut ::opengl_context::OpenGLContext) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_removeAt(this_ptr: *mut ::list::ListOpenglContextMutPtr, i: ::libc::c_int);
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_removeFirst(this_ptr: *mut ::list::ListOpenglContextMutPtr);
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_removeLast(this_ptr: *mut ::list::ListOpenglContextMutPtr);
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_removeOne(this_ptr: *mut ::list::ListOpenglContextMutPtr, t: *const *mut ::opengl_context::OpenGLContext) -> bool;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_replace(this_ptr: *mut ::list::ListOpenglContextMutPtr, i: ::libc::c_int, t: *const *mut ::opengl_context::OpenGLContext);
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_reserve(this_ptr: *mut ::list::ListOpenglContextMutPtr, size: ::libc::c_int);
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_size(this_ptr: *const ::list::ListOpenglContextMutPtr) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_startsWith(this_ptr: *const ::list::ListOpenglContextMutPtr, t: *const *mut ::opengl_context::OpenGLContext) -> bool;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_swap_i_j(this_ptr: *mut ::list::ListOpenglContextMutPtr, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_swap_other(this_ptr: *mut ::list::ListOpenglContextMutPtr, other: *mut ::list::ListOpenglContextMutPtr);
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_takeAt(this_ptr: *mut ::list::ListOpenglContextMutPtr, i: ::libc::c_int) -> *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_takeFirst(this_ptr: *mut ::list::ListOpenglContextMutPtr) -> *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_takeLast(this_ptr: *mut ::list::ListOpenglContextMutPtr) -> *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_value_i(this_ptr: *const ::list::ListOpenglContextMutPtr, i: ::libc::c_int) -> *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QList_QOpenGLContext_ptr_value_i_defaultValue(this_ptr: *const ::list::ListOpenglContextMutPtr, i: ::libc::c_int, defaultValue: *const *mut ::opengl_context::OpenGLContext) -> *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_append_QList_QOpenGLDebugMessage(this_ptr: *mut ::list::ListOpenglDebugMessage, t: *const ::list::ListOpenglDebugMessage);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_append_QOpenGLDebugMessage(this_ptr: *mut ::list::ListOpenglDebugMessage, t: *const ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_at(this_ptr: *const ::list::ListOpenglDebugMessage, i: ::libc::c_int) -> *const ::opengl_debug_message::OpenGLDebugMessage;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_back(this_ptr: *mut ::list::ListOpenglDebugMessage) -> *mut ::opengl_debug_message::OpenGLDebugMessage;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_back_const(this_ptr: *const ::list::ListOpenglDebugMessage) -> *const ::opengl_debug_message::OpenGLDebugMessage;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_clear(this_ptr: *mut ::list::ListOpenglDebugMessage);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_constFirst(this_ptr: *const ::list::ListOpenglDebugMessage) -> *const ::opengl_debug_message::OpenGLDebugMessage;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_constLast(this_ptr: *const ::list::ListOpenglDebugMessage) -> *const ::opengl_debug_message::OpenGLDebugMessage;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_constructor_l(l: *const ::list::ListOpenglDebugMessage, output: *mut ::list::ListOpenglDebugMessage);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_constructor_no_args(output: *mut ::list::ListOpenglDebugMessage);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_contains(this_ptr: *const ::list::ListOpenglDebugMessage, t: *const ::opengl_debug_message::OpenGLDebugMessage) -> bool;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_count_no_args(this_ptr: *const ::list::ListOpenglDebugMessage) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_count_t(this_ptr: *const ::list::ListOpenglDebugMessage, t: *const ::opengl_debug_message::OpenGLDebugMessage) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_destructor(this_ptr: *mut ::list::ListOpenglDebugMessage);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_empty(this_ptr: *const ::list::ListOpenglDebugMessage) -> bool;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_endsWith(this_ptr: *const ::list::ListOpenglDebugMessage, t: *const ::opengl_debug_message::OpenGLDebugMessage) -> bool;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_first(this_ptr: *mut ::list::ListOpenglDebugMessage) -> *mut ::opengl_debug_message::OpenGLDebugMessage;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_first_const(this_ptr: *const ::list::ListOpenglDebugMessage) -> *const ::opengl_debug_message::OpenGLDebugMessage;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_front(this_ptr: *mut ::list::ListOpenglDebugMessage) -> *mut ::opengl_debug_message::OpenGLDebugMessage;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_front_const(this_ptr: *const ::list::ListOpenglDebugMessage) -> *const ::opengl_debug_message::OpenGLDebugMessage;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_indexOf_t(this_ptr: *const ::list::ListOpenglDebugMessage, t: *const ::opengl_debug_message::OpenGLDebugMessage) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_indexOf_t_from(this_ptr: *const ::list::ListOpenglDebugMessage, t: *const ::opengl_debug_message::OpenGLDebugMessage, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_insert(this_ptr: *mut ::list::ListOpenglDebugMessage, i: ::libc::c_int, t: *const ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_isEmpty(this_ptr: *const ::list::ListOpenglDebugMessage) -> bool;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_last(this_ptr: *mut ::list::ListOpenglDebugMessage) -> *mut ::opengl_debug_message::OpenGLDebugMessage;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_lastIndexOf_t(this_ptr: *const ::list::ListOpenglDebugMessage, t: *const ::opengl_debug_message::OpenGLDebugMessage) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_lastIndexOf_t_from(this_ptr: *const ::list::ListOpenglDebugMessage, t: *const ::opengl_debug_message::OpenGLDebugMessage, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_last_const(this_ptr: *const ::list::ListOpenglDebugMessage) -> *const ::opengl_debug_message::OpenGLDebugMessage;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_length(this_ptr: *const ::list::ListOpenglDebugMessage) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_mid_to_output_pos(this_ptr: *const ::list::ListOpenglDebugMessage, pos: ::libc::c_int, output: *mut ::list::ListOpenglDebugMessage);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_mid_to_output_pos_length(this_ptr: *const ::list::ListOpenglDebugMessage, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListOpenglDebugMessage);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_move(this_ptr: *mut ::list::ListOpenglDebugMessage, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_operator_add_assign_l(this_ptr: *mut ::list::ListOpenglDebugMessage, l: *const ::list::ListOpenglDebugMessage) -> *mut ::list::ListOpenglDebugMessage;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_operator_add_assign_t(this_ptr: *mut ::list::ListOpenglDebugMessage, t: *const ::opengl_debug_message::OpenGLDebugMessage) -> *mut ::list::ListOpenglDebugMessage;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_operator_add_to_output(this_ptr: *const ::list::ListOpenglDebugMessage, l: *const ::list::ListOpenglDebugMessage, output: *mut ::list::ListOpenglDebugMessage);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_operator_assign(this_ptr: *mut ::list::ListOpenglDebugMessage, l: *const ::list::ListOpenglDebugMessage) -> *mut ::list::ListOpenglDebugMessage;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_operator_eq(this_ptr: *const ::list::ListOpenglDebugMessage, l: *const ::list::ListOpenglDebugMessage) -> bool;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_operator_index(this_ptr: *mut ::list::ListOpenglDebugMessage, i: ::libc::c_int) -> *mut ::opengl_debug_message::OpenGLDebugMessage;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_operator_index_const(this_ptr: *const ::list::ListOpenglDebugMessage, i: ::libc::c_int) -> *const ::opengl_debug_message::OpenGLDebugMessage;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_operator_neq(this_ptr: *const ::list::ListOpenglDebugMessage, l: *const ::list::ListOpenglDebugMessage) -> bool;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_operator_shl_l(this_ptr: *mut ::list::ListOpenglDebugMessage, l: *const ::list::ListOpenglDebugMessage) -> *mut ::list::ListOpenglDebugMessage;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_operator_shl_t(this_ptr: *mut ::list::ListOpenglDebugMessage, t: *const ::opengl_debug_message::OpenGLDebugMessage) -> *mut ::list::ListOpenglDebugMessage;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_pop_back(this_ptr: *mut ::list::ListOpenglDebugMessage);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_pop_front(this_ptr: *mut ::list::ListOpenglDebugMessage);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_prepend(this_ptr: *mut ::list::ListOpenglDebugMessage, t: *const ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_push_back(this_ptr: *mut ::list::ListOpenglDebugMessage, t: *const ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_push_front(this_ptr: *mut ::list::ListOpenglDebugMessage, t: *const ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_removeAll(this_ptr: *mut ::list::ListOpenglDebugMessage, t: *const ::opengl_debug_message::OpenGLDebugMessage) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_removeAt(this_ptr: *mut ::list::ListOpenglDebugMessage, i: ::libc::c_int);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_removeFirst(this_ptr: *mut ::list::ListOpenglDebugMessage);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_removeLast(this_ptr: *mut ::list::ListOpenglDebugMessage);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_removeOne(this_ptr: *mut ::list::ListOpenglDebugMessage, t: *const ::opengl_debug_message::OpenGLDebugMessage) -> bool;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_replace(this_ptr: *mut ::list::ListOpenglDebugMessage, i: ::libc::c_int, t: *const ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_reserve(this_ptr: *mut ::list::ListOpenglDebugMessage, size: ::libc::c_int);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_size(this_ptr: *const ::list::ListOpenglDebugMessage) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_startsWith(this_ptr: *const ::list::ListOpenglDebugMessage, t: *const ::opengl_debug_message::OpenGLDebugMessage) -> bool;
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_swap_i_j(this_ptr: *mut ::list::ListOpenglDebugMessage, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_swap_other(this_ptr: *mut ::list::ListOpenglDebugMessage, other: *mut ::list::ListOpenglDebugMessage);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_takeAt_to_output(this_ptr: *mut ::list::ListOpenglDebugMessage, i: ::libc::c_int, output: *mut ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_takeFirst_to_output(this_ptr: *mut ::list::ListOpenglDebugMessage, output: *mut ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_takeLast_to_output(this_ptr: *mut ::list::ListOpenglDebugMessage, output: *mut ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_value_to_output_i(this_ptr: *const ::list::ListOpenglDebugMessage, i: ::libc::c_int, output: *mut ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QList_QOpenGLDebugMessage_value_to_output_i_defaultValue(this_ptr: *const ::list::ListOpenglDebugMessage, i: ::libc::c_int, defaultValue: *const ::opengl_debug_message::OpenGLDebugMessage, output: *mut ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_append_QList_QOpenGLShader_ptr(this_ptr: *mut ::list::ListOpenglShaderMutPtr, t: *const ::list::ListOpenglShaderMutPtr);
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_append_QOpenGLShader(this_ptr: *mut ::list::ListOpenglShaderMutPtr, t: *const *mut ::opengl_shader::OpenGLShader);
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_at(this_ptr: *const ::list::ListOpenglShaderMutPtr, i: ::libc::c_int) -> *const *mut ::opengl_shader::OpenGLShader;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_back(this_ptr: *mut ::list::ListOpenglShaderMutPtr) -> *mut *mut ::opengl_shader::OpenGLShader;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_back_const(this_ptr: *const ::list::ListOpenglShaderMutPtr) -> *const *mut ::opengl_shader::OpenGLShader;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_clear(this_ptr: *mut ::list::ListOpenglShaderMutPtr);
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_constFirst(this_ptr: *const ::list::ListOpenglShaderMutPtr) -> *const *mut ::opengl_shader::OpenGLShader;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_constLast(this_ptr: *const ::list::ListOpenglShaderMutPtr) -> *const *mut ::opengl_shader::OpenGLShader;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_constructor_l(l: *const ::list::ListOpenglShaderMutPtr, output: *mut ::list::ListOpenglShaderMutPtr);
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_constructor_no_args(output: *mut ::list::ListOpenglShaderMutPtr);
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_contains(this_ptr: *const ::list::ListOpenglShaderMutPtr, t: *const *mut ::opengl_shader::OpenGLShader) -> bool;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_count_no_args(this_ptr: *const ::list::ListOpenglShaderMutPtr) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_count_t(this_ptr: *const ::list::ListOpenglShaderMutPtr, t: *const *mut ::opengl_shader::OpenGLShader) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_destructor(this_ptr: *mut ::list::ListOpenglShaderMutPtr);
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_empty(this_ptr: *const ::list::ListOpenglShaderMutPtr) -> bool;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_endsWith(this_ptr: *const ::list::ListOpenglShaderMutPtr, t: *const *mut ::opengl_shader::OpenGLShader) -> bool;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_first(this_ptr: *mut ::list::ListOpenglShaderMutPtr) -> *mut *mut ::opengl_shader::OpenGLShader;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_first_const(this_ptr: *const ::list::ListOpenglShaderMutPtr) -> *const *mut ::opengl_shader::OpenGLShader;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_front(this_ptr: *mut ::list::ListOpenglShaderMutPtr) -> *mut *mut ::opengl_shader::OpenGLShader;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_front_const(this_ptr: *const ::list::ListOpenglShaderMutPtr) -> *const *mut ::opengl_shader::OpenGLShader;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_indexOf_t(this_ptr: *const ::list::ListOpenglShaderMutPtr, t: *const *mut ::opengl_shader::OpenGLShader) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_indexOf_t_from(this_ptr: *const ::list::ListOpenglShaderMutPtr, t: *const *mut ::opengl_shader::OpenGLShader, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_insert(this_ptr: *mut ::list::ListOpenglShaderMutPtr, i: ::libc::c_int, t: *const *mut ::opengl_shader::OpenGLShader);
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_isEmpty(this_ptr: *const ::list::ListOpenglShaderMutPtr) -> bool;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_last(this_ptr: *mut ::list::ListOpenglShaderMutPtr) -> *mut *mut ::opengl_shader::OpenGLShader;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_lastIndexOf_t(this_ptr: *const ::list::ListOpenglShaderMutPtr, t: *const *mut ::opengl_shader::OpenGLShader) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_lastIndexOf_t_from(this_ptr: *const ::list::ListOpenglShaderMutPtr, t: *const *mut ::opengl_shader::OpenGLShader, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_last_const(this_ptr: *const ::list::ListOpenglShaderMutPtr) -> *const *mut ::opengl_shader::OpenGLShader;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_length(this_ptr: *const ::list::ListOpenglShaderMutPtr) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_mid_to_output_pos(this_ptr: *const ::list::ListOpenglShaderMutPtr, pos: ::libc::c_int, output: *mut ::list::ListOpenglShaderMutPtr);
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_mid_to_output_pos_length(this_ptr: *const ::list::ListOpenglShaderMutPtr, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListOpenglShaderMutPtr);
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_move(this_ptr: *mut ::list::ListOpenglShaderMutPtr, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_operator_add_assign_l(this_ptr: *mut ::list::ListOpenglShaderMutPtr, l: *const ::list::ListOpenglShaderMutPtr) -> *mut ::list::ListOpenglShaderMutPtr;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_operator_add_assign_t(this_ptr: *mut ::list::ListOpenglShaderMutPtr, t: *const *mut ::opengl_shader::OpenGLShader) -> *mut ::list::ListOpenglShaderMutPtr;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_operator_add_to_output(this_ptr: *const ::list::ListOpenglShaderMutPtr, l: *const ::list::ListOpenglShaderMutPtr, output: *mut ::list::ListOpenglShaderMutPtr);
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_operator_assign(this_ptr: *mut ::list::ListOpenglShaderMutPtr, l: *const ::list::ListOpenglShaderMutPtr) -> *mut ::list::ListOpenglShaderMutPtr;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_operator_eq(this_ptr: *const ::list::ListOpenglShaderMutPtr, l: *const ::list::ListOpenglShaderMutPtr) -> bool;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_operator_index(this_ptr: *mut ::list::ListOpenglShaderMutPtr, i: ::libc::c_int) -> *mut *mut ::opengl_shader::OpenGLShader;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_operator_index_const(this_ptr: *const ::list::ListOpenglShaderMutPtr, i: ::libc::c_int) -> *const *mut ::opengl_shader::OpenGLShader;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_operator_neq(this_ptr: *const ::list::ListOpenglShaderMutPtr, l: *const ::list::ListOpenglShaderMutPtr) -> bool;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_operator_shl_l(this_ptr: *mut ::list::ListOpenglShaderMutPtr, l: *const ::list::ListOpenglShaderMutPtr) -> *mut ::list::ListOpenglShaderMutPtr;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_operator_shl_t(this_ptr: *mut ::list::ListOpenglShaderMutPtr, t: *const *mut ::opengl_shader::OpenGLShader) -> *mut ::list::ListOpenglShaderMutPtr;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_pop_back(this_ptr: *mut ::list::ListOpenglShaderMutPtr);
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_pop_front(this_ptr: *mut ::list::ListOpenglShaderMutPtr);
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_prepend(this_ptr: *mut ::list::ListOpenglShaderMutPtr, t: *const *mut ::opengl_shader::OpenGLShader);
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_push_back(this_ptr: *mut ::list::ListOpenglShaderMutPtr, t: *const *mut ::opengl_shader::OpenGLShader);
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_push_front(this_ptr: *mut ::list::ListOpenglShaderMutPtr, t: *const *mut ::opengl_shader::OpenGLShader);
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_removeAll(this_ptr: *mut ::list::ListOpenglShaderMutPtr, t: *const *mut ::opengl_shader::OpenGLShader) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_removeAt(this_ptr: *mut ::list::ListOpenglShaderMutPtr, i: ::libc::c_int);
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_removeFirst(this_ptr: *mut ::list::ListOpenglShaderMutPtr);
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_removeLast(this_ptr: *mut ::list::ListOpenglShaderMutPtr);
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_removeOne(this_ptr: *mut ::list::ListOpenglShaderMutPtr, t: *const *mut ::opengl_shader::OpenGLShader) -> bool;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_replace(this_ptr: *mut ::list::ListOpenglShaderMutPtr, i: ::libc::c_int, t: *const *mut ::opengl_shader::OpenGLShader);
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_reserve(this_ptr: *mut ::list::ListOpenglShaderMutPtr, size: ::libc::c_int);
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_size(this_ptr: *const ::list::ListOpenglShaderMutPtr) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_startsWith(this_ptr: *const ::list::ListOpenglShaderMutPtr, t: *const *mut ::opengl_shader::OpenGLShader) -> bool;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_swap_i_j(this_ptr: *mut ::list::ListOpenglShaderMutPtr, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_swap_other(this_ptr: *mut ::list::ListOpenglShaderMutPtr, other: *mut ::list::ListOpenglShaderMutPtr);
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_takeAt(this_ptr: *mut ::list::ListOpenglShaderMutPtr, i: ::libc::c_int) -> *mut ::opengl_shader::OpenGLShader;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_takeFirst(this_ptr: *mut ::list::ListOpenglShaderMutPtr) -> *mut ::opengl_shader::OpenGLShader;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_takeLast(this_ptr: *mut ::list::ListOpenglShaderMutPtr) -> *mut ::opengl_shader::OpenGLShader;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_value_i(this_ptr: *const ::list::ListOpenglShaderMutPtr, i: ::libc::c_int) -> *mut ::opengl_shader::OpenGLShader;
  pub fn qt_gui_c_QList_QOpenGLShader_ptr_value_i_defaultValue(this_ptr: *const ::list::ListOpenglShaderMutPtr, i: ::libc::c_int, defaultValue: *const *mut ::opengl_shader::OpenGLShader) -> *mut ::opengl_shader::OpenGLShader;
  pub fn qt_gui_c_QList_QPolygonF_append_QList_QPolygonF(this_ptr: *mut ::list::ListPolygonF, t: *const ::list::ListPolygonF);
  pub fn qt_gui_c_QList_QPolygonF_append_QPolygonF(this_ptr: *mut ::list::ListPolygonF, t: *const ::polygon_f::PolygonF);
  pub fn qt_gui_c_QList_QPolygonF_at(this_ptr: *const ::list::ListPolygonF, i: ::libc::c_int) -> *const ::polygon_f::PolygonF;
  pub fn qt_gui_c_QList_QPolygonF_back(this_ptr: *mut ::list::ListPolygonF) -> *mut ::polygon_f::PolygonF;
  pub fn qt_gui_c_QList_QPolygonF_back_const(this_ptr: *const ::list::ListPolygonF) -> *const ::polygon_f::PolygonF;
  pub fn qt_gui_c_QList_QPolygonF_clear(this_ptr: *mut ::list::ListPolygonF);
  pub fn qt_gui_c_QList_QPolygonF_constFirst(this_ptr: *const ::list::ListPolygonF) -> *const ::polygon_f::PolygonF;
  pub fn qt_gui_c_QList_QPolygonF_constLast(this_ptr: *const ::list::ListPolygonF) -> *const ::polygon_f::PolygonF;
  pub fn qt_gui_c_QList_QPolygonF_constructor_l(l: *const ::list::ListPolygonF, output: *mut ::list::ListPolygonF);
  pub fn qt_gui_c_QList_QPolygonF_constructor_no_args(output: *mut ::list::ListPolygonF);
  pub fn qt_gui_c_QList_QPolygonF_contains(this_ptr: *const ::list::ListPolygonF, t: *const ::polygon_f::PolygonF) -> bool;
  pub fn qt_gui_c_QList_QPolygonF_count_no_args(this_ptr: *const ::list::ListPolygonF) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QPolygonF_count_t(this_ptr: *const ::list::ListPolygonF, t: *const ::polygon_f::PolygonF) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QPolygonF_destructor(this_ptr: *mut ::list::ListPolygonF);
  pub fn qt_gui_c_QList_QPolygonF_empty(this_ptr: *const ::list::ListPolygonF) -> bool;
  pub fn qt_gui_c_QList_QPolygonF_endsWith(this_ptr: *const ::list::ListPolygonF, t: *const ::polygon_f::PolygonF) -> bool;
  pub fn qt_gui_c_QList_QPolygonF_first(this_ptr: *mut ::list::ListPolygonF) -> *mut ::polygon_f::PolygonF;
  pub fn qt_gui_c_QList_QPolygonF_first_const(this_ptr: *const ::list::ListPolygonF) -> *const ::polygon_f::PolygonF;
  pub fn qt_gui_c_QList_QPolygonF_front(this_ptr: *mut ::list::ListPolygonF) -> *mut ::polygon_f::PolygonF;
  pub fn qt_gui_c_QList_QPolygonF_front_const(this_ptr: *const ::list::ListPolygonF) -> *const ::polygon_f::PolygonF;
  pub fn qt_gui_c_QList_QPolygonF_indexOf_t(this_ptr: *const ::list::ListPolygonF, t: *const ::polygon_f::PolygonF) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QPolygonF_indexOf_t_from(this_ptr: *const ::list::ListPolygonF, t: *const ::polygon_f::PolygonF, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QPolygonF_insert(this_ptr: *mut ::list::ListPolygonF, i: ::libc::c_int, t: *const ::polygon_f::PolygonF);
  pub fn qt_gui_c_QList_QPolygonF_isEmpty(this_ptr: *const ::list::ListPolygonF) -> bool;
  pub fn qt_gui_c_QList_QPolygonF_last(this_ptr: *mut ::list::ListPolygonF) -> *mut ::polygon_f::PolygonF;
  pub fn qt_gui_c_QList_QPolygonF_lastIndexOf_t(this_ptr: *const ::list::ListPolygonF, t: *const ::polygon_f::PolygonF) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QPolygonF_lastIndexOf_t_from(this_ptr: *const ::list::ListPolygonF, t: *const ::polygon_f::PolygonF, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QPolygonF_last_const(this_ptr: *const ::list::ListPolygonF) -> *const ::polygon_f::PolygonF;
  pub fn qt_gui_c_QList_QPolygonF_length(this_ptr: *const ::list::ListPolygonF) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QPolygonF_mid_to_output_pos(this_ptr: *const ::list::ListPolygonF, pos: ::libc::c_int, output: *mut ::list::ListPolygonF);
  pub fn qt_gui_c_QList_QPolygonF_mid_to_output_pos_length(this_ptr: *const ::list::ListPolygonF, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListPolygonF);
  pub fn qt_gui_c_QList_QPolygonF_move(this_ptr: *mut ::list::ListPolygonF, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QList_QPolygonF_operator_add_assign_l(this_ptr: *mut ::list::ListPolygonF, l: *const ::list::ListPolygonF) -> *mut ::list::ListPolygonF;
  pub fn qt_gui_c_QList_QPolygonF_operator_add_assign_t(this_ptr: *mut ::list::ListPolygonF, t: *const ::polygon_f::PolygonF) -> *mut ::list::ListPolygonF;
  pub fn qt_gui_c_QList_QPolygonF_operator_add_to_output(this_ptr: *const ::list::ListPolygonF, l: *const ::list::ListPolygonF, output: *mut ::list::ListPolygonF);
  pub fn qt_gui_c_QList_QPolygonF_operator_assign(this_ptr: *mut ::list::ListPolygonF, l: *const ::list::ListPolygonF) -> *mut ::list::ListPolygonF;
  pub fn qt_gui_c_QList_QPolygonF_operator_eq(this_ptr: *const ::list::ListPolygonF, l: *const ::list::ListPolygonF) -> bool;
  pub fn qt_gui_c_QList_QPolygonF_operator_index(this_ptr: *mut ::list::ListPolygonF, i: ::libc::c_int) -> *mut ::polygon_f::PolygonF;
  pub fn qt_gui_c_QList_QPolygonF_operator_index_const(this_ptr: *const ::list::ListPolygonF, i: ::libc::c_int) -> *const ::polygon_f::PolygonF;
  pub fn qt_gui_c_QList_QPolygonF_operator_neq(this_ptr: *const ::list::ListPolygonF, l: *const ::list::ListPolygonF) -> bool;
  pub fn qt_gui_c_QList_QPolygonF_operator_shl_l(this_ptr: *mut ::list::ListPolygonF, l: *const ::list::ListPolygonF) -> *mut ::list::ListPolygonF;
  pub fn qt_gui_c_QList_QPolygonF_operator_shl_t(this_ptr: *mut ::list::ListPolygonF, t: *const ::polygon_f::PolygonF) -> *mut ::list::ListPolygonF;
  pub fn qt_gui_c_QList_QPolygonF_pop_back(this_ptr: *mut ::list::ListPolygonF);
  pub fn qt_gui_c_QList_QPolygonF_pop_front(this_ptr: *mut ::list::ListPolygonF);
  pub fn qt_gui_c_QList_QPolygonF_prepend(this_ptr: *mut ::list::ListPolygonF, t: *const ::polygon_f::PolygonF);
  pub fn qt_gui_c_QList_QPolygonF_push_back(this_ptr: *mut ::list::ListPolygonF, t: *const ::polygon_f::PolygonF);
  pub fn qt_gui_c_QList_QPolygonF_push_front(this_ptr: *mut ::list::ListPolygonF, t: *const ::polygon_f::PolygonF);
  pub fn qt_gui_c_QList_QPolygonF_removeAll(this_ptr: *mut ::list::ListPolygonF, t: *const ::polygon_f::PolygonF) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QPolygonF_removeAt(this_ptr: *mut ::list::ListPolygonF, i: ::libc::c_int);
  pub fn qt_gui_c_QList_QPolygonF_removeFirst(this_ptr: *mut ::list::ListPolygonF);
  pub fn qt_gui_c_QList_QPolygonF_removeLast(this_ptr: *mut ::list::ListPolygonF);
  pub fn qt_gui_c_QList_QPolygonF_removeOne(this_ptr: *mut ::list::ListPolygonF, t: *const ::polygon_f::PolygonF) -> bool;
  pub fn qt_gui_c_QList_QPolygonF_replace(this_ptr: *mut ::list::ListPolygonF, i: ::libc::c_int, t: *const ::polygon_f::PolygonF);
  pub fn qt_gui_c_QList_QPolygonF_reserve(this_ptr: *mut ::list::ListPolygonF, size: ::libc::c_int);
  pub fn qt_gui_c_QList_QPolygonF_size(this_ptr: *const ::list::ListPolygonF) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QPolygonF_startsWith(this_ptr: *const ::list::ListPolygonF, t: *const ::polygon_f::PolygonF) -> bool;
  pub fn qt_gui_c_QList_QPolygonF_swap_i_j(this_ptr: *mut ::list::ListPolygonF, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_gui_c_QList_QPolygonF_swap_other(this_ptr: *mut ::list::ListPolygonF, other: *mut ::list::ListPolygonF);
  pub fn qt_gui_c_QList_QPolygonF_takeAt_to_output(this_ptr: *mut ::list::ListPolygonF, i: ::libc::c_int, output: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QList_QPolygonF_takeFirst_to_output(this_ptr: *mut ::list::ListPolygonF, output: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QList_QPolygonF_takeLast_to_output(this_ptr: *mut ::list::ListPolygonF, output: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QList_QPolygonF_value_to_output_i(this_ptr: *const ::list::ListPolygonF, i: ::libc::c_int, output: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QList_QPolygonF_value_to_output_i_defaultValue(this_ptr: *const ::list::ListPolygonF, i: ::libc::c_int, defaultValue: *const ::polygon_f::PolygonF, output: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QList_QScreen_ptr_append_QList_QScreen_ptr(this_ptr: *mut ::list::ListScreenMutPtr, t: *const ::list::ListScreenMutPtr);
  pub fn qt_gui_c_QList_QScreen_ptr_append_QScreen(this_ptr: *mut ::list::ListScreenMutPtr, t: *const *mut ::screen::Screen);
  pub fn qt_gui_c_QList_QScreen_ptr_at(this_ptr: *const ::list::ListScreenMutPtr, i: ::libc::c_int) -> *const *mut ::screen::Screen;
  pub fn qt_gui_c_QList_QScreen_ptr_back(this_ptr: *mut ::list::ListScreenMutPtr) -> *mut *mut ::screen::Screen;
  pub fn qt_gui_c_QList_QScreen_ptr_back_const(this_ptr: *const ::list::ListScreenMutPtr) -> *const *mut ::screen::Screen;
  pub fn qt_gui_c_QList_QScreen_ptr_clear(this_ptr: *mut ::list::ListScreenMutPtr);
  pub fn qt_gui_c_QList_QScreen_ptr_constFirst(this_ptr: *const ::list::ListScreenMutPtr) -> *const *mut ::screen::Screen;
  pub fn qt_gui_c_QList_QScreen_ptr_constLast(this_ptr: *const ::list::ListScreenMutPtr) -> *const *mut ::screen::Screen;
  pub fn qt_gui_c_QList_QScreen_ptr_constructor_l(l: *const ::list::ListScreenMutPtr, output: *mut ::list::ListScreenMutPtr);
  pub fn qt_gui_c_QList_QScreen_ptr_constructor_no_args(output: *mut ::list::ListScreenMutPtr);
  pub fn qt_gui_c_QList_QScreen_ptr_contains(this_ptr: *const ::list::ListScreenMutPtr, t: *const *mut ::screen::Screen) -> bool;
  pub fn qt_gui_c_QList_QScreen_ptr_count_no_args(this_ptr: *const ::list::ListScreenMutPtr) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QScreen_ptr_count_t(this_ptr: *const ::list::ListScreenMutPtr, t: *const *mut ::screen::Screen) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QScreen_ptr_destructor(this_ptr: *mut ::list::ListScreenMutPtr);
  pub fn qt_gui_c_QList_QScreen_ptr_empty(this_ptr: *const ::list::ListScreenMutPtr) -> bool;
  pub fn qt_gui_c_QList_QScreen_ptr_endsWith(this_ptr: *const ::list::ListScreenMutPtr, t: *const *mut ::screen::Screen) -> bool;
  pub fn qt_gui_c_QList_QScreen_ptr_first(this_ptr: *mut ::list::ListScreenMutPtr) -> *mut *mut ::screen::Screen;
  pub fn qt_gui_c_QList_QScreen_ptr_first_const(this_ptr: *const ::list::ListScreenMutPtr) -> *const *mut ::screen::Screen;
  pub fn qt_gui_c_QList_QScreen_ptr_front(this_ptr: *mut ::list::ListScreenMutPtr) -> *mut *mut ::screen::Screen;
  pub fn qt_gui_c_QList_QScreen_ptr_front_const(this_ptr: *const ::list::ListScreenMutPtr) -> *const *mut ::screen::Screen;
  pub fn qt_gui_c_QList_QScreen_ptr_indexOf_t(this_ptr: *const ::list::ListScreenMutPtr, t: *const *mut ::screen::Screen) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QScreen_ptr_indexOf_t_from(this_ptr: *const ::list::ListScreenMutPtr, t: *const *mut ::screen::Screen, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QScreen_ptr_insert(this_ptr: *mut ::list::ListScreenMutPtr, i: ::libc::c_int, t: *const *mut ::screen::Screen);
  pub fn qt_gui_c_QList_QScreen_ptr_isEmpty(this_ptr: *const ::list::ListScreenMutPtr) -> bool;
  pub fn qt_gui_c_QList_QScreen_ptr_last(this_ptr: *mut ::list::ListScreenMutPtr) -> *mut *mut ::screen::Screen;
  pub fn qt_gui_c_QList_QScreen_ptr_lastIndexOf_t(this_ptr: *const ::list::ListScreenMutPtr, t: *const *mut ::screen::Screen) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QScreen_ptr_lastIndexOf_t_from(this_ptr: *const ::list::ListScreenMutPtr, t: *const *mut ::screen::Screen, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QScreen_ptr_last_const(this_ptr: *const ::list::ListScreenMutPtr) -> *const *mut ::screen::Screen;
  pub fn qt_gui_c_QList_QScreen_ptr_length(this_ptr: *const ::list::ListScreenMutPtr) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QScreen_ptr_mid_to_output_pos(this_ptr: *const ::list::ListScreenMutPtr, pos: ::libc::c_int, output: *mut ::list::ListScreenMutPtr);
  pub fn qt_gui_c_QList_QScreen_ptr_mid_to_output_pos_length(this_ptr: *const ::list::ListScreenMutPtr, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListScreenMutPtr);
  pub fn qt_gui_c_QList_QScreen_ptr_move(this_ptr: *mut ::list::ListScreenMutPtr, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QList_QScreen_ptr_operator_add_assign_l(this_ptr: *mut ::list::ListScreenMutPtr, l: *const ::list::ListScreenMutPtr) -> *mut ::list::ListScreenMutPtr;
  pub fn qt_gui_c_QList_QScreen_ptr_operator_add_assign_t(this_ptr: *mut ::list::ListScreenMutPtr, t: *const *mut ::screen::Screen) -> *mut ::list::ListScreenMutPtr;
  pub fn qt_gui_c_QList_QScreen_ptr_operator_add_to_output(this_ptr: *const ::list::ListScreenMutPtr, l: *const ::list::ListScreenMutPtr, output: *mut ::list::ListScreenMutPtr);
  pub fn qt_gui_c_QList_QScreen_ptr_operator_assign(this_ptr: *mut ::list::ListScreenMutPtr, l: *const ::list::ListScreenMutPtr) -> *mut ::list::ListScreenMutPtr;
  pub fn qt_gui_c_QList_QScreen_ptr_operator_eq(this_ptr: *const ::list::ListScreenMutPtr, l: *const ::list::ListScreenMutPtr) -> bool;
  pub fn qt_gui_c_QList_QScreen_ptr_operator_index(this_ptr: *mut ::list::ListScreenMutPtr, i: ::libc::c_int) -> *mut *mut ::screen::Screen;
  pub fn qt_gui_c_QList_QScreen_ptr_operator_index_const(this_ptr: *const ::list::ListScreenMutPtr, i: ::libc::c_int) -> *const *mut ::screen::Screen;
  pub fn qt_gui_c_QList_QScreen_ptr_operator_neq(this_ptr: *const ::list::ListScreenMutPtr, l: *const ::list::ListScreenMutPtr) -> bool;
  pub fn qt_gui_c_QList_QScreen_ptr_operator_shl_l(this_ptr: *mut ::list::ListScreenMutPtr, l: *const ::list::ListScreenMutPtr) -> *mut ::list::ListScreenMutPtr;
  pub fn qt_gui_c_QList_QScreen_ptr_operator_shl_t(this_ptr: *mut ::list::ListScreenMutPtr, t: *const *mut ::screen::Screen) -> *mut ::list::ListScreenMutPtr;
  pub fn qt_gui_c_QList_QScreen_ptr_pop_back(this_ptr: *mut ::list::ListScreenMutPtr);
  pub fn qt_gui_c_QList_QScreen_ptr_pop_front(this_ptr: *mut ::list::ListScreenMutPtr);
  pub fn qt_gui_c_QList_QScreen_ptr_prepend(this_ptr: *mut ::list::ListScreenMutPtr, t: *const *mut ::screen::Screen);
  pub fn qt_gui_c_QList_QScreen_ptr_push_back(this_ptr: *mut ::list::ListScreenMutPtr, t: *const *mut ::screen::Screen);
  pub fn qt_gui_c_QList_QScreen_ptr_push_front(this_ptr: *mut ::list::ListScreenMutPtr, t: *const *mut ::screen::Screen);
  pub fn qt_gui_c_QList_QScreen_ptr_removeAll(this_ptr: *mut ::list::ListScreenMutPtr, t: *const *mut ::screen::Screen) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QScreen_ptr_removeAt(this_ptr: *mut ::list::ListScreenMutPtr, i: ::libc::c_int);
  pub fn qt_gui_c_QList_QScreen_ptr_removeFirst(this_ptr: *mut ::list::ListScreenMutPtr);
  pub fn qt_gui_c_QList_QScreen_ptr_removeLast(this_ptr: *mut ::list::ListScreenMutPtr);
  pub fn qt_gui_c_QList_QScreen_ptr_removeOne(this_ptr: *mut ::list::ListScreenMutPtr, t: *const *mut ::screen::Screen) -> bool;
  pub fn qt_gui_c_QList_QScreen_ptr_replace(this_ptr: *mut ::list::ListScreenMutPtr, i: ::libc::c_int, t: *const *mut ::screen::Screen);
  pub fn qt_gui_c_QList_QScreen_ptr_reserve(this_ptr: *mut ::list::ListScreenMutPtr, size: ::libc::c_int);
  pub fn qt_gui_c_QList_QScreen_ptr_size(this_ptr: *const ::list::ListScreenMutPtr) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QScreen_ptr_startsWith(this_ptr: *const ::list::ListScreenMutPtr, t: *const *mut ::screen::Screen) -> bool;
  pub fn qt_gui_c_QList_QScreen_ptr_swap_i_j(this_ptr: *mut ::list::ListScreenMutPtr, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_gui_c_QList_QScreen_ptr_swap_other(this_ptr: *mut ::list::ListScreenMutPtr, other: *mut ::list::ListScreenMutPtr);
  pub fn qt_gui_c_QList_QScreen_ptr_takeAt(this_ptr: *mut ::list::ListScreenMutPtr, i: ::libc::c_int) -> *mut ::screen::Screen;
  pub fn qt_gui_c_QList_QScreen_ptr_takeFirst(this_ptr: *mut ::list::ListScreenMutPtr) -> *mut ::screen::Screen;
  pub fn qt_gui_c_QList_QScreen_ptr_takeLast(this_ptr: *mut ::list::ListScreenMutPtr) -> *mut ::screen::Screen;
  pub fn qt_gui_c_QList_QScreen_ptr_value_i(this_ptr: *const ::list::ListScreenMutPtr, i: ::libc::c_int) -> *mut ::screen::Screen;
  pub fn qt_gui_c_QList_QScreen_ptr_value_i_defaultValue(this_ptr: *const ::list::ListScreenMutPtr, i: ::libc::c_int, defaultValue: *const *mut ::screen::Screen) -> *mut ::screen::Screen;
  pub fn qt_gui_c_QList_QSize_append_QList_QSize(this_ptr: *mut ::list::ListQtCoreSize, t: *const ::list::ListQtCoreSize);
  pub fn qt_gui_c_QList_QSize_append_QSize(this_ptr: *mut ::list::ListQtCoreSize, t: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QList_QSize_at(this_ptr: *const ::list::ListQtCoreSize, i: ::libc::c_int) -> *const ::qt_core::size::Size;
  pub fn qt_gui_c_QList_QSize_back(this_ptr: *mut ::list::ListQtCoreSize) -> *mut ::qt_core::size::Size;
  pub fn qt_gui_c_QList_QSize_back_const(this_ptr: *const ::list::ListQtCoreSize) -> *const ::qt_core::size::Size;
  pub fn qt_gui_c_QList_QSize_clear(this_ptr: *mut ::list::ListQtCoreSize);
  pub fn qt_gui_c_QList_QSize_constFirst(this_ptr: *const ::list::ListQtCoreSize) -> *const ::qt_core::size::Size;
  pub fn qt_gui_c_QList_QSize_constLast(this_ptr: *const ::list::ListQtCoreSize) -> *const ::qt_core::size::Size;
  pub fn qt_gui_c_QList_QSize_constructor_l(l: *const ::list::ListQtCoreSize, output: *mut ::list::ListQtCoreSize);
  pub fn qt_gui_c_QList_QSize_constructor_no_args(output: *mut ::list::ListQtCoreSize);
  pub fn qt_gui_c_QList_QSize_contains(this_ptr: *const ::list::ListQtCoreSize, t: *const ::qt_core::size::Size) -> bool;
  pub fn qt_gui_c_QList_QSize_count_no_args(this_ptr: *const ::list::ListQtCoreSize) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QSize_count_t(this_ptr: *const ::list::ListQtCoreSize, t: *const ::qt_core::size::Size) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QSize_destructor(this_ptr: *mut ::list::ListQtCoreSize);
  pub fn qt_gui_c_QList_QSize_empty(this_ptr: *const ::list::ListQtCoreSize) -> bool;
  pub fn qt_gui_c_QList_QSize_endsWith(this_ptr: *const ::list::ListQtCoreSize, t: *const ::qt_core::size::Size) -> bool;
  pub fn qt_gui_c_QList_QSize_first(this_ptr: *mut ::list::ListQtCoreSize) -> *mut ::qt_core::size::Size;
  pub fn qt_gui_c_QList_QSize_first_const(this_ptr: *const ::list::ListQtCoreSize) -> *const ::qt_core::size::Size;
  pub fn qt_gui_c_QList_QSize_fromVector_to_output(vector: *const ::vector::VectorQtCoreSize, output: *mut ::list::ListQtCoreSize);
  pub fn qt_gui_c_QList_QSize_front(this_ptr: *mut ::list::ListQtCoreSize) -> *mut ::qt_core::size::Size;
  pub fn qt_gui_c_QList_QSize_front_const(this_ptr: *const ::list::ListQtCoreSize) -> *const ::qt_core::size::Size;
  pub fn qt_gui_c_QList_QSize_indexOf_t(this_ptr: *const ::list::ListQtCoreSize, t: *const ::qt_core::size::Size) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QSize_indexOf_t_from(this_ptr: *const ::list::ListQtCoreSize, t: *const ::qt_core::size::Size, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QSize_insert(this_ptr: *mut ::list::ListQtCoreSize, i: ::libc::c_int, t: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QList_QSize_isEmpty(this_ptr: *const ::list::ListQtCoreSize) -> bool;
  pub fn qt_gui_c_QList_QSize_last(this_ptr: *mut ::list::ListQtCoreSize) -> *mut ::qt_core::size::Size;
  pub fn qt_gui_c_QList_QSize_lastIndexOf_t(this_ptr: *const ::list::ListQtCoreSize, t: *const ::qt_core::size::Size) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QSize_lastIndexOf_t_from(this_ptr: *const ::list::ListQtCoreSize, t: *const ::qt_core::size::Size, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QSize_last_const(this_ptr: *const ::list::ListQtCoreSize) -> *const ::qt_core::size::Size;
  pub fn qt_gui_c_QList_QSize_length(this_ptr: *const ::list::ListQtCoreSize) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QSize_mid_to_output_pos(this_ptr: *const ::list::ListQtCoreSize, pos: ::libc::c_int, output: *mut ::list::ListQtCoreSize);
  pub fn qt_gui_c_QList_QSize_mid_to_output_pos_length(this_ptr: *const ::list::ListQtCoreSize, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListQtCoreSize);
  pub fn qt_gui_c_QList_QSize_move(this_ptr: *mut ::list::ListQtCoreSize, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QList_QSize_operator_add_assign_l(this_ptr: *mut ::list::ListQtCoreSize, l: *const ::list::ListQtCoreSize) -> *mut ::list::ListQtCoreSize;
  pub fn qt_gui_c_QList_QSize_operator_add_assign_t(this_ptr: *mut ::list::ListQtCoreSize, t: *const ::qt_core::size::Size) -> *mut ::list::ListQtCoreSize;
  pub fn qt_gui_c_QList_QSize_operator_add_to_output(this_ptr: *const ::list::ListQtCoreSize, l: *const ::list::ListQtCoreSize, output: *mut ::list::ListQtCoreSize);
  pub fn qt_gui_c_QList_QSize_operator_assign(this_ptr: *mut ::list::ListQtCoreSize, l: *const ::list::ListQtCoreSize) -> *mut ::list::ListQtCoreSize;
  pub fn qt_gui_c_QList_QSize_operator_eq(this_ptr: *const ::list::ListQtCoreSize, l: *const ::list::ListQtCoreSize) -> bool;
  pub fn qt_gui_c_QList_QSize_operator_index(this_ptr: *mut ::list::ListQtCoreSize, i: ::libc::c_int) -> *mut ::qt_core::size::Size;
  pub fn qt_gui_c_QList_QSize_operator_index_const(this_ptr: *const ::list::ListQtCoreSize, i: ::libc::c_int) -> *const ::qt_core::size::Size;
  pub fn qt_gui_c_QList_QSize_operator_neq(this_ptr: *const ::list::ListQtCoreSize, l: *const ::list::ListQtCoreSize) -> bool;
  pub fn qt_gui_c_QList_QSize_operator_shl_l(this_ptr: *mut ::list::ListQtCoreSize, l: *const ::list::ListQtCoreSize) -> *mut ::list::ListQtCoreSize;
  pub fn qt_gui_c_QList_QSize_operator_shl_t(this_ptr: *mut ::list::ListQtCoreSize, t: *const ::qt_core::size::Size) -> *mut ::list::ListQtCoreSize;
  pub fn qt_gui_c_QList_QSize_pop_back(this_ptr: *mut ::list::ListQtCoreSize);
  pub fn qt_gui_c_QList_QSize_pop_front(this_ptr: *mut ::list::ListQtCoreSize);
  pub fn qt_gui_c_QList_QSize_prepend(this_ptr: *mut ::list::ListQtCoreSize, t: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QList_QSize_push_back(this_ptr: *mut ::list::ListQtCoreSize, t: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QList_QSize_push_front(this_ptr: *mut ::list::ListQtCoreSize, t: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QList_QSize_removeAll(this_ptr: *mut ::list::ListQtCoreSize, t: *const ::qt_core::size::Size) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QSize_removeAt(this_ptr: *mut ::list::ListQtCoreSize, i: ::libc::c_int);
  pub fn qt_gui_c_QList_QSize_removeFirst(this_ptr: *mut ::list::ListQtCoreSize);
  pub fn qt_gui_c_QList_QSize_removeLast(this_ptr: *mut ::list::ListQtCoreSize);
  pub fn qt_gui_c_QList_QSize_removeOne(this_ptr: *mut ::list::ListQtCoreSize, t: *const ::qt_core::size::Size) -> bool;
  pub fn qt_gui_c_QList_QSize_replace(this_ptr: *mut ::list::ListQtCoreSize, i: ::libc::c_int, t: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QList_QSize_reserve(this_ptr: *mut ::list::ListQtCoreSize, size: ::libc::c_int);
  pub fn qt_gui_c_QList_QSize_size(this_ptr: *const ::list::ListQtCoreSize) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QSize_startsWith(this_ptr: *const ::list::ListQtCoreSize, t: *const ::qt_core::size::Size) -> bool;
  pub fn qt_gui_c_QList_QSize_swap_i_j(this_ptr: *mut ::list::ListQtCoreSize, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_gui_c_QList_QSize_swap_other(this_ptr: *mut ::list::ListQtCoreSize, other: *mut ::list::ListQtCoreSize);
  pub fn qt_gui_c_QList_QSize_takeAt_to_output(this_ptr: *mut ::list::ListQtCoreSize, i: ::libc::c_int, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QList_QSize_takeFirst_to_output(this_ptr: *mut ::list::ListQtCoreSize, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QList_QSize_takeLast_to_output(this_ptr: *mut ::list::ListQtCoreSize, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QList_QSize_toVector_to_output(this_ptr: *const ::list::ListQtCoreSize, output: *mut ::vector::VectorQtCoreSize);
  pub fn qt_gui_c_QList_QSize_value_to_output_i(this_ptr: *const ::list::ListQtCoreSize, i: ::libc::c_int, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QList_QSize_value_to_output_i_defaultValue(this_ptr: *const ::list::ListQtCoreSize, i: ::libc::c_int, defaultValue: *const ::qt_core::size::Size, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QList_QStandardItem_ptr_append_QList_QStandardItem_ptr(this_ptr: *mut ::list::ListStandardItemMutPtr, t: *const ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QList_QStandardItem_ptr_append_QStandardItem(this_ptr: *mut ::list::ListStandardItemMutPtr, t: *const *mut ::standard_item::StandardItem);
  pub fn qt_gui_c_QList_QStandardItem_ptr_at(this_ptr: *const ::list::ListStandardItemMutPtr, i: ::libc::c_int) -> *const *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QList_QStandardItem_ptr_back(this_ptr: *mut ::list::ListStandardItemMutPtr) -> *mut *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QList_QStandardItem_ptr_back_const(this_ptr: *const ::list::ListStandardItemMutPtr) -> *const *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QList_QStandardItem_ptr_clear(this_ptr: *mut ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QList_QStandardItem_ptr_constFirst(this_ptr: *const ::list::ListStandardItemMutPtr) -> *const *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QList_QStandardItem_ptr_constLast(this_ptr: *const ::list::ListStandardItemMutPtr) -> *const *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QList_QStandardItem_ptr_constructor_l(l: *const ::list::ListStandardItemMutPtr, output: *mut ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QList_QStandardItem_ptr_constructor_no_args(output: *mut ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QList_QStandardItem_ptr_contains(this_ptr: *const ::list::ListStandardItemMutPtr, t: *const *mut ::standard_item::StandardItem) -> bool;
  pub fn qt_gui_c_QList_QStandardItem_ptr_count_no_args(this_ptr: *const ::list::ListStandardItemMutPtr) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QStandardItem_ptr_count_t(this_ptr: *const ::list::ListStandardItemMutPtr, t: *const *mut ::standard_item::StandardItem) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QStandardItem_ptr_destructor(this_ptr: *mut ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QList_QStandardItem_ptr_empty(this_ptr: *const ::list::ListStandardItemMutPtr) -> bool;
  pub fn qt_gui_c_QList_QStandardItem_ptr_endsWith(this_ptr: *const ::list::ListStandardItemMutPtr, t: *const *mut ::standard_item::StandardItem) -> bool;
  pub fn qt_gui_c_QList_QStandardItem_ptr_first(this_ptr: *mut ::list::ListStandardItemMutPtr) -> *mut *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QList_QStandardItem_ptr_first_const(this_ptr: *const ::list::ListStandardItemMutPtr) -> *const *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QList_QStandardItem_ptr_front(this_ptr: *mut ::list::ListStandardItemMutPtr) -> *mut *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QList_QStandardItem_ptr_front_const(this_ptr: *const ::list::ListStandardItemMutPtr) -> *const *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QList_QStandardItem_ptr_indexOf_t(this_ptr: *const ::list::ListStandardItemMutPtr, t: *const *mut ::standard_item::StandardItem) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QStandardItem_ptr_indexOf_t_from(this_ptr: *const ::list::ListStandardItemMutPtr, t: *const *mut ::standard_item::StandardItem, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QStandardItem_ptr_insert(this_ptr: *mut ::list::ListStandardItemMutPtr, i: ::libc::c_int, t: *const *mut ::standard_item::StandardItem);
  pub fn qt_gui_c_QList_QStandardItem_ptr_isEmpty(this_ptr: *const ::list::ListStandardItemMutPtr) -> bool;
  pub fn qt_gui_c_QList_QStandardItem_ptr_last(this_ptr: *mut ::list::ListStandardItemMutPtr) -> *mut *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QList_QStandardItem_ptr_lastIndexOf_t(this_ptr: *const ::list::ListStandardItemMutPtr, t: *const *mut ::standard_item::StandardItem) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QStandardItem_ptr_lastIndexOf_t_from(this_ptr: *const ::list::ListStandardItemMutPtr, t: *const *mut ::standard_item::StandardItem, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QStandardItem_ptr_last_const(this_ptr: *const ::list::ListStandardItemMutPtr) -> *const *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QList_QStandardItem_ptr_length(this_ptr: *const ::list::ListStandardItemMutPtr) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QStandardItem_ptr_mid_to_output_pos(this_ptr: *const ::list::ListStandardItemMutPtr, pos: ::libc::c_int, output: *mut ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QList_QStandardItem_ptr_mid_to_output_pos_length(this_ptr: *const ::list::ListStandardItemMutPtr, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QList_QStandardItem_ptr_move(this_ptr: *mut ::list::ListStandardItemMutPtr, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QList_QStandardItem_ptr_operator_add_assign_l(this_ptr: *mut ::list::ListStandardItemMutPtr, l: *const ::list::ListStandardItemMutPtr) -> *mut ::list::ListStandardItemMutPtr;
  pub fn qt_gui_c_QList_QStandardItem_ptr_operator_add_assign_t(this_ptr: *mut ::list::ListStandardItemMutPtr, t: *const *mut ::standard_item::StandardItem) -> *mut ::list::ListStandardItemMutPtr;
  pub fn qt_gui_c_QList_QStandardItem_ptr_operator_add_to_output(this_ptr: *const ::list::ListStandardItemMutPtr, l: *const ::list::ListStandardItemMutPtr, output: *mut ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QList_QStandardItem_ptr_operator_assign(this_ptr: *mut ::list::ListStandardItemMutPtr, l: *const ::list::ListStandardItemMutPtr) -> *mut ::list::ListStandardItemMutPtr;
  pub fn qt_gui_c_QList_QStandardItem_ptr_operator_eq(this_ptr: *const ::list::ListStandardItemMutPtr, l: *const ::list::ListStandardItemMutPtr) -> bool;
  pub fn qt_gui_c_QList_QStandardItem_ptr_operator_index(this_ptr: *mut ::list::ListStandardItemMutPtr, i: ::libc::c_int) -> *mut *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QList_QStandardItem_ptr_operator_index_const(this_ptr: *const ::list::ListStandardItemMutPtr, i: ::libc::c_int) -> *const *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QList_QStandardItem_ptr_operator_neq(this_ptr: *const ::list::ListStandardItemMutPtr, l: *const ::list::ListStandardItemMutPtr) -> bool;
  pub fn qt_gui_c_QList_QStandardItem_ptr_operator_shl_l(this_ptr: *mut ::list::ListStandardItemMutPtr, l: *const ::list::ListStandardItemMutPtr) -> *mut ::list::ListStandardItemMutPtr;
  pub fn qt_gui_c_QList_QStandardItem_ptr_operator_shl_t(this_ptr: *mut ::list::ListStandardItemMutPtr, t: *const *mut ::standard_item::StandardItem) -> *mut ::list::ListStandardItemMutPtr;
  pub fn qt_gui_c_QList_QStandardItem_ptr_pop_back(this_ptr: *mut ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QList_QStandardItem_ptr_pop_front(this_ptr: *mut ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QList_QStandardItem_ptr_prepend(this_ptr: *mut ::list::ListStandardItemMutPtr, t: *const *mut ::standard_item::StandardItem);
  pub fn qt_gui_c_QList_QStandardItem_ptr_push_back(this_ptr: *mut ::list::ListStandardItemMutPtr, t: *const *mut ::standard_item::StandardItem);
  pub fn qt_gui_c_QList_QStandardItem_ptr_push_front(this_ptr: *mut ::list::ListStandardItemMutPtr, t: *const *mut ::standard_item::StandardItem);
  pub fn qt_gui_c_QList_QStandardItem_ptr_removeAll(this_ptr: *mut ::list::ListStandardItemMutPtr, t: *const *mut ::standard_item::StandardItem) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QStandardItem_ptr_removeAt(this_ptr: *mut ::list::ListStandardItemMutPtr, i: ::libc::c_int);
  pub fn qt_gui_c_QList_QStandardItem_ptr_removeFirst(this_ptr: *mut ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QList_QStandardItem_ptr_removeLast(this_ptr: *mut ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QList_QStandardItem_ptr_removeOne(this_ptr: *mut ::list::ListStandardItemMutPtr, t: *const *mut ::standard_item::StandardItem) -> bool;
  pub fn qt_gui_c_QList_QStandardItem_ptr_replace(this_ptr: *mut ::list::ListStandardItemMutPtr, i: ::libc::c_int, t: *const *mut ::standard_item::StandardItem);
  pub fn qt_gui_c_QList_QStandardItem_ptr_reserve(this_ptr: *mut ::list::ListStandardItemMutPtr, size: ::libc::c_int);
  pub fn qt_gui_c_QList_QStandardItem_ptr_size(this_ptr: *const ::list::ListStandardItemMutPtr) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QStandardItem_ptr_startsWith(this_ptr: *const ::list::ListStandardItemMutPtr, t: *const *mut ::standard_item::StandardItem) -> bool;
  pub fn qt_gui_c_QList_QStandardItem_ptr_swap_i_j(this_ptr: *mut ::list::ListStandardItemMutPtr, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_gui_c_QList_QStandardItem_ptr_swap_other(this_ptr: *mut ::list::ListStandardItemMutPtr, other: *mut ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QList_QStandardItem_ptr_takeAt(this_ptr: *mut ::list::ListStandardItemMutPtr, i: ::libc::c_int) -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QList_QStandardItem_ptr_takeFirst(this_ptr: *mut ::list::ListStandardItemMutPtr) -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QList_QStandardItem_ptr_takeLast(this_ptr: *mut ::list::ListStandardItemMutPtr) -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QList_QStandardItem_ptr_value_i(this_ptr: *const ::list::ListStandardItemMutPtr, i: ::libc::c_int) -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QList_QStandardItem_ptr_value_i_defaultValue(this_ptr: *const ::list::ListStandardItemMutPtr, i: ::libc::c_int, defaultValue: *const *mut ::standard_item::StandardItem) -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QList_QTextBlock_append_QList_QTextBlock(this_ptr: *mut ::list::ListTextBlock, t: *const ::list::ListTextBlock);
  pub fn qt_gui_c_QList_QTextBlock_append_QTextBlock(this_ptr: *mut ::list::ListTextBlock, t: *const ::text_block::TextBlock);
  pub fn qt_gui_c_QList_QTextBlock_at(this_ptr: *const ::list::ListTextBlock, i: ::libc::c_int) -> *const ::text_block::TextBlock;
  pub fn qt_gui_c_QList_QTextBlock_back(this_ptr: *mut ::list::ListTextBlock) -> *mut ::text_block::TextBlock;
  pub fn qt_gui_c_QList_QTextBlock_back_const(this_ptr: *const ::list::ListTextBlock) -> *const ::text_block::TextBlock;
  pub fn qt_gui_c_QList_QTextBlock_clear(this_ptr: *mut ::list::ListTextBlock);
  pub fn qt_gui_c_QList_QTextBlock_constFirst(this_ptr: *const ::list::ListTextBlock) -> *const ::text_block::TextBlock;
  pub fn qt_gui_c_QList_QTextBlock_constLast(this_ptr: *const ::list::ListTextBlock) -> *const ::text_block::TextBlock;
  pub fn qt_gui_c_QList_QTextBlock_constructor_l(l: *const ::list::ListTextBlock, output: *mut ::list::ListTextBlock);
  pub fn qt_gui_c_QList_QTextBlock_constructor_no_args(output: *mut ::list::ListTextBlock);
  pub fn qt_gui_c_QList_QTextBlock_contains(this_ptr: *const ::list::ListTextBlock, t: *const ::text_block::TextBlock) -> bool;
  pub fn qt_gui_c_QList_QTextBlock_count_no_args(this_ptr: *const ::list::ListTextBlock) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextBlock_count_t(this_ptr: *const ::list::ListTextBlock, t: *const ::text_block::TextBlock) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextBlock_destructor(this_ptr: *mut ::list::ListTextBlock);
  pub fn qt_gui_c_QList_QTextBlock_empty(this_ptr: *const ::list::ListTextBlock) -> bool;
  pub fn qt_gui_c_QList_QTextBlock_endsWith(this_ptr: *const ::list::ListTextBlock, t: *const ::text_block::TextBlock) -> bool;
  pub fn qt_gui_c_QList_QTextBlock_first(this_ptr: *mut ::list::ListTextBlock) -> *mut ::text_block::TextBlock;
  pub fn qt_gui_c_QList_QTextBlock_first_const(this_ptr: *const ::list::ListTextBlock) -> *const ::text_block::TextBlock;
  pub fn qt_gui_c_QList_QTextBlock_front(this_ptr: *mut ::list::ListTextBlock) -> *mut ::text_block::TextBlock;
  pub fn qt_gui_c_QList_QTextBlock_front_const(this_ptr: *const ::list::ListTextBlock) -> *const ::text_block::TextBlock;
  pub fn qt_gui_c_QList_QTextBlock_indexOf_t(this_ptr: *const ::list::ListTextBlock, t: *const ::text_block::TextBlock) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextBlock_indexOf_t_from(this_ptr: *const ::list::ListTextBlock, t: *const ::text_block::TextBlock, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextBlock_insert(this_ptr: *mut ::list::ListTextBlock, i: ::libc::c_int, t: *const ::text_block::TextBlock);
  pub fn qt_gui_c_QList_QTextBlock_isEmpty(this_ptr: *const ::list::ListTextBlock) -> bool;
  pub fn qt_gui_c_QList_QTextBlock_last(this_ptr: *mut ::list::ListTextBlock) -> *mut ::text_block::TextBlock;
  pub fn qt_gui_c_QList_QTextBlock_lastIndexOf_t(this_ptr: *const ::list::ListTextBlock, t: *const ::text_block::TextBlock) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextBlock_lastIndexOf_t_from(this_ptr: *const ::list::ListTextBlock, t: *const ::text_block::TextBlock, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextBlock_last_const(this_ptr: *const ::list::ListTextBlock) -> *const ::text_block::TextBlock;
  pub fn qt_gui_c_QList_QTextBlock_length(this_ptr: *const ::list::ListTextBlock) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextBlock_mid_to_output_pos(this_ptr: *const ::list::ListTextBlock, pos: ::libc::c_int, output: *mut ::list::ListTextBlock);
  pub fn qt_gui_c_QList_QTextBlock_mid_to_output_pos_length(this_ptr: *const ::list::ListTextBlock, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListTextBlock);
  pub fn qt_gui_c_QList_QTextBlock_move(this_ptr: *mut ::list::ListTextBlock, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QList_QTextBlock_operator_add_assign_l(this_ptr: *mut ::list::ListTextBlock, l: *const ::list::ListTextBlock) -> *mut ::list::ListTextBlock;
  pub fn qt_gui_c_QList_QTextBlock_operator_add_assign_t(this_ptr: *mut ::list::ListTextBlock, t: *const ::text_block::TextBlock) -> *mut ::list::ListTextBlock;
  pub fn qt_gui_c_QList_QTextBlock_operator_add_to_output(this_ptr: *const ::list::ListTextBlock, l: *const ::list::ListTextBlock, output: *mut ::list::ListTextBlock);
  pub fn qt_gui_c_QList_QTextBlock_operator_assign(this_ptr: *mut ::list::ListTextBlock, l: *const ::list::ListTextBlock) -> *mut ::list::ListTextBlock;
  pub fn qt_gui_c_QList_QTextBlock_operator_eq(this_ptr: *const ::list::ListTextBlock, l: *const ::list::ListTextBlock) -> bool;
  pub fn qt_gui_c_QList_QTextBlock_operator_index(this_ptr: *mut ::list::ListTextBlock, i: ::libc::c_int) -> *mut ::text_block::TextBlock;
  pub fn qt_gui_c_QList_QTextBlock_operator_index_const(this_ptr: *const ::list::ListTextBlock, i: ::libc::c_int) -> *const ::text_block::TextBlock;
  pub fn qt_gui_c_QList_QTextBlock_operator_neq(this_ptr: *const ::list::ListTextBlock, l: *const ::list::ListTextBlock) -> bool;
  pub fn qt_gui_c_QList_QTextBlock_operator_shl_l(this_ptr: *mut ::list::ListTextBlock, l: *const ::list::ListTextBlock) -> *mut ::list::ListTextBlock;
  pub fn qt_gui_c_QList_QTextBlock_operator_shl_t(this_ptr: *mut ::list::ListTextBlock, t: *const ::text_block::TextBlock) -> *mut ::list::ListTextBlock;
  pub fn qt_gui_c_QList_QTextBlock_pop_back(this_ptr: *mut ::list::ListTextBlock);
  pub fn qt_gui_c_QList_QTextBlock_pop_front(this_ptr: *mut ::list::ListTextBlock);
  pub fn qt_gui_c_QList_QTextBlock_prepend(this_ptr: *mut ::list::ListTextBlock, t: *const ::text_block::TextBlock);
  pub fn qt_gui_c_QList_QTextBlock_push_back(this_ptr: *mut ::list::ListTextBlock, t: *const ::text_block::TextBlock);
  pub fn qt_gui_c_QList_QTextBlock_push_front(this_ptr: *mut ::list::ListTextBlock, t: *const ::text_block::TextBlock);
  pub fn qt_gui_c_QList_QTextBlock_removeAll(this_ptr: *mut ::list::ListTextBlock, t: *const ::text_block::TextBlock) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextBlock_removeAt(this_ptr: *mut ::list::ListTextBlock, i: ::libc::c_int);
  pub fn qt_gui_c_QList_QTextBlock_removeFirst(this_ptr: *mut ::list::ListTextBlock);
  pub fn qt_gui_c_QList_QTextBlock_removeLast(this_ptr: *mut ::list::ListTextBlock);
  pub fn qt_gui_c_QList_QTextBlock_removeOne(this_ptr: *mut ::list::ListTextBlock, t: *const ::text_block::TextBlock) -> bool;
  pub fn qt_gui_c_QList_QTextBlock_replace(this_ptr: *mut ::list::ListTextBlock, i: ::libc::c_int, t: *const ::text_block::TextBlock);
  pub fn qt_gui_c_QList_QTextBlock_reserve(this_ptr: *mut ::list::ListTextBlock, size: ::libc::c_int);
  pub fn qt_gui_c_QList_QTextBlock_size(this_ptr: *const ::list::ListTextBlock) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextBlock_startsWith(this_ptr: *const ::list::ListTextBlock, t: *const ::text_block::TextBlock) -> bool;
  pub fn qt_gui_c_QList_QTextBlock_swap_i_j(this_ptr: *mut ::list::ListTextBlock, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_gui_c_QList_QTextBlock_swap_other(this_ptr: *mut ::list::ListTextBlock, other: *mut ::list::ListTextBlock);
  pub fn qt_gui_c_QList_QTextBlock_takeAt_to_output(this_ptr: *mut ::list::ListTextBlock, i: ::libc::c_int, output: *mut ::text_block::TextBlock);
  pub fn qt_gui_c_QList_QTextBlock_takeFirst_to_output(this_ptr: *mut ::list::ListTextBlock, output: *mut ::text_block::TextBlock);
  pub fn qt_gui_c_QList_QTextBlock_takeLast_to_output(this_ptr: *mut ::list::ListTextBlock, output: *mut ::text_block::TextBlock);
  pub fn qt_gui_c_QList_QTextBlock_value_to_output_i(this_ptr: *const ::list::ListTextBlock, i: ::libc::c_int, output: *mut ::text_block::TextBlock);
  pub fn qt_gui_c_QList_QTextBlock_value_to_output_i_defaultValue(this_ptr: *const ::list::ListTextBlock, i: ::libc::c_int, defaultValue: *const ::text_block::TextBlock, output: *mut ::text_block::TextBlock);
  pub fn qt_gui_c_QList_QTextFrame_ptr_append_QList_QTextFrame_ptr(this_ptr: *mut ::list::ListTextFrameMutPtr, t: *const ::list::ListTextFrameMutPtr);
  pub fn qt_gui_c_QList_QTextFrame_ptr_append_QTextFrame(this_ptr: *mut ::list::ListTextFrameMutPtr, t: *const *mut ::text_frame::TextFrame);
  pub fn qt_gui_c_QList_QTextFrame_ptr_at(this_ptr: *const ::list::ListTextFrameMutPtr, i: ::libc::c_int) -> *const *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QList_QTextFrame_ptr_back(this_ptr: *mut ::list::ListTextFrameMutPtr) -> *mut *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QList_QTextFrame_ptr_back_const(this_ptr: *const ::list::ListTextFrameMutPtr) -> *const *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QList_QTextFrame_ptr_clear(this_ptr: *mut ::list::ListTextFrameMutPtr);
  pub fn qt_gui_c_QList_QTextFrame_ptr_constFirst(this_ptr: *const ::list::ListTextFrameMutPtr) -> *const *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QList_QTextFrame_ptr_constLast(this_ptr: *const ::list::ListTextFrameMutPtr) -> *const *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QList_QTextFrame_ptr_constructor_l(l: *const ::list::ListTextFrameMutPtr, output: *mut ::list::ListTextFrameMutPtr);
  pub fn qt_gui_c_QList_QTextFrame_ptr_constructor_no_args(output: *mut ::list::ListTextFrameMutPtr);
  pub fn qt_gui_c_QList_QTextFrame_ptr_contains(this_ptr: *const ::list::ListTextFrameMutPtr, t: *const *mut ::text_frame::TextFrame) -> bool;
  pub fn qt_gui_c_QList_QTextFrame_ptr_count_no_args(this_ptr: *const ::list::ListTextFrameMutPtr) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextFrame_ptr_count_t(this_ptr: *const ::list::ListTextFrameMutPtr, t: *const *mut ::text_frame::TextFrame) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextFrame_ptr_destructor(this_ptr: *mut ::list::ListTextFrameMutPtr);
  pub fn qt_gui_c_QList_QTextFrame_ptr_empty(this_ptr: *const ::list::ListTextFrameMutPtr) -> bool;
  pub fn qt_gui_c_QList_QTextFrame_ptr_endsWith(this_ptr: *const ::list::ListTextFrameMutPtr, t: *const *mut ::text_frame::TextFrame) -> bool;
  pub fn qt_gui_c_QList_QTextFrame_ptr_first(this_ptr: *mut ::list::ListTextFrameMutPtr) -> *mut *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QList_QTextFrame_ptr_first_const(this_ptr: *const ::list::ListTextFrameMutPtr) -> *const *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QList_QTextFrame_ptr_front(this_ptr: *mut ::list::ListTextFrameMutPtr) -> *mut *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QList_QTextFrame_ptr_front_const(this_ptr: *const ::list::ListTextFrameMutPtr) -> *const *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QList_QTextFrame_ptr_indexOf_t(this_ptr: *const ::list::ListTextFrameMutPtr, t: *const *mut ::text_frame::TextFrame) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextFrame_ptr_indexOf_t_from(this_ptr: *const ::list::ListTextFrameMutPtr, t: *const *mut ::text_frame::TextFrame, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextFrame_ptr_insert(this_ptr: *mut ::list::ListTextFrameMutPtr, i: ::libc::c_int, t: *const *mut ::text_frame::TextFrame);
  pub fn qt_gui_c_QList_QTextFrame_ptr_isEmpty(this_ptr: *const ::list::ListTextFrameMutPtr) -> bool;
  pub fn qt_gui_c_QList_QTextFrame_ptr_last(this_ptr: *mut ::list::ListTextFrameMutPtr) -> *mut *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QList_QTextFrame_ptr_lastIndexOf_t(this_ptr: *const ::list::ListTextFrameMutPtr, t: *const *mut ::text_frame::TextFrame) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextFrame_ptr_lastIndexOf_t_from(this_ptr: *const ::list::ListTextFrameMutPtr, t: *const *mut ::text_frame::TextFrame, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextFrame_ptr_last_const(this_ptr: *const ::list::ListTextFrameMutPtr) -> *const *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QList_QTextFrame_ptr_length(this_ptr: *const ::list::ListTextFrameMutPtr) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextFrame_ptr_mid_to_output_pos(this_ptr: *const ::list::ListTextFrameMutPtr, pos: ::libc::c_int, output: *mut ::list::ListTextFrameMutPtr);
  pub fn qt_gui_c_QList_QTextFrame_ptr_mid_to_output_pos_length(this_ptr: *const ::list::ListTextFrameMutPtr, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListTextFrameMutPtr);
  pub fn qt_gui_c_QList_QTextFrame_ptr_move(this_ptr: *mut ::list::ListTextFrameMutPtr, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QList_QTextFrame_ptr_operator_add_assign_l(this_ptr: *mut ::list::ListTextFrameMutPtr, l: *const ::list::ListTextFrameMutPtr) -> *mut ::list::ListTextFrameMutPtr;
  pub fn qt_gui_c_QList_QTextFrame_ptr_operator_add_assign_t(this_ptr: *mut ::list::ListTextFrameMutPtr, t: *const *mut ::text_frame::TextFrame) -> *mut ::list::ListTextFrameMutPtr;
  pub fn qt_gui_c_QList_QTextFrame_ptr_operator_add_to_output(this_ptr: *const ::list::ListTextFrameMutPtr, l: *const ::list::ListTextFrameMutPtr, output: *mut ::list::ListTextFrameMutPtr);
  pub fn qt_gui_c_QList_QTextFrame_ptr_operator_assign(this_ptr: *mut ::list::ListTextFrameMutPtr, l: *const ::list::ListTextFrameMutPtr) -> *mut ::list::ListTextFrameMutPtr;
  pub fn qt_gui_c_QList_QTextFrame_ptr_operator_eq(this_ptr: *const ::list::ListTextFrameMutPtr, l: *const ::list::ListTextFrameMutPtr) -> bool;
  pub fn qt_gui_c_QList_QTextFrame_ptr_operator_index(this_ptr: *mut ::list::ListTextFrameMutPtr, i: ::libc::c_int) -> *mut *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QList_QTextFrame_ptr_operator_index_const(this_ptr: *const ::list::ListTextFrameMutPtr, i: ::libc::c_int) -> *const *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QList_QTextFrame_ptr_operator_neq(this_ptr: *const ::list::ListTextFrameMutPtr, l: *const ::list::ListTextFrameMutPtr) -> bool;
  pub fn qt_gui_c_QList_QTextFrame_ptr_operator_shl_l(this_ptr: *mut ::list::ListTextFrameMutPtr, l: *const ::list::ListTextFrameMutPtr) -> *mut ::list::ListTextFrameMutPtr;
  pub fn qt_gui_c_QList_QTextFrame_ptr_operator_shl_t(this_ptr: *mut ::list::ListTextFrameMutPtr, t: *const *mut ::text_frame::TextFrame) -> *mut ::list::ListTextFrameMutPtr;
  pub fn qt_gui_c_QList_QTextFrame_ptr_pop_back(this_ptr: *mut ::list::ListTextFrameMutPtr);
  pub fn qt_gui_c_QList_QTextFrame_ptr_pop_front(this_ptr: *mut ::list::ListTextFrameMutPtr);
  pub fn qt_gui_c_QList_QTextFrame_ptr_prepend(this_ptr: *mut ::list::ListTextFrameMutPtr, t: *const *mut ::text_frame::TextFrame);
  pub fn qt_gui_c_QList_QTextFrame_ptr_push_back(this_ptr: *mut ::list::ListTextFrameMutPtr, t: *const *mut ::text_frame::TextFrame);
  pub fn qt_gui_c_QList_QTextFrame_ptr_push_front(this_ptr: *mut ::list::ListTextFrameMutPtr, t: *const *mut ::text_frame::TextFrame);
  pub fn qt_gui_c_QList_QTextFrame_ptr_removeAll(this_ptr: *mut ::list::ListTextFrameMutPtr, t: *const *mut ::text_frame::TextFrame) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextFrame_ptr_removeAt(this_ptr: *mut ::list::ListTextFrameMutPtr, i: ::libc::c_int);
  pub fn qt_gui_c_QList_QTextFrame_ptr_removeFirst(this_ptr: *mut ::list::ListTextFrameMutPtr);
  pub fn qt_gui_c_QList_QTextFrame_ptr_removeLast(this_ptr: *mut ::list::ListTextFrameMutPtr);
  pub fn qt_gui_c_QList_QTextFrame_ptr_removeOne(this_ptr: *mut ::list::ListTextFrameMutPtr, t: *const *mut ::text_frame::TextFrame) -> bool;
  pub fn qt_gui_c_QList_QTextFrame_ptr_replace(this_ptr: *mut ::list::ListTextFrameMutPtr, i: ::libc::c_int, t: *const *mut ::text_frame::TextFrame);
  pub fn qt_gui_c_QList_QTextFrame_ptr_reserve(this_ptr: *mut ::list::ListTextFrameMutPtr, size: ::libc::c_int);
  pub fn qt_gui_c_QList_QTextFrame_ptr_size(this_ptr: *const ::list::ListTextFrameMutPtr) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextFrame_ptr_startsWith(this_ptr: *const ::list::ListTextFrameMutPtr, t: *const *mut ::text_frame::TextFrame) -> bool;
  pub fn qt_gui_c_QList_QTextFrame_ptr_swap_i_j(this_ptr: *mut ::list::ListTextFrameMutPtr, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_gui_c_QList_QTextFrame_ptr_swap_other(this_ptr: *mut ::list::ListTextFrameMutPtr, other: *mut ::list::ListTextFrameMutPtr);
  pub fn qt_gui_c_QList_QTextFrame_ptr_takeAt(this_ptr: *mut ::list::ListTextFrameMutPtr, i: ::libc::c_int) -> *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QList_QTextFrame_ptr_takeFirst(this_ptr: *mut ::list::ListTextFrameMutPtr) -> *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QList_QTextFrame_ptr_takeLast(this_ptr: *mut ::list::ListTextFrameMutPtr) -> *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QList_QTextFrame_ptr_value_i(this_ptr: *const ::list::ListTextFrameMutPtr, i: ::libc::c_int) -> *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QList_QTextFrame_ptr_value_i_defaultValue(this_ptr: *const ::list::ListTextFrameMutPtr, i: ::libc::c_int, defaultValue: *const *mut ::text_frame::TextFrame) -> *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_append_QList_QTextLayout_FormatRange(this_ptr: *mut ::list::ListTextLayoutFormatRange, t: *const ::list::ListTextLayoutFormatRange);
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_append_QTextLayout_FormatRange(this_ptr: *mut ::list::ListTextLayoutFormatRange, t: *const ::text_layout::FormatRange);
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_at(this_ptr: *const ::list::ListTextLayoutFormatRange, i: ::libc::c_int) -> *const ::text_layout::FormatRange;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_back(this_ptr: *mut ::list::ListTextLayoutFormatRange) -> *mut ::text_layout::FormatRange;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_back_const(this_ptr: *const ::list::ListTextLayoutFormatRange) -> *const ::text_layout::FormatRange;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_clear(this_ptr: *mut ::list::ListTextLayoutFormatRange);
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_constFirst(this_ptr: *const ::list::ListTextLayoutFormatRange) -> *const ::text_layout::FormatRange;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_constLast(this_ptr: *const ::list::ListTextLayoutFormatRange) -> *const ::text_layout::FormatRange;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_constructor_l(l: *const ::list::ListTextLayoutFormatRange, output: *mut ::list::ListTextLayoutFormatRange);
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_constructor_no_args(output: *mut ::list::ListTextLayoutFormatRange);
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_count(this_ptr: *const ::list::ListTextLayoutFormatRange) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_destructor(this_ptr: *mut ::list::ListTextLayoutFormatRange);
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_empty(this_ptr: *const ::list::ListTextLayoutFormatRange) -> bool;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_first(this_ptr: *mut ::list::ListTextLayoutFormatRange) -> *mut ::text_layout::FormatRange;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_first_const(this_ptr: *const ::list::ListTextLayoutFormatRange) -> *const ::text_layout::FormatRange;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_fromVector_to_output(vector: *const ::vector::VectorTextLayoutFormatRange, output: *mut ::list::ListTextLayoutFormatRange);
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_front(this_ptr: *mut ::list::ListTextLayoutFormatRange) -> *mut ::text_layout::FormatRange;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_front_const(this_ptr: *const ::list::ListTextLayoutFormatRange) -> *const ::text_layout::FormatRange;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_insert(this_ptr: *mut ::list::ListTextLayoutFormatRange, i: ::libc::c_int, t: *const ::text_layout::FormatRange);
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_isEmpty(this_ptr: *const ::list::ListTextLayoutFormatRange) -> bool;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_last(this_ptr: *mut ::list::ListTextLayoutFormatRange) -> *mut ::text_layout::FormatRange;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_last_const(this_ptr: *const ::list::ListTextLayoutFormatRange) -> *const ::text_layout::FormatRange;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_length(this_ptr: *const ::list::ListTextLayoutFormatRange) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_mid_to_output_pos(this_ptr: *const ::list::ListTextLayoutFormatRange, pos: ::libc::c_int, output: *mut ::list::ListTextLayoutFormatRange);
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_mid_to_output_pos_length(this_ptr: *const ::list::ListTextLayoutFormatRange, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListTextLayoutFormatRange);
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_move(this_ptr: *mut ::list::ListTextLayoutFormatRange, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_operator_add_assign_l(this_ptr: *mut ::list::ListTextLayoutFormatRange, l: *const ::list::ListTextLayoutFormatRange) -> *mut ::list::ListTextLayoutFormatRange;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_operator_add_assign_t(this_ptr: *mut ::list::ListTextLayoutFormatRange, t: *const ::text_layout::FormatRange) -> *mut ::list::ListTextLayoutFormatRange;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_operator_add_to_output(this_ptr: *const ::list::ListTextLayoutFormatRange, l: *const ::list::ListTextLayoutFormatRange, output: *mut ::list::ListTextLayoutFormatRange);
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_operator_assign(this_ptr: *mut ::list::ListTextLayoutFormatRange, l: *const ::list::ListTextLayoutFormatRange) -> *mut ::list::ListTextLayoutFormatRange;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_operator_index(this_ptr: *mut ::list::ListTextLayoutFormatRange, i: ::libc::c_int) -> *mut ::text_layout::FormatRange;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_operator_index_const(this_ptr: *const ::list::ListTextLayoutFormatRange, i: ::libc::c_int) -> *const ::text_layout::FormatRange;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_operator_shl_l(this_ptr: *mut ::list::ListTextLayoutFormatRange, l: *const ::list::ListTextLayoutFormatRange) -> *mut ::list::ListTextLayoutFormatRange;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_operator_shl_t(this_ptr: *mut ::list::ListTextLayoutFormatRange, t: *const ::text_layout::FormatRange) -> *mut ::list::ListTextLayoutFormatRange;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_pop_back(this_ptr: *mut ::list::ListTextLayoutFormatRange);
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_pop_front(this_ptr: *mut ::list::ListTextLayoutFormatRange);
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_prepend(this_ptr: *mut ::list::ListTextLayoutFormatRange, t: *const ::text_layout::FormatRange);
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_push_back(this_ptr: *mut ::list::ListTextLayoutFormatRange, t: *const ::text_layout::FormatRange);
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_push_front(this_ptr: *mut ::list::ListTextLayoutFormatRange, t: *const ::text_layout::FormatRange);
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_removeAt(this_ptr: *mut ::list::ListTextLayoutFormatRange, i: ::libc::c_int);
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_removeFirst(this_ptr: *mut ::list::ListTextLayoutFormatRange);
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_removeLast(this_ptr: *mut ::list::ListTextLayoutFormatRange);
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_replace(this_ptr: *mut ::list::ListTextLayoutFormatRange, i: ::libc::c_int, t: *const ::text_layout::FormatRange);
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_reserve(this_ptr: *mut ::list::ListTextLayoutFormatRange, size: ::libc::c_int);
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_size(this_ptr: *const ::list::ListTextLayoutFormatRange) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_swap_i_j(this_ptr: *mut ::list::ListTextLayoutFormatRange, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_swap_other(this_ptr: *mut ::list::ListTextLayoutFormatRange, other: *mut ::list::ListTextLayoutFormatRange);
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_takeAt_as_ptr(this_ptr: *mut ::list::ListTextLayoutFormatRange, i: ::libc::c_int) -> *mut ::text_layout::FormatRange;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_takeFirst_as_ptr(this_ptr: *mut ::list::ListTextLayoutFormatRange) -> *mut ::text_layout::FormatRange;
  pub fn qt_gui_c_QList_QTextLayout_FormatRange_takeLast_as_ptr(this_ptr: *mut ::list::ListTextLayoutFormatRange) -> *mut ::text_layout::FormatRange;
  pub fn qt_gui_c_QList_QTextOption_Tab_append_QList_QTextOption_Tab(this_ptr: *mut ::list::ListTextOptionTab, t: *const ::list::ListTextOptionTab);
  pub fn qt_gui_c_QList_QTextOption_Tab_append_QTextOption_Tab(this_ptr: *mut ::list::ListTextOptionTab, t: *const ::text_option::Tab);
  pub fn qt_gui_c_QList_QTextOption_Tab_at(this_ptr: *const ::list::ListTextOptionTab, i: ::libc::c_int) -> *const ::text_option::Tab;
  pub fn qt_gui_c_QList_QTextOption_Tab_back(this_ptr: *mut ::list::ListTextOptionTab) -> *mut ::text_option::Tab;
  pub fn qt_gui_c_QList_QTextOption_Tab_back_const(this_ptr: *const ::list::ListTextOptionTab) -> *const ::text_option::Tab;
  pub fn qt_gui_c_QList_QTextOption_Tab_clear(this_ptr: *mut ::list::ListTextOptionTab);
  pub fn qt_gui_c_QList_QTextOption_Tab_constFirst(this_ptr: *const ::list::ListTextOptionTab) -> *const ::text_option::Tab;
  pub fn qt_gui_c_QList_QTextOption_Tab_constLast(this_ptr: *const ::list::ListTextOptionTab) -> *const ::text_option::Tab;
  pub fn qt_gui_c_QList_QTextOption_Tab_constructor_l(l: *const ::list::ListTextOptionTab, output: *mut ::list::ListTextOptionTab);
  pub fn qt_gui_c_QList_QTextOption_Tab_constructor_no_args(output: *mut ::list::ListTextOptionTab);
  pub fn qt_gui_c_QList_QTextOption_Tab_contains(this_ptr: *const ::list::ListTextOptionTab, t: *const ::text_option::Tab) -> bool;
  pub fn qt_gui_c_QList_QTextOption_Tab_count_no_args(this_ptr: *const ::list::ListTextOptionTab) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextOption_Tab_count_t(this_ptr: *const ::list::ListTextOptionTab, t: *const ::text_option::Tab) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextOption_Tab_destructor(this_ptr: *mut ::list::ListTextOptionTab);
  pub fn qt_gui_c_QList_QTextOption_Tab_empty(this_ptr: *const ::list::ListTextOptionTab) -> bool;
  pub fn qt_gui_c_QList_QTextOption_Tab_endsWith(this_ptr: *const ::list::ListTextOptionTab, t: *const ::text_option::Tab) -> bool;
  pub fn qt_gui_c_QList_QTextOption_Tab_first(this_ptr: *mut ::list::ListTextOptionTab) -> *mut ::text_option::Tab;
  pub fn qt_gui_c_QList_QTextOption_Tab_first_const(this_ptr: *const ::list::ListTextOptionTab) -> *const ::text_option::Tab;
  pub fn qt_gui_c_QList_QTextOption_Tab_front(this_ptr: *mut ::list::ListTextOptionTab) -> *mut ::text_option::Tab;
  pub fn qt_gui_c_QList_QTextOption_Tab_front_const(this_ptr: *const ::list::ListTextOptionTab) -> *const ::text_option::Tab;
  pub fn qt_gui_c_QList_QTextOption_Tab_indexOf_t(this_ptr: *const ::list::ListTextOptionTab, t: *const ::text_option::Tab) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextOption_Tab_indexOf_t_from(this_ptr: *const ::list::ListTextOptionTab, t: *const ::text_option::Tab, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextOption_Tab_insert(this_ptr: *mut ::list::ListTextOptionTab, i: ::libc::c_int, t: *const ::text_option::Tab);
  pub fn qt_gui_c_QList_QTextOption_Tab_isEmpty(this_ptr: *const ::list::ListTextOptionTab) -> bool;
  pub fn qt_gui_c_QList_QTextOption_Tab_last(this_ptr: *mut ::list::ListTextOptionTab) -> *mut ::text_option::Tab;
  pub fn qt_gui_c_QList_QTextOption_Tab_lastIndexOf_t(this_ptr: *const ::list::ListTextOptionTab, t: *const ::text_option::Tab) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextOption_Tab_lastIndexOf_t_from(this_ptr: *const ::list::ListTextOptionTab, t: *const ::text_option::Tab, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextOption_Tab_last_const(this_ptr: *const ::list::ListTextOptionTab) -> *const ::text_option::Tab;
  pub fn qt_gui_c_QList_QTextOption_Tab_length(this_ptr: *const ::list::ListTextOptionTab) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextOption_Tab_mid_to_output_pos(this_ptr: *const ::list::ListTextOptionTab, pos: ::libc::c_int, output: *mut ::list::ListTextOptionTab);
  pub fn qt_gui_c_QList_QTextOption_Tab_mid_to_output_pos_length(this_ptr: *const ::list::ListTextOptionTab, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListTextOptionTab);
  pub fn qt_gui_c_QList_QTextOption_Tab_move(this_ptr: *mut ::list::ListTextOptionTab, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QList_QTextOption_Tab_operator_add_assign_l(this_ptr: *mut ::list::ListTextOptionTab, l: *const ::list::ListTextOptionTab) -> *mut ::list::ListTextOptionTab;
  pub fn qt_gui_c_QList_QTextOption_Tab_operator_add_assign_t(this_ptr: *mut ::list::ListTextOptionTab, t: *const ::text_option::Tab) -> *mut ::list::ListTextOptionTab;
  pub fn qt_gui_c_QList_QTextOption_Tab_operator_add_to_output(this_ptr: *const ::list::ListTextOptionTab, l: *const ::list::ListTextOptionTab, output: *mut ::list::ListTextOptionTab);
  pub fn qt_gui_c_QList_QTextOption_Tab_operator_assign(this_ptr: *mut ::list::ListTextOptionTab, l: *const ::list::ListTextOptionTab) -> *mut ::list::ListTextOptionTab;
  pub fn qt_gui_c_QList_QTextOption_Tab_operator_eq(this_ptr: *const ::list::ListTextOptionTab, l: *const ::list::ListTextOptionTab) -> bool;
  pub fn qt_gui_c_QList_QTextOption_Tab_operator_index(this_ptr: *mut ::list::ListTextOptionTab, i: ::libc::c_int) -> *mut ::text_option::Tab;
  pub fn qt_gui_c_QList_QTextOption_Tab_operator_index_const(this_ptr: *const ::list::ListTextOptionTab, i: ::libc::c_int) -> *const ::text_option::Tab;
  pub fn qt_gui_c_QList_QTextOption_Tab_operator_neq(this_ptr: *const ::list::ListTextOptionTab, l: *const ::list::ListTextOptionTab) -> bool;
  pub fn qt_gui_c_QList_QTextOption_Tab_operator_shl_l(this_ptr: *mut ::list::ListTextOptionTab, l: *const ::list::ListTextOptionTab) -> *mut ::list::ListTextOptionTab;
  pub fn qt_gui_c_QList_QTextOption_Tab_operator_shl_t(this_ptr: *mut ::list::ListTextOptionTab, t: *const ::text_option::Tab) -> *mut ::list::ListTextOptionTab;
  pub fn qt_gui_c_QList_QTextOption_Tab_pop_back(this_ptr: *mut ::list::ListTextOptionTab);
  pub fn qt_gui_c_QList_QTextOption_Tab_pop_front(this_ptr: *mut ::list::ListTextOptionTab);
  pub fn qt_gui_c_QList_QTextOption_Tab_prepend(this_ptr: *mut ::list::ListTextOptionTab, t: *const ::text_option::Tab);
  pub fn qt_gui_c_QList_QTextOption_Tab_push_back(this_ptr: *mut ::list::ListTextOptionTab, t: *const ::text_option::Tab);
  pub fn qt_gui_c_QList_QTextOption_Tab_push_front(this_ptr: *mut ::list::ListTextOptionTab, t: *const ::text_option::Tab);
  pub fn qt_gui_c_QList_QTextOption_Tab_removeAll(this_ptr: *mut ::list::ListTextOptionTab, t: *const ::text_option::Tab) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextOption_Tab_removeAt(this_ptr: *mut ::list::ListTextOptionTab, i: ::libc::c_int);
  pub fn qt_gui_c_QList_QTextOption_Tab_removeFirst(this_ptr: *mut ::list::ListTextOptionTab);
  pub fn qt_gui_c_QList_QTextOption_Tab_removeLast(this_ptr: *mut ::list::ListTextOptionTab);
  pub fn qt_gui_c_QList_QTextOption_Tab_removeOne(this_ptr: *mut ::list::ListTextOptionTab, t: *const ::text_option::Tab) -> bool;
  pub fn qt_gui_c_QList_QTextOption_Tab_replace(this_ptr: *mut ::list::ListTextOptionTab, i: ::libc::c_int, t: *const ::text_option::Tab);
  pub fn qt_gui_c_QList_QTextOption_Tab_reserve(this_ptr: *mut ::list::ListTextOptionTab, size: ::libc::c_int);
  pub fn qt_gui_c_QList_QTextOption_Tab_size(this_ptr: *const ::list::ListTextOptionTab) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTextOption_Tab_startsWith(this_ptr: *const ::list::ListTextOptionTab, t: *const ::text_option::Tab) -> bool;
  pub fn qt_gui_c_QList_QTextOption_Tab_swap_i_j(this_ptr: *mut ::list::ListTextOptionTab, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_gui_c_QList_QTextOption_Tab_swap_other(this_ptr: *mut ::list::ListTextOptionTab, other: *mut ::list::ListTextOptionTab);
  pub fn qt_gui_c_QList_QTextOption_Tab_takeAt_to_output(this_ptr: *mut ::list::ListTextOptionTab, i: ::libc::c_int, output: *mut ::text_option::Tab);
  pub fn qt_gui_c_QList_QTextOption_Tab_takeFirst_to_output(this_ptr: *mut ::list::ListTextOptionTab, output: *mut ::text_option::Tab);
  pub fn qt_gui_c_QList_QTextOption_Tab_takeLast_to_output(this_ptr: *mut ::list::ListTextOptionTab, output: *mut ::text_option::Tab);
  pub fn qt_gui_c_QList_QTextOption_Tab_value_to_output_i(this_ptr: *const ::list::ListTextOptionTab, i: ::libc::c_int, output: *mut ::text_option::Tab);
  pub fn qt_gui_c_QList_QTextOption_Tab_value_to_output_i_defaultValue(this_ptr: *const ::list::ListTextOptionTab, i: ::libc::c_int, defaultValue: *const ::text_option::Tab, output: *mut ::text_option::Tab);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_append_QList_QTouchEvent_TouchPoint(this_ptr: *mut ::list::ListTouchEventTouchPoint, t: *const ::list::ListTouchEventTouchPoint);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_append_QTouchEvent_TouchPoint(this_ptr: *mut ::list::ListTouchEventTouchPoint, t: *const ::touch_event::TouchPoint);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_at(this_ptr: *const ::list::ListTouchEventTouchPoint, i: ::libc::c_int) -> *const ::touch_event::TouchPoint;
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_back(this_ptr: *mut ::list::ListTouchEventTouchPoint) -> *mut ::touch_event::TouchPoint;
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_back_const(this_ptr: *const ::list::ListTouchEventTouchPoint) -> *const ::touch_event::TouchPoint;
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_clear(this_ptr: *mut ::list::ListTouchEventTouchPoint);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_constFirst(this_ptr: *const ::list::ListTouchEventTouchPoint) -> *const ::touch_event::TouchPoint;
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_constLast(this_ptr: *const ::list::ListTouchEventTouchPoint) -> *const ::touch_event::TouchPoint;
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_constructor_l(l: *const ::list::ListTouchEventTouchPoint, output: *mut ::list::ListTouchEventTouchPoint);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_constructor_no_args(output: *mut ::list::ListTouchEventTouchPoint);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_count(this_ptr: *const ::list::ListTouchEventTouchPoint) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_destructor(this_ptr: *mut ::list::ListTouchEventTouchPoint);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_empty(this_ptr: *const ::list::ListTouchEventTouchPoint) -> bool;
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_first(this_ptr: *mut ::list::ListTouchEventTouchPoint) -> *mut ::touch_event::TouchPoint;
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_first_const(this_ptr: *const ::list::ListTouchEventTouchPoint) -> *const ::touch_event::TouchPoint;
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_front(this_ptr: *mut ::list::ListTouchEventTouchPoint) -> *mut ::touch_event::TouchPoint;
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_front_const(this_ptr: *const ::list::ListTouchEventTouchPoint) -> *const ::touch_event::TouchPoint;
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_insert(this_ptr: *mut ::list::ListTouchEventTouchPoint, i: ::libc::c_int, t: *const ::touch_event::TouchPoint);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_isEmpty(this_ptr: *const ::list::ListTouchEventTouchPoint) -> bool;
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_last(this_ptr: *mut ::list::ListTouchEventTouchPoint) -> *mut ::touch_event::TouchPoint;
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_last_const(this_ptr: *const ::list::ListTouchEventTouchPoint) -> *const ::touch_event::TouchPoint;
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_length(this_ptr: *const ::list::ListTouchEventTouchPoint) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_mid_to_output_pos(this_ptr: *const ::list::ListTouchEventTouchPoint, pos: ::libc::c_int, output: *mut ::list::ListTouchEventTouchPoint);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_mid_to_output_pos_length(this_ptr: *const ::list::ListTouchEventTouchPoint, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListTouchEventTouchPoint);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_move(this_ptr: *mut ::list::ListTouchEventTouchPoint, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_operator_add_assign_l(this_ptr: *mut ::list::ListTouchEventTouchPoint, l: *const ::list::ListTouchEventTouchPoint) -> *mut ::list::ListTouchEventTouchPoint;
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_operator_add_assign_t(this_ptr: *mut ::list::ListTouchEventTouchPoint, t: *const ::touch_event::TouchPoint) -> *mut ::list::ListTouchEventTouchPoint;
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_operator_add_to_output(this_ptr: *const ::list::ListTouchEventTouchPoint, l: *const ::list::ListTouchEventTouchPoint, output: *mut ::list::ListTouchEventTouchPoint);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_operator_assign(this_ptr: *mut ::list::ListTouchEventTouchPoint, l: *const ::list::ListTouchEventTouchPoint) -> *mut ::list::ListTouchEventTouchPoint;
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_operator_index(this_ptr: *mut ::list::ListTouchEventTouchPoint, i: ::libc::c_int) -> *mut ::touch_event::TouchPoint;
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_operator_index_const(this_ptr: *const ::list::ListTouchEventTouchPoint, i: ::libc::c_int) -> *const ::touch_event::TouchPoint;
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_operator_shl_l(this_ptr: *mut ::list::ListTouchEventTouchPoint, l: *const ::list::ListTouchEventTouchPoint) -> *mut ::list::ListTouchEventTouchPoint;
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_operator_shl_t(this_ptr: *mut ::list::ListTouchEventTouchPoint, t: *const ::touch_event::TouchPoint) -> *mut ::list::ListTouchEventTouchPoint;
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_pop_back(this_ptr: *mut ::list::ListTouchEventTouchPoint);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_pop_front(this_ptr: *mut ::list::ListTouchEventTouchPoint);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_prepend(this_ptr: *mut ::list::ListTouchEventTouchPoint, t: *const ::touch_event::TouchPoint);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_push_back(this_ptr: *mut ::list::ListTouchEventTouchPoint, t: *const ::touch_event::TouchPoint);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_push_front(this_ptr: *mut ::list::ListTouchEventTouchPoint, t: *const ::touch_event::TouchPoint);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_removeAt(this_ptr: *mut ::list::ListTouchEventTouchPoint, i: ::libc::c_int);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_removeFirst(this_ptr: *mut ::list::ListTouchEventTouchPoint);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_removeLast(this_ptr: *mut ::list::ListTouchEventTouchPoint);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_replace(this_ptr: *mut ::list::ListTouchEventTouchPoint, i: ::libc::c_int, t: *const ::touch_event::TouchPoint);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_reserve(this_ptr: *mut ::list::ListTouchEventTouchPoint, size: ::libc::c_int);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_size(this_ptr: *const ::list::ListTouchEventTouchPoint) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_swap_i_j(this_ptr: *mut ::list::ListTouchEventTouchPoint, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_swap_other(this_ptr: *mut ::list::ListTouchEventTouchPoint, other: *mut ::list::ListTouchEventTouchPoint);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_takeAt_to_output(this_ptr: *mut ::list::ListTouchEventTouchPoint, i: ::libc::c_int, output: *mut ::touch_event::TouchPoint);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_takeFirst_to_output(this_ptr: *mut ::list::ListTouchEventTouchPoint, output: *mut ::touch_event::TouchPoint);
  pub fn qt_gui_c_QList_QTouchEvent_TouchPoint_takeLast_to_output(this_ptr: *mut ::list::ListTouchEventTouchPoint, output: *mut ::touch_event::TouchPoint);
  pub fn qt_gui_c_QList_QWindow_ptr_append_QList_QWindow_ptr(this_ptr: *mut ::list::ListWindowMutPtr, t: *const ::list::ListWindowMutPtr);
  pub fn qt_gui_c_QList_QWindow_ptr_append_QWindow(this_ptr: *mut ::list::ListWindowMutPtr, t: *const *mut ::window::Window);
  pub fn qt_gui_c_QList_QWindow_ptr_at(this_ptr: *const ::list::ListWindowMutPtr, i: ::libc::c_int) -> *const *mut ::window::Window;
  pub fn qt_gui_c_QList_QWindow_ptr_back(this_ptr: *mut ::list::ListWindowMutPtr) -> *mut *mut ::window::Window;
  pub fn qt_gui_c_QList_QWindow_ptr_back_const(this_ptr: *const ::list::ListWindowMutPtr) -> *const *mut ::window::Window;
  pub fn qt_gui_c_QList_QWindow_ptr_clear(this_ptr: *mut ::list::ListWindowMutPtr);
  pub fn qt_gui_c_QList_QWindow_ptr_constFirst(this_ptr: *const ::list::ListWindowMutPtr) -> *const *mut ::window::Window;
  pub fn qt_gui_c_QList_QWindow_ptr_constLast(this_ptr: *const ::list::ListWindowMutPtr) -> *const *mut ::window::Window;
  pub fn qt_gui_c_QList_QWindow_ptr_constructor_l(l: *const ::list::ListWindowMutPtr, output: *mut ::list::ListWindowMutPtr);
  pub fn qt_gui_c_QList_QWindow_ptr_constructor_no_args(output: *mut ::list::ListWindowMutPtr);
  pub fn qt_gui_c_QList_QWindow_ptr_contains(this_ptr: *const ::list::ListWindowMutPtr, t: *const *mut ::window::Window) -> bool;
  pub fn qt_gui_c_QList_QWindow_ptr_count_no_args(this_ptr: *const ::list::ListWindowMutPtr) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QWindow_ptr_count_t(this_ptr: *const ::list::ListWindowMutPtr, t: *const *mut ::window::Window) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QWindow_ptr_destructor(this_ptr: *mut ::list::ListWindowMutPtr);
  pub fn qt_gui_c_QList_QWindow_ptr_empty(this_ptr: *const ::list::ListWindowMutPtr) -> bool;
  pub fn qt_gui_c_QList_QWindow_ptr_endsWith(this_ptr: *const ::list::ListWindowMutPtr, t: *const *mut ::window::Window) -> bool;
  pub fn qt_gui_c_QList_QWindow_ptr_first(this_ptr: *mut ::list::ListWindowMutPtr) -> *mut *mut ::window::Window;
  pub fn qt_gui_c_QList_QWindow_ptr_first_const(this_ptr: *const ::list::ListWindowMutPtr) -> *const *mut ::window::Window;
  pub fn qt_gui_c_QList_QWindow_ptr_front(this_ptr: *mut ::list::ListWindowMutPtr) -> *mut *mut ::window::Window;
  pub fn qt_gui_c_QList_QWindow_ptr_front_const(this_ptr: *const ::list::ListWindowMutPtr) -> *const *mut ::window::Window;
  pub fn qt_gui_c_QList_QWindow_ptr_indexOf_t(this_ptr: *const ::list::ListWindowMutPtr, t: *const *mut ::window::Window) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QWindow_ptr_indexOf_t_from(this_ptr: *const ::list::ListWindowMutPtr, t: *const *mut ::window::Window, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QWindow_ptr_insert(this_ptr: *mut ::list::ListWindowMutPtr, i: ::libc::c_int, t: *const *mut ::window::Window);
  pub fn qt_gui_c_QList_QWindow_ptr_isEmpty(this_ptr: *const ::list::ListWindowMutPtr) -> bool;
  pub fn qt_gui_c_QList_QWindow_ptr_last(this_ptr: *mut ::list::ListWindowMutPtr) -> *mut *mut ::window::Window;
  pub fn qt_gui_c_QList_QWindow_ptr_lastIndexOf_t(this_ptr: *const ::list::ListWindowMutPtr, t: *const *mut ::window::Window) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QWindow_ptr_lastIndexOf_t_from(this_ptr: *const ::list::ListWindowMutPtr, t: *const *mut ::window::Window, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QWindow_ptr_last_const(this_ptr: *const ::list::ListWindowMutPtr) -> *const *mut ::window::Window;
  pub fn qt_gui_c_QList_QWindow_ptr_length(this_ptr: *const ::list::ListWindowMutPtr) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QWindow_ptr_mid_to_output_pos(this_ptr: *const ::list::ListWindowMutPtr, pos: ::libc::c_int, output: *mut ::list::ListWindowMutPtr);
  pub fn qt_gui_c_QList_QWindow_ptr_mid_to_output_pos_length(this_ptr: *const ::list::ListWindowMutPtr, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListWindowMutPtr);
  pub fn qt_gui_c_QList_QWindow_ptr_move(this_ptr: *mut ::list::ListWindowMutPtr, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QList_QWindow_ptr_operator_add_assign_l(this_ptr: *mut ::list::ListWindowMutPtr, l: *const ::list::ListWindowMutPtr) -> *mut ::list::ListWindowMutPtr;
  pub fn qt_gui_c_QList_QWindow_ptr_operator_add_assign_t(this_ptr: *mut ::list::ListWindowMutPtr, t: *const *mut ::window::Window) -> *mut ::list::ListWindowMutPtr;
  pub fn qt_gui_c_QList_QWindow_ptr_operator_add_to_output(this_ptr: *const ::list::ListWindowMutPtr, l: *const ::list::ListWindowMutPtr, output: *mut ::list::ListWindowMutPtr);
  pub fn qt_gui_c_QList_QWindow_ptr_operator_assign(this_ptr: *mut ::list::ListWindowMutPtr, l: *const ::list::ListWindowMutPtr) -> *mut ::list::ListWindowMutPtr;
  pub fn qt_gui_c_QList_QWindow_ptr_operator_eq(this_ptr: *const ::list::ListWindowMutPtr, l: *const ::list::ListWindowMutPtr) -> bool;
  pub fn qt_gui_c_QList_QWindow_ptr_operator_index(this_ptr: *mut ::list::ListWindowMutPtr, i: ::libc::c_int) -> *mut *mut ::window::Window;
  pub fn qt_gui_c_QList_QWindow_ptr_operator_index_const(this_ptr: *const ::list::ListWindowMutPtr, i: ::libc::c_int) -> *const *mut ::window::Window;
  pub fn qt_gui_c_QList_QWindow_ptr_operator_neq(this_ptr: *const ::list::ListWindowMutPtr, l: *const ::list::ListWindowMutPtr) -> bool;
  pub fn qt_gui_c_QList_QWindow_ptr_operator_shl_l(this_ptr: *mut ::list::ListWindowMutPtr, l: *const ::list::ListWindowMutPtr) -> *mut ::list::ListWindowMutPtr;
  pub fn qt_gui_c_QList_QWindow_ptr_operator_shl_t(this_ptr: *mut ::list::ListWindowMutPtr, t: *const *mut ::window::Window) -> *mut ::list::ListWindowMutPtr;
  pub fn qt_gui_c_QList_QWindow_ptr_pop_back(this_ptr: *mut ::list::ListWindowMutPtr);
  pub fn qt_gui_c_QList_QWindow_ptr_pop_front(this_ptr: *mut ::list::ListWindowMutPtr);
  pub fn qt_gui_c_QList_QWindow_ptr_prepend(this_ptr: *mut ::list::ListWindowMutPtr, t: *const *mut ::window::Window);
  pub fn qt_gui_c_QList_QWindow_ptr_push_back(this_ptr: *mut ::list::ListWindowMutPtr, t: *const *mut ::window::Window);
  pub fn qt_gui_c_QList_QWindow_ptr_push_front(this_ptr: *mut ::list::ListWindowMutPtr, t: *const *mut ::window::Window);
  pub fn qt_gui_c_QList_QWindow_ptr_removeAll(this_ptr: *mut ::list::ListWindowMutPtr, t: *const *mut ::window::Window) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QWindow_ptr_removeAt(this_ptr: *mut ::list::ListWindowMutPtr, i: ::libc::c_int);
  pub fn qt_gui_c_QList_QWindow_ptr_removeFirst(this_ptr: *mut ::list::ListWindowMutPtr);
  pub fn qt_gui_c_QList_QWindow_ptr_removeLast(this_ptr: *mut ::list::ListWindowMutPtr);
  pub fn qt_gui_c_QList_QWindow_ptr_removeOne(this_ptr: *mut ::list::ListWindowMutPtr, t: *const *mut ::window::Window) -> bool;
  pub fn qt_gui_c_QList_QWindow_ptr_replace(this_ptr: *mut ::list::ListWindowMutPtr, i: ::libc::c_int, t: *const *mut ::window::Window);
  pub fn qt_gui_c_QList_QWindow_ptr_reserve(this_ptr: *mut ::list::ListWindowMutPtr, size: ::libc::c_int);
  pub fn qt_gui_c_QList_QWindow_ptr_size(this_ptr: *const ::list::ListWindowMutPtr) -> ::libc::c_int;
  pub fn qt_gui_c_QList_QWindow_ptr_startsWith(this_ptr: *const ::list::ListWindowMutPtr, t: *const *mut ::window::Window) -> bool;
  pub fn qt_gui_c_QList_QWindow_ptr_swap_i_j(this_ptr: *mut ::list::ListWindowMutPtr, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_gui_c_QList_QWindow_ptr_swap_other(this_ptr: *mut ::list::ListWindowMutPtr, other: *mut ::list::ListWindowMutPtr);
  pub fn qt_gui_c_QList_QWindow_ptr_takeAt(this_ptr: *mut ::list::ListWindowMutPtr, i: ::libc::c_int) -> *mut ::window::Window;
  pub fn qt_gui_c_QList_QWindow_ptr_takeFirst(this_ptr: *mut ::list::ListWindowMutPtr) -> *mut ::window::Window;
  pub fn qt_gui_c_QList_QWindow_ptr_takeLast(this_ptr: *mut ::list::ListWindowMutPtr) -> *mut ::window::Window;
  pub fn qt_gui_c_QList_QWindow_ptr_value_i(this_ptr: *const ::list::ListWindowMutPtr, i: ::libc::c_int) -> *mut ::window::Window;
  pub fn qt_gui_c_QList_QWindow_ptr_value_i_defaultValue(this_ptr: *const ::list::ListWindowMutPtr, i: ::libc::c_int, defaultValue: *const *mut ::window::Window) -> *mut ::window::Window;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_append_QList_const_QTouchDevice_ptr(this_ptr: *mut ::list::ListTouchDevicePtr, t: *const ::list::ListTouchDevicePtr);
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_append_QTouchDevice(this_ptr: *mut ::list::ListTouchDevicePtr, t: *const *const ::touch_device::TouchDevice);
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_at(this_ptr: *const ::list::ListTouchDevicePtr, i: ::libc::c_int) -> *const *const ::touch_device::TouchDevice;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_back(this_ptr: *mut ::list::ListTouchDevicePtr) -> *mut *const ::touch_device::TouchDevice;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_back_const(this_ptr: *const ::list::ListTouchDevicePtr) -> *const *const ::touch_device::TouchDevice;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_clear(this_ptr: *mut ::list::ListTouchDevicePtr);
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_constFirst(this_ptr: *const ::list::ListTouchDevicePtr) -> *const *const ::touch_device::TouchDevice;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_constLast(this_ptr: *const ::list::ListTouchDevicePtr) -> *const *const ::touch_device::TouchDevice;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_constructor_l(l: *const ::list::ListTouchDevicePtr, output: *mut ::list::ListTouchDevicePtr);
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_constructor_no_args(output: *mut ::list::ListTouchDevicePtr);
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_contains(this_ptr: *const ::list::ListTouchDevicePtr, t: *const *const ::touch_device::TouchDevice) -> bool;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_count_no_args(this_ptr: *const ::list::ListTouchDevicePtr) -> ::libc::c_int;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_count_t(this_ptr: *const ::list::ListTouchDevicePtr, t: *const *const ::touch_device::TouchDevice) -> ::libc::c_int;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_destructor(this_ptr: *mut ::list::ListTouchDevicePtr);
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_empty(this_ptr: *const ::list::ListTouchDevicePtr) -> bool;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_endsWith(this_ptr: *const ::list::ListTouchDevicePtr, t: *const *const ::touch_device::TouchDevice) -> bool;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_first(this_ptr: *mut ::list::ListTouchDevicePtr) -> *mut *const ::touch_device::TouchDevice;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_first_const(this_ptr: *const ::list::ListTouchDevicePtr) -> *const *const ::touch_device::TouchDevice;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_front(this_ptr: *mut ::list::ListTouchDevicePtr) -> *mut *const ::touch_device::TouchDevice;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_front_const(this_ptr: *const ::list::ListTouchDevicePtr) -> *const *const ::touch_device::TouchDevice;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_indexOf_t(this_ptr: *const ::list::ListTouchDevicePtr, t: *const *const ::touch_device::TouchDevice) -> ::libc::c_int;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_indexOf_t_from(this_ptr: *const ::list::ListTouchDevicePtr, t: *const *const ::touch_device::TouchDevice, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_insert(this_ptr: *mut ::list::ListTouchDevicePtr, i: ::libc::c_int, t: *const *const ::touch_device::TouchDevice);
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_isEmpty(this_ptr: *const ::list::ListTouchDevicePtr) -> bool;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_last(this_ptr: *mut ::list::ListTouchDevicePtr) -> *mut *const ::touch_device::TouchDevice;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_lastIndexOf_t(this_ptr: *const ::list::ListTouchDevicePtr, t: *const *const ::touch_device::TouchDevice) -> ::libc::c_int;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_lastIndexOf_t_from(this_ptr: *const ::list::ListTouchDevicePtr, t: *const *const ::touch_device::TouchDevice, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_last_const(this_ptr: *const ::list::ListTouchDevicePtr) -> *const *const ::touch_device::TouchDevice;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_length(this_ptr: *const ::list::ListTouchDevicePtr) -> ::libc::c_int;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_mid_to_output_pos(this_ptr: *const ::list::ListTouchDevicePtr, pos: ::libc::c_int, output: *mut ::list::ListTouchDevicePtr);
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_mid_to_output_pos_length(this_ptr: *const ::list::ListTouchDevicePtr, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListTouchDevicePtr);
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_move(this_ptr: *mut ::list::ListTouchDevicePtr, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_operator_add_assign_l(this_ptr: *mut ::list::ListTouchDevicePtr, l: *const ::list::ListTouchDevicePtr) -> *mut ::list::ListTouchDevicePtr;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_operator_add_assign_t(this_ptr: *mut ::list::ListTouchDevicePtr, t: *const *const ::touch_device::TouchDevice) -> *mut ::list::ListTouchDevicePtr;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_operator_add_to_output(this_ptr: *const ::list::ListTouchDevicePtr, l: *const ::list::ListTouchDevicePtr, output: *mut ::list::ListTouchDevicePtr);
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_operator_assign(this_ptr: *mut ::list::ListTouchDevicePtr, l: *const ::list::ListTouchDevicePtr) -> *mut ::list::ListTouchDevicePtr;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_operator_eq(this_ptr: *const ::list::ListTouchDevicePtr, l: *const ::list::ListTouchDevicePtr) -> bool;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_operator_index(this_ptr: *mut ::list::ListTouchDevicePtr, i: ::libc::c_int) -> *mut *const ::touch_device::TouchDevice;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_operator_index_const(this_ptr: *const ::list::ListTouchDevicePtr, i: ::libc::c_int) -> *const *const ::touch_device::TouchDevice;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_operator_neq(this_ptr: *const ::list::ListTouchDevicePtr, l: *const ::list::ListTouchDevicePtr) -> bool;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_operator_shl_l(this_ptr: *mut ::list::ListTouchDevicePtr, l: *const ::list::ListTouchDevicePtr) -> *mut ::list::ListTouchDevicePtr;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_operator_shl_t(this_ptr: *mut ::list::ListTouchDevicePtr, t: *const *const ::touch_device::TouchDevice) -> *mut ::list::ListTouchDevicePtr;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_pop_back(this_ptr: *mut ::list::ListTouchDevicePtr);
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_pop_front(this_ptr: *mut ::list::ListTouchDevicePtr);
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_prepend(this_ptr: *mut ::list::ListTouchDevicePtr, t: *const *const ::touch_device::TouchDevice);
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_push_back(this_ptr: *mut ::list::ListTouchDevicePtr, t: *const *const ::touch_device::TouchDevice);
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_push_front(this_ptr: *mut ::list::ListTouchDevicePtr, t: *const *const ::touch_device::TouchDevice);
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_removeAll(this_ptr: *mut ::list::ListTouchDevicePtr, t: *const *const ::touch_device::TouchDevice) -> ::libc::c_int;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_removeAt(this_ptr: *mut ::list::ListTouchDevicePtr, i: ::libc::c_int);
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_removeFirst(this_ptr: *mut ::list::ListTouchDevicePtr);
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_removeLast(this_ptr: *mut ::list::ListTouchDevicePtr);
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_removeOne(this_ptr: *mut ::list::ListTouchDevicePtr, t: *const *const ::touch_device::TouchDevice) -> bool;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_replace(this_ptr: *mut ::list::ListTouchDevicePtr, i: ::libc::c_int, t: *const *const ::touch_device::TouchDevice);
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_reserve(this_ptr: *mut ::list::ListTouchDevicePtr, size: ::libc::c_int);
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_size(this_ptr: *const ::list::ListTouchDevicePtr) -> ::libc::c_int;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_startsWith(this_ptr: *const ::list::ListTouchDevicePtr, t: *const *const ::touch_device::TouchDevice) -> bool;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_swap_i_j(this_ptr: *mut ::list::ListTouchDevicePtr, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_swap_other(this_ptr: *mut ::list::ListTouchDevicePtr, other: *mut ::list::ListTouchDevicePtr);
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_takeAt(this_ptr: *mut ::list::ListTouchDevicePtr, i: ::libc::c_int) -> *const ::touch_device::TouchDevice;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_takeFirst(this_ptr: *mut ::list::ListTouchDevicePtr) -> *const ::touch_device::TouchDevice;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_takeLast(this_ptr: *mut ::list::ListTouchDevicePtr) -> *const ::touch_device::TouchDevice;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_value_i(this_ptr: *const ::list::ListTouchDevicePtr, i: ::libc::c_int) -> *const ::touch_device::TouchDevice;
  pub fn qt_gui_c_QList_const_QTouchDevice_ptr_value_i_defaultValue(this_ptr: *const ::list::ListTouchDevicePtr, i: ::libc::c_int, defaultValue: *const *const ::touch_device::TouchDevice) -> *const ::touch_device::TouchDevice;
  pub fn qt_gui_c_QList_double_append_QList_double(this_ptr: *mut ::list::ListCDouble, t: *const ::list::ListCDouble);
  pub fn qt_gui_c_QList_double_append_double(this_ptr: *mut ::list::ListCDouble, t: *const ::libc::c_double);
  pub fn qt_gui_c_QList_double_at(this_ptr: *const ::list::ListCDouble, i: ::libc::c_int) -> *const ::libc::c_double;
  pub fn qt_gui_c_QList_double_back(this_ptr: *mut ::list::ListCDouble) -> *mut ::libc::c_double;
  pub fn qt_gui_c_QList_double_back_const(this_ptr: *const ::list::ListCDouble) -> *const ::libc::c_double;
  pub fn qt_gui_c_QList_double_clear(this_ptr: *mut ::list::ListCDouble);
  pub fn qt_gui_c_QList_double_constFirst(this_ptr: *const ::list::ListCDouble) -> *const ::libc::c_double;
  pub fn qt_gui_c_QList_double_constLast(this_ptr: *const ::list::ListCDouble) -> *const ::libc::c_double;
  pub fn qt_gui_c_QList_double_constructor_l(l: *const ::list::ListCDouble, output: *mut ::list::ListCDouble);
  pub fn qt_gui_c_QList_double_constructor_no_args(output: *mut ::list::ListCDouble);
  pub fn qt_gui_c_QList_double_contains(this_ptr: *const ::list::ListCDouble, t: *const ::libc::c_double) -> bool;
  pub fn qt_gui_c_QList_double_count_no_args(this_ptr: *const ::list::ListCDouble) -> ::libc::c_int;
  pub fn qt_gui_c_QList_double_count_t(this_ptr: *const ::list::ListCDouble, t: *const ::libc::c_double) -> ::libc::c_int;
  pub fn qt_gui_c_QList_double_destructor(this_ptr: *mut ::list::ListCDouble);
  pub fn qt_gui_c_QList_double_empty(this_ptr: *const ::list::ListCDouble) -> bool;
  pub fn qt_gui_c_QList_double_endsWith(this_ptr: *const ::list::ListCDouble, t: *const ::libc::c_double) -> bool;
  pub fn qt_gui_c_QList_double_first(this_ptr: *mut ::list::ListCDouble) -> *mut ::libc::c_double;
  pub fn qt_gui_c_QList_double_first_const(this_ptr: *const ::list::ListCDouble) -> *const ::libc::c_double;
  pub fn qt_gui_c_QList_double_fromVector_to_output(vector: *const ::vector::VectorCDouble, output: *mut ::list::ListCDouble);
  pub fn qt_gui_c_QList_double_front(this_ptr: *mut ::list::ListCDouble) -> *mut ::libc::c_double;
  pub fn qt_gui_c_QList_double_front_const(this_ptr: *const ::list::ListCDouble) -> *const ::libc::c_double;
  pub fn qt_gui_c_QList_double_indexOf_t(this_ptr: *const ::list::ListCDouble, t: *const ::libc::c_double) -> ::libc::c_int;
  pub fn qt_gui_c_QList_double_indexOf_t_from(this_ptr: *const ::list::ListCDouble, t: *const ::libc::c_double, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_double_insert(this_ptr: *mut ::list::ListCDouble, i: ::libc::c_int, t: *const ::libc::c_double);
  pub fn qt_gui_c_QList_double_isEmpty(this_ptr: *const ::list::ListCDouble) -> bool;
  pub fn qt_gui_c_QList_double_last(this_ptr: *mut ::list::ListCDouble) -> *mut ::libc::c_double;
  pub fn qt_gui_c_QList_double_lastIndexOf_t(this_ptr: *const ::list::ListCDouble, t: *const ::libc::c_double) -> ::libc::c_int;
  pub fn qt_gui_c_QList_double_lastIndexOf_t_from(this_ptr: *const ::list::ListCDouble, t: *const ::libc::c_double, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QList_double_last_const(this_ptr: *const ::list::ListCDouble) -> *const ::libc::c_double;
  pub fn qt_gui_c_QList_double_length(this_ptr: *const ::list::ListCDouble) -> ::libc::c_int;
  pub fn qt_gui_c_QList_double_mid_to_output_pos(this_ptr: *const ::list::ListCDouble, pos: ::libc::c_int, output: *mut ::list::ListCDouble);
  pub fn qt_gui_c_QList_double_mid_to_output_pos_length(this_ptr: *const ::list::ListCDouble, pos: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListCDouble);
  pub fn qt_gui_c_QList_double_move(this_ptr: *mut ::list::ListCDouble, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QList_double_operator_add_assign_l(this_ptr: *mut ::list::ListCDouble, l: *const ::list::ListCDouble) -> *mut ::list::ListCDouble;
  pub fn qt_gui_c_QList_double_operator_add_assign_t(this_ptr: *mut ::list::ListCDouble, t: *const ::libc::c_double) -> *mut ::list::ListCDouble;
  pub fn qt_gui_c_QList_double_operator_add_to_output(this_ptr: *const ::list::ListCDouble, l: *const ::list::ListCDouble, output: *mut ::list::ListCDouble);
  pub fn qt_gui_c_QList_double_operator_assign(this_ptr: *mut ::list::ListCDouble, l: *const ::list::ListCDouble) -> *mut ::list::ListCDouble;
  pub fn qt_gui_c_QList_double_operator_eq(this_ptr: *const ::list::ListCDouble, l: *const ::list::ListCDouble) -> bool;
  pub fn qt_gui_c_QList_double_operator_index(this_ptr: *mut ::list::ListCDouble, i: ::libc::c_int) -> *mut ::libc::c_double;
  pub fn qt_gui_c_QList_double_operator_index_const(this_ptr: *const ::list::ListCDouble, i: ::libc::c_int) -> *const ::libc::c_double;
  pub fn qt_gui_c_QList_double_operator_neq(this_ptr: *const ::list::ListCDouble, l: *const ::list::ListCDouble) -> bool;
  pub fn qt_gui_c_QList_double_operator_shl_l(this_ptr: *mut ::list::ListCDouble, l: *const ::list::ListCDouble) -> *mut ::list::ListCDouble;
  pub fn qt_gui_c_QList_double_operator_shl_t(this_ptr: *mut ::list::ListCDouble, t: *const ::libc::c_double) -> *mut ::list::ListCDouble;
  pub fn qt_gui_c_QList_double_pop_back(this_ptr: *mut ::list::ListCDouble);
  pub fn qt_gui_c_QList_double_pop_front(this_ptr: *mut ::list::ListCDouble);
  pub fn qt_gui_c_QList_double_prepend(this_ptr: *mut ::list::ListCDouble, t: *const ::libc::c_double);
  pub fn qt_gui_c_QList_double_push_back(this_ptr: *mut ::list::ListCDouble, t: *const ::libc::c_double);
  pub fn qt_gui_c_QList_double_push_front(this_ptr: *mut ::list::ListCDouble, t: *const ::libc::c_double);
  pub fn qt_gui_c_QList_double_removeAll(this_ptr: *mut ::list::ListCDouble, t: *const ::libc::c_double) -> ::libc::c_int;
  pub fn qt_gui_c_QList_double_removeAt(this_ptr: *mut ::list::ListCDouble, i: ::libc::c_int);
  pub fn qt_gui_c_QList_double_removeFirst(this_ptr: *mut ::list::ListCDouble);
  pub fn qt_gui_c_QList_double_removeLast(this_ptr: *mut ::list::ListCDouble);
  pub fn qt_gui_c_QList_double_removeOne(this_ptr: *mut ::list::ListCDouble, t: *const ::libc::c_double) -> bool;
  pub fn qt_gui_c_QList_double_replace(this_ptr: *mut ::list::ListCDouble, i: ::libc::c_int, t: *const ::libc::c_double);
  pub fn qt_gui_c_QList_double_reserve(this_ptr: *mut ::list::ListCDouble, size: ::libc::c_int);
  pub fn qt_gui_c_QList_double_size(this_ptr: *const ::list::ListCDouble) -> ::libc::c_int;
  pub fn qt_gui_c_QList_double_startsWith(this_ptr: *const ::list::ListCDouble, t: *const ::libc::c_double) -> bool;
  pub fn qt_gui_c_QList_double_swap_i_j(this_ptr: *mut ::list::ListCDouble, i: ::libc::c_int, j: ::libc::c_int);
  pub fn qt_gui_c_QList_double_swap_other(this_ptr: *mut ::list::ListCDouble, other: *mut ::list::ListCDouble);
  pub fn qt_gui_c_QList_double_takeAt(this_ptr: *mut ::list::ListCDouble, i: ::libc::c_int) -> ::libc::c_double;
  pub fn qt_gui_c_QList_double_takeFirst(this_ptr: *mut ::list::ListCDouble) -> ::libc::c_double;
  pub fn qt_gui_c_QList_double_takeLast(this_ptr: *mut ::list::ListCDouble) -> ::libc::c_double;
  pub fn qt_gui_c_QList_double_toVector_to_output(this_ptr: *const ::list::ListCDouble, output: *mut ::vector::VectorCDouble);
  pub fn qt_gui_c_QList_double_value_i(this_ptr: *const ::list::ListCDouble, i: ::libc::c_int) -> ::libc::c_double;
  pub fn qt_gui_c_QList_double_value_i_defaultValue(this_ptr: *const ::list::ListCDouble, i: ::libc::c_int, defaultValue: *const ::libc::c_double) -> ::libc::c_double;

  // Header: QMatrix
  pub fn qt_gui_c_QMatrix_G_operator_mul_as_ptr(r: *const ::region::Region, m: *const ::matrix::Matrix) -> *mut ::region::Region;
  pub fn qt_gui_c_QMatrix_G_operator_mul_to_output_QLineF_QMatrix(l: *const ::qt_core::line_f::LineF, m: *const ::matrix::Matrix, output: *mut ::qt_core::line_f::LineF);
  pub fn qt_gui_c_QMatrix_G_operator_mul_to_output_QLine_QMatrix(l: *const ::qt_core::line::Line, m: *const ::matrix::Matrix, output: *mut ::qt_core::line::Line);
  pub fn qt_gui_c_QMatrix_G_operator_mul_to_output_QPainterPath_QMatrix(p: *const ::painter_path::PainterPath, m: *const ::matrix::Matrix, output: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QMatrix_G_operator_mul_to_output_QPointF_QMatrix(p: *const ::qt_core::point_f::PointF, m: *const ::matrix::Matrix, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QMatrix_G_operator_mul_to_output_QPoint_QMatrix(p: *const ::qt_core::point::Point, m: *const ::matrix::Matrix, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QMatrix_G_operator_mul_to_output_QPolygonF_QMatrix(a: *const ::polygon_f::PolygonF, m: *const ::matrix::Matrix, output: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QMatrix_G_operator_mul_to_output_QPolygon_QMatrix(a: *const ::polygon::Polygon, m: *const ::matrix::Matrix, output: *mut ::polygon::Polygon);
  pub fn qt_gui_c_QMatrix_G_operator_shl(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *const ::matrix::Matrix) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QMatrix_G_operator_shl_to_output(arg1: *const ::qt_core::debug::Debug, arg2: *const ::matrix::Matrix, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QMatrix_G_operator_shr(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *mut ::matrix::Matrix) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QMatrix_G_qFuzzyCompare(m1: *const ::matrix::Matrix, m2: *const ::matrix::Matrix) -> bool;
  pub fn qt_gui_c_QMatrix_G_qHash_key(key: *const ::matrix::Matrix) -> ::libc::c_uint;
  pub fn qt_gui_c_QMatrix_G_qHash_key_seed(key: *const ::matrix::Matrix, seed: ::libc::c_uint) -> ::libc::c_uint;
  pub fn qt_gui_c_QMatrix_constructor_m11_m12_m21_m22_dx_dy(m11: ::libc::c_double, m12: ::libc::c_double, m21: ::libc::c_double, m22: ::libc::c_double, dx: ::libc::c_double, dy: ::libc::c_double, output: *mut ::matrix::Matrix);
  pub fn qt_gui_c_QMatrix_constructor_no_args(output: *mut ::matrix::Matrix);
  pub fn qt_gui_c_QMatrix_constructor_other(other: *const ::matrix::Matrix, output: *mut ::matrix::Matrix);
  pub fn qt_gui_c_QMatrix_convert_to_QVariant_to_output(this_ptr: *const ::matrix::Matrix, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QMatrix_destructor(this_ptr: *mut ::matrix::Matrix);
  pub fn qt_gui_c_QMatrix_determinant(this_ptr: *const ::matrix::Matrix) -> ::libc::c_double;
  pub fn qt_gui_c_QMatrix_dx(this_ptr: *const ::matrix::Matrix) -> ::libc::c_double;
  pub fn qt_gui_c_QMatrix_dy(this_ptr: *const ::matrix::Matrix) -> ::libc::c_double;
  pub fn qt_gui_c_QMatrix_inverted_to_output_invertible(this_ptr: *const ::matrix::Matrix, invertible: *mut bool, output: *mut ::matrix::Matrix);
  pub fn qt_gui_c_QMatrix_inverted_to_output_no_args(this_ptr: *const ::matrix::Matrix, output: *mut ::matrix::Matrix);
  pub fn qt_gui_c_QMatrix_isIdentity(this_ptr: *const ::matrix::Matrix) -> bool;
  pub fn qt_gui_c_QMatrix_isInvertible(this_ptr: *const ::matrix::Matrix) -> bool;
  pub fn qt_gui_c_QMatrix_m11(this_ptr: *const ::matrix::Matrix) -> ::libc::c_double;
  pub fn qt_gui_c_QMatrix_m12(this_ptr: *const ::matrix::Matrix) -> ::libc::c_double;
  pub fn qt_gui_c_QMatrix_m21(this_ptr: *const ::matrix::Matrix) -> ::libc::c_double;
  pub fn qt_gui_c_QMatrix_m22(this_ptr: *const ::matrix::Matrix) -> ::libc::c_double;
  pub fn qt_gui_c_QMatrix_mapRect_to_output_QRect(this_ptr: *const ::matrix::Matrix, arg1: *const ::qt_core::rect::Rect, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QMatrix_mapRect_to_output_QRectF(this_ptr: *const ::matrix::Matrix, arg1: *const ::qt_core::rect_f::RectF, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QMatrix_mapToPolygon_to_output(this_ptr: *const ::matrix::Matrix, r: *const ::qt_core::rect::Rect, output: *mut ::polygon::Polygon);
  pub fn qt_gui_c_QMatrix_map_as_ptr(this_ptr: *const ::matrix::Matrix, r: *const ::region::Region) -> *mut ::region::Region;
  pub fn qt_gui_c_QMatrix_map_double_double_double_double(this_ptr: *const ::matrix::Matrix, x: ::libc::c_double, y: ::libc::c_double, tx: *mut ::libc::c_double, ty: *mut ::libc::c_double);
  pub fn qt_gui_c_QMatrix_map_int_int_int_int(this_ptr: *const ::matrix::Matrix, x: ::libc::c_int, y: ::libc::c_int, tx: *mut ::libc::c_int, ty: *mut ::libc::c_int);
  pub fn qt_gui_c_QMatrix_map_to_output_QLine(this_ptr: *const ::matrix::Matrix, l: *const ::qt_core::line::Line, output: *mut ::qt_core::line::Line);
  pub fn qt_gui_c_QMatrix_map_to_output_QLineF(this_ptr: *const ::matrix::Matrix, l: *const ::qt_core::line_f::LineF, output: *mut ::qt_core::line_f::LineF);
  pub fn qt_gui_c_QMatrix_map_to_output_QPainterPath(this_ptr: *const ::matrix::Matrix, p: *const ::painter_path::PainterPath, output: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QMatrix_map_to_output_QPoint(this_ptr: *const ::matrix::Matrix, p: *const ::qt_core::point::Point, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QMatrix_map_to_output_QPointF(this_ptr: *const ::matrix::Matrix, p: *const ::qt_core::point_f::PointF, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QMatrix_map_to_output_QPolygon(this_ptr: *const ::matrix::Matrix, a: *const ::polygon::Polygon, output: *mut ::polygon::Polygon);
  pub fn qt_gui_c_QMatrix_map_to_output_QPolygonF(this_ptr: *const ::matrix::Matrix, a: *const ::polygon_f::PolygonF, output: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QMatrix_operator_assign(this_ptr: *mut ::matrix::Matrix, arg1: *const ::matrix::Matrix) -> *mut ::matrix::Matrix;
  pub fn qt_gui_c_QMatrix_operator_eq(this_ptr: *const ::matrix::Matrix, arg1: *const ::matrix::Matrix) -> bool;
  pub fn qt_gui_c_QMatrix_operator_mul_assign(this_ptr: *mut ::matrix::Matrix, arg1: *const ::matrix::Matrix) -> *mut ::matrix::Matrix;
  pub fn qt_gui_c_QMatrix_operator_mul_to_output(this_ptr: *const ::matrix::Matrix, o: *const ::matrix::Matrix, output: *mut ::matrix::Matrix);
  pub fn qt_gui_c_QMatrix_operator_neq(this_ptr: *const ::matrix::Matrix, arg1: *const ::matrix::Matrix) -> bool;
  pub fn qt_gui_c_QMatrix_reset(this_ptr: *mut ::matrix::Matrix);
  pub fn qt_gui_c_QMatrix_rotate(this_ptr: *mut ::matrix::Matrix, a: ::libc::c_double) -> *mut ::matrix::Matrix;
  pub fn qt_gui_c_QMatrix_scale(this_ptr: *mut ::matrix::Matrix, sx: ::libc::c_double, sy: ::libc::c_double) -> *mut ::matrix::Matrix;
  pub fn qt_gui_c_QMatrix_setMatrix(this_ptr: *mut ::matrix::Matrix, m11: ::libc::c_double, m12: ::libc::c_double, m21: ::libc::c_double, m22: ::libc::c_double, dx: ::libc::c_double, dy: ::libc::c_double);
  pub fn qt_gui_c_QMatrix_shear(this_ptr: *mut ::matrix::Matrix, sh: ::libc::c_double, sv: ::libc::c_double) -> *mut ::matrix::Matrix;
  pub fn qt_gui_c_QMatrix_translate(this_ptr: *mut ::matrix::Matrix, dx: ::libc::c_double, dy: ::libc::c_double) -> *mut ::matrix::Matrix;

  // Header: QMatrix4x4
  pub fn qt_gui_c_QMatrix4x4_G_operator_shl(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *const ::matrix_4x4::Matrix4X4) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QMatrix4x4_G_operator_shr(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *mut ::matrix_4x4::Matrix4X4) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QMatrix4x4_column_as_ptr(this_ptr: *const ::matrix_4x4::Matrix4X4, index: ::libc::c_int) -> *mut ::vector_4d::Vector4D;
  pub fn qt_gui_c_QMatrix4x4_constData(this_ptr: *const ::matrix_4x4::Matrix4X4) -> *const ::libc::c_float;
  pub fn qt_gui_c_QMatrix4x4_convert_to_QVariant_to_output(this_ptr: *const ::matrix_4x4::Matrix4X4, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QMatrix4x4_copyDataTo(this_ptr: *const ::matrix_4x4::Matrix4X4, values: *mut ::libc::c_float);
  pub fn qt_gui_c_QMatrix4x4_data(this_ptr: *mut ::matrix_4x4::Matrix4X4) -> *mut ::libc::c_float;
  pub fn qt_gui_c_QMatrix4x4_data_const(this_ptr: *const ::matrix_4x4::Matrix4X4) -> *const ::libc::c_float;
  pub fn qt_gui_c_QMatrix4x4_delete(this_ptr: *mut ::matrix_4x4::Matrix4X4);
  pub fn qt_gui_c_QMatrix4x4_determinant(this_ptr: *const ::matrix_4x4::Matrix4X4) -> ::libc::c_double;
  pub fn qt_gui_c_QMatrix4x4_fill(this_ptr: *mut ::matrix_4x4::Matrix4X4, value: ::libc::c_float);
  pub fn qt_gui_c_QMatrix4x4_flipCoordinates(this_ptr: *mut ::matrix_4x4::Matrix4X4);
  pub fn qt_gui_c_QMatrix4x4_frustum(this_ptr: *mut ::matrix_4x4::Matrix4X4, left: ::libc::c_float, right: ::libc::c_float, bottom: ::libc::c_float, top: ::libc::c_float, nearPlane: ::libc::c_float, farPlane: ::libc::c_float);
  pub fn qt_gui_c_QMatrix4x4_inverted_as_ptr_invertible(this_ptr: *const ::matrix_4x4::Matrix4X4, invertible: *mut bool) -> *mut ::matrix_4x4::Matrix4X4;
  pub fn qt_gui_c_QMatrix4x4_inverted_as_ptr_no_args(this_ptr: *const ::matrix_4x4::Matrix4X4) -> *mut ::matrix_4x4::Matrix4X4;
  pub fn qt_gui_c_QMatrix4x4_isAffine(this_ptr: *const ::matrix_4x4::Matrix4X4) -> bool;
  pub fn qt_gui_c_QMatrix4x4_isIdentity(this_ptr: *const ::matrix_4x4::Matrix4X4) -> bool;
  pub fn qt_gui_c_QMatrix4x4_lookAt(this_ptr: *mut ::matrix_4x4::Matrix4X4, eye: *const ::vector_3d::Vector3D, center: *const ::vector_3d::Vector3D, up: *const ::vector_3d::Vector3D);
  pub fn qt_gui_c_QMatrix4x4_mapRect_to_output_QRect(this_ptr: *const ::matrix_4x4::Matrix4X4, rect: *const ::qt_core::rect::Rect, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QMatrix4x4_mapRect_to_output_QRectF(this_ptr: *const ::matrix_4x4::Matrix4X4, rect: *const ::qt_core::rect_f::RectF, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QMatrix4x4_mapVector_as_ptr(this_ptr: *const ::matrix_4x4::Matrix4X4, vector: *const ::vector_3d::Vector3D) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QMatrix4x4_map_as_ptr_QVector3D(this_ptr: *const ::matrix_4x4::Matrix4X4, point: *const ::vector_3d::Vector3D) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QMatrix4x4_map_as_ptr_QVector4D(this_ptr: *const ::matrix_4x4::Matrix4X4, point: *const ::vector_4d::Vector4D) -> *mut ::vector_4d::Vector4D;
  pub fn qt_gui_c_QMatrix4x4_map_to_output_QPoint(this_ptr: *const ::matrix_4x4::Matrix4X4, point: *const ::qt_core::point::Point, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QMatrix4x4_map_to_output_QPointF(this_ptr: *const ::matrix_4x4::Matrix4X4, point: *const ::qt_core::point_f::PointF, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QMatrix4x4_new_m11_m12_m13_m14_m21_m22_m23_m24_m31_m32_m33_m34_m41_m42_m43_m44(m11: ::libc::c_float, m12: ::libc::c_float, m13: ::libc::c_float, m14: ::libc::c_float, m21: ::libc::c_float, m22: ::libc::c_float, m23: ::libc::c_float, m24: ::libc::c_float, m31: ::libc::c_float, m32: ::libc::c_float, m33: ::libc::c_float, m34: ::libc::c_float, m41: ::libc::c_float, m42: ::libc::c_float, m43: ::libc::c_float, m44: ::libc::c_float) -> *mut ::matrix_4x4::Matrix4X4;
  pub fn qt_gui_c_QMatrix4x4_new_matrix(matrix: *const ::matrix::Matrix) -> *mut ::matrix_4x4::Matrix4X4;
  pub fn qt_gui_c_QMatrix4x4_new_no_args() -> *mut ::matrix_4x4::Matrix4X4;
  pub fn qt_gui_c_QMatrix4x4_new_transform(transform: *const ::transform::Transform) -> *mut ::matrix_4x4::Matrix4X4;
  pub fn qt_gui_c_QMatrix4x4_new_values(values: *const ::libc::c_float) -> *mut ::matrix_4x4::Matrix4X4;
  pub fn qt_gui_c_QMatrix4x4_new_values_cols_rows(values: *const ::libc::c_float, cols: ::libc::c_int, rows: ::libc::c_int) -> *mut ::matrix_4x4::Matrix4X4;
  pub fn qt_gui_c_QMatrix4x4_operator_add_assign(this_ptr: *mut ::matrix_4x4::Matrix4X4, other: *const ::matrix_4x4::Matrix4X4) -> *mut ::matrix_4x4::Matrix4X4;
  pub fn qt_gui_c_QMatrix4x4_operator_call(this_ptr: *mut ::matrix_4x4::Matrix4X4, row: ::libc::c_int, column: ::libc::c_int) -> *mut ::libc::c_float;
  pub fn qt_gui_c_QMatrix4x4_operator_call_const(this_ptr: *const ::matrix_4x4::Matrix4X4, row: ::libc::c_int, column: ::libc::c_int) -> *const ::libc::c_float;
  pub fn qt_gui_c_QMatrix4x4_operator_div_assign(this_ptr: *mut ::matrix_4x4::Matrix4X4, divisor: ::libc::c_float) -> *mut ::matrix_4x4::Matrix4X4;
  pub fn qt_gui_c_QMatrix4x4_operator_eq(this_ptr: *const ::matrix_4x4::Matrix4X4, other: *const ::matrix_4x4::Matrix4X4) -> bool;
  pub fn qt_gui_c_QMatrix4x4_operator_mul_assign_factor(this_ptr: *mut ::matrix_4x4::Matrix4X4, factor: ::libc::c_float) -> *mut ::matrix_4x4::Matrix4X4;
  pub fn qt_gui_c_QMatrix4x4_operator_mul_assign_other(this_ptr: *mut ::matrix_4x4::Matrix4X4, other: *const ::matrix_4x4::Matrix4X4) -> *mut ::matrix_4x4::Matrix4X4;
  pub fn qt_gui_c_QMatrix4x4_operator_neq(this_ptr: *const ::matrix_4x4::Matrix4X4, other: *const ::matrix_4x4::Matrix4X4) -> bool;
  pub fn qt_gui_c_QMatrix4x4_operator_sub_assign(this_ptr: *mut ::matrix_4x4::Matrix4X4, other: *const ::matrix_4x4::Matrix4X4) -> *mut ::matrix_4x4::Matrix4X4;
  pub fn qt_gui_c_QMatrix4x4_optimize(this_ptr: *mut ::matrix_4x4::Matrix4X4);
  pub fn qt_gui_c_QMatrix4x4_ortho_QRect(this_ptr: *mut ::matrix_4x4::Matrix4X4, rect: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QMatrix4x4_ortho_QRectF(this_ptr: *mut ::matrix_4x4::Matrix4X4, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QMatrix4x4_ortho_float_float_float_float_float_float(this_ptr: *mut ::matrix_4x4::Matrix4X4, left: ::libc::c_float, right: ::libc::c_float, bottom: ::libc::c_float, top: ::libc::c_float, nearPlane: ::libc::c_float, farPlane: ::libc::c_float);
  pub fn qt_gui_c_QMatrix4x4_perspective(this_ptr: *mut ::matrix_4x4::Matrix4X4, verticalAngle: ::libc::c_float, aspectRatio: ::libc::c_float, nearPlane: ::libc::c_float, farPlane: ::libc::c_float);
  pub fn qt_gui_c_QMatrix4x4_rotate_angle_vector(this_ptr: *mut ::matrix_4x4::Matrix4X4, angle: ::libc::c_float, vector: *const ::vector_3d::Vector3D);
  pub fn qt_gui_c_QMatrix4x4_rotate_angle_x_y(this_ptr: *mut ::matrix_4x4::Matrix4X4, angle: ::libc::c_float, x: ::libc::c_float, y: ::libc::c_float);
  pub fn qt_gui_c_QMatrix4x4_rotate_angle_x_y_z(this_ptr: *mut ::matrix_4x4::Matrix4X4, angle: ::libc::c_float, x: ::libc::c_float, y: ::libc::c_float, z: ::libc::c_float);
  pub fn qt_gui_c_QMatrix4x4_rotate_quaternion(this_ptr: *mut ::matrix_4x4::Matrix4X4, quaternion: *const ::quaternion::Quaternion);
  pub fn qt_gui_c_QMatrix4x4_row_as_ptr(this_ptr: *const ::matrix_4x4::Matrix4X4, index: ::libc::c_int) -> *mut ::vector_4d::Vector4D;
  pub fn qt_gui_c_QMatrix4x4_scale_factor(this_ptr: *mut ::matrix_4x4::Matrix4X4, factor: ::libc::c_float);
  pub fn qt_gui_c_QMatrix4x4_scale_vector(this_ptr: *mut ::matrix_4x4::Matrix4X4, vector: *const ::vector_3d::Vector3D);
  pub fn qt_gui_c_QMatrix4x4_scale_x_y(this_ptr: *mut ::matrix_4x4::Matrix4X4, x: ::libc::c_float, y: ::libc::c_float);
  pub fn qt_gui_c_QMatrix4x4_scale_x_y_z(this_ptr: *mut ::matrix_4x4::Matrix4X4, x: ::libc::c_float, y: ::libc::c_float, z: ::libc::c_float);
  pub fn qt_gui_c_QMatrix4x4_setColumn(this_ptr: *mut ::matrix_4x4::Matrix4X4, index: ::libc::c_int, value: *const ::vector_4d::Vector4D);
  pub fn qt_gui_c_QMatrix4x4_setRow(this_ptr: *mut ::matrix_4x4::Matrix4X4, index: ::libc::c_int, value: *const ::vector_4d::Vector4D);
  pub fn qt_gui_c_QMatrix4x4_setToIdentity(this_ptr: *mut ::matrix_4x4::Matrix4X4);
  pub fn qt_gui_c_QMatrix4x4_toAffine_to_output(this_ptr: *const ::matrix_4x4::Matrix4X4, output: *mut ::matrix::Matrix);
  pub fn qt_gui_c_QMatrix4x4_toTransform_to_output_distanceToPlane(this_ptr: *const ::matrix_4x4::Matrix4X4, distanceToPlane: ::libc::c_float, output: *mut ::transform::Transform);
  pub fn qt_gui_c_QMatrix4x4_toTransform_to_output_no_args(this_ptr: *const ::matrix_4x4::Matrix4X4, output: *mut ::transform::Transform);
  pub fn qt_gui_c_QMatrix4x4_translate_vector(this_ptr: *mut ::matrix_4x4::Matrix4X4, vector: *const ::vector_3d::Vector3D);
  pub fn qt_gui_c_QMatrix4x4_translate_x_y(this_ptr: *mut ::matrix_4x4::Matrix4X4, x: ::libc::c_float, y: ::libc::c_float);
  pub fn qt_gui_c_QMatrix4x4_translate_x_y_z(this_ptr: *mut ::matrix_4x4::Matrix4X4, x: ::libc::c_float, y: ::libc::c_float, z: ::libc::c_float);
  pub fn qt_gui_c_QMatrix4x4_transposed_as_ptr(this_ptr: *const ::matrix_4x4::Matrix4X4) -> *mut ::matrix_4x4::Matrix4X4;
  pub fn qt_gui_c_QMatrix4x4_viewport_left_bottom_width_height(this_ptr: *mut ::matrix_4x4::Matrix4X4, left: ::libc::c_float, bottom: ::libc::c_float, width: ::libc::c_float, height: ::libc::c_float);
  pub fn qt_gui_c_QMatrix4x4_viewport_left_bottom_width_height_nearPlane(this_ptr: *mut ::matrix_4x4::Matrix4X4, left: ::libc::c_float, bottom: ::libc::c_float, width: ::libc::c_float, height: ::libc::c_float, nearPlane: ::libc::c_float);
  pub fn qt_gui_c_QMatrix4x4_viewport_left_bottom_width_height_nearPlane_farPlane(this_ptr: *mut ::matrix_4x4::Matrix4X4, left: ::libc::c_float, bottom: ::libc::c_float, width: ::libc::c_float, height: ::libc::c_float, nearPlane: ::libc::c_float, farPlane: ::libc::c_float);
  pub fn qt_gui_c_QMatrix4x4_viewport_rect(this_ptr: *mut ::matrix_4x4::Matrix4X4, rect: *const ::qt_core::rect_f::RectF);

  // Header: QMouseEvent
  pub fn qt_gui_c_QMouseEvent_G_dynamic_cast_QMouseEvent_ptr(ptr: *mut ::input_event::InputEvent) -> *mut ::mouse_event::MouseEvent;
  pub fn qt_gui_c_QMouseEvent_G_static_cast_QEvent_ptr(ptr: *mut ::mouse_event::MouseEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QMouseEvent_G_static_cast_QInputEvent_ptr(ptr: *mut ::mouse_event::MouseEvent) -> *mut ::input_event::InputEvent;
  pub fn qt_gui_c_QMouseEvent_G_static_cast_QMouseEvent_ptr_QEvent(ptr: *mut ::qt_core::event::Event) -> *mut ::mouse_event::MouseEvent;
  pub fn qt_gui_c_QMouseEvent_G_static_cast_QMouseEvent_ptr_QInputEvent(ptr: *mut ::input_event::InputEvent) -> *mut ::mouse_event::MouseEvent;
  pub fn qt_gui_c_QMouseEvent_delete(this_ptr: *mut ::mouse_event::MouseEvent);
  pub fn qt_gui_c_QMouseEvent_globalPos_to_output(this_ptr: *const ::mouse_event::MouseEvent, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QMouseEvent_globalX(this_ptr: *const ::mouse_event::MouseEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QMouseEvent_globalY(this_ptr: *const ::mouse_event::MouseEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QMouseEvent_localPos(this_ptr: *const ::mouse_event::MouseEvent) -> *const ::qt_core::point_f::PointF;
  pub fn qt_gui_c_QMouseEvent_pos_to_output(this_ptr: *const ::mouse_event::MouseEvent, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QMouseEvent_screenPos(this_ptr: *const ::mouse_event::MouseEvent) -> *const ::qt_core::point_f::PointF;
  pub fn qt_gui_c_QMouseEvent_setLocalPos(this_ptr: *mut ::mouse_event::MouseEvent, localPosition: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QMouseEvent_windowPos(this_ptr: *const ::mouse_event::MouseEvent) -> *const ::qt_core::point_f::PointF;
  pub fn qt_gui_c_QMouseEvent_x(this_ptr: *const ::mouse_event::MouseEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QMouseEvent_y(this_ptr: *const ::mouse_event::MouseEvent) -> ::libc::c_int;

  // Header: QMoveEvent
  pub fn qt_gui_c_QMoveEvent_G_static_cast_QEvent_ptr(ptr: *mut ::move_event::MoveEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QMoveEvent_G_static_cast_QMoveEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::move_event::MoveEvent;
  pub fn qt_gui_c_QMoveEvent_delete(this_ptr: *mut ::move_event::MoveEvent);
  pub fn qt_gui_c_QMoveEvent_new(pos: *const ::qt_core::point::Point, oldPos: *const ::qt_core::point::Point) -> *mut ::move_event::MoveEvent;
  pub fn qt_gui_c_QMoveEvent_oldPos(this_ptr: *const ::move_event::MoveEvent) -> *const ::qt_core::point::Point;
  pub fn qt_gui_c_QMoveEvent_pos(this_ptr: *const ::move_event::MoveEvent) -> *const ::qt_core::point::Point;

  // Header: QMovie
  pub fn qt_gui_c_QMovie_G_static_cast_QMovie_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::movie::Movie;
  pub fn qt_gui_c_QMovie_G_static_cast_QObject_ptr(ptr: *mut ::movie::Movie) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QMovie_backgroundColor_to_output(this_ptr: *const ::movie::Movie, output: *mut ::color::Color);
  pub fn qt_gui_c_QMovie_cacheMode(this_ptr: *const ::movie::Movie) -> ::movie::CacheMode;
  pub fn qt_gui_c_QMovie_currentFrameNumber(this_ptr: *const ::movie::Movie) -> ::libc::c_int;
  pub fn qt_gui_c_QMovie_currentImage_as_ptr(this_ptr: *const ::movie::Movie) -> *mut ::image::Image;
  pub fn qt_gui_c_QMovie_currentPixmap_as_ptr(this_ptr: *const ::movie::Movie) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QMovie_delete(this_ptr: *mut ::movie::Movie);
  pub fn qt_gui_c_QMovie_device(this_ptr: *const ::movie::Movie) -> *mut ::qt_core::io_device::IODevice;
  pub fn qt_gui_c_QMovie_fileName_to_output(this_ptr: *const ::movie::Movie, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QMovie_format_to_output(this_ptr: *const ::movie::Movie, output: *mut ::qt_core::byte_array::ByteArray);
  pub fn qt_gui_c_QMovie_frameCount(this_ptr: *const ::movie::Movie) -> ::libc::c_int;
  pub fn qt_gui_c_QMovie_frameRect_to_output(this_ptr: *const ::movie::Movie, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QMovie_isValid(this_ptr: *const ::movie::Movie) -> bool;
  pub fn qt_gui_c_QMovie_jumpToFrame(this_ptr: *mut ::movie::Movie, frameNumber: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QMovie_jumpToNextFrame(this_ptr: *mut ::movie::Movie) -> bool;
  pub fn qt_gui_c_QMovie_loopCount(this_ptr: *const ::movie::Movie) -> ::libc::c_int;
  pub fn qt_gui_c_QMovie_metaObject(this_ptr: *const ::movie::Movie) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QMovie_new_device(device: *mut ::qt_core::io_device::IODevice) -> *mut ::movie::Movie;
  pub fn qt_gui_c_QMovie_new_device_format(device: *mut ::qt_core::io_device::IODevice, format: *const ::qt_core::byte_array::ByteArray) -> *mut ::movie::Movie;
  pub fn qt_gui_c_QMovie_new_device_format_parent(device: *mut ::qt_core::io_device::IODevice, format: *const ::qt_core::byte_array::ByteArray, parent: *mut ::qt_core::object::Object) -> *mut ::movie::Movie;
  pub fn qt_gui_c_QMovie_new_fileName(fileName: *const ::qt_core::string::String) -> *mut ::movie::Movie;
  pub fn qt_gui_c_QMovie_new_fileName_format(fileName: *const ::qt_core::string::String, format: *const ::qt_core::byte_array::ByteArray) -> *mut ::movie::Movie;
  pub fn qt_gui_c_QMovie_new_fileName_format_parent(fileName: *const ::qt_core::string::String, format: *const ::qt_core::byte_array::ByteArray, parent: *mut ::qt_core::object::Object) -> *mut ::movie::Movie;
  pub fn qt_gui_c_QMovie_new_no_args() -> *mut ::movie::Movie;
  pub fn qt_gui_c_QMovie_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::movie::Movie;
  pub fn qt_gui_c_QMovie_nextFrameDelay(this_ptr: *const ::movie::Movie) -> ::libc::c_int;
  pub fn qt_gui_c_QMovie_qt_metacall(this_ptr: *mut ::movie::Movie, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QMovie_qt_metacast(this_ptr: *mut ::movie::Movie, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QMovie_scaledSize_to_output(this_ptr: *mut ::movie::Movie, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QMovie_setBackgroundColor(this_ptr: *mut ::movie::Movie, color: *const ::color::Color);
  pub fn qt_gui_c_QMovie_setCacheMode(this_ptr: *mut ::movie::Movie, mode: ::movie::CacheMode);
  pub fn qt_gui_c_QMovie_setDevice(this_ptr: *mut ::movie::Movie, device: *mut ::qt_core::io_device::IODevice);
  pub fn qt_gui_c_QMovie_setFileName(this_ptr: *mut ::movie::Movie, fileName: *const ::qt_core::string::String);
  pub fn qt_gui_c_QMovie_setFormat(this_ptr: *mut ::movie::Movie, format: *const ::qt_core::byte_array::ByteArray);
  pub fn qt_gui_c_QMovie_setPaused(this_ptr: *mut ::movie::Movie, paused: bool);
  pub fn qt_gui_c_QMovie_setScaledSize(this_ptr: *mut ::movie::Movie, size: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QMovie_setSpeed(this_ptr: *mut ::movie::Movie, percentSpeed: ::libc::c_int);
  pub fn qt_gui_c_QMovie_speed(this_ptr: *const ::movie::Movie) -> ::libc::c_int;
  pub fn qt_gui_c_QMovie_start(this_ptr: *mut ::movie::Movie);
  pub fn qt_gui_c_QMovie_state(this_ptr: *const ::movie::Movie) -> ::movie::MovieState;
  pub fn qt_gui_c_QMovie_stop(this_ptr: *mut ::movie::Movie);
  pub fn qt_gui_c_QMovie_supportedFormats_to_output(output: *mut ::qt_core::list::ListByteArray);
  pub fn qt_gui_c_QMovie_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QMovie_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QNativeGestureEvent
  pub fn qt_gui_c_QNativeGestureEvent_G_dynamic_cast_QNativeGestureEvent_ptr(ptr: *mut ::input_event::InputEvent) -> *mut ::native_gesture_event::NativeGestureEvent;
  pub fn qt_gui_c_QNativeGestureEvent_G_static_cast_QEvent_ptr(ptr: *mut ::native_gesture_event::NativeGestureEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QNativeGestureEvent_G_static_cast_QInputEvent_ptr(ptr: *mut ::native_gesture_event::NativeGestureEvent) -> *mut ::input_event::InputEvent;
  pub fn qt_gui_c_QNativeGestureEvent_G_static_cast_QNativeGestureEvent_ptr_QEvent(ptr: *mut ::qt_core::event::Event) -> *mut ::native_gesture_event::NativeGestureEvent;
  pub fn qt_gui_c_QNativeGestureEvent_G_static_cast_QNativeGestureEvent_ptr_QInputEvent(ptr: *mut ::input_event::InputEvent) -> *mut ::native_gesture_event::NativeGestureEvent;
  pub fn qt_gui_c_QNativeGestureEvent_delete(this_ptr: *mut ::native_gesture_event::NativeGestureEvent);
  pub fn qt_gui_c_QNativeGestureEvent_globalPos_to_output(this_ptr: *const ::native_gesture_event::NativeGestureEvent, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QNativeGestureEvent_localPos(this_ptr: *const ::native_gesture_event::NativeGestureEvent) -> *const ::qt_core::point_f::PointF;
  pub fn qt_gui_c_QNativeGestureEvent_new(type_: *const ::qt_core::qt::NativeGestureType, localPos: *const ::qt_core::point_f::PointF, windowPos: *const ::qt_core::point_f::PointF, screenPos: *const ::qt_core::point_f::PointF, value: ::libc::c_double, sequenceId: ::libc::c_ulong, intArgument: u64) -> *mut ::native_gesture_event::NativeGestureEvent;
  pub fn qt_gui_c_QNativeGestureEvent_pos_to_output(this_ptr: *const ::native_gesture_event::NativeGestureEvent, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QNativeGestureEvent_screenPos(this_ptr: *const ::native_gesture_event::NativeGestureEvent) -> *const ::qt_core::point_f::PointF;
  pub fn qt_gui_c_QNativeGestureEvent_value(this_ptr: *const ::native_gesture_event::NativeGestureEvent) -> ::libc::c_double;
  pub fn qt_gui_c_QNativeGestureEvent_windowPos(this_ptr: *const ::native_gesture_event::NativeGestureEvent) -> *const ::qt_core::point_f::PointF;

  // Header: QOffscreenSurface
  pub fn qt_gui_c_QOffscreenSurface_G_dynamic_cast_QOffscreenSurface_ptr(ptr: *mut ::surface::Surface) -> *mut ::offscreen_surface::OffscreenSurface;
  pub fn qt_gui_c_QOffscreenSurface_G_static_cast_QObject_ptr(ptr: *mut ::offscreen_surface::OffscreenSurface) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QOffscreenSurface_G_static_cast_QOffscreenSurface_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::offscreen_surface::OffscreenSurface;
  pub fn qt_gui_c_QOffscreenSurface_G_static_cast_QOffscreenSurface_ptr_QSurface(ptr: *mut ::surface::Surface) -> *mut ::offscreen_surface::OffscreenSurface;
  pub fn qt_gui_c_QOffscreenSurface_G_static_cast_QSurface_ptr(ptr: *mut ::offscreen_surface::OffscreenSurface) -> *mut ::surface::Surface;
  pub fn qt_gui_c_QOffscreenSurface_create(this_ptr: *mut ::offscreen_surface::OffscreenSurface);
  pub fn qt_gui_c_QOffscreenSurface_delete(this_ptr: *mut ::offscreen_surface::OffscreenSurface);
  pub fn qt_gui_c_QOffscreenSurface_destroy(this_ptr: *mut ::offscreen_surface::OffscreenSurface);
  pub fn qt_gui_c_QOffscreenSurface_format_to_output(this_ptr: *const ::offscreen_surface::OffscreenSurface, output: *mut ::surface_format::SurfaceFormat);
  pub fn qt_gui_c_QOffscreenSurface_isValid(this_ptr: *const ::offscreen_surface::OffscreenSurface) -> bool;
  pub fn qt_gui_c_QOffscreenSurface_metaObject(this_ptr: *const ::offscreen_surface::OffscreenSurface) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QOffscreenSurface_nativeHandle(this_ptr: *const ::offscreen_surface::OffscreenSurface) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QOffscreenSurface_new_no_args() -> *mut ::offscreen_surface::OffscreenSurface;
  pub fn qt_gui_c_QOffscreenSurface_new_screen(screen: *mut ::screen::Screen) -> *mut ::offscreen_surface::OffscreenSurface;
  pub fn qt_gui_c_QOffscreenSurface_qt_metacall(this_ptr: *mut ::offscreen_surface::OffscreenSurface, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QOffscreenSurface_qt_metacast(this_ptr: *mut ::offscreen_surface::OffscreenSurface, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QOffscreenSurface_requestedFormat_to_output(this_ptr: *const ::offscreen_surface::OffscreenSurface, output: *mut ::surface_format::SurfaceFormat);
  pub fn qt_gui_c_QOffscreenSurface_screen(this_ptr: *const ::offscreen_surface::OffscreenSurface) -> *mut ::screen::Screen;
  pub fn qt_gui_c_QOffscreenSurface_setFormat(this_ptr: *mut ::offscreen_surface::OffscreenSurface, format: *const ::surface_format::SurfaceFormat);
  pub fn qt_gui_c_QOffscreenSurface_setNativeHandle(this_ptr: *mut ::offscreen_surface::OffscreenSurface, handle: *mut ::libc::c_void);
  pub fn qt_gui_c_QOffscreenSurface_setScreen(this_ptr: *mut ::offscreen_surface::OffscreenSurface, screen: *mut ::screen::Screen);
  pub fn qt_gui_c_QOffscreenSurface_size_to_output(this_ptr: *const ::offscreen_surface::OffscreenSurface, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QOffscreenSurface_surfaceType(this_ptr: *const ::offscreen_surface::OffscreenSurface) -> ::surface::SurfaceType;
  pub fn qt_gui_c_QOffscreenSurface_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QOffscreenSurface_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QOpenGLBuffer
  pub fn qt_gui_c_QOpenGLBuffer_allocate_count(this_ptr: *mut ::opengl_buffer::OpenGLBuffer, count: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLBuffer_allocate_data_count(this_ptr: *mut ::opengl_buffer::OpenGLBuffer, data: *const ::libc::c_void, count: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLBuffer_bind(this_ptr: *mut ::opengl_buffer::OpenGLBuffer) -> bool;
  pub fn qt_gui_c_QOpenGLBuffer_bufferId(this_ptr: *const ::opengl_buffer::OpenGLBuffer) -> u32;
  pub fn qt_gui_c_QOpenGLBuffer_constructor_no_args(output: *mut ::opengl_buffer::OpenGLBuffer);
  pub fn qt_gui_c_QOpenGLBuffer_constructor_other(other: *const ::opengl_buffer::OpenGLBuffer, output: *mut ::opengl_buffer::OpenGLBuffer);
  pub fn qt_gui_c_QOpenGLBuffer_constructor_type(type_: *const ::opengl_buffer::Type, output: *mut ::opengl_buffer::OpenGLBuffer);
  pub fn qt_gui_c_QOpenGLBuffer_create(this_ptr: *mut ::opengl_buffer::OpenGLBuffer) -> bool;
  pub fn qt_gui_c_QOpenGLBuffer_destroy(this_ptr: *mut ::opengl_buffer::OpenGLBuffer);
  pub fn qt_gui_c_QOpenGLBuffer_destructor(this_ptr: *mut ::opengl_buffer::OpenGLBuffer);
  pub fn qt_gui_c_QOpenGLBuffer_isCreated(this_ptr: *const ::opengl_buffer::OpenGLBuffer) -> bool;
  pub fn qt_gui_c_QOpenGLBuffer_map(this_ptr: *mut ::opengl_buffer::OpenGLBuffer, access: *const ::opengl_buffer::Access) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QOpenGLBuffer_operator_assign(this_ptr: *mut ::opengl_buffer::OpenGLBuffer, other: *const ::opengl_buffer::OpenGLBuffer) -> *mut ::opengl_buffer::OpenGLBuffer;
  pub fn qt_gui_c_QOpenGLBuffer_read(this_ptr: *mut ::opengl_buffer::OpenGLBuffer, offset: ::libc::c_int, data: *mut ::libc::c_void, count: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QOpenGLBuffer_release_no_args(this_ptr: *mut ::opengl_buffer::OpenGLBuffer);
  pub fn qt_gui_c_QOpenGLBuffer_release_type(type_: *const ::opengl_buffer::Type);
  pub fn qt_gui_c_QOpenGLBuffer_setUsagePattern(this_ptr: *mut ::opengl_buffer::OpenGLBuffer, value: *const ::opengl_buffer::UsagePattern);
  pub fn qt_gui_c_QOpenGLBuffer_size(this_ptr: *const ::opengl_buffer::OpenGLBuffer) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLBuffer_unmap(this_ptr: *mut ::opengl_buffer::OpenGLBuffer) -> bool;
  pub fn qt_gui_c_QOpenGLBuffer_write(this_ptr: *mut ::opengl_buffer::OpenGLBuffer, offset: ::libc::c_int, data: *const ::libc::c_void, count: ::libc::c_int);

  // Header: QOpenGLContext
  pub fn qt_gui_c_QOpenGLContext_G_operator_eq(lhs: *const ::opengl_version_profile::OpenGLVersionProfile, rhs: *const ::opengl_version_profile::OpenGLVersionProfile) -> bool;
  pub fn qt_gui_c_QOpenGLContext_G_operator_neq(lhs: *const ::opengl_version_profile::OpenGLVersionProfile, rhs: *const ::opengl_version_profile::OpenGLVersionProfile) -> bool;
  pub fn qt_gui_c_QOpenGLContext_G_qHash_v(v: *const ::opengl_version_profile::OpenGLVersionProfile) -> ::libc::c_uint;
  pub fn qt_gui_c_QOpenGLContext_G_qHash_v_seed(v: *const ::opengl_version_profile::OpenGLVersionProfile, seed: ::libc::c_uint) -> ::libc::c_uint;
  pub fn qt_gui_c_QOpenGLContext_G_static_cast_QObject_ptr(ptr: *mut ::opengl_context::OpenGLContext) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QOpenGLContext_G_static_cast_QOpenGLContext_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QOpenGLContext_areSharing(first: *mut ::opengl_context::OpenGLContext, second: *mut ::opengl_context::OpenGLContext) -> bool;
  pub fn qt_gui_c_QOpenGLContext_create(this_ptr: *mut ::opengl_context::OpenGLContext) -> bool;
  pub fn qt_gui_c_QOpenGLContext_currentContext() -> *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QOpenGLContext_defaultFramebufferObject(this_ptr: *const ::opengl_context::OpenGLContext) -> u32;
  pub fn qt_gui_c_QOpenGLContext_delete(this_ptr: *mut ::opengl_context::OpenGLContext);
  pub fn qt_gui_c_QOpenGLContext_doneCurrent(this_ptr: *mut ::opengl_context::OpenGLContext);
  pub fn qt_gui_c_QOpenGLContext_extensions_to_output(this_ptr: *const ::opengl_context::OpenGLContext, output: *mut ::set::SetQtCoreByteArray);
  pub fn qt_gui_c_QOpenGLContext_extraFunctions(this_ptr: *const ::opengl_context::OpenGLContext) -> *mut ::opengl_extra_functions::OpenGLExtraFunctions;
  pub fn qt_gui_c_QOpenGLContext_format_to_output(this_ptr: *const ::opengl_context::OpenGLContext, output: *mut ::surface_format::SurfaceFormat);
  pub fn qt_gui_c_QOpenGLContext_functions(this_ptr: *const ::opengl_context::OpenGLContext) -> *mut ::opengl_functions::OpenGLFunctions;
  pub fn qt_gui_c_QOpenGLContext_getProcAddress_QByteArray(this_ptr: *const ::opengl_context::OpenGLContext, procName: *const ::qt_core::byte_array::ByteArray) -> extern "C" fn();
  pub fn qt_gui_c_QOpenGLContext_getProcAddress_char(this_ptr: *const ::opengl_context::OpenGLContext, procName: *const ::libc::c_char) -> extern "C" fn();
  pub fn qt_gui_c_QOpenGLContext_globalShareContext() -> *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QOpenGLContext_hasExtension(this_ptr: *const ::opengl_context::OpenGLContext, extension: *const ::qt_core::byte_array::ByteArray) -> bool;
  pub fn qt_gui_c_QOpenGLContext_isOpenGLES(this_ptr: *const ::opengl_context::OpenGLContext) -> bool;
  pub fn qt_gui_c_QOpenGLContext_isValid(this_ptr: *const ::opengl_context::OpenGLContext) -> bool;
  pub fn qt_gui_c_QOpenGLContext_makeCurrent(this_ptr: *mut ::opengl_context::OpenGLContext, surface: *mut ::surface::Surface) -> bool;
  pub fn qt_gui_c_QOpenGLContext_metaObject(this_ptr: *const ::opengl_context::OpenGLContext) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QOpenGLContext_nativeHandle_to_output(this_ptr: *const ::opengl_context::OpenGLContext, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QOpenGLContext_new_no_args() -> *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QOpenGLContext_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QOpenGLContext_openGLModuleHandle() -> *mut ::libc::c_void;
  pub fn qt_gui_c_QOpenGLContext_openGLModuleType() -> ::opengl_context::OpenGLModuleType;
  pub fn qt_gui_c_QOpenGLContext_qt_metacall(this_ptr: *mut ::opengl_context::OpenGLContext, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLContext_qt_metacast(this_ptr: *mut ::opengl_context::OpenGLContext, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QOpenGLContext_screen(this_ptr: *const ::opengl_context::OpenGLContext) -> *mut ::screen::Screen;
  pub fn qt_gui_c_QOpenGLContext_setFormat(this_ptr: *mut ::opengl_context::OpenGLContext, format: *const ::surface_format::SurfaceFormat);
  pub fn qt_gui_c_QOpenGLContext_setNativeHandle(this_ptr: *mut ::opengl_context::OpenGLContext, handle: *const ::qt_core::variant::Variant);
  pub fn qt_gui_c_QOpenGLContext_setScreen(this_ptr: *mut ::opengl_context::OpenGLContext, screen: *mut ::screen::Screen);
  pub fn qt_gui_c_QOpenGLContext_setShareContext(this_ptr: *mut ::opengl_context::OpenGLContext, shareContext: *mut ::opengl_context::OpenGLContext);
  pub fn qt_gui_c_QOpenGLContext_shareContext(this_ptr: *const ::opengl_context::OpenGLContext) -> *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QOpenGLContext_shareGroup(this_ptr: *const ::opengl_context::OpenGLContext) -> *mut ::opengl_context_group::OpenGLContextGroup;
  pub fn qt_gui_c_QOpenGLContext_supportsThreadedOpenGL() -> bool;
  pub fn qt_gui_c_QOpenGLContext_surface(this_ptr: *const ::opengl_context::OpenGLContext) -> *mut ::surface::Surface;
  pub fn qt_gui_c_QOpenGLContext_swapBuffers(this_ptr: *mut ::opengl_context::OpenGLContext, surface: *mut ::surface::Surface);
  pub fn qt_gui_c_QOpenGLContext_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QOpenGLContext_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QOpenGLContext_versionFunctions_no_args(this_ptr: *const ::opengl_context::OpenGLContext) -> *mut ::opengl_version_functions::AbstractOpenGLFunctions;
  pub fn qt_gui_c_QOpenGLContext_versionFunctions_versionProfile(this_ptr: *const ::opengl_context::OpenGLContext, versionProfile: *const ::opengl_version_profile::OpenGLVersionProfile) -> *mut ::opengl_version_functions::AbstractOpenGLFunctions;

  // Header: QOpenGLContextGroup
  pub fn qt_gui_c_QOpenGLContextGroup_G_static_cast_QObject_ptr(ptr: *mut ::opengl_context_group::OpenGLContextGroup) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QOpenGLContextGroup_G_static_cast_QOpenGLContextGroup_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::opengl_context_group::OpenGLContextGroup;
  pub fn qt_gui_c_QOpenGLContextGroup_currentContextGroup() -> *mut ::opengl_context_group::OpenGLContextGroup;
  pub fn qt_gui_c_QOpenGLContextGroup_delete(this_ptr: *mut ::opengl_context_group::OpenGLContextGroup);
  pub fn qt_gui_c_QOpenGLContextGroup_metaObject(this_ptr: *const ::opengl_context_group::OpenGLContextGroup) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QOpenGLContextGroup_qt_metacall(this_ptr: *mut ::opengl_context_group::OpenGLContextGroup, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLContextGroup_qt_metacast(this_ptr: *mut ::opengl_context_group::OpenGLContextGroup, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QOpenGLContextGroup_shares_to_output(this_ptr: *const ::opengl_context_group::OpenGLContextGroup, output: *mut ::list::ListOpenglContextMutPtr);
  pub fn qt_gui_c_QOpenGLContextGroup_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QOpenGLContextGroup_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QOpenGLDebugLogger
  pub fn qt_gui_c_QOpenGLDebugLogger_G_operator_shl_to_output_debug_message(debug: *const ::qt_core::debug::Debug, message: *const ::opengl_debug_message::OpenGLDebugMessage, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QOpenGLDebugLogger_G_operator_shl_to_output_debug_severity(debug: *const ::qt_core::debug::Debug, severity: *const ::opengl_debug_message::Severity, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QOpenGLDebugLogger_G_operator_shl_to_output_debug_source(debug: *const ::qt_core::debug::Debug, source: *const ::opengl_debug_message::Source, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QOpenGLDebugLogger_G_operator_shl_to_output_debug_type(debug: *const ::qt_core::debug::Debug, type_: *const ::opengl_debug_message::Type, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QOpenGLDebugLogger_G_static_cast_QObject_ptr(ptr: *mut ::opengl_debug_logger::OpenGLDebugLogger) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QOpenGLDebugLogger_G_static_cast_QOpenGLDebugLogger_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::opengl_debug_logger::OpenGLDebugLogger;
  pub fn qt_gui_c_QOpenGLDebugLogger_G_swap(value1: *mut ::opengl_debug_message::OpenGLDebugMessage, value2: *mut ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QOpenGLDebugLogger_delete(this_ptr: *mut ::opengl_debug_logger::OpenGLDebugLogger);
  pub fn qt_gui_c_QOpenGLDebugLogger_initialize(this_ptr: *mut ::opengl_debug_logger::OpenGLDebugLogger) -> bool;
  pub fn qt_gui_c_QOpenGLDebugLogger_isLogging(this_ptr: *const ::opengl_debug_logger::OpenGLDebugLogger) -> bool;
  pub fn qt_gui_c_QOpenGLDebugLogger_logMessage(this_ptr: *mut ::opengl_debug_logger::OpenGLDebugLogger, debugMessage: *const ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QOpenGLDebugLogger_loggedMessages_to_output(this_ptr: *const ::opengl_debug_logger::OpenGLDebugLogger, output: *mut ::list::ListOpenglDebugMessage);
  pub fn qt_gui_c_QOpenGLDebugLogger_loggingMode(this_ptr: *const ::opengl_debug_logger::OpenGLDebugLogger) -> ::opengl_debug_logger::LoggingMode;
  pub fn qt_gui_c_QOpenGLDebugLogger_maximumMessageLength(this_ptr: *const ::opengl_debug_logger::OpenGLDebugLogger) -> i64;
  pub fn qt_gui_c_QOpenGLDebugLogger_metaObject(this_ptr: *const ::opengl_debug_logger::OpenGLDebugLogger) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QOpenGLDebugLogger_new_no_args() -> *mut ::opengl_debug_logger::OpenGLDebugLogger;
  pub fn qt_gui_c_QOpenGLDebugLogger_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::opengl_debug_logger::OpenGLDebugLogger;
  pub fn qt_gui_c_QOpenGLDebugLogger_popGroup(this_ptr: *mut ::opengl_debug_logger::OpenGLDebugLogger);
  pub fn qt_gui_c_QOpenGLDebugLogger_pushGroup_name(this_ptr: *mut ::opengl_debug_logger::OpenGLDebugLogger, name: *const ::qt_core::string::String);
  pub fn qt_gui_c_QOpenGLDebugLogger_pushGroup_name_id(this_ptr: *mut ::opengl_debug_logger::OpenGLDebugLogger, name: *const ::qt_core::string::String, id: u32);
  pub fn qt_gui_c_QOpenGLDebugLogger_pushGroup_name_id_source(this_ptr: *mut ::opengl_debug_logger::OpenGLDebugLogger, name: *const ::qt_core::string::String, id: u32, source: *const ::opengl_debug_message::Source);
  pub fn qt_gui_c_QOpenGLDebugLogger_qt_metacall(this_ptr: *mut ::opengl_debug_logger::OpenGLDebugLogger, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLDebugLogger_qt_metacast(this_ptr: *mut ::opengl_debug_logger::OpenGLDebugLogger, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QOpenGLDebugLogger_startLogging_loggingMode(this_ptr: *mut ::opengl_debug_logger::OpenGLDebugLogger, loggingMode: ::opengl_debug_logger::LoggingMode);
  pub fn qt_gui_c_QOpenGLDebugLogger_startLogging_no_args(this_ptr: *mut ::opengl_debug_logger::OpenGLDebugLogger);
  pub fn qt_gui_c_QOpenGLDebugLogger_stopLogging(this_ptr: *mut ::opengl_debug_logger::OpenGLDebugLogger);
  pub fn qt_gui_c_QOpenGLDebugLogger_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QOpenGLDebugLogger_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QOpenGLDebugMessage
  pub fn qt_gui_c_QOpenGLDebugMessage_constructor_debugMessage(debugMessage: *const ::opengl_debug_message::OpenGLDebugMessage, output: *mut ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QOpenGLDebugMessage_constructor_no_args(output: *mut ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QOpenGLDebugMessage_createApplicationMessage_to_output_text(text: *const ::qt_core::string::String, output: *mut ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QOpenGLDebugMessage_createApplicationMessage_to_output_text_id(text: *const ::qt_core::string::String, id: u32, output: *mut ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QOpenGLDebugMessage_createApplicationMessage_to_output_text_id_severity(text: *const ::qt_core::string::String, id: u32, severity: ::opengl_debug_message::Severity, output: *mut ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QOpenGLDebugMessage_createApplicationMessage_to_output_text_id_severity_type(text: *const ::qt_core::string::String, id: u32, severity: ::opengl_debug_message::Severity, type_: ::opengl_debug_message::Type, output: *mut ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QOpenGLDebugMessage_createThirdPartyMessage_to_output_text(text: *const ::qt_core::string::String, output: *mut ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QOpenGLDebugMessage_createThirdPartyMessage_to_output_text_id(text: *const ::qt_core::string::String, id: u32, output: *mut ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QOpenGLDebugMessage_createThirdPartyMessage_to_output_text_id_severity(text: *const ::qt_core::string::String, id: u32, severity: ::opengl_debug_message::Severity, output: *mut ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QOpenGLDebugMessage_createThirdPartyMessage_to_output_text_id_severity_type(text: *const ::qt_core::string::String, id: u32, severity: ::opengl_debug_message::Severity, type_: ::opengl_debug_message::Type, output: *mut ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QOpenGLDebugMessage_destructor(this_ptr: *mut ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QOpenGLDebugMessage_id(this_ptr: *const ::opengl_debug_message::OpenGLDebugMessage) -> u32;
  pub fn qt_gui_c_QOpenGLDebugMessage_message_to_output(this_ptr: *const ::opengl_debug_message::OpenGLDebugMessage, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QOpenGLDebugMessage_operator_assign(this_ptr: *mut ::opengl_debug_message::OpenGLDebugMessage, debugMessage: *const ::opengl_debug_message::OpenGLDebugMessage) -> *mut ::opengl_debug_message::OpenGLDebugMessage;
  pub fn qt_gui_c_QOpenGLDebugMessage_operator_eq(this_ptr: *const ::opengl_debug_message::OpenGLDebugMessage, debugMessage: *const ::opengl_debug_message::OpenGLDebugMessage) -> bool;
  pub fn qt_gui_c_QOpenGLDebugMessage_operator_neq(this_ptr: *const ::opengl_debug_message::OpenGLDebugMessage, debugMessage: *const ::opengl_debug_message::OpenGLDebugMessage) -> bool;
  pub fn qt_gui_c_QOpenGLDebugMessage_severity(this_ptr: *const ::opengl_debug_message::OpenGLDebugMessage) -> ::opengl_debug_message::Severity;
  pub fn qt_gui_c_QOpenGLDebugMessage_source(this_ptr: *const ::opengl_debug_message::OpenGLDebugMessage) -> ::opengl_debug_message::Source;
  pub fn qt_gui_c_QOpenGLDebugMessage_swap(this_ptr: *mut ::opengl_debug_message::OpenGLDebugMessage, other: *mut ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_QOpenGLDebugMessage_type(this_ptr: *const ::opengl_debug_message::OpenGLDebugMessage) -> ::opengl_debug_message::Type;

  // Header: QOpenGLExtraFunctions
  pub fn qt_gui_c_QOpenGLExtraFunctions_G_static_cast_QOpenGLExtraFunctions_ptr(ptr: *mut ::opengl_functions::OpenGLFunctions) -> *mut ::opengl_extra_functions::OpenGLExtraFunctions;
  pub fn qt_gui_c_QOpenGLExtraFunctions_G_static_cast_QOpenGLFunctions_ptr(ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions) -> *mut ::opengl_functions::OpenGLFunctions;
  pub fn qt_gui_c_QOpenGLExtraFunctions_delete(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glActiveShaderProgram(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, pipeline: u32, program: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glBeginQuery(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, id: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glBeginTransformFeedback(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, primitiveMode: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glBindBufferBase(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, index: u32, buffer: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glBindBufferRange(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, index: u32, buffer: u32, offset: ::libc::c_long, size: ::libc::c_long);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glBindImageTexture(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, unit: u32, texture: u32, level: i32, layered: ::libc::c_uchar, layer: i32, access: ::libc::c_uint, format: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glBindProgramPipeline(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, pipeline: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glBindSampler(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, unit: u32, sampler: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glBindTransformFeedback(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, id: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glBindVertexArray(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, array: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glBindVertexBuffer(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, bindingindex: u32, buffer: u32, offset: ::libc::c_long, stride: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glBlitFramebuffer(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, srcX0: i32, srcY0: i32, srcX1: i32, srcY1: i32, dstX0: i32, dstY0: i32, dstX1: i32, dstY1: i32, mask: ::libc::c_uint, filter: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glClearBufferfi(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, buffer: ::libc::c_uint, drawbuffer: i32, depth: ::libc::c_float, stencil: i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glClearBufferfv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, buffer: ::libc::c_uint, drawbuffer: i32, value: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glClearBufferiv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, buffer: ::libc::c_uint, drawbuffer: i32, value: *const i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glClearBufferuiv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, buffer: ::libc::c_uint, drawbuffer: i32, value: *const u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glCompressedTexImage3D(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, level: i32, internalformat: ::libc::c_uint, width: ::libc::c_int, height: ::libc::c_int, depth: ::libc::c_int, border: i32, imageSize: ::libc::c_int, data: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glCompressedTexSubImage3D(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, width: ::libc::c_int, height: ::libc::c_int, depth: ::libc::c_int, format: ::libc::c_uint, imageSize: ::libc::c_int, data: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glCopyBufferSubData(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, readTarget: ::libc::c_uint, writeTarget: ::libc::c_uint, readOffset: ::libc::c_long, writeOffset: ::libc::c_long, size: ::libc::c_long);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glCopyTexSubImage3D(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, x: i32, y: i32, width: ::libc::c_int, height: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glCreateShaderProgramv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, type_: ::libc::c_uint, count: ::libc::c_int, strings: *const *const ::libc::c_char) -> u32;
  pub fn qt_gui_c_QOpenGLExtraFunctions_glDeleteProgramPipelines(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, n: ::libc::c_int, pipelines: *const u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glDeleteQueries(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, n: ::libc::c_int, ids: *const u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glDeleteSamplers(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, count: ::libc::c_int, samplers: *const u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glDeleteTransformFeedbacks(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, n: ::libc::c_int, ids: *const u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glDeleteVertexArrays(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, n: ::libc::c_int, arrays: *const u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glDispatchCompute(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, num_groups_x: u32, num_groups_y: u32, num_groups_z: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glDispatchComputeIndirect(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, indirect: ::libc::c_long);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glDrawArraysIndirect(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, mode: ::libc::c_uint, indirect: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glDrawArraysInstanced(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, mode: ::libc::c_uint, first: i32, count: ::libc::c_int, instancecount: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glDrawBuffers(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, n: ::libc::c_int, bufs: *const ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glDrawElementsIndirect(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, mode: ::libc::c_uint, type_: ::libc::c_uint, indirect: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glDrawElementsInstanced(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, mode: ::libc::c_uint, count: ::libc::c_int, type_: ::libc::c_uint, indices: *const ::libc::c_void, instancecount: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glDrawRangeElements(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, mode: ::libc::c_uint, start: u32, end: u32, count: ::libc::c_int, type_: ::libc::c_uint, indices: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glEndQuery(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glEndTransformFeedback(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glFlushMappedBufferRange(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, offset: ::libc::c_long, length: ::libc::c_long);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glFramebufferParameteri(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, pname: ::libc::c_uint, param: i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glFramebufferTextureLayer(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, attachment: ::libc::c_uint, texture: u32, level: i32, layer: i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGenProgramPipelines(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, n: ::libc::c_int, pipelines: *mut u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGenQueries(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, n: ::libc::c_int, ids: *mut u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGenSamplers(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, count: ::libc::c_int, samplers: *mut u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGenTransformFeedbacks(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, n: ::libc::c_int, ids: *mut u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGenVertexArrays(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, n: ::libc::c_int, arrays: *mut u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetActiveUniformBlockName(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, uniformBlockIndex: u32, bufSize: ::libc::c_int, length: *mut ::libc::c_int, uniformBlockName: *mut ::libc::c_char);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetActiveUniformBlockiv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, uniformBlockIndex: u32, pname: ::libc::c_uint, params: *mut i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetActiveUniformsiv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, uniformCount: ::libc::c_int, uniformIndices: *const u32, pname: ::libc::c_uint, params: *mut i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetBooleani_v(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, index: u32, data: *mut ::libc::c_uchar);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetBufferParameteri64v(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, pname: ::libc::c_uint, params: *mut i64);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetBufferPointerv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, pname: ::libc::c_uint, params: *mut *mut ::libc::c_void);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetFragDataLocation(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, name: *const ::libc::c_char) -> i32;
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetFramebufferParameteriv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, pname: ::libc::c_uint, params: *mut i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetInteger64i_v(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, index: u32, data: *mut i64);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetInteger64v(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, pname: ::libc::c_uint, data: *mut i64);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetIntegeri_v(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, index: u32, data: *mut i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetInternalformativ(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, internalformat: ::libc::c_uint, pname: ::libc::c_uint, bufSize: ::libc::c_int, params: *mut i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetMultisamplefv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, pname: ::libc::c_uint, index: u32, val: *mut ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetProgramBinary(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, bufSize: ::libc::c_int, length: *mut ::libc::c_int, binaryFormat: *mut ::libc::c_uint, binary: *mut ::libc::c_void);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetProgramInterfaceiv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, programInterface: ::libc::c_uint, pname: ::libc::c_uint, params: *mut i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetProgramPipelineInfoLog(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, pipeline: u32, bufSize: ::libc::c_int, length: *mut ::libc::c_int, infoLog: *mut ::libc::c_char);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetProgramPipelineiv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, pipeline: u32, pname: ::libc::c_uint, params: *mut i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetProgramResourceIndex(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, programInterface: ::libc::c_uint, name: *const ::libc::c_char) -> u32;
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetProgramResourceLocation(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, programInterface: ::libc::c_uint, name: *const ::libc::c_char) -> i32;
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetProgramResourceName(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, programInterface: ::libc::c_uint, index: u32, bufSize: ::libc::c_int, length: *mut ::libc::c_int, name: *mut ::libc::c_char);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetProgramResourceiv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, programInterface: ::libc::c_uint, index: u32, propCount: ::libc::c_int, props: *const ::libc::c_uint, bufSize: ::libc::c_int, length: *mut ::libc::c_int, params: *mut i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetQueryObjectuiv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, id: u32, pname: ::libc::c_uint, params: *mut u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetQueryiv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, pname: ::libc::c_uint, params: *mut i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetSamplerParameterfv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, sampler: u32, pname: ::libc::c_uint, params: *mut ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetSamplerParameteriv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, sampler: u32, pname: ::libc::c_uint, params: *mut i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetStringi(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, name: ::libc::c_uint, index: u32) -> *const u8;
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetTexLevelParameterfv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, level: i32, pname: ::libc::c_uint, params: *mut ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetTexLevelParameteriv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, level: i32, pname: ::libc::c_uint, params: *mut i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetTransformFeedbackVarying(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, index: u32, bufSize: ::libc::c_int, length: *mut ::libc::c_int, size: *mut ::libc::c_int, type_: *mut ::libc::c_uint, name: *mut ::libc::c_char);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetUniformBlockIndex(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, uniformBlockName: *const ::libc::c_char) -> u32;
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetUniformIndices(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, uniformCount: ::libc::c_int, uniformNames: *const *const ::libc::c_char, uniformIndices: *mut u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetUniformuiv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, params: *mut u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetVertexAttribIiv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, index: u32, pname: ::libc::c_uint, params: *mut i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glGetVertexAttribIuiv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, index: u32, pname: ::libc::c_uint, params: *mut u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glInvalidateFramebuffer(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, numAttachments: ::libc::c_int, attachments: *const ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glInvalidateSubFramebuffer(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, numAttachments: ::libc::c_int, attachments: *const ::libc::c_uint, x: i32, y: i32, width: ::libc::c_int, height: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glIsProgramPipeline(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, pipeline: u32) -> ::libc::c_uchar;
  pub fn qt_gui_c_QOpenGLExtraFunctions_glIsQuery(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, id: u32) -> ::libc::c_uchar;
  pub fn qt_gui_c_QOpenGLExtraFunctions_glIsSampler(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, sampler: u32) -> ::libc::c_uchar;
  pub fn qt_gui_c_QOpenGLExtraFunctions_glIsTransformFeedback(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, id: u32) -> ::libc::c_uchar;
  pub fn qt_gui_c_QOpenGLExtraFunctions_glIsVertexArray(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, array: u32) -> ::libc::c_uchar;
  pub fn qt_gui_c_QOpenGLExtraFunctions_glMapBufferRange(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, offset: ::libc::c_long, length: ::libc::c_long, access: ::libc::c_uint) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QOpenGLExtraFunctions_glMemoryBarrier(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, barriers: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glMemoryBarrierByRegion(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, barriers: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glPauseTransformFeedback(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramBinary(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, binaryFormat: ::libc::c_uint, binary: *const ::libc::c_void, length: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramParameteri(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, pname: ::libc::c_uint, value: i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniform1f(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, v0: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniform1fv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, count: ::libc::c_int, value: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniform1i(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, v0: i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniform1iv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, count: ::libc::c_int, value: *const i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniform1ui(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, v0: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniform1uiv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, count: ::libc::c_int, value: *const u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniform2f(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, v0: ::libc::c_float, v1: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniform2fv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, count: ::libc::c_int, value: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniform2i(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, v0: i32, v1: i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniform2iv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, count: ::libc::c_int, value: *const i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniform2ui(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, v0: u32, v1: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniform2uiv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, count: ::libc::c_int, value: *const u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniform3f(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, v0: ::libc::c_float, v1: ::libc::c_float, v2: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniform3fv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, count: ::libc::c_int, value: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniform3i(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, v0: i32, v1: i32, v2: i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniform3iv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, count: ::libc::c_int, value: *const i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniform3ui(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, v0: u32, v1: u32, v2: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniform3uiv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, count: ::libc::c_int, value: *const u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniform4f(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, v0: ::libc::c_float, v1: ::libc::c_float, v2: ::libc::c_float, v3: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniform4fv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, count: ::libc::c_int, value: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniform4i(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, v0: i32, v1: i32, v2: i32, v3: i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniform4iv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, count: ::libc::c_int, value: *const i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniform4ui(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, v0: u32, v1: u32, v2: u32, v3: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniform4uiv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, count: ::libc::c_int, value: *const u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniformMatrix2fv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, count: ::libc::c_int, transpose: ::libc::c_uchar, value: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniformMatrix2x3fv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, count: ::libc::c_int, transpose: ::libc::c_uchar, value: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniformMatrix2x4fv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, count: ::libc::c_int, transpose: ::libc::c_uchar, value: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniformMatrix3fv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, count: ::libc::c_int, transpose: ::libc::c_uchar, value: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniformMatrix3x2fv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, count: ::libc::c_int, transpose: ::libc::c_uchar, value: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniformMatrix3x4fv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, count: ::libc::c_int, transpose: ::libc::c_uchar, value: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniformMatrix4fv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, count: ::libc::c_int, transpose: ::libc::c_uchar, value: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniformMatrix4x2fv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, count: ::libc::c_int, transpose: ::libc::c_uchar, value: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glProgramUniformMatrix4x3fv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, location: i32, count: ::libc::c_int, transpose: ::libc::c_uchar, value: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glReadBuffer(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, mode: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glRenderbufferStorageMultisample(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, samples: ::libc::c_int, internalformat: ::libc::c_uint, width: ::libc::c_int, height: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glResumeTransformFeedback(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glSampleMaski(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, maskNumber: u32, mask: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glSamplerParameterf(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, sampler: u32, pname: ::libc::c_uint, param: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glSamplerParameterfv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, sampler: u32, pname: ::libc::c_uint, param: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glSamplerParameteri(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, sampler: u32, pname: ::libc::c_uint, param: i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glSamplerParameteriv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, sampler: u32, pname: ::libc::c_uint, param: *const i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glTexImage3D(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, level: i32, internalformat: i32, width: ::libc::c_int, height: ::libc::c_int, depth: ::libc::c_int, border: i32, format: ::libc::c_uint, type_: ::libc::c_uint, pixels: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glTexStorage2D(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, levels: ::libc::c_int, internalformat: ::libc::c_uint, width: ::libc::c_int, height: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glTexStorage2DMultisample(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, samples: ::libc::c_int, internalformat: ::libc::c_uint, width: ::libc::c_int, height: ::libc::c_int, fixedsamplelocations: ::libc::c_uchar);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glTexStorage3D(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, levels: ::libc::c_int, internalformat: ::libc::c_uint, width: ::libc::c_int, height: ::libc::c_int, depth: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glTexSubImage3D(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint, level: i32, xoffset: i32, yoffset: i32, zoffset: i32, width: ::libc::c_int, height: ::libc::c_int, depth: ::libc::c_int, format: ::libc::c_uint, type_: ::libc::c_uint, pixels: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glTransformFeedbackVaryings(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, count: ::libc::c_int, varyings: *const *const ::libc::c_char, bufferMode: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glUniform1ui(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, location: i32, v0: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glUniform1uiv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, location: i32, count: ::libc::c_int, value: *const u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glUniform2ui(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, location: i32, v0: u32, v1: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glUniform2uiv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, location: i32, count: ::libc::c_int, value: *const u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glUniform3ui(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, location: i32, v0: u32, v1: u32, v2: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glUniform3uiv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, location: i32, count: ::libc::c_int, value: *const u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glUniform4ui(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, location: i32, v0: u32, v1: u32, v2: u32, v3: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glUniform4uiv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, location: i32, count: ::libc::c_int, value: *const u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glUniformBlockBinding(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, program: u32, uniformBlockIndex: u32, uniformBlockBinding: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glUniformMatrix2x3fv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, location: i32, count: ::libc::c_int, transpose: ::libc::c_uchar, value: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glUniformMatrix2x4fv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, location: i32, count: ::libc::c_int, transpose: ::libc::c_uchar, value: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glUniformMatrix3x2fv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, location: i32, count: ::libc::c_int, transpose: ::libc::c_uchar, value: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glUniformMatrix3x4fv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, location: i32, count: ::libc::c_int, transpose: ::libc::c_uchar, value: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glUniformMatrix4x2fv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, location: i32, count: ::libc::c_int, transpose: ::libc::c_uchar, value: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glUniformMatrix4x3fv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, location: i32, count: ::libc::c_int, transpose: ::libc::c_uchar, value: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glUnmapBuffer(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, target: ::libc::c_uint) -> ::libc::c_uchar;
  pub fn qt_gui_c_QOpenGLExtraFunctions_glUseProgramStages(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, pipeline: u32, stages: ::libc::c_uint, program: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glValidateProgramPipeline(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, pipeline: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glVertexAttribBinding(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, attribindex: u32, bindingindex: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glVertexAttribDivisor(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, index: u32, divisor: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glVertexAttribFormat(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, attribindex: u32, size: i32, type_: ::libc::c_uint, normalized: ::libc::c_uchar, relativeoffset: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glVertexAttribI4i(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, index: u32, x: i32, y: i32, z: i32, w: i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glVertexAttribI4iv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, index: u32, v: *const i32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glVertexAttribI4ui(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, index: u32, x: u32, y: u32, z: u32, w: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glVertexAttribI4uiv(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, index: u32, v: *const u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glVertexAttribIFormat(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, attribindex: u32, size: i32, type_: ::libc::c_uint, relativeoffset: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glVertexAttribIPointer(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, index: u32, size: i32, type_: ::libc::c_uint, stride: ::libc::c_int, pointer: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLExtraFunctions_glVertexBindingDivisor(this_ptr: *mut ::opengl_extra_functions::OpenGLExtraFunctions, bindingindex: u32, divisor: u32);
  pub fn qt_gui_c_QOpenGLExtraFunctions_new_context(context: *mut ::opengl_context::OpenGLContext) -> *mut ::opengl_extra_functions::OpenGLExtraFunctions;
  pub fn qt_gui_c_QOpenGLExtraFunctions_new_no_args() -> *mut ::opengl_extra_functions::OpenGLExtraFunctions;

  // Header: QOpenGLFramebufferObject
  pub fn qt_gui_c_QOpenGLFramebufferObject_addColorAttachment_size(this_ptr: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject, size: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QOpenGLFramebufferObject_addColorAttachment_size_internalFormat(this_ptr: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject, size: *const ::qt_core::size::Size, internalFormat: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLFramebufferObject_addColorAttachment_width_height(this_ptr: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject, width: ::libc::c_int, height: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLFramebufferObject_addColorAttachment_width_height_internalFormat(this_ptr: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject, width: ::libc::c_int, height: ::libc::c_int, internalFormat: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLFramebufferObject_attachment(this_ptr: *const ::opengl_framebuffer_object::OpenGLFramebufferObject) -> ::opengl_framebuffer_object::Attachment;
  pub fn qt_gui_c_QOpenGLFramebufferObject_bind(this_ptr: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject) -> bool;
  pub fn qt_gui_c_QOpenGLFramebufferObject_bindDefault() -> bool;
  pub fn qt_gui_c_QOpenGLFramebufferObject_blitFramebuffer_target_source(target: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject, source: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject);
  pub fn qt_gui_c_QOpenGLFramebufferObject_blitFramebuffer_target_source_buffers(target: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject, source: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject, buffers: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLFramebufferObject_blitFramebuffer_target_source_buffers_filter(target: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject, source: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject, buffers: ::libc::c_uint, filter: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLFramebufferObject_blitFramebuffer_target_targetRect_source_sourceRect(target: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject, targetRect: *const ::qt_core::rect::Rect, source: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject, sourceRect: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QOpenGLFramebufferObject_blitFramebuffer_target_targetRect_source_sourceRect_buffers(target: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject, targetRect: *const ::qt_core::rect::Rect, source: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject, sourceRect: *const ::qt_core::rect::Rect, buffers: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLFramebufferObject_blitFramebuffer_target_targetRect_source_sourceRect_buffers_filter(target: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject, targetRect: *const ::qt_core::rect::Rect, source: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject, sourceRect: *const ::qt_core::rect::Rect, buffers: ::libc::c_uint, filter: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLFramebufferObject_blitFramebuffer_target_targetRect_source_sourceRect_buffers_filter_readColorAttachmentIndex_drawColorAttachmentIndex(target: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject, targetRect: *const ::qt_core::rect::Rect, source: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject, sourceRect: *const ::qt_core::rect::Rect, buffers: ::libc::c_uint, filter: ::libc::c_uint, readColorAttachmentIndex: ::libc::c_int, drawColorAttachmentIndex: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLFramebufferObject_blitFramebuffer_target_targetRect_source_sourceRect_buffers_filter_readColorAttachmentIndex_drawColorAttachmentIndex_restorePolicy(target: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject, targetRect: *const ::qt_core::rect::Rect, source: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject, sourceRect: *const ::qt_core::rect::Rect, buffers: ::libc::c_uint, filter: ::libc::c_uint, readColorAttachmentIndex: ::libc::c_int, drawColorAttachmentIndex: ::libc::c_int, restorePolicy: ::opengl_framebuffer_object::FramebufferRestorePolicy);
  pub fn qt_gui_c_QOpenGLFramebufferObject_delete(this_ptr: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject);
  pub fn qt_gui_c_QOpenGLFramebufferObject_format_to_output(this_ptr: *const ::opengl_framebuffer_object::OpenGLFramebufferObject, output: *mut ::opengl_framebuffer_object_format::OpenGLFramebufferObjectFormat);
  pub fn qt_gui_c_QOpenGLFramebufferObject_handle(this_ptr: *const ::opengl_framebuffer_object::OpenGLFramebufferObject) -> u32;
  pub fn qt_gui_c_QOpenGLFramebufferObject_hasOpenGLFramebufferBlit() -> bool;
  pub fn qt_gui_c_QOpenGLFramebufferObject_hasOpenGLFramebufferObjects() -> bool;
  pub fn qt_gui_c_QOpenGLFramebufferObject_height(this_ptr: *const ::opengl_framebuffer_object::OpenGLFramebufferObject) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLFramebufferObject_isBound(this_ptr: *const ::opengl_framebuffer_object::OpenGLFramebufferObject) -> bool;
  pub fn qt_gui_c_QOpenGLFramebufferObject_isValid(this_ptr: *const ::opengl_framebuffer_object::OpenGLFramebufferObject) -> bool;
  pub fn qt_gui_c_QOpenGLFramebufferObject_new_size(size: *const ::qt_core::size::Size) -> *mut ::opengl_framebuffer_object::OpenGLFramebufferObject;
  pub fn qt_gui_c_QOpenGLFramebufferObject_new_size_attachment(size: *const ::qt_core::size::Size, attachment: ::opengl_framebuffer_object::Attachment) -> *mut ::opengl_framebuffer_object::OpenGLFramebufferObject;
  pub fn qt_gui_c_QOpenGLFramebufferObject_new_size_attachment_target(size: *const ::qt_core::size::Size, attachment: ::opengl_framebuffer_object::Attachment, target: ::libc::c_uint) -> *mut ::opengl_framebuffer_object::OpenGLFramebufferObject;
  pub fn qt_gui_c_QOpenGLFramebufferObject_new_size_attachment_target_internalFormat(size: *const ::qt_core::size::Size, attachment: ::opengl_framebuffer_object::Attachment, target: ::libc::c_uint, internalFormat: ::libc::c_uint) -> *mut ::opengl_framebuffer_object::OpenGLFramebufferObject;
  pub fn qt_gui_c_QOpenGLFramebufferObject_new_size_format(size: *const ::qt_core::size::Size, format: *const ::opengl_framebuffer_object_format::OpenGLFramebufferObjectFormat) -> *mut ::opengl_framebuffer_object::OpenGLFramebufferObject;
  pub fn qt_gui_c_QOpenGLFramebufferObject_new_size_target(size: *const ::qt_core::size::Size, target: ::libc::c_uint) -> *mut ::opengl_framebuffer_object::OpenGLFramebufferObject;
  pub fn qt_gui_c_QOpenGLFramebufferObject_new_width_height(width: ::libc::c_int, height: ::libc::c_int) -> *mut ::opengl_framebuffer_object::OpenGLFramebufferObject;
  pub fn qt_gui_c_QOpenGLFramebufferObject_new_width_height_attachment(width: ::libc::c_int, height: ::libc::c_int, attachment: ::opengl_framebuffer_object::Attachment) -> *mut ::opengl_framebuffer_object::OpenGLFramebufferObject;
  pub fn qt_gui_c_QOpenGLFramebufferObject_new_width_height_attachment_target(width: ::libc::c_int, height: ::libc::c_int, attachment: ::opengl_framebuffer_object::Attachment, target: ::libc::c_uint) -> *mut ::opengl_framebuffer_object::OpenGLFramebufferObject;
  pub fn qt_gui_c_QOpenGLFramebufferObject_new_width_height_attachment_target_internalFormat(width: ::libc::c_int, height: ::libc::c_int, attachment: ::opengl_framebuffer_object::Attachment, target: ::libc::c_uint, internalFormat: ::libc::c_uint) -> *mut ::opengl_framebuffer_object::OpenGLFramebufferObject;
  pub fn qt_gui_c_QOpenGLFramebufferObject_new_width_height_format(width: ::libc::c_int, height: ::libc::c_int, format: *const ::opengl_framebuffer_object_format::OpenGLFramebufferObjectFormat) -> *mut ::opengl_framebuffer_object::OpenGLFramebufferObject;
  pub fn qt_gui_c_QOpenGLFramebufferObject_new_width_height_target(width: ::libc::c_int, height: ::libc::c_int, target: ::libc::c_uint) -> *mut ::opengl_framebuffer_object::OpenGLFramebufferObject;
  pub fn qt_gui_c_QOpenGLFramebufferObject_release(this_ptr: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject) -> bool;
  pub fn qt_gui_c_QOpenGLFramebufferObject_setAttachment(this_ptr: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject, attachment: ::opengl_framebuffer_object::Attachment);
  pub fn qt_gui_c_QOpenGLFramebufferObject_size_to_output(this_ptr: *const ::opengl_framebuffer_object::OpenGLFramebufferObject, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QOpenGLFramebufferObject_sizes_to_output(this_ptr: *const ::opengl_framebuffer_object::OpenGLFramebufferObject, output: *mut ::vector::VectorQtCoreSize);
  pub fn qt_gui_c_QOpenGLFramebufferObject_takeTexture_colorAttachmentIndex(this_ptr: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject, colorAttachmentIndex: ::libc::c_int) -> u32;
  pub fn qt_gui_c_QOpenGLFramebufferObject_takeTexture_no_args(this_ptr: *mut ::opengl_framebuffer_object::OpenGLFramebufferObject) -> u32;
  pub fn qt_gui_c_QOpenGLFramebufferObject_texture(this_ptr: *const ::opengl_framebuffer_object::OpenGLFramebufferObject) -> u32;
  pub fn qt_gui_c_QOpenGLFramebufferObject_textures_to_output(this_ptr: *const ::opengl_framebuffer_object::OpenGLFramebufferObject, output: *mut ::vector::VectorU32);
  pub fn qt_gui_c_QOpenGLFramebufferObject_toImage_as_ptr_flipped(this_ptr: *const ::opengl_framebuffer_object::OpenGLFramebufferObject, flipped: bool) -> *mut ::image::Image;
  pub fn qt_gui_c_QOpenGLFramebufferObject_toImage_as_ptr_flipped_colorAttachmentIndex(this_ptr: *const ::opengl_framebuffer_object::OpenGLFramebufferObject, flipped: bool, colorAttachmentIndex: ::libc::c_int) -> *mut ::image::Image;
  pub fn qt_gui_c_QOpenGLFramebufferObject_toImage_as_ptr_no_args(this_ptr: *const ::opengl_framebuffer_object::OpenGLFramebufferObject) -> *mut ::image::Image;
  pub fn qt_gui_c_QOpenGLFramebufferObject_width(this_ptr: *const ::opengl_framebuffer_object::OpenGLFramebufferObject) -> ::libc::c_int;

  // Header: QOpenGLFramebufferObjectFormat
  pub fn qt_gui_c_QOpenGLFramebufferObjectFormat_constructor_no_args(output: *mut ::opengl_framebuffer_object_format::OpenGLFramebufferObjectFormat);
  pub fn qt_gui_c_QOpenGLFramebufferObjectFormat_constructor_other(other: *const ::opengl_framebuffer_object_format::OpenGLFramebufferObjectFormat, output: *mut ::opengl_framebuffer_object_format::OpenGLFramebufferObjectFormat);
  pub fn qt_gui_c_QOpenGLFramebufferObjectFormat_destructor(this_ptr: *mut ::opengl_framebuffer_object_format::OpenGLFramebufferObjectFormat);
  pub fn qt_gui_c_QOpenGLFramebufferObjectFormat_internalTextureFormat(this_ptr: *const ::opengl_framebuffer_object_format::OpenGLFramebufferObjectFormat) -> ::libc::c_uint;
  pub fn qt_gui_c_QOpenGLFramebufferObjectFormat_mipmap(this_ptr: *const ::opengl_framebuffer_object_format::OpenGLFramebufferObjectFormat) -> bool;
  pub fn qt_gui_c_QOpenGLFramebufferObjectFormat_operator_assign(this_ptr: *mut ::opengl_framebuffer_object_format::OpenGLFramebufferObjectFormat, other: *const ::opengl_framebuffer_object_format::OpenGLFramebufferObjectFormat) -> *mut ::opengl_framebuffer_object_format::OpenGLFramebufferObjectFormat;
  pub fn qt_gui_c_QOpenGLFramebufferObjectFormat_operator_eq(this_ptr: *const ::opengl_framebuffer_object_format::OpenGLFramebufferObjectFormat, other: *const ::opengl_framebuffer_object_format::OpenGLFramebufferObjectFormat) -> bool;
  pub fn qt_gui_c_QOpenGLFramebufferObjectFormat_operator_neq(this_ptr: *const ::opengl_framebuffer_object_format::OpenGLFramebufferObjectFormat, other: *const ::opengl_framebuffer_object_format::OpenGLFramebufferObjectFormat) -> bool;
  pub fn qt_gui_c_QOpenGLFramebufferObjectFormat_samples(this_ptr: *const ::opengl_framebuffer_object_format::OpenGLFramebufferObjectFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLFramebufferObjectFormat_setAttachment(this_ptr: *mut ::opengl_framebuffer_object_format::OpenGLFramebufferObjectFormat, attachment: *const ::opengl_framebuffer_object::Attachment);
  pub fn qt_gui_c_QOpenGLFramebufferObjectFormat_setInternalTextureFormat(this_ptr: *mut ::opengl_framebuffer_object_format::OpenGLFramebufferObjectFormat, internalTextureFormat: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLFramebufferObjectFormat_setMipmap(this_ptr: *mut ::opengl_framebuffer_object_format::OpenGLFramebufferObjectFormat, enabled: bool);
  pub fn qt_gui_c_QOpenGLFramebufferObjectFormat_setSamples(this_ptr: *mut ::opengl_framebuffer_object_format::OpenGLFramebufferObjectFormat, samples: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLFramebufferObjectFormat_setTextureTarget(this_ptr: *mut ::opengl_framebuffer_object_format::OpenGLFramebufferObjectFormat, target: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLFramebufferObjectFormat_textureTarget(this_ptr: *const ::opengl_framebuffer_object_format::OpenGLFramebufferObjectFormat) -> ::libc::c_uint;

  // Header: QOpenGLFunctions
  pub fn qt_gui_c_QOpenGLFunctions_delete(this_ptr: *mut ::opengl_functions::OpenGLFunctions);
  pub fn qt_gui_c_QOpenGLFunctions_glActiveTexture(this_ptr: *mut ::opengl_functions::OpenGLFunctions, texture: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLFunctions_glAttachShader(this_ptr: *mut ::opengl_functions::OpenGLFunctions, program: u32, shader: u32);
  pub fn qt_gui_c_QOpenGLFunctions_glBindAttribLocation(this_ptr: *mut ::opengl_functions::OpenGLFunctions, program: u32, index: u32, name: *const ::libc::c_char);
  pub fn qt_gui_c_QOpenGLFunctions_glBindBuffer(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, buffer: u32);
  pub fn qt_gui_c_QOpenGLFunctions_glBindFramebuffer(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, framebuffer: u32);
  pub fn qt_gui_c_QOpenGLFunctions_glBindRenderbuffer(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, renderbuffer: u32);
  pub fn qt_gui_c_QOpenGLFunctions_glBindTexture(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, texture: u32);
  pub fn qt_gui_c_QOpenGLFunctions_glBlendColor(this_ptr: *mut ::opengl_functions::OpenGLFunctions, red: ::libc::c_float, green: ::libc::c_float, blue: ::libc::c_float, alpha: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glBlendEquation(this_ptr: *mut ::opengl_functions::OpenGLFunctions, mode: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLFunctions_glBlendEquationSeparate(this_ptr: *mut ::opengl_functions::OpenGLFunctions, modeRGB: ::libc::c_uint, modeAlpha: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLFunctions_glBlendFunc(this_ptr: *mut ::opengl_functions::OpenGLFunctions, sfactor: ::libc::c_uint, dfactor: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLFunctions_glBlendFuncSeparate(this_ptr: *mut ::opengl_functions::OpenGLFunctions, srcRGB: ::libc::c_uint, dstRGB: ::libc::c_uint, srcAlpha: ::libc::c_uint, dstAlpha: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLFunctions_glBufferData(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, size: ::libc::c_long, data: *const ::libc::c_void, usage: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLFunctions_glBufferSubData(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, offset: ::libc::c_long, size: ::libc::c_long, data: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLFunctions_glCheckFramebufferStatus(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint) -> ::libc::c_uint;
  pub fn qt_gui_c_QOpenGLFunctions_glClear(this_ptr: *mut ::opengl_functions::OpenGLFunctions, mask: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLFunctions_glClearColor(this_ptr: *mut ::opengl_functions::OpenGLFunctions, red: ::libc::c_float, green: ::libc::c_float, blue: ::libc::c_float, alpha: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glClearDepthf(this_ptr: *mut ::opengl_functions::OpenGLFunctions, depth: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glClearStencil(this_ptr: *mut ::opengl_functions::OpenGLFunctions, s: i32);
  pub fn qt_gui_c_QOpenGLFunctions_glColorMask(this_ptr: *mut ::opengl_functions::OpenGLFunctions, red: ::libc::c_uchar, green: ::libc::c_uchar, blue: ::libc::c_uchar, alpha: ::libc::c_uchar);
  pub fn qt_gui_c_QOpenGLFunctions_glCompileShader(this_ptr: *mut ::opengl_functions::OpenGLFunctions, shader: u32);
  pub fn qt_gui_c_QOpenGLFunctions_glCompressedTexImage2D(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, level: i32, internalformat: ::libc::c_uint, width: ::libc::c_int, height: ::libc::c_int, border: i32, imageSize: ::libc::c_int, data: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLFunctions_glCompressedTexSubImage2D(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, level: i32, xoffset: i32, yoffset: i32, width: ::libc::c_int, height: ::libc::c_int, format: ::libc::c_uint, imageSize: ::libc::c_int, data: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLFunctions_glCopyTexImage2D(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, level: i32, internalformat: ::libc::c_uint, x: i32, y: i32, width: ::libc::c_int, height: ::libc::c_int, border: i32);
  pub fn qt_gui_c_QOpenGLFunctions_glCopyTexSubImage2D(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, level: i32, xoffset: i32, yoffset: i32, x: i32, y: i32, width: ::libc::c_int, height: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLFunctions_glCreateProgram(this_ptr: *mut ::opengl_functions::OpenGLFunctions) -> u32;
  pub fn qt_gui_c_QOpenGLFunctions_glCreateShader(this_ptr: *mut ::opengl_functions::OpenGLFunctions, type_: ::libc::c_uint) -> u32;
  pub fn qt_gui_c_QOpenGLFunctions_glCullFace(this_ptr: *mut ::opengl_functions::OpenGLFunctions, mode: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLFunctions_glDeleteBuffers(this_ptr: *mut ::opengl_functions::OpenGLFunctions, n: ::libc::c_int, buffers: *const u32);
  pub fn qt_gui_c_QOpenGLFunctions_glDeleteFramebuffers(this_ptr: *mut ::opengl_functions::OpenGLFunctions, n: ::libc::c_int, framebuffers: *const u32);
  pub fn qt_gui_c_QOpenGLFunctions_glDeleteProgram(this_ptr: *mut ::opengl_functions::OpenGLFunctions, program: u32);
  pub fn qt_gui_c_QOpenGLFunctions_glDeleteRenderbuffers(this_ptr: *mut ::opengl_functions::OpenGLFunctions, n: ::libc::c_int, renderbuffers: *const u32);
  pub fn qt_gui_c_QOpenGLFunctions_glDeleteShader(this_ptr: *mut ::opengl_functions::OpenGLFunctions, shader: u32);
  pub fn qt_gui_c_QOpenGLFunctions_glDeleteTextures(this_ptr: *mut ::opengl_functions::OpenGLFunctions, n: ::libc::c_int, textures: *const u32);
  pub fn qt_gui_c_QOpenGLFunctions_glDepthFunc(this_ptr: *mut ::opengl_functions::OpenGLFunctions, func: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLFunctions_glDepthMask(this_ptr: *mut ::opengl_functions::OpenGLFunctions, flag: ::libc::c_uchar);
  pub fn qt_gui_c_QOpenGLFunctions_glDepthRangef(this_ptr: *mut ::opengl_functions::OpenGLFunctions, zNear: ::libc::c_float, zFar: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glDetachShader(this_ptr: *mut ::opengl_functions::OpenGLFunctions, program: u32, shader: u32);
  pub fn qt_gui_c_QOpenGLFunctions_glDisable(this_ptr: *mut ::opengl_functions::OpenGLFunctions, cap: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLFunctions_glDisableVertexAttribArray(this_ptr: *mut ::opengl_functions::OpenGLFunctions, index: u32);
  pub fn qt_gui_c_QOpenGLFunctions_glDrawArrays(this_ptr: *mut ::opengl_functions::OpenGLFunctions, mode: ::libc::c_uint, first: i32, count: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLFunctions_glDrawElements(this_ptr: *mut ::opengl_functions::OpenGLFunctions, mode: ::libc::c_uint, count: ::libc::c_int, type_: ::libc::c_uint, indices: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLFunctions_glEnable(this_ptr: *mut ::opengl_functions::OpenGLFunctions, cap: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLFunctions_glEnableVertexAttribArray(this_ptr: *mut ::opengl_functions::OpenGLFunctions, index: u32);
  pub fn qt_gui_c_QOpenGLFunctions_glFinish(this_ptr: *mut ::opengl_functions::OpenGLFunctions);
  pub fn qt_gui_c_QOpenGLFunctions_glFlush(this_ptr: *mut ::opengl_functions::OpenGLFunctions);
  pub fn qt_gui_c_QOpenGLFunctions_glFramebufferRenderbuffer(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, attachment: ::libc::c_uint, renderbuffertarget: ::libc::c_uint, renderbuffer: u32);
  pub fn qt_gui_c_QOpenGLFunctions_glFramebufferTexture2D(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, attachment: ::libc::c_uint, textarget: ::libc::c_uint, texture: u32, level: i32);
  pub fn qt_gui_c_QOpenGLFunctions_glFrontFace(this_ptr: *mut ::opengl_functions::OpenGLFunctions, mode: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLFunctions_glGenBuffers(this_ptr: *mut ::opengl_functions::OpenGLFunctions, n: ::libc::c_int, buffers: *mut u32);
  pub fn qt_gui_c_QOpenGLFunctions_glGenFramebuffers(this_ptr: *mut ::opengl_functions::OpenGLFunctions, n: ::libc::c_int, framebuffers: *mut u32);
  pub fn qt_gui_c_QOpenGLFunctions_glGenRenderbuffers(this_ptr: *mut ::opengl_functions::OpenGLFunctions, n: ::libc::c_int, renderbuffers: *mut u32);
  pub fn qt_gui_c_QOpenGLFunctions_glGenTextures(this_ptr: *mut ::opengl_functions::OpenGLFunctions, n: ::libc::c_int, textures: *mut u32);
  pub fn qt_gui_c_QOpenGLFunctions_glGenerateMipmap(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLFunctions_glGetActiveAttrib(this_ptr: *mut ::opengl_functions::OpenGLFunctions, program: u32, index: u32, bufsize: ::libc::c_int, length: *mut ::libc::c_int, size: *mut i32, type_: *mut ::libc::c_uint, name: *mut ::libc::c_char);
  pub fn qt_gui_c_QOpenGLFunctions_glGetActiveUniform(this_ptr: *mut ::opengl_functions::OpenGLFunctions, program: u32, index: u32, bufsize: ::libc::c_int, length: *mut ::libc::c_int, size: *mut i32, type_: *mut ::libc::c_uint, name: *mut ::libc::c_char);
  pub fn qt_gui_c_QOpenGLFunctions_glGetAttachedShaders(this_ptr: *mut ::opengl_functions::OpenGLFunctions, program: u32, maxcount: ::libc::c_int, count: *mut ::libc::c_int, shaders: *mut u32);
  pub fn qt_gui_c_QOpenGLFunctions_glGetAttribLocation(this_ptr: *mut ::opengl_functions::OpenGLFunctions, program: u32, name: *const ::libc::c_char) -> i32;
  pub fn qt_gui_c_QOpenGLFunctions_glGetBooleanv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, pname: ::libc::c_uint, params: *mut ::libc::c_uchar);
  pub fn qt_gui_c_QOpenGLFunctions_glGetBufferParameteriv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, pname: ::libc::c_uint, params: *mut i32);
  pub fn qt_gui_c_QOpenGLFunctions_glGetError(this_ptr: *mut ::opengl_functions::OpenGLFunctions) -> ::libc::c_uint;
  pub fn qt_gui_c_QOpenGLFunctions_glGetFloatv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, pname: ::libc::c_uint, params: *mut ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glGetFramebufferAttachmentParameteriv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, attachment: ::libc::c_uint, pname: ::libc::c_uint, params: *mut i32);
  pub fn qt_gui_c_QOpenGLFunctions_glGetIntegerv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, pname: ::libc::c_uint, params: *mut i32);
  pub fn qt_gui_c_QOpenGLFunctions_glGetProgramInfoLog(this_ptr: *mut ::opengl_functions::OpenGLFunctions, program: u32, bufsize: ::libc::c_int, length: *mut ::libc::c_int, infolog: *mut ::libc::c_char);
  pub fn qt_gui_c_QOpenGLFunctions_glGetProgramiv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, program: u32, pname: ::libc::c_uint, params: *mut i32);
  pub fn qt_gui_c_QOpenGLFunctions_glGetRenderbufferParameteriv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, pname: ::libc::c_uint, params: *mut i32);
  pub fn qt_gui_c_QOpenGLFunctions_glGetShaderInfoLog(this_ptr: *mut ::opengl_functions::OpenGLFunctions, shader: u32, bufsize: ::libc::c_int, length: *mut ::libc::c_int, infolog: *mut ::libc::c_char);
  pub fn qt_gui_c_QOpenGLFunctions_glGetShaderPrecisionFormat(this_ptr: *mut ::opengl_functions::OpenGLFunctions, shadertype: ::libc::c_uint, precisiontype: ::libc::c_uint, range: *mut i32, precision: *mut i32);
  pub fn qt_gui_c_QOpenGLFunctions_glGetShaderSource(this_ptr: *mut ::opengl_functions::OpenGLFunctions, shader: u32, bufsize: ::libc::c_int, length: *mut ::libc::c_int, source: *mut ::libc::c_char);
  pub fn qt_gui_c_QOpenGLFunctions_glGetShaderiv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, shader: u32, pname: ::libc::c_uint, params: *mut i32);
  pub fn qt_gui_c_QOpenGLFunctions_glGetString(this_ptr: *mut ::opengl_functions::OpenGLFunctions, name: ::libc::c_uint) -> *const u8;
  pub fn qt_gui_c_QOpenGLFunctions_glGetTexParameterfv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, pname: ::libc::c_uint, params: *mut ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glGetTexParameteriv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, pname: ::libc::c_uint, params: *mut i32);
  pub fn qt_gui_c_QOpenGLFunctions_glGetUniformLocation(this_ptr: *mut ::opengl_functions::OpenGLFunctions, program: u32, name: *const ::libc::c_char) -> i32;
  pub fn qt_gui_c_QOpenGLFunctions_glGetUniformfv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, program: u32, location: i32, params: *mut ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glGetUniformiv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, program: u32, location: i32, params: *mut i32);
  pub fn qt_gui_c_QOpenGLFunctions_glGetVertexAttribPointerv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, index: u32, pname: ::libc::c_uint, pointer: *mut *mut ::libc::c_void);
  pub fn qt_gui_c_QOpenGLFunctions_glGetVertexAttribfv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, index: u32, pname: ::libc::c_uint, params: *mut ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glGetVertexAttribiv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, index: u32, pname: ::libc::c_uint, params: *mut i32);
  pub fn qt_gui_c_QOpenGLFunctions_glHint(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, mode: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLFunctions_glIsBuffer(this_ptr: *mut ::opengl_functions::OpenGLFunctions, buffer: u32) -> ::libc::c_uchar;
  pub fn qt_gui_c_QOpenGLFunctions_glIsEnabled(this_ptr: *mut ::opengl_functions::OpenGLFunctions, cap: ::libc::c_uint) -> ::libc::c_uchar;
  pub fn qt_gui_c_QOpenGLFunctions_glIsFramebuffer(this_ptr: *mut ::opengl_functions::OpenGLFunctions, framebuffer: u32) -> ::libc::c_uchar;
  pub fn qt_gui_c_QOpenGLFunctions_glIsProgram(this_ptr: *mut ::opengl_functions::OpenGLFunctions, program: u32) -> ::libc::c_uchar;
  pub fn qt_gui_c_QOpenGLFunctions_glIsRenderbuffer(this_ptr: *mut ::opengl_functions::OpenGLFunctions, renderbuffer: u32) -> ::libc::c_uchar;
  pub fn qt_gui_c_QOpenGLFunctions_glIsShader(this_ptr: *mut ::opengl_functions::OpenGLFunctions, shader: u32) -> ::libc::c_uchar;
  pub fn qt_gui_c_QOpenGLFunctions_glIsTexture(this_ptr: *mut ::opengl_functions::OpenGLFunctions, texture: u32) -> ::libc::c_uchar;
  pub fn qt_gui_c_QOpenGLFunctions_glLineWidth(this_ptr: *mut ::opengl_functions::OpenGLFunctions, width: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glLinkProgram(this_ptr: *mut ::opengl_functions::OpenGLFunctions, program: u32);
  pub fn qt_gui_c_QOpenGLFunctions_glPixelStorei(this_ptr: *mut ::opengl_functions::OpenGLFunctions, pname: ::libc::c_uint, param: i32);
  pub fn qt_gui_c_QOpenGLFunctions_glPolygonOffset(this_ptr: *mut ::opengl_functions::OpenGLFunctions, factor: ::libc::c_float, units: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glReadPixels(this_ptr: *mut ::opengl_functions::OpenGLFunctions, x: i32, y: i32, width: ::libc::c_int, height: ::libc::c_int, format: ::libc::c_uint, type_: ::libc::c_uint, pixels: *mut ::libc::c_void);
  pub fn qt_gui_c_QOpenGLFunctions_glReleaseShaderCompiler(this_ptr: *mut ::opengl_functions::OpenGLFunctions);
  pub fn qt_gui_c_QOpenGLFunctions_glRenderbufferStorage(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, internalformat: ::libc::c_uint, width: ::libc::c_int, height: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLFunctions_glSampleCoverage(this_ptr: *mut ::opengl_functions::OpenGLFunctions, value: ::libc::c_float, invert: ::libc::c_uchar);
  pub fn qt_gui_c_QOpenGLFunctions_glScissor(this_ptr: *mut ::opengl_functions::OpenGLFunctions, x: i32, y: i32, width: ::libc::c_int, height: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLFunctions_glShaderBinary(this_ptr: *mut ::opengl_functions::OpenGLFunctions, n: i32, shaders: *const u32, binaryformat: ::libc::c_uint, binary: *const ::libc::c_void, length: i32);
  pub fn qt_gui_c_QOpenGLFunctions_glShaderSource(this_ptr: *mut ::opengl_functions::OpenGLFunctions, shader: u32, count: ::libc::c_int, string: *mut *const ::libc::c_char, length: *const i32);
  pub fn qt_gui_c_QOpenGLFunctions_glStencilFunc(this_ptr: *mut ::opengl_functions::OpenGLFunctions, func: ::libc::c_uint, ref_: i32, mask: u32);
  pub fn qt_gui_c_QOpenGLFunctions_glStencilFuncSeparate(this_ptr: *mut ::opengl_functions::OpenGLFunctions, face: ::libc::c_uint, func: ::libc::c_uint, ref_: i32, mask: u32);
  pub fn qt_gui_c_QOpenGLFunctions_glStencilMask(this_ptr: *mut ::opengl_functions::OpenGLFunctions, mask: u32);
  pub fn qt_gui_c_QOpenGLFunctions_glStencilMaskSeparate(this_ptr: *mut ::opengl_functions::OpenGLFunctions, face: ::libc::c_uint, mask: u32);
  pub fn qt_gui_c_QOpenGLFunctions_glStencilOp(this_ptr: *mut ::opengl_functions::OpenGLFunctions, fail: ::libc::c_uint, zfail: ::libc::c_uint, zpass: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLFunctions_glStencilOpSeparate(this_ptr: *mut ::opengl_functions::OpenGLFunctions, face: ::libc::c_uint, fail: ::libc::c_uint, zfail: ::libc::c_uint, zpass: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLFunctions_glTexImage2D(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, level: i32, internalformat: i32, width: ::libc::c_int, height: ::libc::c_int, border: i32, format: ::libc::c_uint, type_: ::libc::c_uint, pixels: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLFunctions_glTexParameterf(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, pname: ::libc::c_uint, param: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glTexParameterfv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, pname: ::libc::c_uint, params: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glTexParameteri(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, pname: ::libc::c_uint, param: i32);
  pub fn qt_gui_c_QOpenGLFunctions_glTexParameteriv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, pname: ::libc::c_uint, params: *const i32);
  pub fn qt_gui_c_QOpenGLFunctions_glTexSubImage2D(this_ptr: *mut ::opengl_functions::OpenGLFunctions, target: ::libc::c_uint, level: i32, xoffset: i32, yoffset: i32, width: ::libc::c_int, height: ::libc::c_int, format: ::libc::c_uint, type_: ::libc::c_uint, pixels: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLFunctions_glUniform1f(this_ptr: *mut ::opengl_functions::OpenGLFunctions, location: i32, x: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glUniform1fv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, location: i32, count: ::libc::c_int, v: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glUniform1i(this_ptr: *mut ::opengl_functions::OpenGLFunctions, location: i32, x: i32);
  pub fn qt_gui_c_QOpenGLFunctions_glUniform1iv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, location: i32, count: ::libc::c_int, v: *const i32);
  pub fn qt_gui_c_QOpenGLFunctions_glUniform2f(this_ptr: *mut ::opengl_functions::OpenGLFunctions, location: i32, x: ::libc::c_float, y: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glUniform2fv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, location: i32, count: ::libc::c_int, v: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glUniform2i(this_ptr: *mut ::opengl_functions::OpenGLFunctions, location: i32, x: i32, y: i32);
  pub fn qt_gui_c_QOpenGLFunctions_glUniform2iv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, location: i32, count: ::libc::c_int, v: *const i32);
  pub fn qt_gui_c_QOpenGLFunctions_glUniform3f(this_ptr: *mut ::opengl_functions::OpenGLFunctions, location: i32, x: ::libc::c_float, y: ::libc::c_float, z: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glUniform3fv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, location: i32, count: ::libc::c_int, v: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glUniform3i(this_ptr: *mut ::opengl_functions::OpenGLFunctions, location: i32, x: i32, y: i32, z: i32);
  pub fn qt_gui_c_QOpenGLFunctions_glUniform3iv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, location: i32, count: ::libc::c_int, v: *const i32);
  pub fn qt_gui_c_QOpenGLFunctions_glUniform4f(this_ptr: *mut ::opengl_functions::OpenGLFunctions, location: i32, x: ::libc::c_float, y: ::libc::c_float, z: ::libc::c_float, w: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glUniform4fv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, location: i32, count: ::libc::c_int, v: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glUniform4i(this_ptr: *mut ::opengl_functions::OpenGLFunctions, location: i32, x: i32, y: i32, z: i32, w: i32);
  pub fn qt_gui_c_QOpenGLFunctions_glUniform4iv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, location: i32, count: ::libc::c_int, v: *const i32);
  pub fn qt_gui_c_QOpenGLFunctions_glUniformMatrix2fv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, location: i32, count: ::libc::c_int, transpose: ::libc::c_uchar, value: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glUniformMatrix3fv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, location: i32, count: ::libc::c_int, transpose: ::libc::c_uchar, value: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glUniformMatrix4fv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, location: i32, count: ::libc::c_int, transpose: ::libc::c_uchar, value: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glUseProgram(this_ptr: *mut ::opengl_functions::OpenGLFunctions, program: u32);
  pub fn qt_gui_c_QOpenGLFunctions_glValidateProgram(this_ptr: *mut ::opengl_functions::OpenGLFunctions, program: u32);
  pub fn qt_gui_c_QOpenGLFunctions_glVertexAttrib1f(this_ptr: *mut ::opengl_functions::OpenGLFunctions, indx: u32, x: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glVertexAttrib1fv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, indx: u32, values: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glVertexAttrib2f(this_ptr: *mut ::opengl_functions::OpenGLFunctions, indx: u32, x: ::libc::c_float, y: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glVertexAttrib2fv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, indx: u32, values: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glVertexAttrib3f(this_ptr: *mut ::opengl_functions::OpenGLFunctions, indx: u32, x: ::libc::c_float, y: ::libc::c_float, z: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glVertexAttrib3fv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, indx: u32, values: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glVertexAttrib4f(this_ptr: *mut ::opengl_functions::OpenGLFunctions, indx: u32, x: ::libc::c_float, y: ::libc::c_float, z: ::libc::c_float, w: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glVertexAttrib4fv(this_ptr: *mut ::opengl_functions::OpenGLFunctions, indx: u32, values: *const ::libc::c_float);
  pub fn qt_gui_c_QOpenGLFunctions_glVertexAttribPointer(this_ptr: *mut ::opengl_functions::OpenGLFunctions, indx: u32, size: i32, type_: ::libc::c_uint, normalized: ::libc::c_uchar, stride: ::libc::c_int, ptr: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLFunctions_glViewport(this_ptr: *mut ::opengl_functions::OpenGLFunctions, x: i32, y: i32, width: ::libc::c_int, height: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLFunctions_hasOpenGLFeature(this_ptr: *const ::opengl_functions::OpenGLFunctions, feature: *const ::opengl_functions::OpenGLFeature) -> bool;
  pub fn qt_gui_c_QOpenGLFunctions_initializeOpenGLFunctions(this_ptr: *mut ::opengl_functions::OpenGLFunctions);
  pub fn qt_gui_c_QOpenGLFunctions_new_context(context: *mut ::opengl_context::OpenGLContext) -> *mut ::opengl_functions::OpenGLFunctions;
  pub fn qt_gui_c_QOpenGLFunctions_new_no_args() -> *mut ::opengl_functions::OpenGLFunctions;

  // Header: QOpenGLPaintDevice
  pub fn qt_gui_c_QOpenGLPaintDevice_G_dynamic_cast_QOpenGLPaintDevice_ptr(ptr: *mut ::paint_device::PaintDevice) -> *mut ::opengl_paint_device::OpenGLPaintDevice;
  pub fn qt_gui_c_QOpenGLPaintDevice_G_static_cast_QOpenGLPaintDevice_ptr(ptr: *mut ::paint_device::PaintDevice) -> *mut ::opengl_paint_device::OpenGLPaintDevice;
  pub fn qt_gui_c_QOpenGLPaintDevice_G_static_cast_QPaintDevice_ptr(ptr: *mut ::opengl_paint_device::OpenGLPaintDevice) -> *mut ::paint_device::PaintDevice;
  pub fn qt_gui_c_QOpenGLPaintDevice_context(this_ptr: *const ::opengl_paint_device::OpenGLPaintDevice) -> *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QOpenGLPaintDevice_delete(this_ptr: *mut ::opengl_paint_device::OpenGLPaintDevice);
  pub fn qt_gui_c_QOpenGLPaintDevice_devType(this_ptr: *const ::opengl_paint_device::OpenGLPaintDevice) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLPaintDevice_dotsPerMeterX(this_ptr: *const ::opengl_paint_device::OpenGLPaintDevice) -> ::libc::c_double;
  pub fn qt_gui_c_QOpenGLPaintDevice_dotsPerMeterY(this_ptr: *const ::opengl_paint_device::OpenGLPaintDevice) -> ::libc::c_double;
  pub fn qt_gui_c_QOpenGLPaintDevice_ensureActiveTarget(this_ptr: *mut ::opengl_paint_device::OpenGLPaintDevice);
  pub fn qt_gui_c_QOpenGLPaintDevice_new_no_args() -> *mut ::opengl_paint_device::OpenGLPaintDevice;
  pub fn qt_gui_c_QOpenGLPaintDevice_new_size(size: *const ::qt_core::size::Size) -> *mut ::opengl_paint_device::OpenGLPaintDevice;
  pub fn qt_gui_c_QOpenGLPaintDevice_new_width_height(width: ::libc::c_int, height: ::libc::c_int) -> *mut ::opengl_paint_device::OpenGLPaintDevice;
  pub fn qt_gui_c_QOpenGLPaintDevice_paintEngine(this_ptr: *const ::opengl_paint_device::OpenGLPaintDevice) -> *mut ::paint_engine::PaintEngine;
  pub fn qt_gui_c_QOpenGLPaintDevice_paintFlipped(this_ptr: *const ::opengl_paint_device::OpenGLPaintDevice) -> bool;
  pub fn qt_gui_c_QOpenGLPaintDevice_setDevicePixelRatio(this_ptr: *mut ::opengl_paint_device::OpenGLPaintDevice, devicePixelRatio: ::libc::c_double);
  pub fn qt_gui_c_QOpenGLPaintDevice_setDotsPerMeterX(this_ptr: *mut ::opengl_paint_device::OpenGLPaintDevice, arg1: ::libc::c_double);
  pub fn qt_gui_c_QOpenGLPaintDevice_setDotsPerMeterY(this_ptr: *mut ::opengl_paint_device::OpenGLPaintDevice, arg1: ::libc::c_double);
  pub fn qt_gui_c_QOpenGLPaintDevice_setPaintFlipped(this_ptr: *mut ::opengl_paint_device::OpenGLPaintDevice, flipped: bool);
  pub fn qt_gui_c_QOpenGLPaintDevice_setSize(this_ptr: *mut ::opengl_paint_device::OpenGLPaintDevice, size: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QOpenGLPaintDevice_size_to_output(this_ptr: *const ::opengl_paint_device::OpenGLPaintDevice, output: *mut ::qt_core::size::Size);

  // Header: QOpenGLPixelTransferOptions
  pub fn qt_gui_c_QOpenGLPixelTransferOptions_G_swap(value1: *mut ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions, value2: *mut ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions);
  pub fn qt_gui_c_QOpenGLPixelTransferOptions_alignment(this_ptr: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLPixelTransferOptions_delete(this_ptr: *mut ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions);
  pub fn qt_gui_c_QOpenGLPixelTransferOptions_imageHeight(this_ptr: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLPixelTransferOptions_isLeastSignificantBitFirst(this_ptr: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions) -> bool;
  pub fn qt_gui_c_QOpenGLPixelTransferOptions_isSwapBytesEnabled(this_ptr: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions) -> bool;
  pub fn qt_gui_c_QOpenGLPixelTransferOptions_new_arg1(arg1: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions) -> *mut ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions;
  pub fn qt_gui_c_QOpenGLPixelTransferOptions_new_no_args() -> *mut ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions;
  pub fn qt_gui_c_QOpenGLPixelTransferOptions_operator_assign(this_ptr: *mut ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions, arg1: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions) -> *mut ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions;
  pub fn qt_gui_c_QOpenGLPixelTransferOptions_rowLength(this_ptr: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLPixelTransferOptions_setAlignment(this_ptr: *mut ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions, alignment: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLPixelTransferOptions_setImageHeight(this_ptr: *mut ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions, imageHeight: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLPixelTransferOptions_setLeastSignificantByteFirst(this_ptr: *mut ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions, lsbFirst: bool);
  pub fn qt_gui_c_QOpenGLPixelTransferOptions_setRowLength(this_ptr: *mut ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions, rowLength: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLPixelTransferOptions_setSkipImages(this_ptr: *mut ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions, skipImages: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLPixelTransferOptions_setSkipPixels(this_ptr: *mut ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions, skipPixels: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLPixelTransferOptions_setSkipRows(this_ptr: *mut ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions, skipRows: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLPixelTransferOptions_setSwapBytesEnabled(this_ptr: *mut ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions, swapBytes: bool);
  pub fn qt_gui_c_QOpenGLPixelTransferOptions_skipImages(this_ptr: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLPixelTransferOptions_skipPixels(this_ptr: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLPixelTransferOptions_skipRows(this_ptr: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLPixelTransferOptions_swap(this_ptr: *mut ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions, other: *mut ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions);

  // Header: QOpenGLShader
  pub fn qt_gui_c_QOpenGLShader_G_static_cast_QObject_ptr(ptr: *mut ::opengl_shader::OpenGLShader) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QOpenGLShader_G_static_cast_QOpenGLShader_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::opengl_shader::OpenGLShader;
  pub fn qt_gui_c_QOpenGLShader_compileSourceCode_QByteArray(this_ptr: *mut ::opengl_shader::OpenGLShader, source: *const ::qt_core::byte_array::ByteArray) -> bool;
  pub fn qt_gui_c_QOpenGLShader_compileSourceCode_QString(this_ptr: *mut ::opengl_shader::OpenGLShader, source: *const ::qt_core::string::String) -> bool;
  pub fn qt_gui_c_QOpenGLShader_compileSourceCode_char(this_ptr: *mut ::opengl_shader::OpenGLShader, source: *const ::libc::c_char) -> bool;
  pub fn qt_gui_c_QOpenGLShader_compileSourceFile(this_ptr: *mut ::opengl_shader::OpenGLShader, fileName: *const ::qt_core::string::String) -> bool;
  pub fn qt_gui_c_QOpenGLShader_delete(this_ptr: *mut ::opengl_shader::OpenGLShader);
  pub fn qt_gui_c_QOpenGLShader_hasOpenGLShaders_type(type_: ::libc::c_uint) -> bool;
  pub fn qt_gui_c_QOpenGLShader_hasOpenGLShaders_type_context(type_: ::libc::c_uint, context: *mut ::opengl_context::OpenGLContext) -> bool;
  pub fn qt_gui_c_QOpenGLShader_isCompiled(this_ptr: *const ::opengl_shader::OpenGLShader) -> bool;
  pub fn qt_gui_c_QOpenGLShader_log_to_output(this_ptr: *const ::opengl_shader::OpenGLShader, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QOpenGLShader_metaObject(this_ptr: *const ::opengl_shader::OpenGLShader) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QOpenGLShader_qt_metacall(this_ptr: *mut ::opengl_shader::OpenGLShader, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLShader_qt_metacast(this_ptr: *mut ::opengl_shader::OpenGLShader, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QOpenGLShader_shaderId(this_ptr: *const ::opengl_shader::OpenGLShader) -> u32;
  pub fn qt_gui_c_QOpenGLShader_sourceCode_to_output(this_ptr: *const ::opengl_shader::OpenGLShader, output: *mut ::qt_core::byte_array::ByteArray);
  pub fn qt_gui_c_QOpenGLShader_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QOpenGLShader_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QOpenGLShaderProgram
  pub fn qt_gui_c_QOpenGLShaderProgram_G_static_cast_QObject_ptr(ptr: *mut ::opengl_shader_program::OpenGLShaderProgram) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QOpenGLShaderProgram_G_static_cast_QOpenGLShaderProgram_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::opengl_shader_program::OpenGLShaderProgram;
  pub fn qt_gui_c_QOpenGLShaderProgram_addShader(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, shader: *mut ::opengl_shader::OpenGLShader) -> bool;
  pub fn qt_gui_c_QOpenGLShaderProgram_attributeLocation_QByteArray(this_ptr: *const ::opengl_shader_program::OpenGLShaderProgram, name: *const ::qt_core::byte_array::ByteArray) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLShaderProgram_attributeLocation_QString(this_ptr: *const ::opengl_shader_program::OpenGLShaderProgram, name: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLShaderProgram_attributeLocation_char(this_ptr: *const ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLShaderProgram_bind(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram) -> bool;
  pub fn qt_gui_c_QOpenGLShaderProgram_bindAttributeLocation_QByteArray_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::qt_core::byte_array::ByteArray, location: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_bindAttributeLocation_QString_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::qt_core::string::String, location: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_bindAttributeLocation_char_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, location: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_create(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram) -> bool;
  pub fn qt_gui_c_QOpenGLShaderProgram_defaultInnerTessellationLevels_to_output(this_ptr: *const ::opengl_shader_program::OpenGLShaderProgram, output: *mut ::vector::VectorCFloat);
  pub fn qt_gui_c_QOpenGLShaderProgram_defaultOuterTessellationLevels_to_output(this_ptr: *const ::opengl_shader_program::OpenGLShaderProgram, output: *mut ::vector::VectorCFloat);
  pub fn qt_gui_c_QOpenGLShaderProgram_delete(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram);
  pub fn qt_gui_c_QOpenGLShaderProgram_disableAttributeArray_location(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_disableAttributeArray_name(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char);
  pub fn qt_gui_c_QOpenGLShaderProgram_enableAttributeArray_location(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_enableAttributeArray_name(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char);
  pub fn qt_gui_c_QOpenGLShaderProgram_hasOpenGLShaderPrograms_context(context: *mut ::opengl_context::OpenGLContext) -> bool;
  pub fn qt_gui_c_QOpenGLShaderProgram_hasOpenGLShaderPrograms_no_args() -> bool;
  pub fn qt_gui_c_QOpenGLShaderProgram_isLinked(this_ptr: *const ::opengl_shader_program::OpenGLShaderProgram) -> bool;
  pub fn qt_gui_c_QOpenGLShaderProgram_link(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram) -> bool;
  pub fn qt_gui_c_QOpenGLShaderProgram_log_to_output(this_ptr: *const ::opengl_shader_program::OpenGLShaderProgram, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QOpenGLShaderProgram_maxGeometryOutputVertices(this_ptr: *const ::opengl_shader_program::OpenGLShaderProgram) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLShaderProgram_metaObject(this_ptr: *const ::opengl_shader_program::OpenGLShaderProgram) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QOpenGLShaderProgram_new_no_args() -> *mut ::opengl_shader_program::OpenGLShaderProgram;
  pub fn qt_gui_c_QOpenGLShaderProgram_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::opengl_shader_program::OpenGLShaderProgram;
  pub fn qt_gui_c_QOpenGLShaderProgram_patchVertexCount(this_ptr: *const ::opengl_shader_program::OpenGLShaderProgram) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLShaderProgram_programId(this_ptr: *const ::opengl_shader_program::OpenGLShaderProgram) -> u32;
  pub fn qt_gui_c_QOpenGLShaderProgram_qt_metacall(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLShaderProgram_qt_metacast(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QOpenGLShaderProgram_release(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram);
  pub fn qt_gui_c_QOpenGLShaderProgram_removeAllShaders(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram);
  pub fn qt_gui_c_QOpenGLShaderProgram_removeShader(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, shader: *mut ::opengl_shader::OpenGLShader);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeArray_char_QVector2D(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, values: *const ::vector_2d::Vector2D);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeArray_char_QVector2D_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, values: *const ::vector_2d::Vector2D, stride: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeArray_char_QVector3D(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, values: *const ::vector_3d::Vector3D);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeArray_char_QVector3D_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, values: *const ::vector_3d::Vector3D, stride: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeArray_char_QVector4D(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, values: *const ::vector_4d::Vector4D);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeArray_char_QVector4D_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, values: *const ::vector_4d::Vector4D, stride: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeArray_char_float_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, values: *const ::libc::c_float, tupleSize: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeArray_char_float_int_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, values: *const ::libc::c_float, tupleSize: ::libc::c_int, stride: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeArray_char_unsigned_int_void_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, type_: ::libc::c_uint, values: *const ::libc::c_void, tupleSize: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeArray_char_unsigned_int_void_int_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, type_: ::libc::c_uint, values: *const ::libc::c_void, tupleSize: ::libc::c_int, stride: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeArray_int_QVector2D(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, values: *const ::vector_2d::Vector2D);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeArray_int_QVector2D_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, values: *const ::vector_2d::Vector2D, stride: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeArray_int_QVector3D(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, values: *const ::vector_3d::Vector3D);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeArray_int_QVector3D_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, values: *const ::vector_3d::Vector3D, stride: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeArray_int_QVector4D(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, values: *const ::vector_4d::Vector4D);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeArray_int_QVector4D_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, values: *const ::vector_4d::Vector4D, stride: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeArray_int_float_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, values: *const ::libc::c_float, tupleSize: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeArray_int_float_int_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, values: *const ::libc::c_float, tupleSize: ::libc::c_int, stride: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeArray_int_unsigned_int_void_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, type_: ::libc::c_uint, values: *const ::libc::c_void, tupleSize: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeArray_int_unsigned_int_void_int_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, type_: ::libc::c_uint, values: *const ::libc::c_void, tupleSize: ::libc::c_int, stride: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeBuffer_location_type_offset_tupleSize(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, type_: ::libc::c_uint, offset: ::libc::c_int, tupleSize: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeBuffer_location_type_offset_tupleSize_stride(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, type_: ::libc::c_uint, offset: ::libc::c_int, tupleSize: ::libc::c_int, stride: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeBuffer_name_type_offset_tupleSize(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, type_: ::libc::c_uint, offset: ::libc::c_int, tupleSize: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeBuffer_name_type_offset_tupleSize_stride(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, type_: ::libc::c_uint, offset: ::libc::c_int, tupleSize: ::libc::c_int, stride: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeValue_char_QColor(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, value: *const ::color::Color);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeValue_char_QVector2D(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, value: *const ::vector_2d::Vector2D);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeValue_char_QVector3D(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, value: *const ::vector_3d::Vector3D);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeValue_char_QVector4D(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, value: *const ::vector_4d::Vector4D);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeValue_char_float(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, value: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeValue_char_float_float(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, x: ::libc::c_float, y: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeValue_char_float_float_float(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, x: ::libc::c_float, y: ::libc::c_float, z: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeValue_char_float_float_float_float(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, x: ::libc::c_float, y: ::libc::c_float, z: ::libc::c_float, w: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeValue_char_float_int_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, values: *const ::libc::c_float, columns: ::libc::c_int, rows: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeValue_int_QColor(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, value: *const ::color::Color);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeValue_int_QVector2D(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, value: *const ::vector_2d::Vector2D);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeValue_int_QVector3D(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, value: *const ::vector_3d::Vector3D);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeValue_int_QVector4D(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, value: *const ::vector_4d::Vector4D);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeValue_int_float(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, value: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeValue_int_float_float(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, x: ::libc::c_float, y: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeValue_int_float_float_float(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, x: ::libc::c_float, y: ::libc::c_float, z: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeValue_int_float_float_float_float(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, x: ::libc::c_float, y: ::libc::c_float, z: ::libc::c_float, w: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLShaderProgram_setAttributeValue_int_float_int_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, values: *const ::libc::c_float, columns: ::libc::c_int, rows: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setDefaultInnerTessellationLevels(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, levels: *const ::vector::VectorCFloat);
  pub fn qt_gui_c_QOpenGLShaderProgram_setDefaultOuterTessellationLevels(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, levels: *const ::vector::VectorCFloat);
  pub fn qt_gui_c_QOpenGLShaderProgram_setPatchVertexCount(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, count: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValueArray_char_GLint_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, values: *const i32, count: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValueArray_char_GLuint_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, values: *const u32, count: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValueArray_char_QMatrix4x4_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, values: *const ::matrix_4x4::Matrix4X4, count: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValueArray_char_QVector2D_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, values: *const ::vector_2d::Vector2D, count: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValueArray_char_QVector3D_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, values: *const ::vector_3d::Vector3D, count: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValueArray_char_QVector4D_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, values: *const ::vector_4d::Vector4D, count: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValueArray_char_float_int_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, values: *const ::libc::c_float, count: ::libc::c_int, tupleSize: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValueArray_int_GLint_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, values: *const i32, count: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValueArray_int_GLuint_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, values: *const u32, count: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValueArray_int_QMatrix4x4_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, values: *const ::matrix_4x4::Matrix4X4, count: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValueArray_int_QVector2D_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, values: *const ::vector_2d::Vector2D, count: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValueArray_int_QVector3D_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, values: *const ::vector_3d::Vector3D, count: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValueArray_int_QVector4D_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, values: *const ::vector_4d::Vector4D, count: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValueArray_int_float_int_int(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, values: *const ::libc::c_float, count: ::libc::c_int, tupleSize: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_char_GLint(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, value: i32);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_char_GLuint(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, value: u32);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_char_QColor(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, color: *const ::color::Color);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_char_QMatrix4x4(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, value: *const ::matrix_4x4::Matrix4X4);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_char_QPoint(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, point: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_char_QPointF(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, point: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_char_QSize(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, size: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_char_QSizeF(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, size: *const ::qt_core::size_f::SizeF);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_char_QTransform(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, value: *const ::transform::Transform);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_char_QVector2D(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, value: *const ::vector_2d::Vector2D);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_char_QVector3D(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, value: *const ::vector_3d::Vector3D);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_char_QVector4D(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, value: *const ::vector_4d::Vector4D);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_char_float(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, value: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_char_float_float(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, x: ::libc::c_float, y: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_char_float_float_float(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, x: ::libc::c_float, y: ::libc::c_float, z: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_char_float_float_float_float(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char, x: ::libc::c_float, y: ::libc::c_float, z: ::libc::c_float, w: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_int_GLint(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, value: i32);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_int_GLuint(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, value: u32);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_int_QColor(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, color: *const ::color::Color);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_int_QMatrix4x4(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, value: *const ::matrix_4x4::Matrix4X4);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_int_QPoint(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, point: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_int_QPointF(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, point: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_int_QSize(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, size: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_int_QSizeF(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, size: *const ::qt_core::size_f::SizeF);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_int_QTransform(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, value: *const ::transform::Transform);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_int_QVector2D(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, value: *const ::vector_2d::Vector2D);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_int_QVector3D(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, value: *const ::vector_3d::Vector3D);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_int_QVector4D(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, value: *const ::vector_4d::Vector4D);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_int_float(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, value: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_int_float_float(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, x: ::libc::c_float, y: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_int_float_float_float(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, x: ::libc::c_float, y: ::libc::c_float, z: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLShaderProgram_setUniformValue_int_float_float_float_float(this_ptr: *mut ::opengl_shader_program::OpenGLShaderProgram, location: ::libc::c_int, x: ::libc::c_float, y: ::libc::c_float, z: ::libc::c_float, w: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLShaderProgram_shaders_to_output(this_ptr: *const ::opengl_shader_program::OpenGLShaderProgram, output: *mut ::list::ListOpenglShaderMutPtr);
  pub fn qt_gui_c_QOpenGLShaderProgram_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QOpenGLShaderProgram_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QOpenGLShaderProgram_uniformLocation_QByteArray(this_ptr: *const ::opengl_shader_program::OpenGLShaderProgram, name: *const ::qt_core::byte_array::ByteArray) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLShaderProgram_uniformLocation_QString(this_ptr: *const ::opengl_shader_program::OpenGLShaderProgram, name: *const ::qt_core::string::String) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLShaderProgram_uniformLocation_char(this_ptr: *const ::opengl_shader_program::OpenGLShaderProgram, name: *const ::libc::c_char) -> ::libc::c_int;

  // Header: QOpenGLTexture
  pub fn qt_gui_c_QOpenGLTexture_allocateStorage_no_args(this_ptr: *mut ::opengl_texture::OpenGLTexture);
  pub fn qt_gui_c_QOpenGLTexture_allocateStorage_pixelFormat_pixelType(this_ptr: *mut ::opengl_texture::OpenGLTexture, pixelFormat: ::opengl_texture::PixelFormat, pixelType: ::opengl_texture::PixelType);
  pub fn qt_gui_c_QOpenGLTexture_bind_no_args(this_ptr: *mut ::opengl_texture::OpenGLTexture);
  pub fn qt_gui_c_QOpenGLTexture_bind_unit(this_ptr: *mut ::opengl_texture::OpenGLTexture, unit: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLTexture_bind_unit_reset(this_ptr: *mut ::opengl_texture::OpenGLTexture, unit: ::libc::c_uint, reset: ::opengl_texture::TextureUnitReset);
  pub fn qt_gui_c_QOpenGLTexture_borderColor_float(this_ptr: *const ::opengl_texture::OpenGLTexture, border: *mut ::libc::c_float);
  pub fn qt_gui_c_QOpenGLTexture_borderColor_int(this_ptr: *const ::opengl_texture::OpenGLTexture, border: *mut ::libc::c_int);
  pub fn qt_gui_c_QOpenGLTexture_borderColor_to_output(this_ptr: *const ::opengl_texture::OpenGLTexture, output: *mut ::color::Color);
  pub fn qt_gui_c_QOpenGLTexture_borderColor_unsigned_int(this_ptr: *const ::opengl_texture::OpenGLTexture, border: *mut ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLTexture_boundTextureId_target(target: ::opengl_texture::BindingTarget) -> u32;
  pub fn qt_gui_c_QOpenGLTexture_boundTextureId_unit_target(unit: ::libc::c_uint, target: ::opengl_texture::BindingTarget) -> u32;
  pub fn qt_gui_c_QOpenGLTexture_comparisonFunction(this_ptr: *const ::opengl_texture::OpenGLTexture) -> ::opengl_texture::ComparisonFunction;
  pub fn qt_gui_c_QOpenGLTexture_comparisonMode(this_ptr: *const ::opengl_texture::OpenGLTexture) -> ::opengl_texture::ComparisonMode;
  pub fn qt_gui_c_QOpenGLTexture_create(this_ptr: *mut ::opengl_texture::OpenGLTexture) -> bool;
  pub fn qt_gui_c_QOpenGLTexture_createTextureView(this_ptr: *const ::opengl_texture::OpenGLTexture, target: ::opengl_texture::Target, viewFormat: ::opengl_texture::TextureFormat, minimumMipmapLevel: ::libc::c_int, maximumMipmapLevel: ::libc::c_int, minimumLayer: ::libc::c_int, maximumLayer: ::libc::c_int) -> *mut ::opengl_texture::OpenGLTexture;
  pub fn qt_gui_c_QOpenGLTexture_delete(this_ptr: *mut ::opengl_texture::OpenGLTexture);
  pub fn qt_gui_c_QOpenGLTexture_depth(this_ptr: *const ::opengl_texture::OpenGLTexture) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLTexture_depthStencilMode(this_ptr: *const ::opengl_texture::OpenGLTexture) -> ::opengl_texture::DepthStencilMode;
  pub fn qt_gui_c_QOpenGLTexture_destroy(this_ptr: *mut ::opengl_texture::OpenGLTexture);
  pub fn qt_gui_c_QOpenGLTexture_faces(this_ptr: *const ::opengl_texture::OpenGLTexture) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLTexture_format(this_ptr: *const ::opengl_texture::OpenGLTexture) -> ::opengl_texture::TextureFormat;
  pub fn qt_gui_c_QOpenGLTexture_generateMipMaps_baseLevel(this_ptr: *mut ::opengl_texture::OpenGLTexture, baseLevel: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLTexture_generateMipMaps_baseLevel_resetBaseLevel(this_ptr: *mut ::opengl_texture::OpenGLTexture, baseLevel: ::libc::c_int, resetBaseLevel: bool);
  pub fn qt_gui_c_QOpenGLTexture_generateMipMaps_no_args(this_ptr: *mut ::opengl_texture::OpenGLTexture);
  pub fn qt_gui_c_QOpenGLTexture_hasFeature(feature: ::opengl_texture::Feature) -> bool;
  pub fn qt_gui_c_QOpenGLTexture_height(this_ptr: *const ::opengl_texture::OpenGLTexture) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLTexture_isAutoMipMapGenerationEnabled(this_ptr: *const ::opengl_texture::OpenGLTexture) -> bool;
  pub fn qt_gui_c_QOpenGLTexture_isBound_no_args(this_ptr: *const ::opengl_texture::OpenGLTexture) -> bool;
  pub fn qt_gui_c_QOpenGLTexture_isBound_unit(this_ptr: *mut ::opengl_texture::OpenGLTexture, unit: ::libc::c_uint) -> bool;
  pub fn qt_gui_c_QOpenGLTexture_isCreated(this_ptr: *const ::opengl_texture::OpenGLTexture) -> bool;
  pub fn qt_gui_c_QOpenGLTexture_isFixedSamplePositions(this_ptr: *const ::opengl_texture::OpenGLTexture) -> bool;
  pub fn qt_gui_c_QOpenGLTexture_isStorageAllocated(this_ptr: *const ::opengl_texture::OpenGLTexture) -> bool;
  pub fn qt_gui_c_QOpenGLTexture_isTextureView(this_ptr: *const ::opengl_texture::OpenGLTexture) -> bool;
  pub fn qt_gui_c_QOpenGLTexture_layers(this_ptr: *const ::opengl_texture::OpenGLTexture) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLTexture_levelOfDetailRange_to_output(this_ptr: *const ::opengl_texture::OpenGLTexture, output: *mut ::pair::PairCFloatCFloat);
  pub fn qt_gui_c_QOpenGLTexture_levelofDetailBias(this_ptr: *const ::opengl_texture::OpenGLTexture) -> ::libc::c_float;
  pub fn qt_gui_c_QOpenGLTexture_magnificationFilter(this_ptr: *const ::opengl_texture::OpenGLTexture) -> ::opengl_texture::Filter;
  pub fn qt_gui_c_QOpenGLTexture_maximumAnisotropy(this_ptr: *const ::opengl_texture::OpenGLTexture) -> ::libc::c_float;
  pub fn qt_gui_c_QOpenGLTexture_maximumLevelOfDetail(this_ptr: *const ::opengl_texture::OpenGLTexture) -> ::libc::c_float;
  pub fn qt_gui_c_QOpenGLTexture_maximumMipLevels(this_ptr: *const ::opengl_texture::OpenGLTexture) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLTexture_minMagFilters_to_output(this_ptr: *const ::opengl_texture::OpenGLTexture, output: *mut ::pair::PairOpenglTextureFilterOpenglTextureFilter);
  pub fn qt_gui_c_QOpenGLTexture_minificationFilter(this_ptr: *const ::opengl_texture::OpenGLTexture) -> ::opengl_texture::Filter;
  pub fn qt_gui_c_QOpenGLTexture_minimumLevelOfDetail(this_ptr: *const ::opengl_texture::OpenGLTexture) -> ::libc::c_float;
  pub fn qt_gui_c_QOpenGLTexture_mipBaseLevel(this_ptr: *const ::opengl_texture::OpenGLTexture) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLTexture_mipLevelRange_to_output(this_ptr: *const ::opengl_texture::OpenGLTexture, output: *mut ::pair::PairCIntCInt);
  pub fn qt_gui_c_QOpenGLTexture_mipLevels(this_ptr: *const ::opengl_texture::OpenGLTexture) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLTexture_mipMaxLevel(this_ptr: *const ::opengl_texture::OpenGLTexture) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLTexture_new_image(image: *const ::image::Image) -> *mut ::opengl_texture::OpenGLTexture;
  pub fn qt_gui_c_QOpenGLTexture_new_image_genMipMaps(image: *const ::image::Image, genMipMaps: ::opengl_texture::MipMapGeneration) -> *mut ::opengl_texture::OpenGLTexture;
  pub fn qt_gui_c_QOpenGLTexture_new_target(target: ::opengl_texture::Target) -> *mut ::opengl_texture::OpenGLTexture;
  pub fn qt_gui_c_QOpenGLTexture_release_no_args(this_ptr: *mut ::opengl_texture::OpenGLTexture);
  pub fn qt_gui_c_QOpenGLTexture_release_unit(this_ptr: *mut ::opengl_texture::OpenGLTexture, unit: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLTexture_release_unit_reset(this_ptr: *mut ::opengl_texture::OpenGLTexture, unit: ::libc::c_uint, reset: ::opengl_texture::TextureUnitReset);
  pub fn qt_gui_c_QOpenGLTexture_samples(this_ptr: *const ::opengl_texture::OpenGLTexture) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLTexture_setAutoMipMapGenerationEnabled(this_ptr: *mut ::opengl_texture::OpenGLTexture, enabled: bool);
  pub fn qt_gui_c_QOpenGLTexture_setBorderColor_QColor(this_ptr: *mut ::opengl_texture::OpenGLTexture, color: *const ::color::Color);
  pub fn qt_gui_c_QOpenGLTexture_setBorderColor_float_float_float_float(this_ptr: *mut ::opengl_texture::OpenGLTexture, r: ::libc::c_float, g: ::libc::c_float, b: ::libc::c_float, a: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLTexture_setBorderColor_int_int_int_int(this_ptr: *mut ::opengl_texture::OpenGLTexture, r: ::libc::c_int, g: ::libc::c_int, b: ::libc::c_int, a: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLTexture_setBorderColor_unsigned_int_unsigned_int_unsigned_int_unsigned_int(this_ptr: *mut ::opengl_texture::OpenGLTexture, r: ::libc::c_uint, g: ::libc::c_uint, b: ::libc::c_uint, a: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLTexture_setComparisonFunction(this_ptr: *mut ::opengl_texture::OpenGLTexture, function: ::opengl_texture::ComparisonFunction);
  pub fn qt_gui_c_QOpenGLTexture_setComparisonMode(this_ptr: *mut ::opengl_texture::OpenGLTexture, mode: ::opengl_texture::ComparisonMode);
  pub fn qt_gui_c_QOpenGLTexture_setCompressedData_int_const_void_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, dataSize: ::libc::c_int, data: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLTexture_setCompressedData_int_const_void_ptr_const_QOpenGLPixelTransferOptions_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, dataSize: ::libc::c_int, data: *const ::libc::c_void, options: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions);
  pub fn qt_gui_c_QOpenGLTexture_setCompressedData_int_int_QOpenGLTexture_CubeMapFace_int_const_void_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, layer: ::libc::c_int, cubeFace: ::opengl_texture::CubeMapFace, dataSize: ::libc::c_int, data: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLTexture_setCompressedData_int_int_QOpenGLTexture_CubeMapFace_int_const_void_ptr_const_QOpenGLPixelTransferOptions_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, layer: ::libc::c_int, cubeFace: ::opengl_texture::CubeMapFace, dataSize: ::libc::c_int, data: *const ::libc::c_void, options: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions);
  pub fn qt_gui_c_QOpenGLTexture_setCompressedData_int_int_QOpenGLTexture_CubeMapFace_int_void_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, layer: ::libc::c_int, cubeFace: ::opengl_texture::CubeMapFace, dataSize: ::libc::c_int, data: *mut ::libc::c_void);
  pub fn qt_gui_c_QOpenGLTexture_setCompressedData_int_int_QOpenGLTexture_CubeMapFace_int_void_ptr_const_QOpenGLPixelTransferOptions_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, layer: ::libc::c_int, cubeFace: ::opengl_texture::CubeMapFace, dataSize: ::libc::c_int, data: *mut ::libc::c_void, options: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions);
  pub fn qt_gui_c_QOpenGLTexture_setCompressedData_int_int_const_void_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, dataSize: ::libc::c_int, data: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLTexture_setCompressedData_int_int_const_void_ptr_const_QOpenGLPixelTransferOptions_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, dataSize: ::libc::c_int, data: *const ::libc::c_void, options: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions);
  pub fn qt_gui_c_QOpenGLTexture_setCompressedData_int_int_int_QOpenGLTexture_CubeMapFace_int_const_void_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, layer: ::libc::c_int, layerCount: ::libc::c_int, cubeFace: ::opengl_texture::CubeMapFace, dataSize: ::libc::c_int, data: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLTexture_setCompressedData_int_int_int_QOpenGLTexture_CubeMapFace_int_const_void_ptr_const_QOpenGLPixelTransferOptions_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, layer: ::libc::c_int, layerCount: ::libc::c_int, cubeFace: ::opengl_texture::CubeMapFace, dataSize: ::libc::c_int, data: *const ::libc::c_void, options: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions);
  pub fn qt_gui_c_QOpenGLTexture_setCompressedData_int_int_int_const_void_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, layer: ::libc::c_int, dataSize: ::libc::c_int, data: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLTexture_setCompressedData_int_int_int_const_void_ptr_const_QOpenGLPixelTransferOptions_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, layer: ::libc::c_int, dataSize: ::libc::c_int, data: *const ::libc::c_void, options: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions);
  pub fn qt_gui_c_QOpenGLTexture_setCompressedData_int_int_int_void_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, layer: ::libc::c_int, dataSize: ::libc::c_int, data: *mut ::libc::c_void);
  pub fn qt_gui_c_QOpenGLTexture_setCompressedData_int_int_int_void_ptr_const_QOpenGLPixelTransferOptions_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, layer: ::libc::c_int, dataSize: ::libc::c_int, data: *mut ::libc::c_void, options: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions);
  pub fn qt_gui_c_QOpenGLTexture_setCompressedData_int_int_void_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, dataSize: ::libc::c_int, data: *mut ::libc::c_void);
  pub fn qt_gui_c_QOpenGLTexture_setCompressedData_int_int_void_ptr_const_QOpenGLPixelTransferOptions_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, dataSize: ::libc::c_int, data: *mut ::libc::c_void, options: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions);
  pub fn qt_gui_c_QOpenGLTexture_setCompressedData_int_void_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, dataSize: ::libc::c_int, data: *mut ::libc::c_void);
  pub fn qt_gui_c_QOpenGLTexture_setCompressedData_int_void_ptr_const_QOpenGLPixelTransferOptions_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, dataSize: ::libc::c_int, data: *mut ::libc::c_void, options: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions);
  pub fn qt_gui_c_QOpenGLTexture_setData_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_const_void_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, sourceFormat: ::opengl_texture::PixelFormat, sourceType: ::opengl_texture::PixelType, data: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLTexture_setData_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_const_void_ptr_const_QOpenGLPixelTransferOptions_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, sourceFormat: ::opengl_texture::PixelFormat, sourceType: ::opengl_texture::PixelType, data: *const ::libc::c_void, options: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions);
  pub fn qt_gui_c_QOpenGLTexture_setData_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_void_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, sourceFormat: ::opengl_texture::PixelFormat, sourceType: ::opengl_texture::PixelType, data: *mut ::libc::c_void);
  pub fn qt_gui_c_QOpenGLTexture_setData_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_void_ptr_const_QOpenGLPixelTransferOptions_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, sourceFormat: ::opengl_texture::PixelFormat, sourceType: ::opengl_texture::PixelType, data: *mut ::libc::c_void, options: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions);
  pub fn qt_gui_c_QOpenGLTexture_setData_const_QImage_ref(this_ptr: *mut ::opengl_texture::OpenGLTexture, image: *const ::image::Image);
  pub fn qt_gui_c_QOpenGLTexture_setData_const_QImage_ref_QOpenGLTexture_MipMapGeneration(this_ptr: *mut ::opengl_texture::OpenGLTexture, image: *const ::image::Image, genMipMaps: ::opengl_texture::MipMapGeneration);
  pub fn qt_gui_c_QOpenGLTexture_setData_int_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_const_void_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, sourceFormat: ::opengl_texture::PixelFormat, sourceType: ::opengl_texture::PixelType, data: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLTexture_setData_int_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_const_void_ptr_const_QOpenGLPixelTransferOptions_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, sourceFormat: ::opengl_texture::PixelFormat, sourceType: ::opengl_texture::PixelType, data: *const ::libc::c_void, options: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions);
  pub fn qt_gui_c_QOpenGLTexture_setData_int_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_void_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, sourceFormat: ::opengl_texture::PixelFormat, sourceType: ::opengl_texture::PixelType, data: *mut ::libc::c_void);
  pub fn qt_gui_c_QOpenGLTexture_setData_int_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_void_ptr_const_QOpenGLPixelTransferOptions_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, sourceFormat: ::opengl_texture::PixelFormat, sourceType: ::opengl_texture::PixelType, data: *mut ::libc::c_void, options: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions);
  pub fn qt_gui_c_QOpenGLTexture_setData_int_int_QOpenGLTexture_CubeMapFace_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_const_void_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, layer: ::libc::c_int, cubeFace: ::opengl_texture::CubeMapFace, sourceFormat: ::opengl_texture::PixelFormat, sourceType: ::opengl_texture::PixelType, data: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLTexture_setData_int_int_QOpenGLTexture_CubeMapFace_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_const_void_ptr_const_QOpenGLPixelTransferOptions_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, layer: ::libc::c_int, cubeFace: ::opengl_texture::CubeMapFace, sourceFormat: ::opengl_texture::PixelFormat, sourceType: ::opengl_texture::PixelType, data: *const ::libc::c_void, options: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions);
  pub fn qt_gui_c_QOpenGLTexture_setData_int_int_QOpenGLTexture_CubeMapFace_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_void_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, layer: ::libc::c_int, cubeFace: ::opengl_texture::CubeMapFace, sourceFormat: ::opengl_texture::PixelFormat, sourceType: ::opengl_texture::PixelType, data: *mut ::libc::c_void);
  pub fn qt_gui_c_QOpenGLTexture_setData_int_int_QOpenGLTexture_CubeMapFace_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_void_ptr_const_QOpenGLPixelTransferOptions_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, layer: ::libc::c_int, cubeFace: ::opengl_texture::CubeMapFace, sourceFormat: ::opengl_texture::PixelFormat, sourceType: ::opengl_texture::PixelType, data: *mut ::libc::c_void, options: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions);
  pub fn qt_gui_c_QOpenGLTexture_setData_int_int_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_const_void_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, layer: ::libc::c_int, sourceFormat: ::opengl_texture::PixelFormat, sourceType: ::opengl_texture::PixelType, data: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLTexture_setData_int_int_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_const_void_ptr_const_QOpenGLPixelTransferOptions_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, layer: ::libc::c_int, sourceFormat: ::opengl_texture::PixelFormat, sourceType: ::opengl_texture::PixelType, data: *const ::libc::c_void, options: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions);
  pub fn qt_gui_c_QOpenGLTexture_setData_int_int_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_void_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, layer: ::libc::c_int, sourceFormat: ::opengl_texture::PixelFormat, sourceType: ::opengl_texture::PixelType, data: *mut ::libc::c_void);
  pub fn qt_gui_c_QOpenGLTexture_setData_int_int_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_void_ptr_const_QOpenGLPixelTransferOptions_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, layer: ::libc::c_int, sourceFormat: ::opengl_texture::PixelFormat, sourceType: ::opengl_texture::PixelType, data: *mut ::libc::c_void, options: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions);
  pub fn qt_gui_c_QOpenGLTexture_setData_int_int_int_QOpenGLTexture_CubeMapFace_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_const_void_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, layer: ::libc::c_int, layerCount: ::libc::c_int, cubeFace: ::opengl_texture::CubeMapFace, sourceFormat: ::opengl_texture::PixelFormat, sourceType: ::opengl_texture::PixelType, data: *const ::libc::c_void);
  pub fn qt_gui_c_QOpenGLTexture_setData_int_int_int_QOpenGLTexture_CubeMapFace_QOpenGLTexture_PixelFormat_QOpenGLTexture_PixelType_const_void_ptr_const_QOpenGLPixelTransferOptions_ptr(this_ptr: *mut ::opengl_texture::OpenGLTexture, mipLevel: ::libc::c_int, layer: ::libc::c_int, layerCount: ::libc::c_int, cubeFace: ::opengl_texture::CubeMapFace, sourceFormat: ::opengl_texture::PixelFormat, sourceType: ::opengl_texture::PixelType, data: *const ::libc::c_void, options: *const ::opengl_pixel_transfer_options::OpenGLPixelTransferOptions);
  pub fn qt_gui_c_QOpenGLTexture_setDepthStencilMode(this_ptr: *mut ::opengl_texture::OpenGLTexture, mode: ::opengl_texture::DepthStencilMode);
  pub fn qt_gui_c_QOpenGLTexture_setFixedSamplePositions(this_ptr: *mut ::opengl_texture::OpenGLTexture, fixed: bool);
  pub fn qt_gui_c_QOpenGLTexture_setFormat(this_ptr: *mut ::opengl_texture::OpenGLTexture, format: ::opengl_texture::TextureFormat);
  pub fn qt_gui_c_QOpenGLTexture_setLayers(this_ptr: *mut ::opengl_texture::OpenGLTexture, layers: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLTexture_setLevelOfDetailRange(this_ptr: *mut ::opengl_texture::OpenGLTexture, min: ::libc::c_float, max: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLTexture_setLevelofDetailBias(this_ptr: *mut ::opengl_texture::OpenGLTexture, bias: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLTexture_setMagnificationFilter(this_ptr: *mut ::opengl_texture::OpenGLTexture, filter: ::opengl_texture::Filter);
  pub fn qt_gui_c_QOpenGLTexture_setMaximumAnisotropy(this_ptr: *mut ::opengl_texture::OpenGLTexture, anisotropy: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLTexture_setMaximumLevelOfDetail(this_ptr: *mut ::opengl_texture::OpenGLTexture, value: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLTexture_setMinMagFilters(this_ptr: *mut ::opengl_texture::OpenGLTexture, minificationFilter: ::opengl_texture::Filter, magnificationFilter: ::opengl_texture::Filter);
  pub fn qt_gui_c_QOpenGLTexture_setMinificationFilter(this_ptr: *mut ::opengl_texture::OpenGLTexture, filter: ::opengl_texture::Filter);
  pub fn qt_gui_c_QOpenGLTexture_setMinimumLevelOfDetail(this_ptr: *mut ::opengl_texture::OpenGLTexture, value: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLTexture_setMipBaseLevel(this_ptr: *mut ::opengl_texture::OpenGLTexture, baseLevel: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLTexture_setMipLevelRange(this_ptr: *mut ::opengl_texture::OpenGLTexture, baseLevel: ::libc::c_int, maxLevel: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLTexture_setMipLevels(this_ptr: *mut ::opengl_texture::OpenGLTexture, levels: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLTexture_setMipMaxLevel(this_ptr: *mut ::opengl_texture::OpenGLTexture, maxLevel: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLTexture_setSamples(this_ptr: *mut ::opengl_texture::OpenGLTexture, samples: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLTexture_setSize_width(this_ptr: *mut ::opengl_texture::OpenGLTexture, width: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLTexture_setSize_width_height(this_ptr: *mut ::opengl_texture::OpenGLTexture, width: ::libc::c_int, height: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLTexture_setSize_width_height_depth(this_ptr: *mut ::opengl_texture::OpenGLTexture, width: ::libc::c_int, height: ::libc::c_int, depth: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLTexture_setSwizzleMask_component_value(this_ptr: *mut ::opengl_texture::OpenGLTexture, component: ::opengl_texture::SwizzleComponent, value: ::opengl_texture::SwizzleValue);
  pub fn qt_gui_c_QOpenGLTexture_setSwizzleMask_r_g_b_a(this_ptr: *mut ::opengl_texture::OpenGLTexture, r: ::opengl_texture::SwizzleValue, g: ::opengl_texture::SwizzleValue, b: ::opengl_texture::SwizzleValue, a: ::opengl_texture::SwizzleValue);
  pub fn qt_gui_c_QOpenGLTexture_setWrapMode_direction_mode(this_ptr: *mut ::opengl_texture::OpenGLTexture, direction: ::opengl_texture::CoordinateDirection, mode: ::opengl_texture::WrapMode);
  pub fn qt_gui_c_QOpenGLTexture_setWrapMode_mode(this_ptr: *mut ::opengl_texture::OpenGLTexture, mode: ::opengl_texture::WrapMode);
  pub fn qt_gui_c_QOpenGLTexture_swizzleMask(this_ptr: *const ::opengl_texture::OpenGLTexture, component: ::opengl_texture::SwizzleComponent) -> ::opengl_texture::SwizzleValue;
  pub fn qt_gui_c_QOpenGLTexture_target(this_ptr: *const ::opengl_texture::OpenGLTexture) -> ::opengl_texture::Target;
  pub fn qt_gui_c_QOpenGLTexture_textureId(this_ptr: *const ::opengl_texture::OpenGLTexture) -> u32;
  pub fn qt_gui_c_QOpenGLTexture_width(this_ptr: *const ::opengl_texture::OpenGLTexture) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLTexture_wrapMode(this_ptr: *const ::opengl_texture::OpenGLTexture, direction: ::opengl_texture::CoordinateDirection) -> ::opengl_texture::WrapMode;

  // Header: QOpenGLTextureBlitter
  pub fn qt_gui_c_QOpenGLTextureBlitter_bind_no_args(this_ptr: *mut ::opengl_texture_blitter::OpenGLTextureBlitter);
  pub fn qt_gui_c_QOpenGLTextureBlitter_bind_target(this_ptr: *mut ::opengl_texture_blitter::OpenGLTextureBlitter, target: ::libc::c_uint);
  pub fn qt_gui_c_QOpenGLTextureBlitter_blit(this_ptr: *mut ::opengl_texture_blitter::OpenGLTextureBlitter, texture: u32, targetTransform: *const ::matrix_4x4::Matrix4X4, sourceOrigin: ::opengl_texture_blitter::Origin);
  pub fn qt_gui_c_QOpenGLTextureBlitter_constructor(output: *mut ::opengl_texture_blitter::OpenGLTextureBlitter);
  pub fn qt_gui_c_QOpenGLTextureBlitter_create(this_ptr: *mut ::opengl_texture_blitter::OpenGLTextureBlitter) -> bool;
  pub fn qt_gui_c_QOpenGLTextureBlitter_destroy(this_ptr: *mut ::opengl_texture_blitter::OpenGLTextureBlitter);
  pub fn qt_gui_c_QOpenGLTextureBlitter_destructor(this_ptr: *mut ::opengl_texture_blitter::OpenGLTextureBlitter);
  pub fn qt_gui_c_QOpenGLTextureBlitter_isCreated(this_ptr: *const ::opengl_texture_blitter::OpenGLTextureBlitter) -> bool;
  pub fn qt_gui_c_QOpenGLTextureBlitter_release(this_ptr: *mut ::opengl_texture_blitter::OpenGLTextureBlitter);
  pub fn qt_gui_c_QOpenGLTextureBlitter_setOpacity(this_ptr: *mut ::opengl_texture_blitter::OpenGLTextureBlitter, opacity: ::libc::c_float);
  pub fn qt_gui_c_QOpenGLTextureBlitter_setRedBlueSwizzle(this_ptr: *mut ::opengl_texture_blitter::OpenGLTextureBlitter, swizzle: bool);
  pub fn qt_gui_c_QOpenGLTextureBlitter_supportsExternalOESTarget(this_ptr: *const ::opengl_texture_blitter::OpenGLTextureBlitter) -> bool;
  pub fn qt_gui_c_QOpenGLTextureBlitter_targetTransform_as_ptr(target: *const ::qt_core::rect_f::RectF, viewport: *const ::qt_core::rect::Rect) -> *mut ::matrix_4x4::Matrix4X4;

  // Header: QOpenGLTimeMonitor
  pub fn qt_gui_c_QOpenGLTimeMonitor_G_static_cast_QObject_ptr(ptr: *mut ::opengl_time_monitor::OpenGLTimeMonitor) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QOpenGLTimeMonitor_G_static_cast_QOpenGLTimeMonitor_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::opengl_time_monitor::OpenGLTimeMonitor;
  pub fn qt_gui_c_QOpenGLTimeMonitor_create(this_ptr: *mut ::opengl_time_monitor::OpenGLTimeMonitor) -> bool;
  pub fn qt_gui_c_QOpenGLTimeMonitor_delete(this_ptr: *mut ::opengl_time_monitor::OpenGLTimeMonitor);
  pub fn qt_gui_c_QOpenGLTimeMonitor_destroy(this_ptr: *mut ::opengl_time_monitor::OpenGLTimeMonitor);
  pub fn qt_gui_c_QOpenGLTimeMonitor_isCreated(this_ptr: *const ::opengl_time_monitor::OpenGLTimeMonitor) -> bool;
  pub fn qt_gui_c_QOpenGLTimeMonitor_isResultAvailable(this_ptr: *const ::opengl_time_monitor::OpenGLTimeMonitor) -> bool;
  pub fn qt_gui_c_QOpenGLTimeMonitor_metaObject(this_ptr: *const ::opengl_time_monitor::OpenGLTimeMonitor) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QOpenGLTimeMonitor_new_no_args() -> *mut ::opengl_time_monitor::OpenGLTimeMonitor;
  pub fn qt_gui_c_QOpenGLTimeMonitor_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::opengl_time_monitor::OpenGLTimeMonitor;
  pub fn qt_gui_c_QOpenGLTimeMonitor_objectIds_to_output(this_ptr: *const ::opengl_time_monitor::OpenGLTimeMonitor, output: *mut ::vector::VectorU32);
  pub fn qt_gui_c_QOpenGLTimeMonitor_qt_metacall(this_ptr: *mut ::opengl_time_monitor::OpenGLTimeMonitor, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLTimeMonitor_qt_metacast(this_ptr: *mut ::opengl_time_monitor::OpenGLTimeMonitor, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QOpenGLTimeMonitor_recordSample(this_ptr: *mut ::opengl_time_monitor::OpenGLTimeMonitor) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLTimeMonitor_reset(this_ptr: *mut ::opengl_time_monitor::OpenGLTimeMonitor);
  pub fn qt_gui_c_QOpenGLTimeMonitor_sampleCount(this_ptr: *const ::opengl_time_monitor::OpenGLTimeMonitor) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLTimeMonitor_setSampleCount(this_ptr: *mut ::opengl_time_monitor::OpenGLTimeMonitor, sampleCount: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLTimeMonitor_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QOpenGLTimeMonitor_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QOpenGLTimeMonitor_waitForIntervals_to_output(this_ptr: *const ::opengl_time_monitor::OpenGLTimeMonitor, output: *mut ::vector::VectorU64);
  pub fn qt_gui_c_QOpenGLTimeMonitor_waitForSamples_to_output(this_ptr: *const ::opengl_time_monitor::OpenGLTimeMonitor, output: *mut ::vector::VectorU64);

  // Header: QOpenGLTimerQuery
  pub fn qt_gui_c_QOpenGLTimerQuery_G_static_cast_QObject_ptr(ptr: *mut ::opengl_timer_query::OpenGLTimerQuery) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QOpenGLTimerQuery_G_static_cast_QOpenGLTimerQuery_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::opengl_timer_query::OpenGLTimerQuery;
  pub fn qt_gui_c_QOpenGLTimerQuery_begin(this_ptr: *mut ::opengl_timer_query::OpenGLTimerQuery);
  pub fn qt_gui_c_QOpenGLTimerQuery_create(this_ptr: *mut ::opengl_timer_query::OpenGLTimerQuery) -> bool;
  pub fn qt_gui_c_QOpenGLTimerQuery_delete(this_ptr: *mut ::opengl_timer_query::OpenGLTimerQuery);
  pub fn qt_gui_c_QOpenGLTimerQuery_destroy(this_ptr: *mut ::opengl_timer_query::OpenGLTimerQuery);
  pub fn qt_gui_c_QOpenGLTimerQuery_end(this_ptr: *mut ::opengl_timer_query::OpenGLTimerQuery);
  pub fn qt_gui_c_QOpenGLTimerQuery_isCreated(this_ptr: *const ::opengl_timer_query::OpenGLTimerQuery) -> bool;
  pub fn qt_gui_c_QOpenGLTimerQuery_isResultAvailable(this_ptr: *const ::opengl_timer_query::OpenGLTimerQuery) -> bool;
  pub fn qt_gui_c_QOpenGLTimerQuery_metaObject(this_ptr: *const ::opengl_timer_query::OpenGLTimerQuery) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QOpenGLTimerQuery_new_no_args() -> *mut ::opengl_timer_query::OpenGLTimerQuery;
  pub fn qt_gui_c_QOpenGLTimerQuery_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::opengl_timer_query::OpenGLTimerQuery;
  pub fn qt_gui_c_QOpenGLTimerQuery_objectId(this_ptr: *const ::opengl_timer_query::OpenGLTimerQuery) -> u32;
  pub fn qt_gui_c_QOpenGLTimerQuery_qt_metacall(this_ptr: *mut ::opengl_timer_query::OpenGLTimerQuery, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLTimerQuery_qt_metacast(this_ptr: *mut ::opengl_timer_query::OpenGLTimerQuery, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QOpenGLTimerQuery_recordTimestamp(this_ptr: *mut ::opengl_timer_query::OpenGLTimerQuery);
  pub fn qt_gui_c_QOpenGLTimerQuery_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QOpenGLTimerQuery_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QOpenGLTimerQuery_waitForResult(this_ptr: *const ::opengl_timer_query::OpenGLTimerQuery) -> u64;
  pub fn qt_gui_c_QOpenGLTimerQuery_waitForTimestamp(this_ptr: *const ::opengl_timer_query::OpenGLTimerQuery) -> u64;

  // Header: QOpenGLVersionFunctions
  pub fn qt_gui_c_QAbstractOpenGLFunctions_delete(this_ptr: *mut ::opengl_version_functions::AbstractOpenGLFunctions);
  pub fn qt_gui_c_QAbstractOpenGLFunctions_initializeOpenGLFunctions(this_ptr: *mut ::opengl_version_functions::AbstractOpenGLFunctions) -> bool;

  // Header: QOpenGLVersionProfile
  pub fn qt_gui_c_QOpenGLVersionProfile_constructor_format(format: *const ::surface_format::SurfaceFormat, output: *mut ::opengl_version_profile::OpenGLVersionProfile);
  pub fn qt_gui_c_QOpenGLVersionProfile_constructor_no_args(output: *mut ::opengl_version_profile::OpenGLVersionProfile);
  pub fn qt_gui_c_QOpenGLVersionProfile_constructor_other(other: *const ::opengl_version_profile::OpenGLVersionProfile, output: *mut ::opengl_version_profile::OpenGLVersionProfile);
  pub fn qt_gui_c_QOpenGLVersionProfile_destructor(this_ptr: *mut ::opengl_version_profile::OpenGLVersionProfile);
  pub fn qt_gui_c_QOpenGLVersionProfile_hasProfiles(this_ptr: *const ::opengl_version_profile::OpenGLVersionProfile) -> bool;
  pub fn qt_gui_c_QOpenGLVersionProfile_isLegacyVersion(this_ptr: *const ::opengl_version_profile::OpenGLVersionProfile) -> bool;
  pub fn qt_gui_c_QOpenGLVersionProfile_isValid(this_ptr: *const ::opengl_version_profile::OpenGLVersionProfile) -> bool;
  pub fn qt_gui_c_QOpenGLVersionProfile_operator_assign(this_ptr: *mut ::opengl_version_profile::OpenGLVersionProfile, rhs: *const ::opengl_version_profile::OpenGLVersionProfile) -> *mut ::opengl_version_profile::OpenGLVersionProfile;
  pub fn qt_gui_c_QOpenGLVersionProfile_setProfile(this_ptr: *mut ::opengl_version_profile::OpenGLVersionProfile, profile: *const ::surface_format::OpenGLContextProfile);
  pub fn qt_gui_c_QOpenGLVersionProfile_setVersion(this_ptr: *mut ::opengl_version_profile::OpenGLVersionProfile, majorVersion: ::libc::c_int, minorVersion: ::libc::c_int);
  pub fn qt_gui_c_QOpenGLVersionProfile_version_to_output(this_ptr: *const ::opengl_version_profile::OpenGLVersionProfile, output: *mut ::pair::PairCIntCInt);

  // Header: QOpenGLVertexArrayObject
  pub fn qt_gui_c_QOpenGLVertexArrayObject_Binder_constructor(v: *mut ::opengl_vertex_array_object::OpenGLVertexArrayObject, output: *mut ::opengl_vertex_array_object::Binder);
  pub fn qt_gui_c_QOpenGLVertexArrayObject_Binder_destructor(this_ptr: *mut ::opengl_vertex_array_object::Binder);
  pub fn qt_gui_c_QOpenGLVertexArrayObject_Binder_rebind(this_ptr: *mut ::opengl_vertex_array_object::Binder);
  pub fn qt_gui_c_QOpenGLVertexArrayObject_Binder_release(this_ptr: *mut ::opengl_vertex_array_object::Binder);
  pub fn qt_gui_c_QOpenGLVertexArrayObject_G_static_cast_QObject_ptr(ptr: *mut ::opengl_vertex_array_object::OpenGLVertexArrayObject) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QOpenGLVertexArrayObject_G_static_cast_QOpenGLVertexArrayObject_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::opengl_vertex_array_object::OpenGLVertexArrayObject;
  pub fn qt_gui_c_QOpenGLVertexArrayObject_bind(this_ptr: *mut ::opengl_vertex_array_object::OpenGLVertexArrayObject);
  pub fn qt_gui_c_QOpenGLVertexArrayObject_create(this_ptr: *mut ::opengl_vertex_array_object::OpenGLVertexArrayObject) -> bool;
  pub fn qt_gui_c_QOpenGLVertexArrayObject_delete(this_ptr: *mut ::opengl_vertex_array_object::OpenGLVertexArrayObject);
  pub fn qt_gui_c_QOpenGLVertexArrayObject_destroy(this_ptr: *mut ::opengl_vertex_array_object::OpenGLVertexArrayObject);
  pub fn qt_gui_c_QOpenGLVertexArrayObject_isCreated(this_ptr: *const ::opengl_vertex_array_object::OpenGLVertexArrayObject) -> bool;
  pub fn qt_gui_c_QOpenGLVertexArrayObject_metaObject(this_ptr: *const ::opengl_vertex_array_object::OpenGLVertexArrayObject) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QOpenGLVertexArrayObject_new_no_args() -> *mut ::opengl_vertex_array_object::OpenGLVertexArrayObject;
  pub fn qt_gui_c_QOpenGLVertexArrayObject_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::opengl_vertex_array_object::OpenGLVertexArrayObject;
  pub fn qt_gui_c_QOpenGLVertexArrayObject_objectId(this_ptr: *const ::opengl_vertex_array_object::OpenGLVertexArrayObject) -> u32;
  pub fn qt_gui_c_QOpenGLVertexArrayObject_qt_metacall(this_ptr: *mut ::opengl_vertex_array_object::OpenGLVertexArrayObject, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLVertexArrayObject_qt_metacast(this_ptr: *mut ::opengl_vertex_array_object::OpenGLVertexArrayObject, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QOpenGLVertexArrayObject_release(this_ptr: *mut ::opengl_vertex_array_object::OpenGLVertexArrayObject);
  pub fn qt_gui_c_QOpenGLVertexArrayObject_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QOpenGLVertexArrayObject_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QOpenGLWindow
  pub fn qt_gui_c_QOpenGLWindow_G_dynamic_cast_QOpenGLWindow_ptr_QPaintDevice(ptr: *mut ::paint_device::PaintDevice) -> *mut ::opengl_window::OpenGLWindow;
  pub fn qt_gui_c_QOpenGLWindow_G_dynamic_cast_QOpenGLWindow_ptr_QPaintDeviceWindow(ptr: *mut ::paint_device_window::PaintDeviceWindow) -> *mut ::opengl_window::OpenGLWindow;
  pub fn qt_gui_c_QOpenGLWindow_G_dynamic_cast_QOpenGLWindow_ptr_QSurface(ptr: *mut ::surface::Surface) -> *mut ::opengl_window::OpenGLWindow;
  pub fn qt_gui_c_QOpenGLWindow_G_dynamic_cast_QOpenGLWindow_ptr_QWindow(ptr: *mut ::window::Window) -> *mut ::opengl_window::OpenGLWindow;
  pub fn qt_gui_c_QOpenGLWindow_G_static_cast_QObject_ptr(ptr: *mut ::opengl_window::OpenGLWindow) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QOpenGLWindow_G_static_cast_QOpenGLWindow_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::opengl_window::OpenGLWindow;
  pub fn qt_gui_c_QOpenGLWindow_G_static_cast_QOpenGLWindow_ptr_QPaintDevice(ptr: *mut ::paint_device::PaintDevice) -> *mut ::opengl_window::OpenGLWindow;
  pub fn qt_gui_c_QOpenGLWindow_G_static_cast_QOpenGLWindow_ptr_QPaintDeviceWindow(ptr: *mut ::paint_device_window::PaintDeviceWindow) -> *mut ::opengl_window::OpenGLWindow;
  pub fn qt_gui_c_QOpenGLWindow_G_static_cast_QOpenGLWindow_ptr_QSurface(ptr: *mut ::surface::Surface) -> *mut ::opengl_window::OpenGLWindow;
  pub fn qt_gui_c_QOpenGLWindow_G_static_cast_QOpenGLWindow_ptr_QWindow(ptr: *mut ::window::Window) -> *mut ::opengl_window::OpenGLWindow;
  pub fn qt_gui_c_QOpenGLWindow_G_static_cast_QPaintDeviceWindow_ptr(ptr: *mut ::opengl_window::OpenGLWindow) -> *mut ::paint_device_window::PaintDeviceWindow;
  pub fn qt_gui_c_QOpenGLWindow_G_static_cast_QPaintDevice_ptr(ptr: *mut ::opengl_window::OpenGLWindow) -> *mut ::paint_device::PaintDevice;
  pub fn qt_gui_c_QOpenGLWindow_G_static_cast_QSurface_ptr(ptr: *mut ::opengl_window::OpenGLWindow) -> *mut ::surface::Surface;
  pub fn qt_gui_c_QOpenGLWindow_G_static_cast_QWindow_ptr(ptr: *mut ::opengl_window::OpenGLWindow) -> *mut ::window::Window;
  pub fn qt_gui_c_QOpenGLWindow_context(this_ptr: *const ::opengl_window::OpenGLWindow) -> *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QOpenGLWindow_defaultFramebufferObject(this_ptr: *const ::opengl_window::OpenGLWindow) -> u32;
  pub fn qt_gui_c_QOpenGLWindow_delete(this_ptr: *mut ::opengl_window::OpenGLWindow);
  pub fn qt_gui_c_QOpenGLWindow_doneCurrent(this_ptr: *mut ::opengl_window::OpenGLWindow);
  pub fn qt_gui_c_QOpenGLWindow_grabFramebuffer_as_ptr(this_ptr: *mut ::opengl_window::OpenGLWindow) -> *mut ::image::Image;
  pub fn qt_gui_c_QOpenGLWindow_isValid(this_ptr: *const ::opengl_window::OpenGLWindow) -> bool;
  pub fn qt_gui_c_QOpenGLWindow_makeCurrent(this_ptr: *mut ::opengl_window::OpenGLWindow);
  pub fn qt_gui_c_QOpenGLWindow_metaObject(this_ptr: *const ::opengl_window::OpenGLWindow) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QOpenGLWindow_new_no_args() -> *mut ::opengl_window::OpenGLWindow;
  pub fn qt_gui_c_QOpenGLWindow_new_shareContext(shareContext: *mut ::opengl_context::OpenGLContext) -> *mut ::opengl_window::OpenGLWindow;
  pub fn qt_gui_c_QOpenGLWindow_new_shareContext_updateBehavior(shareContext: *mut ::opengl_context::OpenGLContext, updateBehavior: ::opengl_window::UpdateBehavior) -> *mut ::opengl_window::OpenGLWindow;
  pub fn qt_gui_c_QOpenGLWindow_new_shareContext_updateBehavior_parent(shareContext: *mut ::opengl_context::OpenGLContext, updateBehavior: ::opengl_window::UpdateBehavior, parent: *mut ::window::Window) -> *mut ::opengl_window::OpenGLWindow;
  pub fn qt_gui_c_QOpenGLWindow_new_updateBehavior(updateBehavior: ::opengl_window::UpdateBehavior) -> *mut ::opengl_window::OpenGLWindow;
  pub fn qt_gui_c_QOpenGLWindow_new_updateBehavior_parent(updateBehavior: ::opengl_window::UpdateBehavior, parent: *mut ::window::Window) -> *mut ::opengl_window::OpenGLWindow;
  pub fn qt_gui_c_QOpenGLWindow_qt_metacall(this_ptr: *mut ::opengl_window::OpenGLWindow, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QOpenGLWindow_qt_metacast(this_ptr: *mut ::opengl_window::OpenGLWindow, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QOpenGLWindow_shareContext(this_ptr: *const ::opengl_window::OpenGLWindow) -> *mut ::opengl_context::OpenGLContext;
  pub fn qt_gui_c_QOpenGLWindow_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QOpenGLWindow_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QOpenGLWindow_updateBehavior(this_ptr: *const ::opengl_window::OpenGLWindow) -> ::opengl_window::UpdateBehavior;

  // Header: QPageLayout
  pub fn qt_gui_c_QPageLayout_G_operator_neq(lhs: *const ::page_layout::PageLayout, rhs: *const ::page_layout::PageLayout) -> bool;
  pub fn qt_gui_c_QPageLayout_G_operator_shl_to_output(dbg: *const ::qt_core::debug::Debug, pageLayout: *const ::page_layout::PageLayout, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QPageLayout_G_swap(value1: *mut ::page_layout::PageLayout, value2: *mut ::page_layout::PageLayout);
  pub fn qt_gui_c_QPageLayout_constructor_no_args(output: *mut ::page_layout::PageLayout);
  pub fn qt_gui_c_QPageLayout_constructor_other(other: *const ::page_layout::PageLayout, output: *mut ::page_layout::PageLayout);
  pub fn qt_gui_c_QPageLayout_constructor_pageSize_orientation_margins(pageSize: *const ::page_size::PageSize, orientation: ::page_layout::Orientation, margins: *const ::qt_core::margins_f::MarginsF, output: *mut ::page_layout::PageLayout);
  pub fn qt_gui_c_QPageLayout_constructor_pageSize_orientation_margins_units(pageSize: *const ::page_size::PageSize, orientation: ::page_layout::Orientation, margins: *const ::qt_core::margins_f::MarginsF, units: ::page_layout::Unit, output: *mut ::page_layout::PageLayout);
  pub fn qt_gui_c_QPageLayout_constructor_pageSize_orientation_margins_units_minMargins(pageSize: *const ::page_size::PageSize, orientation: ::page_layout::Orientation, margins: *const ::qt_core::margins_f::MarginsF, units: ::page_layout::Unit, minMargins: *const ::qt_core::margins_f::MarginsF, output: *mut ::page_layout::PageLayout);
  pub fn qt_gui_c_QPageLayout_destructor(this_ptr: *mut ::page_layout::PageLayout);
  pub fn qt_gui_c_QPageLayout_fullRectPixels_to_output(this_ptr: *const ::page_layout::PageLayout, resolution: ::libc::c_int, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPageLayout_fullRectPoints_to_output(this_ptr: *const ::page_layout::PageLayout, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPageLayout_fullRect_to_output_no_args(this_ptr: *const ::page_layout::PageLayout, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QPageLayout_fullRect_to_output_units(this_ptr: *const ::page_layout::PageLayout, units: ::page_layout::Unit, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QPageLayout_isEquivalentTo(this_ptr: *const ::page_layout::PageLayout, other: *const ::page_layout::PageLayout) -> bool;
  pub fn qt_gui_c_QPageLayout_isValid(this_ptr: *const ::page_layout::PageLayout) -> bool;
  pub fn qt_gui_c_QPageLayout_marginsPixels_to_output(this_ptr: *const ::page_layout::PageLayout, resolution: ::libc::c_int, output: *mut ::qt_core::margins::Margins);
  pub fn qt_gui_c_QPageLayout_marginsPoints_to_output(this_ptr: *const ::page_layout::PageLayout, output: *mut ::qt_core::margins::Margins);
  pub fn qt_gui_c_QPageLayout_margins_to_output_no_args(this_ptr: *const ::page_layout::PageLayout, output: *mut ::qt_core::margins_f::MarginsF);
  pub fn qt_gui_c_QPageLayout_margins_to_output_units(this_ptr: *const ::page_layout::PageLayout, units: ::page_layout::Unit, output: *mut ::qt_core::margins_f::MarginsF);
  pub fn qt_gui_c_QPageLayout_maximumMargins_to_output(this_ptr: *const ::page_layout::PageLayout, output: *mut ::qt_core::margins_f::MarginsF);
  pub fn qt_gui_c_QPageLayout_minimumMargins_to_output(this_ptr: *const ::page_layout::PageLayout, output: *mut ::qt_core::margins_f::MarginsF);
  pub fn qt_gui_c_QPageLayout_mode(this_ptr: *const ::page_layout::PageLayout) -> ::page_layout::Mode;
  pub fn qt_gui_c_QPageLayout_operator_assign(this_ptr: *mut ::page_layout::PageLayout, other: *const ::page_layout::PageLayout) -> *mut ::page_layout::PageLayout;
  pub fn qt_gui_c_QPageLayout_orientation(this_ptr: *const ::page_layout::PageLayout) -> ::page_layout::Orientation;
  pub fn qt_gui_c_QPageLayout_pageSize_to_output(this_ptr: *const ::page_layout::PageLayout, output: *mut ::page_size::PageSize);
  pub fn qt_gui_c_QPageLayout_paintRectPixels_to_output(this_ptr: *const ::page_layout::PageLayout, resolution: ::libc::c_int, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPageLayout_paintRectPoints_to_output(this_ptr: *const ::page_layout::PageLayout, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPageLayout_paintRect_to_output_no_args(this_ptr: *const ::page_layout::PageLayout, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QPageLayout_paintRect_to_output_units(this_ptr: *const ::page_layout::PageLayout, units: ::page_layout::Unit, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QPageLayout_setBottomMargin(this_ptr: *mut ::page_layout::PageLayout, bottomMargin: ::libc::c_double) -> bool;
  pub fn qt_gui_c_QPageLayout_setLeftMargin(this_ptr: *mut ::page_layout::PageLayout, leftMargin: ::libc::c_double) -> bool;
  pub fn qt_gui_c_QPageLayout_setMargins(this_ptr: *mut ::page_layout::PageLayout, margins: *const ::qt_core::margins_f::MarginsF) -> bool;
  pub fn qt_gui_c_QPageLayout_setMinimumMargins(this_ptr: *mut ::page_layout::PageLayout, minMargins: *const ::qt_core::margins_f::MarginsF);
  pub fn qt_gui_c_QPageLayout_setMode(this_ptr: *mut ::page_layout::PageLayout, mode: ::page_layout::Mode);
  pub fn qt_gui_c_QPageLayout_setOrientation(this_ptr: *mut ::page_layout::PageLayout, orientation: ::page_layout::Orientation);
  pub fn qt_gui_c_QPageLayout_setPageSize_pageSize(this_ptr: *mut ::page_layout::PageLayout, pageSize: *const ::page_size::PageSize);
  pub fn qt_gui_c_QPageLayout_setPageSize_pageSize_minMargins(this_ptr: *mut ::page_layout::PageLayout, pageSize: *const ::page_size::PageSize, minMargins: *const ::qt_core::margins_f::MarginsF);
  pub fn qt_gui_c_QPageLayout_setRightMargin(this_ptr: *mut ::page_layout::PageLayout, rightMargin: ::libc::c_double) -> bool;
  pub fn qt_gui_c_QPageLayout_setTopMargin(this_ptr: *mut ::page_layout::PageLayout, topMargin: ::libc::c_double) -> bool;
  pub fn qt_gui_c_QPageLayout_setUnits(this_ptr: *mut ::page_layout::PageLayout, units: ::page_layout::Unit);
  pub fn qt_gui_c_QPageLayout_swap(this_ptr: *mut ::page_layout::PageLayout, other: *mut ::page_layout::PageLayout);
  pub fn qt_gui_c_QPageLayout_units(this_ptr: *const ::page_layout::PageLayout) -> ::page_layout::Unit;

  // Header: QPageSize
  pub fn qt_gui_c_QPageSize_G_operator_neq(lhs: *const ::page_size::PageSize, rhs: *const ::page_size::PageSize) -> bool;
  pub fn qt_gui_c_QPageSize_G_operator_shl_to_output(dbg: *const ::qt_core::debug::Debug, pageSize: *const ::page_size::PageSize, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QPageSize_G_swap(value1: *mut ::page_size::PageSize, value2: *mut ::page_size::PageSize);
  pub fn qt_gui_c_QPageSize_constructor_no_args(output: *mut ::page_size::PageSize);
  pub fn qt_gui_c_QPageSize_constructor_other(other: *const ::page_size::PageSize, output: *mut ::page_size::PageSize);
  pub fn qt_gui_c_QPageSize_constructor_pageSizeId(pageSizeId: ::page_size::PageSizeId, output: *mut ::page_size::PageSize);
  pub fn qt_gui_c_QPageSize_constructor_pointSize(pointSize: *const ::qt_core::size::Size, output: *mut ::page_size::PageSize);
  pub fn qt_gui_c_QPageSize_constructor_pointSize_name(pointSize: *const ::qt_core::size::Size, name: *const ::qt_core::string::String, output: *mut ::page_size::PageSize);
  pub fn qt_gui_c_QPageSize_constructor_pointSize_name_matchPolicy(pointSize: *const ::qt_core::size::Size, name: *const ::qt_core::string::String, matchPolicy: ::page_size::SizeMatchPolicy, output: *mut ::page_size::PageSize);
  pub fn qt_gui_c_QPageSize_constructor_size_units(size: *const ::qt_core::size_f::SizeF, units: ::page_size::Unit, output: *mut ::page_size::PageSize);
  pub fn qt_gui_c_QPageSize_constructor_size_units_name(size: *const ::qt_core::size_f::SizeF, units: ::page_size::Unit, name: *const ::qt_core::string::String, output: *mut ::page_size::PageSize);
  pub fn qt_gui_c_QPageSize_constructor_size_units_name_matchPolicy(size: *const ::qt_core::size_f::SizeF, units: ::page_size::Unit, name: *const ::qt_core::string::String, matchPolicy: ::page_size::SizeMatchPolicy, output: *mut ::page_size::PageSize);
  pub fn qt_gui_c_QPageSize_definitionSize_to_output_no_args(this_ptr: *const ::page_size::PageSize, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_gui_c_QPageSize_definitionSize_to_output_pageSizeId(pageSizeId: ::page_size::PageSizeId, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_gui_c_QPageSize_definitionUnits_no_args(this_ptr: *const ::page_size::PageSize) -> ::page_size::Unit;
  pub fn qt_gui_c_QPageSize_definitionUnits_pageSizeId(pageSizeId: ::page_size::PageSizeId) -> ::page_size::Unit;
  pub fn qt_gui_c_QPageSize_destructor(this_ptr: *mut ::page_size::PageSize);
  pub fn qt_gui_c_QPageSize_id_no_args(this_ptr: *const ::page_size::PageSize) -> ::page_size::PageSizeId;
  pub fn qt_gui_c_QPageSize_id_pointSize(pointSize: *const ::qt_core::size::Size) -> ::page_size::PageSizeId;
  pub fn qt_gui_c_QPageSize_id_pointSize_matchPolicy(pointSize: *const ::qt_core::size::Size, matchPolicy: ::page_size::SizeMatchPolicy) -> ::page_size::PageSizeId;
  pub fn qt_gui_c_QPageSize_id_size_units(size: *const ::qt_core::size_f::SizeF, units: ::page_size::Unit) -> ::page_size::PageSizeId;
  pub fn qt_gui_c_QPageSize_id_size_units_matchPolicy(size: *const ::qt_core::size_f::SizeF, units: ::page_size::Unit, matchPolicy: ::page_size::SizeMatchPolicy) -> ::page_size::PageSizeId;
  pub fn qt_gui_c_QPageSize_id_windowsId(windowsId: ::libc::c_int) -> ::page_size::PageSizeId;
  pub fn qt_gui_c_QPageSize_isEquivalentTo(this_ptr: *const ::page_size::PageSize, other: *const ::page_size::PageSize) -> bool;
  pub fn qt_gui_c_QPageSize_isValid(this_ptr: *const ::page_size::PageSize) -> bool;
  pub fn qt_gui_c_QPageSize_key_to_output_no_args(this_ptr: *const ::page_size::PageSize, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QPageSize_key_to_output_pageSizeId(pageSizeId: ::page_size::PageSizeId, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QPageSize_name_to_output_no_args(this_ptr: *const ::page_size::PageSize, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QPageSize_name_to_output_pageSizeId(pageSizeId: ::page_size::PageSizeId, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QPageSize_operator_assign(this_ptr: *mut ::page_size::PageSize, other: *const ::page_size::PageSize) -> *mut ::page_size::PageSize;
  pub fn qt_gui_c_QPageSize_rectPixels_to_output(this_ptr: *const ::page_size::PageSize, resolution: ::libc::c_int, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPageSize_rectPoints_to_output(this_ptr: *const ::page_size::PageSize, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPageSize_rect_to_output(this_ptr: *const ::page_size::PageSize, units: ::page_size::Unit, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QPageSize_sizePixels_to_output_pageSizeId_resolution(pageSizeId: ::page_size::PageSizeId, resolution: ::libc::c_int, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QPageSize_sizePixels_to_output_resolution(this_ptr: *const ::page_size::PageSize, resolution: ::libc::c_int, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QPageSize_sizePoints_to_output_no_args(this_ptr: *const ::page_size::PageSize, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QPageSize_sizePoints_to_output_pageSizeId(pageSizeId: ::page_size::PageSizeId, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QPageSize_size_to_output_pageSizeId_units(pageSizeId: ::page_size::PageSizeId, units: ::page_size::Unit, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_gui_c_QPageSize_size_to_output_units(this_ptr: *const ::page_size::PageSize, units: ::page_size::Unit, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_gui_c_QPageSize_swap(this_ptr: *mut ::page_size::PageSize, other: *mut ::page_size::PageSize);
  pub fn qt_gui_c_QPageSize_windowsId_no_args(this_ptr: *const ::page_size::PageSize) -> ::libc::c_int;
  pub fn qt_gui_c_QPageSize_windowsId_pageSizeId(pageSizeId: ::page_size::PageSizeId) -> ::libc::c_int;

  // Header: QPagedPaintDevice
  pub fn qt_gui_c_QPagedPaintDevice_G_dynamic_cast_QPagedPaintDevice_ptr(ptr: *mut ::paint_device::PaintDevice) -> *mut ::paged_paint_device::PagedPaintDevice;
  pub fn qt_gui_c_QPagedPaintDevice_G_static_cast_QPagedPaintDevice_ptr(ptr: *mut ::paint_device::PaintDevice) -> *mut ::paged_paint_device::PagedPaintDevice;
  pub fn qt_gui_c_QPagedPaintDevice_G_static_cast_QPaintDevice_ptr(ptr: *mut ::paged_paint_device::PagedPaintDevice) -> *mut ::paint_device::PaintDevice;
  pub fn qt_gui_c_QPagedPaintDevice_Margins_bottom(this_ptr: *const ::paged_paint_device::Margins) -> ::libc::c_double;
  pub fn qt_gui_c_QPagedPaintDevice_Margins_destructor(this_ptr: *mut ::paged_paint_device::Margins);
  pub fn qt_gui_c_QPagedPaintDevice_Margins_left(this_ptr: *const ::paged_paint_device::Margins) -> ::libc::c_double;
  pub fn qt_gui_c_QPagedPaintDevice_Margins_right(this_ptr: *const ::paged_paint_device::Margins) -> ::libc::c_double;
  pub fn qt_gui_c_QPagedPaintDevice_Margins_set_bottom(this_ptr: *mut ::paged_paint_device::Margins, value: ::libc::c_double);
  pub fn qt_gui_c_QPagedPaintDevice_Margins_set_left(this_ptr: *mut ::paged_paint_device::Margins, value: ::libc::c_double);
  pub fn qt_gui_c_QPagedPaintDevice_Margins_set_right(this_ptr: *mut ::paged_paint_device::Margins, value: ::libc::c_double);
  pub fn qt_gui_c_QPagedPaintDevice_Margins_set_top(this_ptr: *mut ::paged_paint_device::Margins, value: ::libc::c_double);
  pub fn qt_gui_c_QPagedPaintDevice_Margins_top(this_ptr: *const ::paged_paint_device::Margins) -> ::libc::c_double;
  pub fn qt_gui_c_QPagedPaintDevice_delete(this_ptr: *mut ::paged_paint_device::PagedPaintDevice);
  pub fn qt_gui_c_QPagedPaintDevice_margins_to_output(this_ptr: *const ::paged_paint_device::PagedPaintDevice, output: *mut ::paged_paint_device::Margins);
  pub fn qt_gui_c_QPagedPaintDevice_newPage(this_ptr: *mut ::paged_paint_device::PagedPaintDevice) -> bool;
  pub fn qt_gui_c_QPagedPaintDevice_pageLayout_to_output(this_ptr: *const ::paged_paint_device::PagedPaintDevice, output: *mut ::page_layout::PageLayout);
  pub fn qt_gui_c_QPagedPaintDevice_pageSize(this_ptr: *const ::paged_paint_device::PagedPaintDevice) -> ::paged_paint_device::PageSize;
  pub fn qt_gui_c_QPagedPaintDevice_pageSizeMM_to_output(this_ptr: *const ::paged_paint_device::PagedPaintDevice, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_gui_c_QPagedPaintDevice_setMargins(this_ptr: *mut ::paged_paint_device::PagedPaintDevice, margins: *const ::paged_paint_device::Margins);
  pub fn qt_gui_c_QPagedPaintDevice_setPageLayout(this_ptr: *mut ::paged_paint_device::PagedPaintDevice, pageLayout: *const ::page_layout::PageLayout) -> bool;
  pub fn qt_gui_c_QPagedPaintDevice_setPageMargins_margins(this_ptr: *mut ::paged_paint_device::PagedPaintDevice, margins: *const ::qt_core::margins_f::MarginsF) -> bool;
  pub fn qt_gui_c_QPagedPaintDevice_setPageMargins_margins_units(this_ptr: *mut ::paged_paint_device::PagedPaintDevice, margins: *const ::qt_core::margins_f::MarginsF, units: *const ::page_layout::Unit) -> bool;
  pub fn qt_gui_c_QPagedPaintDevice_setPageOrientation(this_ptr: *mut ::paged_paint_device::PagedPaintDevice, orientation: *const ::page_layout::Orientation) -> bool;
  pub fn qt_gui_c_QPagedPaintDevice_setPageSizeMM(this_ptr: *mut ::paged_paint_device::PagedPaintDevice, size: *const ::qt_core::size_f::SizeF);
  pub fn qt_gui_c_QPagedPaintDevice_setPageSize_pageSize(this_ptr: *mut ::paged_paint_device::PagedPaintDevice, pageSize: *const ::page_size::PageSize) -> bool;
  pub fn qt_gui_c_QPagedPaintDevice_setPageSize_size(this_ptr: *mut ::paged_paint_device::PagedPaintDevice, size: ::paged_paint_device::PageSize);

  // Header: QPaintDevice
  pub fn qt_gui_c_QPaintDevice_colorCount(this_ptr: *const ::paint_device::PaintDevice) -> ::libc::c_int;
  pub fn qt_gui_c_QPaintDevice_delete(this_ptr: *mut ::paint_device::PaintDevice);
  pub fn qt_gui_c_QPaintDevice_depth(this_ptr: *const ::paint_device::PaintDevice) -> ::libc::c_int;
  pub fn qt_gui_c_QPaintDevice_devType(this_ptr: *const ::paint_device::PaintDevice) -> ::libc::c_int;
  pub fn qt_gui_c_QPaintDevice_devicePixelRatio(this_ptr: *const ::paint_device::PaintDevice) -> ::libc::c_int;
  pub fn qt_gui_c_QPaintDevice_devicePixelRatioF(this_ptr: *const ::paint_device::PaintDevice) -> ::libc::c_double;
  pub fn qt_gui_c_QPaintDevice_devicePixelRatioFScale() -> ::libc::c_double;
  pub fn qt_gui_c_QPaintDevice_height(this_ptr: *const ::paint_device::PaintDevice) -> ::libc::c_int;
  pub fn qt_gui_c_QPaintDevice_heightMM(this_ptr: *const ::paint_device::PaintDevice) -> ::libc::c_int;
  pub fn qt_gui_c_QPaintDevice_logicalDpiX(this_ptr: *const ::paint_device::PaintDevice) -> ::libc::c_int;
  pub fn qt_gui_c_QPaintDevice_logicalDpiY(this_ptr: *const ::paint_device::PaintDevice) -> ::libc::c_int;
  pub fn qt_gui_c_QPaintDevice_paintEngine(this_ptr: *const ::paint_device::PaintDevice) -> *mut ::paint_engine::PaintEngine;
  pub fn qt_gui_c_QPaintDevice_paintingActive(this_ptr: *const ::paint_device::PaintDevice) -> bool;
  pub fn qt_gui_c_QPaintDevice_physicalDpiX(this_ptr: *const ::paint_device::PaintDevice) -> ::libc::c_int;
  pub fn qt_gui_c_QPaintDevice_physicalDpiY(this_ptr: *const ::paint_device::PaintDevice) -> ::libc::c_int;
  pub fn qt_gui_c_QPaintDevice_width(this_ptr: *const ::paint_device::PaintDevice) -> ::libc::c_int;
  pub fn qt_gui_c_QPaintDevice_widthMM(this_ptr: *const ::paint_device::PaintDevice) -> ::libc::c_int;

  // Header: QPaintDeviceWindow
  pub fn qt_gui_c_QPaintDeviceWindow_G_dynamic_cast_QPaintDeviceWindow_ptr_QPaintDevice(ptr: *mut ::paint_device::PaintDevice) -> *mut ::paint_device_window::PaintDeviceWindow;
  pub fn qt_gui_c_QPaintDeviceWindow_G_dynamic_cast_QPaintDeviceWindow_ptr_QSurface(ptr: *mut ::surface::Surface) -> *mut ::paint_device_window::PaintDeviceWindow;
  pub fn qt_gui_c_QPaintDeviceWindow_G_dynamic_cast_QPaintDeviceWindow_ptr_QWindow(ptr: *mut ::window::Window) -> *mut ::paint_device_window::PaintDeviceWindow;
  pub fn qt_gui_c_QPaintDeviceWindow_G_static_cast_QObject_ptr(ptr: *mut ::paint_device_window::PaintDeviceWindow) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QPaintDeviceWindow_G_static_cast_QPaintDeviceWindow_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::paint_device_window::PaintDeviceWindow;
  pub fn qt_gui_c_QPaintDeviceWindow_G_static_cast_QPaintDeviceWindow_ptr_QPaintDevice(ptr: *mut ::paint_device::PaintDevice) -> *mut ::paint_device_window::PaintDeviceWindow;
  pub fn qt_gui_c_QPaintDeviceWindow_G_static_cast_QPaintDeviceWindow_ptr_QSurface(ptr: *mut ::surface::Surface) -> *mut ::paint_device_window::PaintDeviceWindow;
  pub fn qt_gui_c_QPaintDeviceWindow_G_static_cast_QPaintDeviceWindow_ptr_QWindow(ptr: *mut ::window::Window) -> *mut ::paint_device_window::PaintDeviceWindow;
  pub fn qt_gui_c_QPaintDeviceWindow_G_static_cast_QPaintDevice_ptr(ptr: *mut ::paint_device_window::PaintDeviceWindow) -> *mut ::paint_device::PaintDevice;
  pub fn qt_gui_c_QPaintDeviceWindow_G_static_cast_QSurface_ptr(ptr: *mut ::paint_device_window::PaintDeviceWindow) -> *mut ::surface::Surface;
  pub fn qt_gui_c_QPaintDeviceWindow_G_static_cast_QWindow_ptr(ptr: *mut ::paint_device_window::PaintDeviceWindow) -> *mut ::window::Window;
  pub fn qt_gui_c_QPaintDeviceWindow_delete(this_ptr: *mut ::paint_device_window::PaintDeviceWindow);
  pub fn qt_gui_c_QPaintDeviceWindow_metaObject(this_ptr: *const ::paint_device_window::PaintDeviceWindow) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QPaintDeviceWindow_qt_metacall(this_ptr: *mut ::paint_device_window::PaintDeviceWindow, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QPaintDeviceWindow_qt_metacast(this_ptr: *mut ::paint_device_window::PaintDeviceWindow, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QPaintDeviceWindow_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QPaintDeviceWindow_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QPaintDeviceWindow_update_no_args(this_ptr: *mut ::paint_device_window::PaintDeviceWindow);
  pub fn qt_gui_c_QPaintDeviceWindow_update_rect(this_ptr: *mut ::paint_device_window::PaintDeviceWindow, rect: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPaintDeviceWindow_update_region(this_ptr: *mut ::paint_device_window::PaintDeviceWindow, region: *const ::region::Region);

  // Header: QPaintEngine
  pub fn qt_gui_c_QPaintEngine_begin(this_ptr: *mut ::paint_engine::PaintEngine, pdev: *mut ::paint_device::PaintDevice) -> bool;
  pub fn qt_gui_c_QPaintEngine_clearDirty(this_ptr: *mut ::paint_engine::PaintEngine, df: ::libc::c_uint);
  pub fn qt_gui_c_QPaintEngine_coordinateOffset_to_output(this_ptr: *const ::paint_engine::PaintEngine, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QPaintEngine_delete(this_ptr: *mut ::paint_engine::PaintEngine);
  pub fn qt_gui_c_QPaintEngine_drawEllipse_QRect(this_ptr: *mut ::paint_engine::PaintEngine, r: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPaintEngine_drawEllipse_QRectF(this_ptr: *mut ::paint_engine::PaintEngine, r: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QPaintEngine_drawLines_QLineF_int(this_ptr: *mut ::paint_engine::PaintEngine, lines: *const ::qt_core::line_f::LineF, lineCount: ::libc::c_int);
  pub fn qt_gui_c_QPaintEngine_drawLines_QLine_int(this_ptr: *mut ::paint_engine::PaintEngine, lines: *const ::qt_core::line::Line, lineCount: ::libc::c_int);
  pub fn qt_gui_c_QPaintEngine_drawPath(this_ptr: *mut ::paint_engine::PaintEngine, path: *const ::painter_path::PainterPath);
  pub fn qt_gui_c_QPaintEngine_drawPixmap(this_ptr: *mut ::paint_engine::PaintEngine, r: *const ::qt_core::rect_f::RectF, pm: *const ::pixmap::Pixmap, sr: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QPaintEngine_drawPoints_QPointF_int(this_ptr: *mut ::paint_engine::PaintEngine, points: *const ::qt_core::point_f::PointF, pointCount: ::libc::c_int);
  pub fn qt_gui_c_QPaintEngine_drawPoints_QPoint_int(this_ptr: *mut ::paint_engine::PaintEngine, points: *const ::qt_core::point::Point, pointCount: ::libc::c_int);
  pub fn qt_gui_c_QPaintEngine_drawPolygon_QPointF_int_QPaintEngine_PolygonDrawMode(this_ptr: *mut ::paint_engine::PaintEngine, points: *const ::qt_core::point_f::PointF, pointCount: ::libc::c_int, mode: ::paint_engine::PolygonDrawMode);
  pub fn qt_gui_c_QPaintEngine_drawPolygon_QPoint_int_QPaintEngine_PolygonDrawMode(this_ptr: *mut ::paint_engine::PaintEngine, points: *const ::qt_core::point::Point, pointCount: ::libc::c_int, mode: ::paint_engine::PolygonDrawMode);
  pub fn qt_gui_c_QPaintEngine_drawRects_QRectF_int(this_ptr: *mut ::paint_engine::PaintEngine, rects: *const ::qt_core::rect_f::RectF, rectCount: ::libc::c_int);
  pub fn qt_gui_c_QPaintEngine_drawRects_QRect_int(this_ptr: *mut ::paint_engine::PaintEngine, rects: *const ::qt_core::rect::Rect, rectCount: ::libc::c_int);
  pub fn qt_gui_c_QPaintEngine_drawTextItem(this_ptr: *mut ::paint_engine::PaintEngine, p: *const ::qt_core::point_f::PointF, textItem: *const ::text_item::TextItem);
  pub fn qt_gui_c_QPaintEngine_drawTiledPixmap(this_ptr: *mut ::paint_engine::PaintEngine, r: *const ::qt_core::rect_f::RectF, pixmap: *const ::pixmap::Pixmap, s: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QPaintEngine_end(this_ptr: *mut ::paint_engine::PaintEngine) -> bool;
  pub fn qt_gui_c_QPaintEngine_fix_neg_rect(this_ptr: *mut ::paint_engine::PaintEngine, x: *mut ::libc::c_int, y: *mut ::libc::c_int, w: *mut ::libc::c_int, h: *mut ::libc::c_int);
  pub fn qt_gui_c_QPaintEngine_hasFeature(this_ptr: *const ::paint_engine::PaintEngine, feature: ::libc::c_uint) -> bool;
  pub fn qt_gui_c_QPaintEngine_isActive(this_ptr: *const ::paint_engine::PaintEngine) -> bool;
  pub fn qt_gui_c_QPaintEngine_isExtended(this_ptr: *const ::paint_engine::PaintEngine) -> bool;
  pub fn qt_gui_c_QPaintEngine_paintDevice(this_ptr: *const ::paint_engine::PaintEngine) -> *mut ::paint_device::PaintDevice;
  pub fn qt_gui_c_QPaintEngine_painter(this_ptr: *const ::paint_engine::PaintEngine) -> *mut ::painter::Painter;
  pub fn qt_gui_c_QPaintEngine_setActive(this_ptr: *mut ::paint_engine::PaintEngine, newState: bool);
  pub fn qt_gui_c_QPaintEngine_setDirty(this_ptr: *mut ::paint_engine::PaintEngine, df: ::libc::c_uint);
  pub fn qt_gui_c_QPaintEngine_setPaintDevice(this_ptr: *mut ::paint_engine::PaintEngine, device: *mut ::paint_device::PaintDevice);
  pub fn qt_gui_c_QPaintEngine_setSystemClip(this_ptr: *mut ::paint_engine::PaintEngine, baseClip: *const ::region::Region);
  pub fn qt_gui_c_QPaintEngine_setSystemRect(this_ptr: *mut ::paint_engine::PaintEngine, rect: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPaintEngine_syncState(this_ptr: *mut ::paint_engine::PaintEngine);
  pub fn qt_gui_c_QPaintEngine_systemClip_as_ptr(this_ptr: *const ::paint_engine::PaintEngine) -> *mut ::region::Region;
  pub fn qt_gui_c_QPaintEngine_systemRect_to_output(this_ptr: *const ::paint_engine::PaintEngine, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPaintEngine_testDirty(this_ptr: *mut ::paint_engine::PaintEngine, df: ::libc::c_uint) -> bool;
  pub fn qt_gui_c_QPaintEngine_type(this_ptr: *const ::paint_engine::PaintEngine) -> ::paint_engine::Type;
  pub fn qt_gui_c_QPaintEngine_updateState(this_ptr: *mut ::paint_engine::PaintEngine, state: *const ::paint_engine_state::PaintEngineState);

  // Header: QPaintEngineState
  pub fn qt_gui_c_QPaintEngineState_backgroundBrush_to_output(this_ptr: *const ::paint_engine_state::PaintEngineState, output: *mut ::brush::Brush);
  pub fn qt_gui_c_QPaintEngineState_brushNeedsResolving(this_ptr: *const ::paint_engine_state::PaintEngineState) -> bool;
  pub fn qt_gui_c_QPaintEngineState_brushOrigin_to_output(this_ptr: *const ::paint_engine_state::PaintEngineState, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QPaintEngineState_brush_to_output(this_ptr: *const ::paint_engine_state::PaintEngineState, output: *mut ::brush::Brush);
  pub fn qt_gui_c_QPaintEngineState_clipPath_to_output(this_ptr: *const ::paint_engine_state::PaintEngineState, output: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QPaintEngineState_clipRegion_as_ptr(this_ptr: *const ::paint_engine_state::PaintEngineState) -> *mut ::region::Region;
  pub fn qt_gui_c_QPaintEngineState_destructor(this_ptr: *mut ::paint_engine_state::PaintEngineState);
  pub fn qt_gui_c_QPaintEngineState_font_to_output(this_ptr: *const ::paint_engine_state::PaintEngineState, output: *mut ::font::Font);
  pub fn qt_gui_c_QPaintEngineState_isClipEnabled(this_ptr: *const ::paint_engine_state::PaintEngineState) -> bool;
  pub fn qt_gui_c_QPaintEngineState_matrix_to_output(this_ptr: *const ::paint_engine_state::PaintEngineState, output: *mut ::matrix::Matrix);
  pub fn qt_gui_c_QPaintEngineState_opacity(this_ptr: *const ::paint_engine_state::PaintEngineState) -> ::libc::c_double;
  pub fn qt_gui_c_QPaintEngineState_painter(this_ptr: *const ::paint_engine_state::PaintEngineState) -> *mut ::painter::Painter;
  pub fn qt_gui_c_QPaintEngineState_penNeedsResolving(this_ptr: *const ::paint_engine_state::PaintEngineState) -> bool;
  pub fn qt_gui_c_QPaintEngineState_pen_to_output(this_ptr: *const ::paint_engine_state::PaintEngineState, output: *mut ::pen::Pen);
  pub fn qt_gui_c_QPaintEngineState_transform_to_output(this_ptr: *const ::paint_engine_state::PaintEngineState, output: *mut ::transform::Transform);

  // Header: QPaintEvent
  pub fn qt_gui_c_QPaintEvent_G_static_cast_QEvent_ptr(ptr: *mut ::paint_event::PaintEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QPaintEvent_G_static_cast_QPaintEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::paint_event::PaintEvent;
  pub fn qt_gui_c_QPaintEvent_delete(this_ptr: *mut ::paint_event::PaintEvent);
  pub fn qt_gui_c_QPaintEvent_new_paintRect(paintRect: *const ::qt_core::rect::Rect) -> *mut ::paint_event::PaintEvent;
  pub fn qt_gui_c_QPaintEvent_new_paintRegion(paintRegion: *const ::region::Region) -> *mut ::paint_event::PaintEvent;
  pub fn qt_gui_c_QPaintEvent_rect(this_ptr: *const ::paint_event::PaintEvent) -> *const ::qt_core::rect::Rect;
  pub fn qt_gui_c_QPaintEvent_region(this_ptr: *const ::paint_event::PaintEvent) -> *const ::region::Region;

  // Header: QPainter
  pub fn qt_gui_c_QPainter_PixmapFragment_create_as_ptr_pos_sourceRect(pos: *const ::qt_core::point_f::PointF, sourceRect: *const ::qt_core::rect_f::RectF) -> *mut ::painter::PixmapFragment;
  pub fn qt_gui_c_QPainter_PixmapFragment_create_as_ptr_pos_sourceRect_scaleX(pos: *const ::qt_core::point_f::PointF, sourceRect: *const ::qt_core::rect_f::RectF, scaleX: ::libc::c_double) -> *mut ::painter::PixmapFragment;
  pub fn qt_gui_c_QPainter_PixmapFragment_create_as_ptr_pos_sourceRect_scaleX_scaleY(pos: *const ::qt_core::point_f::PointF, sourceRect: *const ::qt_core::rect_f::RectF, scaleX: ::libc::c_double, scaleY: ::libc::c_double) -> *mut ::painter::PixmapFragment;
  pub fn qt_gui_c_QPainter_PixmapFragment_create_as_ptr_pos_sourceRect_scaleX_scaleY_rotation(pos: *const ::qt_core::point_f::PointF, sourceRect: *const ::qt_core::rect_f::RectF, scaleX: ::libc::c_double, scaleY: ::libc::c_double, rotation: ::libc::c_double) -> *mut ::painter::PixmapFragment;
  pub fn qt_gui_c_QPainter_PixmapFragment_create_as_ptr_pos_sourceRect_scaleX_scaleY_rotation_opacity(pos: *const ::qt_core::point_f::PointF, sourceRect: *const ::qt_core::rect_f::RectF, scaleX: ::libc::c_double, scaleY: ::libc::c_double, rotation: ::libc::c_double, opacity: ::libc::c_double) -> *mut ::painter::PixmapFragment;
  pub fn qt_gui_c_QPainter_PixmapFragment_delete(this_ptr: *mut ::painter::PixmapFragment);
  pub fn qt_gui_c_QPainter_PixmapFragment_height(this_ptr: *const ::painter::PixmapFragment) -> ::libc::c_double;
  pub fn qt_gui_c_QPainter_PixmapFragment_opacity(this_ptr: *const ::painter::PixmapFragment) -> ::libc::c_double;
  pub fn qt_gui_c_QPainter_PixmapFragment_rotation(this_ptr: *const ::painter::PixmapFragment) -> ::libc::c_double;
  pub fn qt_gui_c_QPainter_PixmapFragment_scaleX(this_ptr: *const ::painter::PixmapFragment) -> ::libc::c_double;
  pub fn qt_gui_c_QPainter_PixmapFragment_scaleY(this_ptr: *const ::painter::PixmapFragment) -> ::libc::c_double;
  pub fn qt_gui_c_QPainter_PixmapFragment_set_height(this_ptr: *mut ::painter::PixmapFragment, value: ::libc::c_double);
  pub fn qt_gui_c_QPainter_PixmapFragment_set_opacity(this_ptr: *mut ::painter::PixmapFragment, value: ::libc::c_double);
  pub fn qt_gui_c_QPainter_PixmapFragment_set_rotation(this_ptr: *mut ::painter::PixmapFragment, value: ::libc::c_double);
  pub fn qt_gui_c_QPainter_PixmapFragment_set_scaleX(this_ptr: *mut ::painter::PixmapFragment, value: ::libc::c_double);
  pub fn qt_gui_c_QPainter_PixmapFragment_set_scaleY(this_ptr: *mut ::painter::PixmapFragment, value: ::libc::c_double);
  pub fn qt_gui_c_QPainter_PixmapFragment_set_sourceLeft(this_ptr: *mut ::painter::PixmapFragment, value: ::libc::c_double);
  pub fn qt_gui_c_QPainter_PixmapFragment_set_sourceTop(this_ptr: *mut ::painter::PixmapFragment, value: ::libc::c_double);
  pub fn qt_gui_c_QPainter_PixmapFragment_set_width(this_ptr: *mut ::painter::PixmapFragment, value: ::libc::c_double);
  pub fn qt_gui_c_QPainter_PixmapFragment_set_x(this_ptr: *mut ::painter::PixmapFragment, value: ::libc::c_double);
  pub fn qt_gui_c_QPainter_PixmapFragment_set_y(this_ptr: *mut ::painter::PixmapFragment, value: ::libc::c_double);
  pub fn qt_gui_c_QPainter_PixmapFragment_sourceLeft(this_ptr: *const ::painter::PixmapFragment) -> ::libc::c_double;
  pub fn qt_gui_c_QPainter_PixmapFragment_sourceTop(this_ptr: *const ::painter::PixmapFragment) -> ::libc::c_double;
  pub fn qt_gui_c_QPainter_PixmapFragment_width(this_ptr: *const ::painter::PixmapFragment) -> ::libc::c_double;
  pub fn qt_gui_c_QPainter_PixmapFragment_x(this_ptr: *const ::painter::PixmapFragment) -> ::libc::c_double;
  pub fn qt_gui_c_QPainter_PixmapFragment_y(this_ptr: *const ::painter::PixmapFragment) -> ::libc::c_double;
  pub fn qt_gui_c_QPainter_background(this_ptr: *const ::painter::Painter) -> *const ::brush::Brush;
  pub fn qt_gui_c_QPainter_begin(this_ptr: *mut ::painter::Painter, arg1: *mut ::paint_device::PaintDevice) -> bool;
  pub fn qt_gui_c_QPainter_beginNativePainting(this_ptr: *mut ::painter::Painter);
  pub fn qt_gui_c_QPainter_boundingRect_to_output_QRectF_QString(this_ptr: *mut ::painter::Painter, rect: *const ::qt_core::rect_f::RectF, text: *const ::qt_core::string::String, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QPainter_boundingRect_to_output_QRectF_QString_QTextOption(this_ptr: *mut ::painter::Painter, rect: *const ::qt_core::rect_f::RectF, text: *const ::qt_core::string::String, o: *const ::text_option::TextOption, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QPainter_boundingRect_to_output_QRectF_int_QString(this_ptr: *mut ::painter::Painter, rect: *const ::qt_core::rect_f::RectF, flags: ::libc::c_int, text: *const ::qt_core::string::String, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QPainter_boundingRect_to_output_QRect_int_QString(this_ptr: *mut ::painter::Painter, rect: *const ::qt_core::rect::Rect, flags: ::libc::c_int, text: *const ::qt_core::string::String, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPainter_boundingRect_to_output_int_int_int_int_int_QString(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, flags: ::libc::c_int, text: *const ::qt_core::string::String, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPainter_brush(this_ptr: *const ::painter::Painter) -> *const ::brush::Brush;
  pub fn qt_gui_c_QPainter_brushOrigin_to_output(this_ptr: *const ::painter::Painter, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QPainter_clipBoundingRect_to_output(this_ptr: *const ::painter::Painter, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QPainter_clipPath_to_output(this_ptr: *const ::painter::Painter, output: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QPainter_clipRegion_as_ptr(this_ptr: *const ::painter::Painter) -> *mut ::region::Region;
  pub fn qt_gui_c_QPainter_combinedMatrix_to_output(this_ptr: *const ::painter::Painter, output: *mut ::matrix::Matrix);
  pub fn qt_gui_c_QPainter_combinedTransform_to_output(this_ptr: *const ::painter::Painter, output: *mut ::transform::Transform);
  pub fn qt_gui_c_QPainter_compositionMode(this_ptr: *const ::painter::Painter) -> ::painter::CompositionMode;
  pub fn qt_gui_c_QPainter_delete(this_ptr: *mut ::painter::Painter);
  pub fn qt_gui_c_QPainter_device(this_ptr: *const ::painter::Painter) -> *mut ::paint_device::PaintDevice;
  pub fn qt_gui_c_QPainter_deviceMatrix(this_ptr: *const ::painter::Painter) -> *const ::matrix::Matrix;
  pub fn qt_gui_c_QPainter_deviceTransform(this_ptr: *const ::painter::Painter) -> *const ::transform::Transform;
  pub fn qt_gui_c_QPainter_drawArc_arg1_a_alen(this_ptr: *mut ::painter::Painter, arg1: *const ::qt_core::rect::Rect, a: ::libc::c_int, alen: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawArc_rect_a_alen(this_ptr: *mut ::painter::Painter, rect: *const ::qt_core::rect_f::RectF, a: ::libc::c_int, alen: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawArc_x_y_w_h_a_alen(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, a: ::libc::c_int, alen: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawChord_arg1_a_alen(this_ptr: *mut ::painter::Painter, arg1: *const ::qt_core::rect::Rect, a: ::libc::c_int, alen: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawChord_rect_a_alen(this_ptr: *mut ::painter::Painter, rect: *const ::qt_core::rect_f::RectF, a: ::libc::c_int, alen: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawChord_x_y_w_h_a_alen(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, a: ::libc::c_int, alen: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawConvexPolygon_QPointF_int(this_ptr: *mut ::painter::Painter, points: *const ::qt_core::point_f::PointF, pointCount: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawConvexPolygon_QPoint_int(this_ptr: *mut ::painter::Painter, points: *const ::qt_core::point::Point, pointCount: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawConvexPolygon_QPolygon(this_ptr: *mut ::painter::Painter, polygon: *const ::polygon::Polygon);
  pub fn qt_gui_c_QPainter_drawConvexPolygon_QPolygonF(this_ptr: *mut ::painter::Painter, polygon: *const ::polygon_f::PolygonF);
  pub fn qt_gui_c_QPainter_drawEllipse_QPointF_double_double(this_ptr: *mut ::painter::Painter, center: *const ::qt_core::point_f::PointF, rx: ::libc::c_double, ry: ::libc::c_double);
  pub fn qt_gui_c_QPainter_drawEllipse_QPoint_int_int(this_ptr: *mut ::painter::Painter, center: *const ::qt_core::point::Point, rx: ::libc::c_int, ry: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawEllipse_QRect(this_ptr: *mut ::painter::Painter, r: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPainter_drawEllipse_QRectF(this_ptr: *mut ::painter::Painter, r: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QPainter_drawEllipse_int_int_int_int(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawGlyphRun(this_ptr: *mut ::painter::Painter, position: *const ::qt_core::point_f::PointF, glyphRun: *const ::glyph_run::GlyphRun);
  pub fn qt_gui_c_QPainter_drawImage_QPointF_QImage(this_ptr: *mut ::painter::Painter, p: *const ::qt_core::point_f::PointF, image: *const ::image::Image);
  pub fn qt_gui_c_QPainter_drawImage_QPoint_QImage(this_ptr: *mut ::painter::Painter, p: *const ::qt_core::point::Point, image: *const ::image::Image);
  pub fn qt_gui_c_QPainter_drawImage_QRectF_QImage(this_ptr: *mut ::painter::Painter, r: *const ::qt_core::rect_f::RectF, image: *const ::image::Image);
  pub fn qt_gui_c_QPainter_drawImage_QRect_QImage(this_ptr: *mut ::painter::Painter, r: *const ::qt_core::rect::Rect, image: *const ::image::Image);
  pub fn qt_gui_c_QPainter_drawLine_QLine(this_ptr: *mut ::painter::Painter, line: *const ::qt_core::line::Line);
  pub fn qt_gui_c_QPainter_drawLine_QLineF(this_ptr: *mut ::painter::Painter, line: *const ::qt_core::line_f::LineF);
  pub fn qt_gui_c_QPainter_drawLine_QPointF_QPointF(this_ptr: *mut ::painter::Painter, p1: *const ::qt_core::point_f::PointF, p2: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QPainter_drawLine_QPoint_QPoint(this_ptr: *mut ::painter::Painter, p1: *const ::qt_core::point::Point, p2: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QPainter_drawLine_int_int_int_int(this_ptr: *mut ::painter::Painter, x1: ::libc::c_int, y1: ::libc::c_int, x2: ::libc::c_int, y2: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawLines_QLineF_int(this_ptr: *mut ::painter::Painter, lines: *const ::qt_core::line_f::LineF, lineCount: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawLines_QLine_int(this_ptr: *mut ::painter::Painter, lines: *const ::qt_core::line::Line, lineCount: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawLines_QPointF_int(this_ptr: *mut ::painter::Painter, pointPairs: *const ::qt_core::point_f::PointF, lineCount: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawLines_QPoint_int(this_ptr: *mut ::painter::Painter, pointPairs: *const ::qt_core::point::Point, lineCount: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawLines_QVector_QLine(this_ptr: *mut ::painter::Painter, lines: *const ::vector::VectorQtCoreLine);
  pub fn qt_gui_c_QPainter_drawLines_QVector_QLineF(this_ptr: *mut ::painter::Painter, lines: *const ::vector::VectorQtCoreLineF);
  pub fn qt_gui_c_QPainter_drawLines_QVector_QPoint(this_ptr: *mut ::painter::Painter, pointPairs: *const ::vector::VectorQtCorePoint);
  pub fn qt_gui_c_QPainter_drawLines_QVector_QPointF(this_ptr: *mut ::painter::Painter, pointPairs: *const ::qt_core::vector::VectorPointF);
  pub fn qt_gui_c_QPainter_drawPath(this_ptr: *mut ::painter::Painter, path: *const ::painter_path::PainterPath);
  pub fn qt_gui_c_QPainter_drawPicture_QPointF_QPicture(this_ptr: *mut ::painter::Painter, p: *const ::qt_core::point_f::PointF, picture: *const ::picture::Picture);
  pub fn qt_gui_c_QPainter_drawPicture_QPoint_QPicture(this_ptr: *mut ::painter::Painter, p: *const ::qt_core::point::Point, picture: *const ::picture::Picture);
  pub fn qt_gui_c_QPainter_drawPicture_int_int_QPicture(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, picture: *const ::picture::Picture);
  pub fn qt_gui_c_QPainter_drawPie_arg1_a_alen(this_ptr: *mut ::painter::Painter, arg1: *const ::qt_core::rect::Rect, a: ::libc::c_int, alen: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawPie_rect_a_alen(this_ptr: *mut ::painter::Painter, rect: *const ::qt_core::rect_f::RectF, a: ::libc::c_int, alen: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawPie_x_y_w_h_a_alen(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, a: ::libc::c_int, alen: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawPixmapFragments_fragments_fragmentCount_pixmap(this_ptr: *mut ::painter::Painter, fragments: *const ::painter::PixmapFragment, fragmentCount: ::libc::c_int, pixmap: *const ::pixmap::Pixmap);
  pub fn qt_gui_c_QPainter_drawPixmapFragments_fragments_fragmentCount_pixmap_hints(this_ptr: *mut ::painter::Painter, fragments: *const ::painter::PixmapFragment, fragmentCount: ::libc::c_int, pixmap: *const ::pixmap::Pixmap, hints: ::libc::c_uint);
  pub fn qt_gui_c_QPainter_drawPixmap_QPointF_QPixmap(this_ptr: *mut ::painter::Painter, p: *const ::qt_core::point_f::PointF, pm: *const ::pixmap::Pixmap);
  pub fn qt_gui_c_QPainter_drawPixmap_QPointF_QPixmap_QRectF(this_ptr: *mut ::painter::Painter, p: *const ::qt_core::point_f::PointF, pm: *const ::pixmap::Pixmap, sr: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QPainter_drawPixmap_QPoint_QPixmap(this_ptr: *mut ::painter::Painter, p: *const ::qt_core::point::Point, pm: *const ::pixmap::Pixmap);
  pub fn qt_gui_c_QPainter_drawPixmap_QPoint_QPixmap_QRect(this_ptr: *mut ::painter::Painter, p: *const ::qt_core::point::Point, pm: *const ::pixmap::Pixmap, sr: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPainter_drawPixmap_QRectF_QPixmap_QRectF(this_ptr: *mut ::painter::Painter, targetRect: *const ::qt_core::rect_f::RectF, pixmap: *const ::pixmap::Pixmap, sourceRect: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QPainter_drawPixmap_QRect_QPixmap(this_ptr: *mut ::painter::Painter, r: *const ::qt_core::rect::Rect, pm: *const ::pixmap::Pixmap);
  pub fn qt_gui_c_QPainter_drawPixmap_QRect_QPixmap_QRect(this_ptr: *mut ::painter::Painter, targetRect: *const ::qt_core::rect::Rect, pixmap: *const ::pixmap::Pixmap, sourceRect: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPainter_drawPixmap_int_int_QPixmap(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, pm: *const ::pixmap::Pixmap);
  pub fn qt_gui_c_QPainter_drawPixmap_int_int_QPixmap_int_int_int_int(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, pm: *const ::pixmap::Pixmap, sx: ::libc::c_int, sy: ::libc::c_int, sw: ::libc::c_int, sh: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawPixmap_int_int_int_int_QPixmap(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, pm: *const ::pixmap::Pixmap);
  pub fn qt_gui_c_QPainter_drawPixmap_int_int_int_int_QPixmap_int_int_int_int(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, pm: *const ::pixmap::Pixmap, sx: ::libc::c_int, sy: ::libc::c_int, sw: ::libc::c_int, sh: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawPoint_p(this_ptr: *mut ::painter::Painter, p: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QPainter_drawPoint_pt(this_ptr: *mut ::painter::Painter, pt: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QPainter_drawPoint_x_y(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawPoints_QPointF_int(this_ptr: *mut ::painter::Painter, points: *const ::qt_core::point_f::PointF, pointCount: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawPoints_QPoint_int(this_ptr: *mut ::painter::Painter, points: *const ::qt_core::point::Point, pointCount: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawPoints_QPolygon(this_ptr: *mut ::painter::Painter, points: *const ::polygon::Polygon);
  pub fn qt_gui_c_QPainter_drawPoints_QPolygonF(this_ptr: *mut ::painter::Painter, points: *const ::polygon_f::PolygonF);
  pub fn qt_gui_c_QPainter_drawPolygon_QPointF_int(this_ptr: *mut ::painter::Painter, points: *const ::qt_core::point_f::PointF, pointCount: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawPolygon_QPointF_int_Qt_FillRule(this_ptr: *mut ::painter::Painter, points: *const ::qt_core::point_f::PointF, pointCount: ::libc::c_int, fillRule: *const ::qt_core::qt::FillRule);
  pub fn qt_gui_c_QPainter_drawPolygon_QPoint_int(this_ptr: *mut ::painter::Painter, points: *const ::qt_core::point::Point, pointCount: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawPolygon_QPoint_int_Qt_FillRule(this_ptr: *mut ::painter::Painter, points: *const ::qt_core::point::Point, pointCount: ::libc::c_int, fillRule: *const ::qt_core::qt::FillRule);
  pub fn qt_gui_c_QPainter_drawPolygon_QPolygon(this_ptr: *mut ::painter::Painter, polygon: *const ::polygon::Polygon);
  pub fn qt_gui_c_QPainter_drawPolygon_QPolygonF(this_ptr: *mut ::painter::Painter, polygon: *const ::polygon_f::PolygonF);
  pub fn qt_gui_c_QPainter_drawPolygon_QPolygonF_Qt_FillRule(this_ptr: *mut ::painter::Painter, polygon: *const ::polygon_f::PolygonF, fillRule: *const ::qt_core::qt::FillRule);
  pub fn qt_gui_c_QPainter_drawPolygon_QPolygon_Qt_FillRule(this_ptr: *mut ::painter::Painter, polygon: *const ::polygon::Polygon, fillRule: *const ::qt_core::qt::FillRule);
  pub fn qt_gui_c_QPainter_drawPolyline_QPointF_int(this_ptr: *mut ::painter::Painter, points: *const ::qt_core::point_f::PointF, pointCount: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawPolyline_QPoint_int(this_ptr: *mut ::painter::Painter, points: *const ::qt_core::point::Point, pointCount: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawPolyline_QPolygon(this_ptr: *mut ::painter::Painter, polygon: *const ::polygon::Polygon);
  pub fn qt_gui_c_QPainter_drawPolyline_QPolygonF(this_ptr: *mut ::painter::Painter, polyline: *const ::polygon_f::PolygonF);
  pub fn qt_gui_c_QPainter_drawRect_QRect(this_ptr: *mut ::painter::Painter, rect: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPainter_drawRect_QRectF(this_ptr: *mut ::painter::Painter, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QPainter_drawRect_int_int_int_int(this_ptr: *mut ::painter::Painter, x1: ::libc::c_int, y1: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawRects_QRectF_int(this_ptr: *mut ::painter::Painter, rects: *const ::qt_core::rect_f::RectF, rectCount: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawRects_QRect_int(this_ptr: *mut ::painter::Painter, rects: *const ::qt_core::rect::Rect, rectCount: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawRects_QVector_QRect(this_ptr: *mut ::painter::Painter, rectangles: *const ::vector::VectorQtCoreRect);
  pub fn qt_gui_c_QPainter_drawRects_QVector_QRectF(this_ptr: *mut ::painter::Painter, rectangles: *const ::vector::VectorQtCoreRectF);
  pub fn qt_gui_c_QPainter_drawRoundRect_QRect(this_ptr: *mut ::painter::Painter, r: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPainter_drawRoundRect_QRectF(this_ptr: *mut ::painter::Painter, r: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QPainter_drawRoundRect_QRectF_int(this_ptr: *mut ::painter::Painter, r: *const ::qt_core::rect_f::RectF, xround: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawRoundRect_QRectF_int_int(this_ptr: *mut ::painter::Painter, r: *const ::qt_core::rect_f::RectF, xround: ::libc::c_int, yround: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawRoundRect_QRect_int(this_ptr: *mut ::painter::Painter, r: *const ::qt_core::rect::Rect, xround: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawRoundRect_QRect_int_int(this_ptr: *mut ::painter::Painter, r: *const ::qt_core::rect::Rect, xround: ::libc::c_int, yround: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawRoundRect_int_int_int_int(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawRoundRect_int_int_int_int_int(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, arg5: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawRoundRect_int_int_int_int_int_int(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, arg5: ::libc::c_int, arg6: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawRoundedRect_QRectF_double_double(this_ptr: *mut ::painter::Painter, rect: *const ::qt_core::rect_f::RectF, xRadius: ::libc::c_double, yRadius: ::libc::c_double);
  pub fn qt_gui_c_QPainter_drawRoundedRect_QRectF_double_double_Qt_SizeMode(this_ptr: *mut ::painter::Painter, rect: *const ::qt_core::rect_f::RectF, xRadius: ::libc::c_double, yRadius: ::libc::c_double, mode: *const ::qt_core::qt::SizeMode);
  pub fn qt_gui_c_QPainter_drawRoundedRect_QRect_double_double(this_ptr: *mut ::painter::Painter, rect: *const ::qt_core::rect::Rect, xRadius: ::libc::c_double, yRadius: ::libc::c_double);
  pub fn qt_gui_c_QPainter_drawRoundedRect_QRect_double_double_Qt_SizeMode(this_ptr: *mut ::painter::Painter, rect: *const ::qt_core::rect::Rect, xRadius: ::libc::c_double, yRadius: ::libc::c_double, mode: *const ::qt_core::qt::SizeMode);
  pub fn qt_gui_c_QPainter_drawRoundedRect_int_int_int_int_double_double(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, xRadius: ::libc::c_double, yRadius: ::libc::c_double);
  pub fn qt_gui_c_QPainter_drawRoundedRect_int_int_int_int_double_double_Qt_SizeMode(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, xRadius: ::libc::c_double, yRadius: ::libc::c_double, mode: *const ::qt_core::qt::SizeMode);
  pub fn qt_gui_c_QPainter_drawStaticText_QPointF_QStaticText(this_ptr: *mut ::painter::Painter, topLeftPosition: *const ::qt_core::point_f::PointF, staticText: *const ::static_text::StaticText);
  pub fn qt_gui_c_QPainter_drawStaticText_QPoint_QStaticText(this_ptr: *mut ::painter::Painter, topLeftPosition: *const ::qt_core::point::Point, staticText: *const ::static_text::StaticText);
  pub fn qt_gui_c_QPainter_drawStaticText_int_int_QStaticText(this_ptr: *mut ::painter::Painter, left: ::libc::c_int, top: ::libc::c_int, staticText: *const ::static_text::StaticText);
  pub fn qt_gui_c_QPainter_drawTextItem_QPointF_QTextItem(this_ptr: *mut ::painter::Painter, p: *const ::qt_core::point_f::PointF, ti: *const ::text_item::TextItem);
  pub fn qt_gui_c_QPainter_drawTextItem_QPoint_QTextItem(this_ptr: *mut ::painter::Painter, p: *const ::qt_core::point::Point, ti: *const ::text_item::TextItem);
  pub fn qt_gui_c_QPainter_drawTextItem_int_int_QTextItem(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, ti: *const ::text_item::TextItem);
  pub fn qt_gui_c_QPainter_drawText_QPointF_QString(this_ptr: *mut ::painter::Painter, p: *const ::qt_core::point_f::PointF, s: *const ::qt_core::string::String);
  pub fn qt_gui_c_QPainter_drawText_QPointF_QString_int_int(this_ptr: *mut ::painter::Painter, p: *const ::qt_core::point_f::PointF, str: *const ::qt_core::string::String, tf: ::libc::c_int, justificationPadding: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawText_QPoint_QString(this_ptr: *mut ::painter::Painter, p: *const ::qt_core::point::Point, s: *const ::qt_core::string::String);
  pub fn qt_gui_c_QPainter_drawText_QRectF_QString(this_ptr: *mut ::painter::Painter, r: *const ::qt_core::rect_f::RectF, text: *const ::qt_core::string::String);
  pub fn qt_gui_c_QPainter_drawText_QRectF_QString_QTextOption(this_ptr: *mut ::painter::Painter, r: *const ::qt_core::rect_f::RectF, text: *const ::qt_core::string::String, o: *const ::text_option::TextOption);
  pub fn qt_gui_c_QPainter_drawText_QRectF_int_QString(this_ptr: *mut ::painter::Painter, r: *const ::qt_core::rect_f::RectF, flags: ::libc::c_int, text: *const ::qt_core::string::String);
  pub fn qt_gui_c_QPainter_drawText_QRectF_int_QString_QRectF(this_ptr: *mut ::painter::Painter, r: *const ::qt_core::rect_f::RectF, flags: ::libc::c_int, text: *const ::qt_core::string::String, br: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QPainter_drawText_QRect_int_QString(this_ptr: *mut ::painter::Painter, r: *const ::qt_core::rect::Rect, flags: ::libc::c_int, text: *const ::qt_core::string::String);
  pub fn qt_gui_c_QPainter_drawText_QRect_int_QString_QRect(this_ptr: *mut ::painter::Painter, r: *const ::qt_core::rect::Rect, flags: ::libc::c_int, text: *const ::qt_core::string::String, br: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPainter_drawText_int_int_QString(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, s: *const ::qt_core::string::String);
  pub fn qt_gui_c_QPainter_drawText_int_int_int_int_int_QString(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, flags: ::libc::c_int, text: *const ::qt_core::string::String);
  pub fn qt_gui_c_QPainter_drawText_int_int_int_int_int_QString_QRect(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, flags: ::libc::c_int, text: *const ::qt_core::string::String, br: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPainter_drawTiledPixmap_arg1_arg2(this_ptr: *mut ::painter::Painter, arg1: *const ::qt_core::rect::Rect, arg2: *const ::pixmap::Pixmap);
  pub fn qt_gui_c_QPainter_drawTiledPixmap_arg1_arg2_arg3(this_ptr: *mut ::painter::Painter, arg1: *const ::qt_core::rect::Rect, arg2: *const ::pixmap::Pixmap, arg3: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QPainter_drawTiledPixmap_rect_pm(this_ptr: *mut ::painter::Painter, rect: *const ::qt_core::rect_f::RectF, pm: *const ::pixmap::Pixmap);
  pub fn qt_gui_c_QPainter_drawTiledPixmap_rect_pm_offset(this_ptr: *mut ::painter::Painter, rect: *const ::qt_core::rect_f::RectF, pm: *const ::pixmap::Pixmap, offset: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QPainter_drawTiledPixmap_x_y_w_h_arg5(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, arg5: *const ::pixmap::Pixmap);
  pub fn qt_gui_c_QPainter_drawTiledPixmap_x_y_w_h_arg5_sx(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, arg5: *const ::pixmap::Pixmap, sx: ::libc::c_int);
  pub fn qt_gui_c_QPainter_drawTiledPixmap_x_y_w_h_arg5_sx_sy(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, arg5: *const ::pixmap::Pixmap, sx: ::libc::c_int, sy: ::libc::c_int);
  pub fn qt_gui_c_QPainter_end(this_ptr: *mut ::painter::Painter) -> bool;
  pub fn qt_gui_c_QPainter_endNativePainting(this_ptr: *mut ::painter::Painter);
  pub fn qt_gui_c_QPainter_eraseRect_QRect(this_ptr: *mut ::painter::Painter, arg1: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPainter_eraseRect_QRectF(this_ptr: *mut ::painter::Painter, arg1: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QPainter_eraseRect_int_int_int_int(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int);
  pub fn qt_gui_c_QPainter_fillPath(this_ptr: *mut ::painter::Painter, path: *const ::painter_path::PainterPath, brush: *const ::brush::Brush);
  pub fn qt_gui_c_QPainter_fillRect_QRectF_QBrush(this_ptr: *mut ::painter::Painter, arg1: *const ::qt_core::rect_f::RectF, arg2: *const ::brush::Brush);
  pub fn qt_gui_c_QPainter_fillRect_QRectF_QColor(this_ptr: *mut ::painter::Painter, arg1: *const ::qt_core::rect_f::RectF, color: *const ::color::Color);
  pub fn qt_gui_c_QPainter_fillRect_QRectF_Qt_BrushStyle(this_ptr: *mut ::painter::Painter, r: *const ::qt_core::rect_f::RectF, style: *const ::qt_core::qt::BrushStyle);
  pub fn qt_gui_c_QPainter_fillRect_QRectF_Qt_GlobalColor(this_ptr: *mut ::painter::Painter, r: *const ::qt_core::rect_f::RectF, c: *const ::qt_core::qt::GlobalColor);
  pub fn qt_gui_c_QPainter_fillRect_QRect_QBrush(this_ptr: *mut ::painter::Painter, arg1: *const ::qt_core::rect::Rect, arg2: *const ::brush::Brush);
  pub fn qt_gui_c_QPainter_fillRect_QRect_QColor(this_ptr: *mut ::painter::Painter, arg1: *const ::qt_core::rect::Rect, color: *const ::color::Color);
  pub fn qt_gui_c_QPainter_fillRect_QRect_Qt_BrushStyle(this_ptr: *mut ::painter::Painter, r: *const ::qt_core::rect::Rect, style: *const ::qt_core::qt::BrushStyle);
  pub fn qt_gui_c_QPainter_fillRect_QRect_Qt_GlobalColor(this_ptr: *mut ::painter::Painter, r: *const ::qt_core::rect::Rect, c: *const ::qt_core::qt::GlobalColor);
  pub fn qt_gui_c_QPainter_fillRect_int_int_int_int_QBrush(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, arg5: *const ::brush::Brush);
  pub fn qt_gui_c_QPainter_fillRect_int_int_int_int_QColor(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, color: *const ::color::Color);
  pub fn qt_gui_c_QPainter_fillRect_int_int_int_int_Qt_BrushStyle(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, style: *const ::qt_core::qt::BrushStyle);
  pub fn qt_gui_c_QPainter_fillRect_int_int_int_int_Qt_GlobalColor(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, c: *const ::qt_core::qt::GlobalColor);
  pub fn qt_gui_c_QPainter_font(this_ptr: *const ::painter::Painter) -> *const ::font::Font;
  pub fn qt_gui_c_QPainter_fontInfo_to_output(this_ptr: *const ::painter::Painter, output: *mut ::font_info::FontInfo);
  pub fn qt_gui_c_QPainter_fontMetrics_to_output(this_ptr: *const ::painter::Painter, output: *mut ::font_metrics::FontMetrics);
  pub fn qt_gui_c_QPainter_hasClipping(this_ptr: *const ::painter::Painter) -> bool;
  pub fn qt_gui_c_QPainter_initFrom(this_ptr: *mut ::painter::Painter, device: *const ::paint_device::PaintDevice);
  pub fn qt_gui_c_QPainter_isActive(this_ptr: *const ::painter::Painter) -> bool;
  pub fn qt_gui_c_QPainter_matrix(this_ptr: *const ::painter::Painter) -> *const ::matrix::Matrix;
  pub fn qt_gui_c_QPainter_matrixEnabled(this_ptr: *const ::painter::Painter) -> bool;
  pub fn qt_gui_c_QPainter_new_arg1(arg1: *mut ::paint_device::PaintDevice) -> *mut ::painter::Painter;
  pub fn qt_gui_c_QPainter_new_no_args() -> *mut ::painter::Painter;
  pub fn qt_gui_c_QPainter_opacity(this_ptr: *const ::painter::Painter) -> ::libc::c_double;
  pub fn qt_gui_c_QPainter_paintEngine(this_ptr: *const ::painter::Painter) -> *mut ::paint_engine::PaintEngine;
  pub fn qt_gui_c_QPainter_pen(this_ptr: *const ::painter::Painter) -> *const ::pen::Pen;
  pub fn qt_gui_c_QPainter_redirected_device(device: *const ::paint_device::PaintDevice) -> *mut ::paint_device::PaintDevice;
  pub fn qt_gui_c_QPainter_redirected_device_offset(device: *const ::paint_device::PaintDevice, offset: *mut ::qt_core::point::Point) -> *mut ::paint_device::PaintDevice;
  pub fn qt_gui_c_QPainter_renderHints(this_ptr: *const ::painter::Painter) -> ::libc::c_uint;
  pub fn qt_gui_c_QPainter_resetMatrix(this_ptr: *mut ::painter::Painter);
  pub fn qt_gui_c_QPainter_resetTransform(this_ptr: *mut ::painter::Painter);
  pub fn qt_gui_c_QPainter_restore(this_ptr: *mut ::painter::Painter);
  pub fn qt_gui_c_QPainter_restoreRedirected(device: *const ::paint_device::PaintDevice);
  pub fn qt_gui_c_QPainter_rotate(this_ptr: *mut ::painter::Painter, a: ::libc::c_double);
  pub fn qt_gui_c_QPainter_save(this_ptr: *mut ::painter::Painter);
  pub fn qt_gui_c_QPainter_scale(this_ptr: *mut ::painter::Painter, sx: ::libc::c_double, sy: ::libc::c_double);
  pub fn qt_gui_c_QPainter_setBackground(this_ptr: *mut ::painter::Painter, bg: *const ::brush::Brush);
  pub fn qt_gui_c_QPainter_setBackgroundMode(this_ptr: *mut ::painter::Painter, mode: *const ::qt_core::qt::BGMode);
  pub fn qt_gui_c_QPainter_setBrushOrigin_QPoint(this_ptr: *mut ::painter::Painter, arg1: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QPainter_setBrushOrigin_QPointF(this_ptr: *mut ::painter::Painter, arg1: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QPainter_setBrushOrigin_int_int(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int);
  pub fn qt_gui_c_QPainter_setBrush_brush(this_ptr: *mut ::painter::Painter, brush: *const ::brush::Brush);
  pub fn qt_gui_c_QPainter_setBrush_style(this_ptr: *mut ::painter::Painter, style: *const ::qt_core::qt::BrushStyle);
  pub fn qt_gui_c_QPainter_setClipPath_path(this_ptr: *mut ::painter::Painter, path: *const ::painter_path::PainterPath);
  pub fn qt_gui_c_QPainter_setClipPath_path_op(this_ptr: *mut ::painter::Painter, path: *const ::painter_path::PainterPath, op: *const ::qt_core::qt::ClipOperation);
  pub fn qt_gui_c_QPainter_setClipRect_QRect(this_ptr: *mut ::painter::Painter, arg1: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPainter_setClipRect_QRectF(this_ptr: *mut ::painter::Painter, arg1: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QPainter_setClipRect_QRectF_Qt_ClipOperation(this_ptr: *mut ::painter::Painter, arg1: *const ::qt_core::rect_f::RectF, op: *const ::qt_core::qt::ClipOperation);
  pub fn qt_gui_c_QPainter_setClipRect_QRect_Qt_ClipOperation(this_ptr: *mut ::painter::Painter, arg1: *const ::qt_core::rect::Rect, op: *const ::qt_core::qt::ClipOperation);
  pub fn qt_gui_c_QPainter_setClipRect_int_int_int_int(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int);
  pub fn qt_gui_c_QPainter_setClipRect_int_int_int_int_Qt_ClipOperation(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, op: *const ::qt_core::qt::ClipOperation);
  pub fn qt_gui_c_QPainter_setClipRegion_arg1(this_ptr: *mut ::painter::Painter, arg1: *const ::region::Region);
  pub fn qt_gui_c_QPainter_setClipRegion_arg1_op(this_ptr: *mut ::painter::Painter, arg1: *const ::region::Region, op: *const ::qt_core::qt::ClipOperation);
  pub fn qt_gui_c_QPainter_setClipping(this_ptr: *mut ::painter::Painter, enable: bool);
  pub fn qt_gui_c_QPainter_setCompositionMode(this_ptr: *mut ::painter::Painter, mode: ::painter::CompositionMode);
  pub fn qt_gui_c_QPainter_setFont(this_ptr: *mut ::painter::Painter, f: *const ::font::Font);
  pub fn qt_gui_c_QPainter_setLayoutDirection(this_ptr: *mut ::painter::Painter, direction: *const ::qt_core::qt::LayoutDirection);
  pub fn qt_gui_c_QPainter_setMatrixEnabled(this_ptr: *mut ::painter::Painter, enabled: bool);
  pub fn qt_gui_c_QPainter_setMatrix_matrix(this_ptr: *mut ::painter::Painter, matrix: *const ::matrix::Matrix);
  pub fn qt_gui_c_QPainter_setMatrix_matrix_combine(this_ptr: *mut ::painter::Painter, matrix: *const ::matrix::Matrix, combine: bool);
  pub fn qt_gui_c_QPainter_setOpacity(this_ptr: *mut ::painter::Painter, opacity: ::libc::c_double);
  pub fn qt_gui_c_QPainter_setPen_color(this_ptr: *mut ::painter::Painter, color: *const ::color::Color);
  pub fn qt_gui_c_QPainter_setPen_pen(this_ptr: *mut ::painter::Painter, pen: *const ::pen::Pen);
  pub fn qt_gui_c_QPainter_setPen_style(this_ptr: *mut ::painter::Painter, style: *const ::qt_core::qt::PenStyle);
  pub fn qt_gui_c_QPainter_setRedirected_device_replacement(device: *const ::paint_device::PaintDevice, replacement: *mut ::paint_device::PaintDevice);
  pub fn qt_gui_c_QPainter_setRedirected_device_replacement_offset(device: *const ::paint_device::PaintDevice, replacement: *mut ::paint_device::PaintDevice, offset: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QPainter_setRenderHint_hint(this_ptr: *mut ::painter::Painter, hint: ::painter::RenderHint);
  pub fn qt_gui_c_QPainter_setRenderHint_hint_on(this_ptr: *mut ::painter::Painter, hint: ::painter::RenderHint, on: bool);
  pub fn qt_gui_c_QPainter_setRenderHints_hints(this_ptr: *mut ::painter::Painter, hints: ::libc::c_uint);
  pub fn qt_gui_c_QPainter_setRenderHints_hints_on(this_ptr: *mut ::painter::Painter, hints: ::libc::c_uint, on: bool);
  pub fn qt_gui_c_QPainter_setTransform_transform(this_ptr: *mut ::painter::Painter, transform: *const ::transform::Transform);
  pub fn qt_gui_c_QPainter_setTransform_transform_combine(this_ptr: *mut ::painter::Painter, transform: *const ::transform::Transform, combine: bool);
  pub fn qt_gui_c_QPainter_setViewTransformEnabled(this_ptr: *mut ::painter::Painter, enable: bool);
  pub fn qt_gui_c_QPainter_setViewport_viewport(this_ptr: *mut ::painter::Painter, viewport: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPainter_setViewport_x_y_w_h(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int);
  pub fn qt_gui_c_QPainter_setWindow_window(this_ptr: *mut ::painter::Painter, window: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPainter_setWindow_x_y_w_h(this_ptr: *mut ::painter::Painter, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int);
  pub fn qt_gui_c_QPainter_setWorldMatrixEnabled(this_ptr: *mut ::painter::Painter, enabled: bool);
  pub fn qt_gui_c_QPainter_setWorldMatrix_matrix(this_ptr: *mut ::painter::Painter, matrix: *const ::matrix::Matrix);
  pub fn qt_gui_c_QPainter_setWorldMatrix_matrix_combine(this_ptr: *mut ::painter::Painter, matrix: *const ::matrix::Matrix, combine: bool);
  pub fn qt_gui_c_QPainter_setWorldTransform_matrix(this_ptr: *mut ::painter::Painter, matrix: *const ::transform::Transform);
  pub fn qt_gui_c_QPainter_setWorldTransform_matrix_combine(this_ptr: *mut ::painter::Painter, matrix: *const ::transform::Transform, combine: bool);
  pub fn qt_gui_c_QPainter_shear(this_ptr: *mut ::painter::Painter, sh: ::libc::c_double, sv: ::libc::c_double);
  pub fn qt_gui_c_QPainter_strokePath(this_ptr: *mut ::painter::Painter, path: *const ::painter_path::PainterPath, pen: *const ::pen::Pen);
  pub fn qt_gui_c_QPainter_testRenderHint(this_ptr: *const ::painter::Painter, hint: ::painter::RenderHint) -> bool;
  pub fn qt_gui_c_QPainter_transform(this_ptr: *const ::painter::Painter) -> *const ::transform::Transform;
  pub fn qt_gui_c_QPainter_translate_QPoint(this_ptr: *mut ::painter::Painter, offset: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QPainter_translate_QPointF(this_ptr: *mut ::painter::Painter, offset: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QPainter_translate_double_double(this_ptr: *mut ::painter::Painter, dx: ::libc::c_double, dy: ::libc::c_double);
  pub fn qt_gui_c_QPainter_viewTransformEnabled(this_ptr: *const ::painter::Painter) -> bool;
  pub fn qt_gui_c_QPainter_viewport_to_output(this_ptr: *const ::painter::Painter, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPainter_window_to_output(this_ptr: *const ::painter::Painter, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPainter_worldMatrix(this_ptr: *const ::painter::Painter) -> *const ::matrix::Matrix;
  pub fn qt_gui_c_QPainter_worldMatrixEnabled(this_ptr: *const ::painter::Painter) -> bool;
  pub fn qt_gui_c_QPainter_worldTransform(this_ptr: *const ::painter::Painter) -> *const ::transform::Transform;

  // Header: QPainterPath
  pub fn qt_gui_c_QPainterPath_Element_convert_to_QPointF_to_output(this_ptr: *const ::painter_path::Element, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QPainterPath_Element_destructor(this_ptr: *mut ::painter_path::Element);
  pub fn qt_gui_c_QPainterPath_Element_isCurveTo(this_ptr: *const ::painter_path::Element) -> bool;
  pub fn qt_gui_c_QPainterPath_Element_isLineTo(this_ptr: *const ::painter_path::Element) -> bool;
  pub fn qt_gui_c_QPainterPath_Element_isMoveTo(this_ptr: *const ::painter_path::Element) -> bool;
  pub fn qt_gui_c_QPainterPath_Element_operator_eq(this_ptr: *const ::painter_path::Element, e: *const ::painter_path::Element) -> bool;
  pub fn qt_gui_c_QPainterPath_Element_operator_neq(this_ptr: *const ::painter_path::Element, e: *const ::painter_path::Element) -> bool;
  pub fn qt_gui_c_QPainterPath_Element_set_type(this_ptr: *mut ::painter_path::Element, value: ::painter_path::ElementType);
  pub fn qt_gui_c_QPainterPath_Element_set_x(this_ptr: *mut ::painter_path::Element, value: ::libc::c_double);
  pub fn qt_gui_c_QPainterPath_Element_set_y(this_ptr: *mut ::painter_path::Element, value: ::libc::c_double);
  pub fn qt_gui_c_QPainterPath_Element_type(this_ptr: *const ::painter_path::Element) -> ::painter_path::ElementType;
  pub fn qt_gui_c_QPainterPath_Element_x(this_ptr: *const ::painter_path::Element) -> ::libc::c_double;
  pub fn qt_gui_c_QPainterPath_Element_y(this_ptr: *const ::painter_path::Element) -> ::libc::c_double;
  pub fn qt_gui_c_QPainterPath_G_operator_shl_to_output(arg1: *const ::qt_core::debug::Debug, arg2: *const ::painter_path::PainterPath, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QPainterPath_G_swap(value1: *mut ::painter_path::PainterPath, value2: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QPainterPath_addEllipse_center_rx_ry(this_ptr: *mut ::painter_path::PainterPath, center: *const ::qt_core::point_f::PointF, rx: ::libc::c_double, ry: ::libc::c_double);
  pub fn qt_gui_c_QPainterPath_addEllipse_rect(this_ptr: *mut ::painter_path::PainterPath, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QPainterPath_addEllipse_x_y_w_h(this_ptr: *mut ::painter_path::PainterPath, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double);
  pub fn qt_gui_c_QPainterPath_addPath(this_ptr: *mut ::painter_path::PainterPath, path: *const ::painter_path::PainterPath);
  pub fn qt_gui_c_QPainterPath_addPolygon(this_ptr: *mut ::painter_path::PainterPath, polygon: *const ::polygon_f::PolygonF);
  pub fn qt_gui_c_QPainterPath_addRect_rect(this_ptr: *mut ::painter_path::PainterPath, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QPainterPath_addRect_x_y_w_h(this_ptr: *mut ::painter_path::PainterPath, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double);
  pub fn qt_gui_c_QPainterPath_addRegion(this_ptr: *mut ::painter_path::PainterPath, region: *const ::region::Region);
  pub fn qt_gui_c_QPainterPath_addRoundRect_rect_roundness(this_ptr: *mut ::painter_path::PainterPath, rect: *const ::qt_core::rect_f::RectF, roundness: ::libc::c_int);
  pub fn qt_gui_c_QPainterPath_addRoundRect_rect_xRnd_yRnd(this_ptr: *mut ::painter_path::PainterPath, rect: *const ::qt_core::rect_f::RectF, xRnd: ::libc::c_int, yRnd: ::libc::c_int);
  pub fn qt_gui_c_QPainterPath_addRoundRect_x_y_w_h_roundness(this_ptr: *mut ::painter_path::PainterPath, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, roundness: ::libc::c_int);
  pub fn qt_gui_c_QPainterPath_addRoundRect_x_y_w_h_xRnd_yRnd(this_ptr: *mut ::painter_path::PainterPath, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, xRnd: ::libc::c_int, yRnd: ::libc::c_int);
  pub fn qt_gui_c_QPainterPath_addRoundedRect_rect_xRadius_yRadius(this_ptr: *mut ::painter_path::PainterPath, rect: *const ::qt_core::rect_f::RectF, xRadius: ::libc::c_double, yRadius: ::libc::c_double);
  pub fn qt_gui_c_QPainterPath_addRoundedRect_rect_xRadius_yRadius_mode(this_ptr: *mut ::painter_path::PainterPath, rect: *const ::qt_core::rect_f::RectF, xRadius: ::libc::c_double, yRadius: ::libc::c_double, mode: *const ::qt_core::qt::SizeMode);
  pub fn qt_gui_c_QPainterPath_addRoundedRect_x_y_w_h_xRadius_yRadius(this_ptr: *mut ::painter_path::PainterPath, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, xRadius: ::libc::c_double, yRadius: ::libc::c_double);
  pub fn qt_gui_c_QPainterPath_addRoundedRect_x_y_w_h_xRadius_yRadius_mode(this_ptr: *mut ::painter_path::PainterPath, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, xRadius: ::libc::c_double, yRadius: ::libc::c_double, mode: *const ::qt_core::qt::SizeMode);
  pub fn qt_gui_c_QPainterPath_addText_point_f_text(this_ptr: *mut ::painter_path::PainterPath, point: *const ::qt_core::point_f::PointF, f: *const ::font::Font, text: *const ::qt_core::string::String);
  pub fn qt_gui_c_QPainterPath_addText_x_y_f_text(this_ptr: *mut ::painter_path::PainterPath, x: ::libc::c_double, y: ::libc::c_double, f: *const ::font::Font, text: *const ::qt_core::string::String);
  pub fn qt_gui_c_QPainterPath_angleAtPercent(this_ptr: *const ::painter_path::PainterPath, t: ::libc::c_double) -> ::libc::c_double;
  pub fn qt_gui_c_QPainterPath_arcMoveTo_rect_angle(this_ptr: *mut ::painter_path::PainterPath, rect: *const ::qt_core::rect_f::RectF, angle: ::libc::c_double);
  pub fn qt_gui_c_QPainterPath_arcMoveTo_x_y_w_h_angle(this_ptr: *mut ::painter_path::PainterPath, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, angle: ::libc::c_double);
  pub fn qt_gui_c_QPainterPath_arcTo_rect_startAngle_arcLength(this_ptr: *mut ::painter_path::PainterPath, rect: *const ::qt_core::rect_f::RectF, startAngle: ::libc::c_double, arcLength: ::libc::c_double);
  pub fn qt_gui_c_QPainterPath_arcTo_x_y_w_h_startAngle_arcLength(this_ptr: *mut ::painter_path::PainterPath, x: ::libc::c_double, y: ::libc::c_double, w: ::libc::c_double, h: ::libc::c_double, startAngle: ::libc::c_double, arcLength: ::libc::c_double);
  pub fn qt_gui_c_QPainterPath_boundingRect_to_output(this_ptr: *const ::painter_path::PainterPath, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QPainterPath_closeSubpath(this_ptr: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QPainterPath_connectPath(this_ptr: *mut ::painter_path::PainterPath, path: *const ::painter_path::PainterPath);
  pub fn qt_gui_c_QPainterPath_constructor_no_args(output: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QPainterPath_constructor_other(other: *const ::painter_path::PainterPath, output: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QPainterPath_constructor_startPoint(startPoint: *const ::qt_core::point_f::PointF, output: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QPainterPath_contains_p(this_ptr: *const ::painter_path::PainterPath, p: *const ::painter_path::PainterPath) -> bool;
  pub fn qt_gui_c_QPainterPath_contains_pt(this_ptr: *const ::painter_path::PainterPath, pt: *const ::qt_core::point_f::PointF) -> bool;
  pub fn qt_gui_c_QPainterPath_contains_rect(this_ptr: *const ::painter_path::PainterPath, rect: *const ::qt_core::rect_f::RectF) -> bool;
  pub fn qt_gui_c_QPainterPath_controlPointRect_to_output(this_ptr: *const ::painter_path::PainterPath, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QPainterPath_cubicTo_ctrlPt1_ctrlPt2_endPt(this_ptr: *mut ::painter_path::PainterPath, ctrlPt1: *const ::qt_core::point_f::PointF, ctrlPt2: *const ::qt_core::point_f::PointF, endPt: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QPainterPath_cubicTo_ctrlPt1x_ctrlPt1y_ctrlPt2x_ctrlPt2y_endPtx_endPty(this_ptr: *mut ::painter_path::PainterPath, ctrlPt1x: ::libc::c_double, ctrlPt1y: ::libc::c_double, ctrlPt2x: ::libc::c_double, ctrlPt2y: ::libc::c_double, endPtx: ::libc::c_double, endPty: ::libc::c_double);
  pub fn qt_gui_c_QPainterPath_currentPosition_to_output(this_ptr: *const ::painter_path::PainterPath, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QPainterPath_destructor(this_ptr: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QPainterPath_elementAt_to_output(this_ptr: *const ::painter_path::PainterPath, i: ::libc::c_int, output: *mut ::painter_path::Element);
  pub fn qt_gui_c_QPainterPath_elementCount(this_ptr: *const ::painter_path::PainterPath) -> ::libc::c_int;
  pub fn qt_gui_c_QPainterPath_intersected_to_output(this_ptr: *const ::painter_path::PainterPath, r: *const ::painter_path::PainterPath, output: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QPainterPath_intersects_p(this_ptr: *const ::painter_path::PainterPath, p: *const ::painter_path::PainterPath) -> bool;
  pub fn qt_gui_c_QPainterPath_intersects_rect(this_ptr: *const ::painter_path::PainterPath, rect: *const ::qt_core::rect_f::RectF) -> bool;
  pub fn qt_gui_c_QPainterPath_isEmpty(this_ptr: *const ::painter_path::PainterPath) -> bool;
  pub fn qt_gui_c_QPainterPath_length(this_ptr: *const ::painter_path::PainterPath) -> ::libc::c_double;
  pub fn qt_gui_c_QPainterPath_lineTo_p(this_ptr: *mut ::painter_path::PainterPath, p: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QPainterPath_lineTo_x_y(this_ptr: *mut ::painter_path::PainterPath, x: ::libc::c_double, y: ::libc::c_double);
  pub fn qt_gui_c_QPainterPath_moveTo_p(this_ptr: *mut ::painter_path::PainterPath, p: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QPainterPath_moveTo_x_y(this_ptr: *mut ::painter_path::PainterPath, x: ::libc::c_double, y: ::libc::c_double);
  pub fn qt_gui_c_QPainterPath_operator_add_assign(this_ptr: *mut ::painter_path::PainterPath, other: *const ::painter_path::PainterPath) -> *mut ::painter_path::PainterPath;
  pub fn qt_gui_c_QPainterPath_operator_add_to_output(this_ptr: *const ::painter_path::PainterPath, other: *const ::painter_path::PainterPath, output: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QPainterPath_operator_assign(this_ptr: *mut ::painter_path::PainterPath, other: *const ::painter_path::PainterPath) -> *mut ::painter_path::PainterPath;
  pub fn qt_gui_c_QPainterPath_operator_bit_and_assign(this_ptr: *mut ::painter_path::PainterPath, other: *const ::painter_path::PainterPath) -> *mut ::painter_path::PainterPath;
  pub fn qt_gui_c_QPainterPath_operator_bit_and_to_output(this_ptr: *const ::painter_path::PainterPath, other: *const ::painter_path::PainterPath, output: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QPainterPath_operator_bit_or_assign(this_ptr: *mut ::painter_path::PainterPath, other: *const ::painter_path::PainterPath) -> *mut ::painter_path::PainterPath;
  pub fn qt_gui_c_QPainterPath_operator_bit_or_to_output(this_ptr: *const ::painter_path::PainterPath, other: *const ::painter_path::PainterPath, output: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QPainterPath_operator_eq(this_ptr: *const ::painter_path::PainterPath, other: *const ::painter_path::PainterPath) -> bool;
  pub fn qt_gui_c_QPainterPath_operator_neq(this_ptr: *const ::painter_path::PainterPath, other: *const ::painter_path::PainterPath) -> bool;
  pub fn qt_gui_c_QPainterPath_operator_sub_assign(this_ptr: *mut ::painter_path::PainterPath, other: *const ::painter_path::PainterPath) -> *mut ::painter_path::PainterPath;
  pub fn qt_gui_c_QPainterPath_operator_sub_to_output(this_ptr: *const ::painter_path::PainterPath, other: *const ::painter_path::PainterPath, output: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QPainterPath_percentAtLength(this_ptr: *const ::painter_path::PainterPath, t: ::libc::c_double) -> ::libc::c_double;
  pub fn qt_gui_c_QPainterPath_pointAtPercent_to_output(this_ptr: *const ::painter_path::PainterPath, t: ::libc::c_double, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QPainterPath_quadTo_ctrlPt_endPt(this_ptr: *mut ::painter_path::PainterPath, ctrlPt: *const ::qt_core::point_f::PointF, endPt: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QPainterPath_quadTo_ctrlPtx_ctrlPty_endPtx_endPty(this_ptr: *mut ::painter_path::PainterPath, ctrlPtx: ::libc::c_double, ctrlPty: ::libc::c_double, endPtx: ::libc::c_double, endPty: ::libc::c_double);
  pub fn qt_gui_c_QPainterPath_setElementPositionAt(this_ptr: *mut ::painter_path::PainterPath, i: ::libc::c_int, x: ::libc::c_double, y: ::libc::c_double);
  pub fn qt_gui_c_QPainterPath_setFillRule(this_ptr: *mut ::painter_path::PainterPath, fillRule: *const ::qt_core::qt::FillRule);
  pub fn qt_gui_c_QPainterPath_simplified_to_output(this_ptr: *const ::painter_path::PainterPath, output: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QPainterPath_slopeAtPercent(this_ptr: *const ::painter_path::PainterPath, t: ::libc::c_double) -> ::libc::c_double;
  pub fn qt_gui_c_QPainterPath_subtractedInverted_to_output(this_ptr: *const ::painter_path::PainterPath, r: *const ::painter_path::PainterPath, output: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QPainterPath_subtracted_to_output(this_ptr: *const ::painter_path::PainterPath, r: *const ::painter_path::PainterPath, output: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QPainterPath_swap(this_ptr: *mut ::painter_path::PainterPath, other: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QPainterPath_toFillPolygon_to_output_QMatrix(this_ptr: *const ::painter_path::PainterPath, matrix: *const ::matrix::Matrix, output: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QPainterPath_toFillPolygon_to_output_QTransform(this_ptr: *const ::painter_path::PainterPath, matrix: *const ::transform::Transform, output: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QPainterPath_toFillPolygon_to_output_no_args(this_ptr: *const ::painter_path::PainterPath, output: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QPainterPath_toFillPolygons_to_output_QMatrix(this_ptr: *const ::painter_path::PainterPath, matrix: *const ::matrix::Matrix, output: *mut ::list::ListPolygonF);
  pub fn qt_gui_c_QPainterPath_toFillPolygons_to_output_QTransform(this_ptr: *const ::painter_path::PainterPath, matrix: *const ::transform::Transform, output: *mut ::list::ListPolygonF);
  pub fn qt_gui_c_QPainterPath_toFillPolygons_to_output_no_args(this_ptr: *const ::painter_path::PainterPath, output: *mut ::list::ListPolygonF);
  pub fn qt_gui_c_QPainterPath_toReversed_to_output(this_ptr: *const ::painter_path::PainterPath, output: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QPainterPath_toSubpathPolygons_to_output_QMatrix(this_ptr: *const ::painter_path::PainterPath, matrix: *const ::matrix::Matrix, output: *mut ::list::ListPolygonF);
  pub fn qt_gui_c_QPainterPath_toSubpathPolygons_to_output_QTransform(this_ptr: *const ::painter_path::PainterPath, matrix: *const ::transform::Transform, output: *mut ::list::ListPolygonF);
  pub fn qt_gui_c_QPainterPath_toSubpathPolygons_to_output_no_args(this_ptr: *const ::painter_path::PainterPath, output: *mut ::list::ListPolygonF);
  pub fn qt_gui_c_QPainterPath_translate_dx_dy(this_ptr: *mut ::painter_path::PainterPath, dx: ::libc::c_double, dy: ::libc::c_double);
  pub fn qt_gui_c_QPainterPath_translate_offset(this_ptr: *mut ::painter_path::PainterPath, offset: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QPainterPath_translated_to_output_dx_dy(this_ptr: *const ::painter_path::PainterPath, dx: ::libc::c_double, dy: ::libc::c_double, output: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QPainterPath_translated_to_output_offset(this_ptr: *const ::painter_path::PainterPath, offset: *const ::qt_core::point_f::PointF, output: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QPainterPath_united_to_output(this_ptr: *const ::painter_path::PainterPath, r: *const ::painter_path::PainterPath, output: *mut ::painter_path::PainterPath);

  // Header: QPainterPathStroker
  pub fn qt_gui_c_QPainterPathStroker_constructor_no_args(output: *mut ::painter_path_stroker::PainterPathStroker);
  pub fn qt_gui_c_QPainterPathStroker_constructor_pen(pen: *const ::pen::Pen, output: *mut ::painter_path_stroker::PainterPathStroker);
  pub fn qt_gui_c_QPainterPathStroker_createStroke_to_output(this_ptr: *const ::painter_path_stroker::PainterPathStroker, path: *const ::painter_path::PainterPath, output: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QPainterPathStroker_curveThreshold(this_ptr: *const ::painter_path_stroker::PainterPathStroker) -> ::libc::c_double;
  pub fn qt_gui_c_QPainterPathStroker_dashOffset(this_ptr: *const ::painter_path_stroker::PainterPathStroker) -> ::libc::c_double;
  pub fn qt_gui_c_QPainterPathStroker_dashPattern_to_output(this_ptr: *const ::painter_path_stroker::PainterPathStroker, output: *mut ::vector::VectorCDouble);
  pub fn qt_gui_c_QPainterPathStroker_destructor(this_ptr: *mut ::painter_path_stroker::PainterPathStroker);
  pub fn qt_gui_c_QPainterPathStroker_miterLimit(this_ptr: *const ::painter_path_stroker::PainterPathStroker) -> ::libc::c_double;
  pub fn qt_gui_c_QPainterPathStroker_setCapStyle(this_ptr: *mut ::painter_path_stroker::PainterPathStroker, style: *const ::qt_core::qt::PenCapStyle);
  pub fn qt_gui_c_QPainterPathStroker_setCurveThreshold(this_ptr: *mut ::painter_path_stroker::PainterPathStroker, threshold: ::libc::c_double);
  pub fn qt_gui_c_QPainterPathStroker_setDashOffset(this_ptr: *mut ::painter_path_stroker::PainterPathStroker, offset: ::libc::c_double);
  pub fn qt_gui_c_QPainterPathStroker_setDashPattern_arg1(this_ptr: *mut ::painter_path_stroker::PainterPathStroker, arg1: *const ::qt_core::qt::PenStyle);
  pub fn qt_gui_c_QPainterPathStroker_setDashPattern_dashPattern(this_ptr: *mut ::painter_path_stroker::PainterPathStroker, dashPattern: *const ::vector::VectorCDouble);
  pub fn qt_gui_c_QPainterPathStroker_setJoinStyle(this_ptr: *mut ::painter_path_stroker::PainterPathStroker, style: *const ::qt_core::qt::PenJoinStyle);
  pub fn qt_gui_c_QPainterPathStroker_setMiterLimit(this_ptr: *mut ::painter_path_stroker::PainterPathStroker, length: ::libc::c_double);
  pub fn qt_gui_c_QPainterPathStroker_setWidth(this_ptr: *mut ::painter_path_stroker::PainterPathStroker, width: ::libc::c_double);
  pub fn qt_gui_c_QPainterPathStroker_width(this_ptr: *const ::painter_path_stroker::PainterPathStroker) -> ::libc::c_double;

  // Header: QPair
  pub fn qt_gui_c_QPair_QOpenGLTexture_Filter_QOpenGLTexture_Filter_constructor_no_args(output: *mut ::pair::PairOpenglTextureFilterOpenglTextureFilter);
  pub fn qt_gui_c_QPair_QOpenGLTexture_Filter_QOpenGLTexture_Filter_constructor_t1_t2(t1: *const ::opengl_texture::Filter, t2: *const ::opengl_texture::Filter, output: *mut ::pair::PairOpenglTextureFilterOpenglTextureFilter);
  pub fn qt_gui_c_QPair_QOpenGLTexture_Filter_QOpenGLTexture_Filter_destructor(this_ptr: *mut ::pair::PairOpenglTextureFilterOpenglTextureFilter);
  pub fn qt_gui_c_QPair_QOpenGLTexture_Filter_QOpenGLTexture_Filter_swap(this_ptr: *mut ::pair::PairOpenglTextureFilterOpenglTextureFilter, other: *mut ::pair::PairOpenglTextureFilterOpenglTextureFilter);
  pub fn qt_gui_c_QPair_double_QColor_constructor_no_args(output: *mut ::pair::PairCDoubleColor);
  pub fn qt_gui_c_QPair_double_QColor_constructor_t1_t2(t1: *const ::libc::c_double, t2: *const ::color::Color, output: *mut ::pair::PairCDoubleColor);
  pub fn qt_gui_c_QPair_double_QColor_destructor(this_ptr: *mut ::pair::PairCDoubleColor);
  pub fn qt_gui_c_QPair_double_QColor_swap(this_ptr: *mut ::pair::PairCDoubleColor, other: *mut ::pair::PairCDoubleColor);
  pub fn qt_gui_c_QPair_float_float_constructor_no_args(output: *mut ::pair::PairCFloatCFloat);
  pub fn qt_gui_c_QPair_float_float_constructor_t1_t2(t1: *const ::libc::c_float, t2: *const ::libc::c_float, output: *mut ::pair::PairCFloatCFloat);
  pub fn qt_gui_c_QPair_float_float_destructor(this_ptr: *mut ::pair::PairCFloatCFloat);
  pub fn qt_gui_c_QPair_float_float_swap(this_ptr: *mut ::pair::PairCFloatCFloat, other: *mut ::pair::PairCFloatCFloat);
  pub fn qt_gui_c_QPair_int_int_constructor_no_args(output: *mut ::pair::PairCIntCInt);
  pub fn qt_gui_c_QPair_int_int_constructor_t1_t2(t1: *const ::libc::c_int, t2: *const ::libc::c_int, output: *mut ::pair::PairCIntCInt);
  pub fn qt_gui_c_QPair_int_int_destructor(this_ptr: *mut ::pair::PairCIntCInt);
  pub fn qt_gui_c_QPair_int_int_swap(this_ptr: *mut ::pair::PairCIntCInt, other: *mut ::pair::PairCIntCInt);

  // Header: QPalette
  pub fn qt_gui_c_QPalette_G_operator_shl_to_output(arg1: *const ::qt_core::debug::Debug, arg2: *const ::palette::Palette, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QPalette_G_operator_shr(ds: *mut ::qt_core::data_stream::DataStream, p: *mut ::palette::Palette) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QPalette_G_swap(value1: *mut ::palette::Palette, value2: *mut ::palette::Palette);
  pub fn qt_gui_c_QPalette_alternateBase(this_ptr: *const ::palette::Palette) -> *const ::brush::Brush;
  pub fn qt_gui_c_QPalette_background(this_ptr: *const ::palette::Palette) -> *const ::brush::Brush;
  pub fn qt_gui_c_QPalette_base(this_ptr: *const ::palette::Palette) -> *const ::brush::Brush;
  pub fn qt_gui_c_QPalette_brightText(this_ptr: *const ::palette::Palette) -> *const ::brush::Brush;
  pub fn qt_gui_c_QPalette_brush_cg_cr(this_ptr: *const ::palette::Palette, cg: ::palette::ColorGroup, cr: ::palette::ColorRole) -> *const ::brush::Brush;
  pub fn qt_gui_c_QPalette_brush_cr(this_ptr: *const ::palette::Palette, cr: ::palette::ColorRole) -> *const ::brush::Brush;
  pub fn qt_gui_c_QPalette_button(this_ptr: *const ::palette::Palette) -> *const ::brush::Brush;
  pub fn qt_gui_c_QPalette_buttonText(this_ptr: *const ::palette::Palette) -> *const ::brush::Brush;
  pub fn qt_gui_c_QPalette_cacheKey(this_ptr: *const ::palette::Palette) -> i64;
  pub fn qt_gui_c_QPalette_color_cg_cr(this_ptr: *const ::palette::Palette, cg: ::palette::ColorGroup, cr: ::palette::ColorRole) -> *const ::color::Color;
  pub fn qt_gui_c_QPalette_color_cr(this_ptr: *const ::palette::Palette, cr: ::palette::ColorRole) -> *const ::color::Color;
  pub fn qt_gui_c_QPalette_constructor_QBrush_QBrush_QBrush_QBrush_QBrush_QBrush_QBrush_QBrush_QBrush(windowText: *const ::brush::Brush, button: *const ::brush::Brush, light: *const ::brush::Brush, dark: *const ::brush::Brush, mid: *const ::brush::Brush, text: *const ::brush::Brush, bright_text: *const ::brush::Brush, base: *const ::brush::Brush, window: *const ::brush::Brush, output: *mut ::palette::Palette);
  pub fn qt_gui_c_QPalette_constructor_QColor(button: *const ::color::Color, output: *mut ::palette::Palette);
  pub fn qt_gui_c_QPalette_constructor_QColor_QColor(button: *const ::color::Color, window: *const ::color::Color, output: *mut ::palette::Palette);
  pub fn qt_gui_c_QPalette_constructor_QColor_QColor_QColor_QColor_QColor_QColor_QColor(windowText: *const ::color::Color, window: *const ::color::Color, light: *const ::color::Color, dark: *const ::color::Color, mid: *const ::color::Color, text: *const ::color::Color, base: *const ::color::Color, output: *mut ::palette::Palette);
  pub fn qt_gui_c_QPalette_constructor_QPalette(palette: *const ::palette::Palette, output: *mut ::palette::Palette);
  pub fn qt_gui_c_QPalette_constructor_Qt_GlobalColor(button: *const ::qt_core::qt::GlobalColor, output: *mut ::palette::Palette);
  pub fn qt_gui_c_QPalette_constructor_no_args(output: *mut ::palette::Palette);
  pub fn qt_gui_c_QPalette_convert_to_QVariant_to_output(this_ptr: *const ::palette::Palette, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QPalette_currentColorGroup(this_ptr: *const ::palette::Palette) -> ::palette::ColorGroup;
  pub fn qt_gui_c_QPalette_dark(this_ptr: *const ::palette::Palette) -> *const ::brush::Brush;
  pub fn qt_gui_c_QPalette_destructor(this_ptr: *mut ::palette::Palette);
  pub fn qt_gui_c_QPalette_foreground(this_ptr: *const ::palette::Palette) -> *const ::brush::Brush;
  pub fn qt_gui_c_QPalette_highlight(this_ptr: *const ::palette::Palette) -> *const ::brush::Brush;
  pub fn qt_gui_c_QPalette_highlightedText(this_ptr: *const ::palette::Palette) -> *const ::brush::Brush;
  pub fn qt_gui_c_QPalette_isBrushSet(this_ptr: *const ::palette::Palette, cg: ::palette::ColorGroup, cr: ::palette::ColorRole) -> bool;
  pub fn qt_gui_c_QPalette_isCopyOf(this_ptr: *const ::palette::Palette, p: *const ::palette::Palette) -> bool;
  pub fn qt_gui_c_QPalette_isEqual(this_ptr: *const ::palette::Palette, cr1: ::palette::ColorGroup, cr2: ::palette::ColorGroup) -> bool;
  pub fn qt_gui_c_QPalette_light(this_ptr: *const ::palette::Palette) -> *const ::brush::Brush;
  pub fn qt_gui_c_QPalette_link(this_ptr: *const ::palette::Palette) -> *const ::brush::Brush;
  pub fn qt_gui_c_QPalette_linkVisited(this_ptr: *const ::palette::Palette) -> *const ::brush::Brush;
  pub fn qt_gui_c_QPalette_mid(this_ptr: *const ::palette::Palette) -> *const ::brush::Brush;
  pub fn qt_gui_c_QPalette_midlight(this_ptr: *const ::palette::Palette) -> *const ::brush::Brush;
  pub fn qt_gui_c_QPalette_operator_assign(this_ptr: *mut ::palette::Palette, palette: *const ::palette::Palette) -> *mut ::palette::Palette;
  pub fn qt_gui_c_QPalette_operator_eq(this_ptr: *const ::palette::Palette, p: *const ::palette::Palette) -> bool;
  pub fn qt_gui_c_QPalette_operator_neq(this_ptr: *const ::palette::Palette, p: *const ::palette::Palette) -> bool;
  pub fn qt_gui_c_QPalette_resolve_mask(this_ptr: *mut ::palette::Palette, mask: ::libc::c_uint);
  pub fn qt_gui_c_QPalette_resolve_no_args(this_ptr: *const ::palette::Palette) -> ::libc::c_uint;
  pub fn qt_gui_c_QPalette_resolve_to_output(this_ptr: *const ::palette::Palette, arg1: *const ::palette::Palette, output: *mut ::palette::Palette);
  pub fn qt_gui_c_QPalette_setBrush_cg_cr_brush(this_ptr: *mut ::palette::Palette, cg: ::palette::ColorGroup, cr: ::palette::ColorRole, brush: *const ::brush::Brush);
  pub fn qt_gui_c_QPalette_setBrush_cr_brush(this_ptr: *mut ::palette::Palette, cr: ::palette::ColorRole, brush: *const ::brush::Brush);
  pub fn qt_gui_c_QPalette_setColorGroup(this_ptr: *mut ::palette::Palette, cr: ::palette::ColorGroup, windowText: *const ::brush::Brush, button: *const ::brush::Brush, light: *const ::brush::Brush, dark: *const ::brush::Brush, mid: *const ::brush::Brush, text: *const ::brush::Brush, bright_text: *const ::brush::Brush, base: *const ::brush::Brush, window: *const ::brush::Brush);
  pub fn qt_gui_c_QPalette_setColor_cg_cr_color(this_ptr: *mut ::palette::Palette, cg: ::palette::ColorGroup, cr: ::palette::ColorRole, color: *const ::color::Color);
  pub fn qt_gui_c_QPalette_setColor_cr_color(this_ptr: *mut ::palette::Palette, cr: ::palette::ColorRole, color: *const ::color::Color);
  pub fn qt_gui_c_QPalette_setCurrentColorGroup(this_ptr: *mut ::palette::Palette, cg: ::palette::ColorGroup);
  pub fn qt_gui_c_QPalette_shadow(this_ptr: *const ::palette::Palette) -> *const ::brush::Brush;
  pub fn qt_gui_c_QPalette_swap(this_ptr: *mut ::palette::Palette, other: *mut ::palette::Palette);
  pub fn qt_gui_c_QPalette_text(this_ptr: *const ::palette::Palette) -> *const ::brush::Brush;
  pub fn qt_gui_c_QPalette_toolTipBase(this_ptr: *const ::palette::Palette) -> *const ::brush::Brush;
  pub fn qt_gui_c_QPalette_toolTipText(this_ptr: *const ::palette::Palette) -> *const ::brush::Brush;
  pub fn qt_gui_c_QPalette_window(this_ptr: *const ::palette::Palette) -> *const ::brush::Brush;
  pub fn qt_gui_c_QPalette_windowText(this_ptr: *const ::palette::Palette) -> *const ::brush::Brush;

  // Header: QPdfWriter
  pub fn qt_gui_c_QPdfWriter_G_dynamic_cast_QPdfWriter_ptr_QPagedPaintDevice(ptr: *mut ::paged_paint_device::PagedPaintDevice) -> *mut ::pdf_writer::PdfWriter;
  pub fn qt_gui_c_QPdfWriter_G_dynamic_cast_QPdfWriter_ptr_QPaintDevice(ptr: *mut ::paint_device::PaintDevice) -> *mut ::pdf_writer::PdfWriter;
  pub fn qt_gui_c_QPdfWriter_G_static_cast_QObject_ptr(ptr: *mut ::pdf_writer::PdfWriter) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QPdfWriter_G_static_cast_QPagedPaintDevice_ptr(ptr: *mut ::pdf_writer::PdfWriter) -> *mut ::paged_paint_device::PagedPaintDevice;
  pub fn qt_gui_c_QPdfWriter_G_static_cast_QPaintDevice_ptr(ptr: *mut ::pdf_writer::PdfWriter) -> *mut ::paint_device::PaintDevice;
  pub fn qt_gui_c_QPdfWriter_G_static_cast_QPdfWriter_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::pdf_writer::PdfWriter;
  pub fn qt_gui_c_QPdfWriter_G_static_cast_QPdfWriter_ptr_QPagedPaintDevice(ptr: *mut ::paged_paint_device::PagedPaintDevice) -> *mut ::pdf_writer::PdfWriter;
  pub fn qt_gui_c_QPdfWriter_G_static_cast_QPdfWriter_ptr_QPaintDevice(ptr: *mut ::paint_device::PaintDevice) -> *mut ::pdf_writer::PdfWriter;
  pub fn qt_gui_c_QPdfWriter_creator_to_output(this_ptr: *const ::pdf_writer::PdfWriter, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QPdfWriter_delete(this_ptr: *mut ::pdf_writer::PdfWriter);
  pub fn qt_gui_c_QPdfWriter_metaObject(this_ptr: *const ::pdf_writer::PdfWriter) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QPdfWriter_newPage(this_ptr: *mut ::pdf_writer::PdfWriter) -> bool;
  pub fn qt_gui_c_QPdfWriter_new_device(device: *mut ::qt_core::io_device::IODevice) -> *mut ::pdf_writer::PdfWriter;
  pub fn qt_gui_c_QPdfWriter_new_filename(filename: *const ::qt_core::string::String) -> *mut ::pdf_writer::PdfWriter;
  pub fn qt_gui_c_QPdfWriter_qt_metacall(this_ptr: *mut ::pdf_writer::PdfWriter, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QPdfWriter_qt_metacast(this_ptr: *mut ::pdf_writer::PdfWriter, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QPdfWriter_resolution(this_ptr: *const ::pdf_writer::PdfWriter) -> ::libc::c_int;
  pub fn qt_gui_c_QPdfWriter_setCreator(this_ptr: *mut ::pdf_writer::PdfWriter, creator: *const ::qt_core::string::String);
  pub fn qt_gui_c_QPdfWriter_setMargins(this_ptr: *mut ::pdf_writer::PdfWriter, m: *const ::paged_paint_device::Margins);
  pub fn qt_gui_c_QPdfWriter_setPageSize(this_ptr: *mut ::pdf_writer::PdfWriter, size: ::paged_paint_device::PageSize);
  pub fn qt_gui_c_QPdfWriter_setPageSizeMM(this_ptr: *mut ::pdf_writer::PdfWriter, size: *const ::qt_core::size_f::SizeF);
  pub fn qt_gui_c_QPdfWriter_setResolution(this_ptr: *mut ::pdf_writer::PdfWriter, resolution: ::libc::c_int);
  pub fn qt_gui_c_QPdfWriter_setTitle(this_ptr: *mut ::pdf_writer::PdfWriter, title: *const ::qt_core::string::String);
  pub fn qt_gui_c_QPdfWriter_title_to_output(this_ptr: *const ::pdf_writer::PdfWriter, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QPdfWriter_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QPdfWriter_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QPen
  pub fn qt_gui_c_QPen_G_operator_shl(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *const ::pen::Pen) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QPen_G_operator_shl_to_output(arg1: *const ::qt_core::debug::Debug, arg2: *const ::pen::Pen, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QPen_G_operator_shr(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *mut ::pen::Pen) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QPen_G_swap(value1: *mut ::pen::Pen, value2: *mut ::pen::Pen);
  pub fn qt_gui_c_QPen_brush_to_output(this_ptr: *const ::pen::Pen, output: *mut ::brush::Brush);
  pub fn qt_gui_c_QPen_color_to_output(this_ptr: *const ::pen::Pen, output: *mut ::color::Color);
  pub fn qt_gui_c_QPen_constructor_arg1(arg1: *const ::qt_core::qt::PenStyle, output: *mut ::pen::Pen);
  pub fn qt_gui_c_QPen_constructor_brush_width(brush: *const ::brush::Brush, width: ::libc::c_double, output: *mut ::pen::Pen);
  pub fn qt_gui_c_QPen_constructor_brush_width_s(brush: *const ::brush::Brush, width: ::libc::c_double, s: *const ::qt_core::qt::PenStyle, output: *mut ::pen::Pen);
  pub fn qt_gui_c_QPen_constructor_brush_width_s_c(brush: *const ::brush::Brush, width: ::libc::c_double, s: *const ::qt_core::qt::PenStyle, c: *const ::qt_core::qt::PenCapStyle, output: *mut ::pen::Pen);
  pub fn qt_gui_c_QPen_constructor_brush_width_s_c_j(brush: *const ::brush::Brush, width: ::libc::c_double, s: *const ::qt_core::qt::PenStyle, c: *const ::qt_core::qt::PenCapStyle, j: *const ::qt_core::qt::PenJoinStyle, output: *mut ::pen::Pen);
  pub fn qt_gui_c_QPen_constructor_color(color: *const ::color::Color, output: *mut ::pen::Pen);
  pub fn qt_gui_c_QPen_constructor_no_args(output: *mut ::pen::Pen);
  pub fn qt_gui_c_QPen_constructor_pen(pen: *const ::pen::Pen, output: *mut ::pen::Pen);
  pub fn qt_gui_c_QPen_convert_to_QVariant_to_output(this_ptr: *const ::pen::Pen, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QPen_dashOffset(this_ptr: *const ::pen::Pen) -> ::libc::c_double;
  pub fn qt_gui_c_QPen_dashPattern_to_output(this_ptr: *const ::pen::Pen, output: *mut ::vector::VectorCDouble);
  pub fn qt_gui_c_QPen_destructor(this_ptr: *mut ::pen::Pen);
  pub fn qt_gui_c_QPen_isCosmetic(this_ptr: *const ::pen::Pen) -> bool;
  pub fn qt_gui_c_QPen_isDetached(this_ptr: *mut ::pen::Pen) -> bool;
  pub fn qt_gui_c_QPen_isSolid(this_ptr: *const ::pen::Pen) -> bool;
  pub fn qt_gui_c_QPen_miterLimit(this_ptr: *const ::pen::Pen) -> ::libc::c_double;
  pub fn qt_gui_c_QPen_operator_assign(this_ptr: *mut ::pen::Pen, pen: *const ::pen::Pen) -> *mut ::pen::Pen;
  pub fn qt_gui_c_QPen_operator_eq(this_ptr: *const ::pen::Pen, p: *const ::pen::Pen) -> bool;
  pub fn qt_gui_c_QPen_operator_neq(this_ptr: *const ::pen::Pen, p: *const ::pen::Pen) -> bool;
  pub fn qt_gui_c_QPen_setBrush(this_ptr: *mut ::pen::Pen, brush: *const ::brush::Brush);
  pub fn qt_gui_c_QPen_setCapStyle(this_ptr: *mut ::pen::Pen, pcs: *const ::qt_core::qt::PenCapStyle);
  pub fn qt_gui_c_QPen_setColor(this_ptr: *mut ::pen::Pen, color: *const ::color::Color);
  pub fn qt_gui_c_QPen_setCosmetic(this_ptr: *mut ::pen::Pen, cosmetic: bool);
  pub fn qt_gui_c_QPen_setDashOffset(this_ptr: *mut ::pen::Pen, doffset: ::libc::c_double);
  pub fn qt_gui_c_QPen_setDashPattern(this_ptr: *mut ::pen::Pen, pattern: *const ::vector::VectorCDouble);
  pub fn qt_gui_c_QPen_setJoinStyle(this_ptr: *mut ::pen::Pen, pcs: *const ::qt_core::qt::PenJoinStyle);
  pub fn qt_gui_c_QPen_setMiterLimit(this_ptr: *mut ::pen::Pen, limit: ::libc::c_double);
  pub fn qt_gui_c_QPen_setStyle(this_ptr: *mut ::pen::Pen, arg1: *const ::qt_core::qt::PenStyle);
  pub fn qt_gui_c_QPen_setWidth(this_ptr: *mut ::pen::Pen, width: ::libc::c_int);
  pub fn qt_gui_c_QPen_setWidthF(this_ptr: *mut ::pen::Pen, width: ::libc::c_double);
  pub fn qt_gui_c_QPen_swap(this_ptr: *mut ::pen::Pen, other: *mut ::pen::Pen);
  pub fn qt_gui_c_QPen_width(this_ptr: *const ::pen::Pen) -> ::libc::c_int;
  pub fn qt_gui_c_QPen_widthF(this_ptr: *const ::pen::Pen) -> ::libc::c_double;

  // Header: QPicture
  pub fn qt_gui_c_QPicture_G_dynamic_cast_QPicture_ptr(ptr: *mut ::paint_device::PaintDevice) -> *mut ::picture::Picture;
  pub fn qt_gui_c_QPicture_G_static_cast_QPaintDevice_ptr(ptr: *mut ::picture::Picture) -> *mut ::paint_device::PaintDevice;
  pub fn qt_gui_c_QPicture_G_static_cast_QPicture_ptr(ptr: *mut ::paint_device::PaintDevice) -> *mut ::picture::Picture;
  pub fn qt_gui_c_QPicture_G_swap(value1: *mut ::picture::Picture, value2: *mut ::picture::Picture);
  pub fn qt_gui_c_QPicture_boundingRect_to_output(this_ptr: *const ::picture::Picture, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPicture_data(this_ptr: *const ::picture::Picture) -> *const ::libc::c_char;
  pub fn qt_gui_c_QPicture_delete(this_ptr: *mut ::picture::Picture);
  pub fn qt_gui_c_QPicture_detach(this_ptr: *mut ::picture::Picture);
  pub fn qt_gui_c_QPicture_devType(this_ptr: *const ::picture::Picture) -> ::libc::c_int;
  pub fn qt_gui_c_QPicture_inputFormatList_to_output(output: *mut ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QPicture_inputFormats_to_output(output: *mut ::qt_core::list::ListByteArray);
  pub fn qt_gui_c_QPicture_isDetached(this_ptr: *const ::picture::Picture) -> bool;
  pub fn qt_gui_c_QPicture_isNull(this_ptr: *const ::picture::Picture) -> bool;
  pub fn qt_gui_c_QPicture_load_dev(this_ptr: *mut ::picture::Picture, dev: *mut ::qt_core::io_device::IODevice) -> bool;
  pub fn qt_gui_c_QPicture_load_dev_format(this_ptr: *mut ::picture::Picture, dev: *mut ::qt_core::io_device::IODevice, format: *const ::libc::c_char) -> bool;
  pub fn qt_gui_c_QPicture_load_fileName(this_ptr: *mut ::picture::Picture, fileName: *const ::qt_core::string::String) -> bool;
  pub fn qt_gui_c_QPicture_load_fileName_format(this_ptr: *mut ::picture::Picture, fileName: *const ::qt_core::string::String, format: *const ::libc::c_char) -> bool;
  pub fn qt_gui_c_QPicture_new_arg1(arg1: *const ::picture::Picture) -> *mut ::picture::Picture;
  pub fn qt_gui_c_QPicture_new_formatVersion(formatVersion: ::libc::c_int) -> *mut ::picture::Picture;
  pub fn qt_gui_c_QPicture_new_no_args() -> *mut ::picture::Picture;
  pub fn qt_gui_c_QPicture_operator_assign(this_ptr: *mut ::picture::Picture, p: *const ::picture::Picture) -> *mut ::picture::Picture;
  pub fn qt_gui_c_QPicture_outputFormatList_to_output(output: *mut ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QPicture_outputFormats_to_output(output: *mut ::qt_core::list::ListByteArray);
  pub fn qt_gui_c_QPicture_paintEngine(this_ptr: *const ::picture::Picture) -> *mut ::paint_engine::PaintEngine;
  pub fn qt_gui_c_QPicture_pictureFormat(fileName: *const ::qt_core::string::String) -> *const ::libc::c_char;
  pub fn qt_gui_c_QPicture_play(this_ptr: *mut ::picture::Picture, p: *mut ::painter::Painter) -> bool;
  pub fn qt_gui_c_QPicture_save_dev(this_ptr: *mut ::picture::Picture, dev: *mut ::qt_core::io_device::IODevice) -> bool;
  pub fn qt_gui_c_QPicture_save_dev_format(this_ptr: *mut ::picture::Picture, dev: *mut ::qt_core::io_device::IODevice, format: *const ::libc::c_char) -> bool;
  pub fn qt_gui_c_QPicture_save_fileName(this_ptr: *mut ::picture::Picture, fileName: *const ::qt_core::string::String) -> bool;
  pub fn qt_gui_c_QPicture_save_fileName_format(this_ptr: *mut ::picture::Picture, fileName: *const ::qt_core::string::String, format: *const ::libc::c_char) -> bool;
  pub fn qt_gui_c_QPicture_setBoundingRect(this_ptr: *mut ::picture::Picture, r: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPicture_setData(this_ptr: *mut ::picture::Picture, data: *const ::libc::c_char, size: ::libc::c_uint);
  pub fn qt_gui_c_QPicture_size(this_ptr: *const ::picture::Picture) -> ::libc::c_uint;
  pub fn qt_gui_c_QPicture_swap(this_ptr: *mut ::picture::Picture, other: *mut ::picture::Picture);

  // Header: QPictureFormatPlugin
  pub fn qt_gui_c_QPictureFormatPlugin_G_static_cast_QObject_ptr(ptr: *mut ::picture_format_plugin::PictureFormatPlugin) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QPictureFormatPlugin_G_static_cast_QPictureFormatPlugin_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::picture_format_plugin::PictureFormatPlugin;
  pub fn qt_gui_c_QPictureFormatPlugin_delete(this_ptr: *mut ::picture_format_plugin::PictureFormatPlugin);
  pub fn qt_gui_c_QPictureFormatPlugin_installIOHandler(this_ptr: *mut ::picture_format_plugin::PictureFormatPlugin, format: *const ::qt_core::string::String) -> bool;
  pub fn qt_gui_c_QPictureFormatPlugin_loadPicture(this_ptr: *mut ::picture_format_plugin::PictureFormatPlugin, format: *const ::qt_core::string::String, filename: *const ::qt_core::string::String, pic: *mut ::picture::Picture) -> bool;
  pub fn qt_gui_c_QPictureFormatPlugin_metaObject(this_ptr: *const ::picture_format_plugin::PictureFormatPlugin) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QPictureFormatPlugin_qt_metacall(this_ptr: *mut ::picture_format_plugin::PictureFormatPlugin, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QPictureFormatPlugin_qt_metacast(this_ptr: *mut ::picture_format_plugin::PictureFormatPlugin, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QPictureFormatPlugin_savePicture(this_ptr: *mut ::picture_format_plugin::PictureFormatPlugin, format: *const ::qt_core::string::String, filename: *const ::qt_core::string::String, pic: *const ::picture::Picture) -> bool;
  pub fn qt_gui_c_QPictureFormatPlugin_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QPictureFormatPlugin_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QPictureIO
  pub fn qt_gui_c_QPictureIO_constructor_fileName_format(fileName: *const ::qt_core::string::String, format: *const ::libc::c_char, output: *mut ::picture_io::PictureIO);
  pub fn qt_gui_c_QPictureIO_constructor_ioDevice_format(ioDevice: *mut ::qt_core::io_device::IODevice, format: *const ::libc::c_char, output: *mut ::picture_io::PictureIO);
  pub fn qt_gui_c_QPictureIO_constructor_no_args(output: *mut ::picture_io::PictureIO);
  pub fn qt_gui_c_QPictureIO_defineIOHandler(format: *const ::libc::c_char, header: *const ::libc::c_char, flags: *const ::libc::c_char, read_picture: extern "C" fn(*mut ::picture_io::PictureIO), write_picture: extern "C" fn(*mut ::picture_io::PictureIO));
  pub fn qt_gui_c_QPictureIO_description_to_output(this_ptr: *const ::picture_io::PictureIO, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QPictureIO_destructor(this_ptr: *mut ::picture_io::PictureIO);
  pub fn qt_gui_c_QPictureIO_fileName_to_output(this_ptr: *const ::picture_io::PictureIO, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QPictureIO_format(this_ptr: *const ::picture_io::PictureIO) -> *const ::libc::c_char;
  pub fn qt_gui_c_QPictureIO_gamma(this_ptr: *const ::picture_io::PictureIO) -> ::libc::c_float;
  pub fn qt_gui_c_QPictureIO_inputFormats_to_output(output: *mut ::qt_core::list::ListByteArray);
  pub fn qt_gui_c_QPictureIO_ioDevice(this_ptr: *const ::picture_io::PictureIO) -> *mut ::qt_core::io_device::IODevice;
  pub fn qt_gui_c_QPictureIO_outputFormats_to_output(output: *mut ::qt_core::list::ListByteArray);
  pub fn qt_gui_c_QPictureIO_parameters(this_ptr: *const ::picture_io::PictureIO) -> *const ::libc::c_char;
  pub fn qt_gui_c_QPictureIO_picture(this_ptr: *const ::picture_io::PictureIO) -> *const ::picture::Picture;
  pub fn qt_gui_c_QPictureIO_pictureFormat_to_output_arg1(arg1: *mut ::qt_core::io_device::IODevice, output: *mut ::qt_core::byte_array::ByteArray);
  pub fn qt_gui_c_QPictureIO_pictureFormat_to_output_fileName(fileName: *const ::qt_core::string::String, output: *mut ::qt_core::byte_array::ByteArray);
  pub fn qt_gui_c_QPictureIO_quality(this_ptr: *const ::picture_io::PictureIO) -> ::libc::c_int;
  pub fn qt_gui_c_QPictureIO_read(this_ptr: *mut ::picture_io::PictureIO) -> bool;
  pub fn qt_gui_c_QPictureIO_setDescription(this_ptr: *mut ::picture_io::PictureIO, arg1: *const ::qt_core::string::String);
  pub fn qt_gui_c_QPictureIO_setFileName(this_ptr: *mut ::picture_io::PictureIO, arg1: *const ::qt_core::string::String);
  pub fn qt_gui_c_QPictureIO_setFormat(this_ptr: *mut ::picture_io::PictureIO, arg1: *const ::libc::c_char);
  pub fn qt_gui_c_QPictureIO_setGamma(this_ptr: *mut ::picture_io::PictureIO, arg1: ::libc::c_float);
  pub fn qt_gui_c_QPictureIO_setIODevice(this_ptr: *mut ::picture_io::PictureIO, arg1: *mut ::qt_core::io_device::IODevice);
  pub fn qt_gui_c_QPictureIO_setParameters(this_ptr: *mut ::picture_io::PictureIO, arg1: *const ::libc::c_char);
  pub fn qt_gui_c_QPictureIO_setPicture(this_ptr: *mut ::picture_io::PictureIO, arg1: *const ::picture::Picture);
  pub fn qt_gui_c_QPictureIO_setQuality(this_ptr: *mut ::picture_io::PictureIO, arg1: ::libc::c_int);
  pub fn qt_gui_c_QPictureIO_setStatus(this_ptr: *mut ::picture_io::PictureIO, arg1: ::libc::c_int);
  pub fn qt_gui_c_QPictureIO_status(this_ptr: *const ::picture_io::PictureIO) -> ::libc::c_int;
  pub fn qt_gui_c_QPictureIO_write(this_ptr: *mut ::picture_io::PictureIO) -> bool;

  // Header: QPixelFormat
  pub fn qt_gui_c_QPixelFormat_G_QtPrivate_QPixelFormat_createYUV_to_output(yuvLayout: *const ::pixel_format::YUVLayout, alphaSize: ::libc::c_uchar, alphaUsage: *const ::pixel_format::AlphaUsage, alphaPosition: *const ::pixel_format::AlphaPosition, premultiplied: *const ::pixel_format::AlphaPremultiplied, typeInterpretation: *const ::pixel_format::TypeInterpretation, byteOrder: *const ::pixel_format::ByteOrder, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatAlpha_to_output_channelSize(channelSize: ::libc::c_uchar, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatAlpha_to_output_channelSize_typeInt(channelSize: ::libc::c_uchar, typeInt: *const ::pixel_format::TypeInterpretation, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatCmyk_to_output_channelSize(channelSize: ::libc::c_uchar, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatCmyk_to_output_channelSize_alfa(channelSize: ::libc::c_uchar, alfa: ::libc::c_uchar, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatCmyk_to_output_channelSize_alfa_usage(channelSize: ::libc::c_uchar, alfa: ::libc::c_uchar, usage: *const ::pixel_format::AlphaUsage, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatCmyk_to_output_channelSize_alfa_usage_position(channelSize: ::libc::c_uchar, alfa: ::libc::c_uchar, usage: *const ::pixel_format::AlphaUsage, position: *const ::pixel_format::AlphaPosition, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatCmyk_to_output_channelSize_alfa_usage_position_typeInt(channelSize: ::libc::c_uchar, alfa: ::libc::c_uchar, usage: *const ::pixel_format::AlphaUsage, position: *const ::pixel_format::AlphaPosition, typeInt: *const ::pixel_format::TypeInterpretation, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatGrayscale_to_output_channelSize(channelSize: ::libc::c_uchar, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatGrayscale_to_output_channelSize_typeInt(channelSize: ::libc::c_uchar, typeInt: *const ::pixel_format::TypeInterpretation, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatHsl_to_output_channelSize(channelSize: ::libc::c_uchar, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatHsl_to_output_channelSize_alfa(channelSize: ::libc::c_uchar, alfa: ::libc::c_uchar, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatHsl_to_output_channelSize_alfa_usage(channelSize: ::libc::c_uchar, alfa: ::libc::c_uchar, usage: *const ::pixel_format::AlphaUsage, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatHsl_to_output_channelSize_alfa_usage_position(channelSize: ::libc::c_uchar, alfa: ::libc::c_uchar, usage: *const ::pixel_format::AlphaUsage, position: *const ::pixel_format::AlphaPosition, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatHsl_to_output_channelSize_alfa_usage_position_typeInt(channelSize: ::libc::c_uchar, alfa: ::libc::c_uchar, usage: *const ::pixel_format::AlphaUsage, position: *const ::pixel_format::AlphaPosition, typeInt: *const ::pixel_format::TypeInterpretation, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatHsv_to_output_channelSize(channelSize: ::libc::c_uchar, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatHsv_to_output_channelSize_alfa(channelSize: ::libc::c_uchar, alfa: ::libc::c_uchar, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatHsv_to_output_channelSize_alfa_usage(channelSize: ::libc::c_uchar, alfa: ::libc::c_uchar, usage: *const ::pixel_format::AlphaUsage, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatHsv_to_output_channelSize_alfa_usage_position(channelSize: ::libc::c_uchar, alfa: ::libc::c_uchar, usage: *const ::pixel_format::AlphaUsage, position: *const ::pixel_format::AlphaPosition, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatHsv_to_output_channelSize_alfa_usage_position_typeInt(channelSize: ::libc::c_uchar, alfa: ::libc::c_uchar, usage: *const ::pixel_format::AlphaUsage, position: *const ::pixel_format::AlphaPosition, typeInt: *const ::pixel_format::TypeInterpretation, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatRgba_to_output_red_green_blue_alfa_usage_position(red: ::libc::c_uchar, green: ::libc::c_uchar, blue: ::libc::c_uchar, alfa: ::libc::c_uchar, usage: *const ::pixel_format::AlphaUsage, position: *const ::pixel_format::AlphaPosition, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatRgba_to_output_red_green_blue_alfa_usage_position_pmul(red: ::libc::c_uchar, green: ::libc::c_uchar, blue: ::libc::c_uchar, alfa: ::libc::c_uchar, usage: *const ::pixel_format::AlphaUsage, position: *const ::pixel_format::AlphaPosition, pmul: *const ::pixel_format::AlphaPremultiplied, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatRgba_to_output_red_green_blue_alfa_usage_position_pmul_typeInt(red: ::libc::c_uchar, green: ::libc::c_uchar, blue: ::libc::c_uchar, alfa: ::libc::c_uchar, usage: *const ::pixel_format::AlphaUsage, position: *const ::pixel_format::AlphaPosition, pmul: *const ::pixel_format::AlphaPremultiplied, typeInt: *const ::pixel_format::TypeInterpretation, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatYuv_to_output_layout(layout: *const ::pixel_format::YUVLayout, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatYuv_to_output_layout_alfa(layout: *const ::pixel_format::YUVLayout, alfa: ::libc::c_uchar, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatYuv_to_output_layout_alfa_usage(layout: *const ::pixel_format::YUVLayout, alfa: ::libc::c_uchar, usage: *const ::pixel_format::AlphaUsage, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatYuv_to_output_layout_alfa_usage_position(layout: *const ::pixel_format::YUVLayout, alfa: ::libc::c_uchar, usage: *const ::pixel_format::AlphaUsage, position: *const ::pixel_format::AlphaPosition, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatYuv_to_output_layout_alfa_usage_position_p_mul(layout: *const ::pixel_format::YUVLayout, alfa: ::libc::c_uchar, usage: *const ::pixel_format::AlphaUsage, position: *const ::pixel_format::AlphaPosition, p_mul: *const ::pixel_format::AlphaPremultiplied, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatYuv_to_output_layout_alfa_usage_position_p_mul_typeInt(layout: *const ::pixel_format::YUVLayout, alfa: ::libc::c_uchar, usage: *const ::pixel_format::AlphaUsage, position: *const ::pixel_format::AlphaPosition, p_mul: *const ::pixel_format::AlphaPremultiplied, typeInt: *const ::pixel_format::TypeInterpretation, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_G_qPixelFormatYuv_to_output_layout_alfa_usage_position_p_mul_typeInt_b_order(layout: *const ::pixel_format::YUVLayout, alfa: ::libc::c_uchar, usage: *const ::pixel_format::AlphaUsage, position: *const ::pixel_format::AlphaPosition, p_mul: *const ::pixel_format::AlphaPremultiplied, typeInt: *const ::pixel_format::TypeInterpretation, b_order: *const ::pixel_format::ByteOrder, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_alphaPosition(this_ptr: *const ::pixel_format::PixelFormat) -> ::pixel_format::AlphaPosition;
  pub fn qt_gui_c_QPixelFormat_alphaSize(this_ptr: *const ::pixel_format::PixelFormat) -> ::libc::c_uchar;
  pub fn qt_gui_c_QPixelFormat_alphaUsage(this_ptr: *const ::pixel_format::PixelFormat) -> ::pixel_format::AlphaUsage;
  pub fn qt_gui_c_QPixelFormat_bitsPerPixel(this_ptr: *const ::pixel_format::PixelFormat) -> ::libc::c_uchar;
  pub fn qt_gui_c_QPixelFormat_blackSize(this_ptr: *const ::pixel_format::PixelFormat) -> ::libc::c_uchar;
  pub fn qt_gui_c_QPixelFormat_blueSize(this_ptr: *const ::pixel_format::PixelFormat) -> ::libc::c_uchar;
  pub fn qt_gui_c_QPixelFormat_brightnessSize(this_ptr: *const ::pixel_format::PixelFormat) -> ::libc::c_uchar;
  pub fn qt_gui_c_QPixelFormat_byteOrder(this_ptr: *const ::pixel_format::PixelFormat) -> ::pixel_format::ByteOrder;
  pub fn qt_gui_c_QPixelFormat_channelCount(this_ptr: *const ::pixel_format::PixelFormat) -> ::libc::c_uchar;
  pub fn qt_gui_c_QPixelFormat_colorModel(this_ptr: *const ::pixel_format::PixelFormat) -> ::pixel_format::ColorModel;
  pub fn qt_gui_c_QPixelFormat_constructor_colorModel_firstSize_secondSize_thirdSize_fourthSize_fifthSize_alphaSize_alphaUsage_alphaPosition_premultiplied_typeInterpretation(colorModel: ::pixel_format::ColorModel, firstSize: ::libc::c_uchar, secondSize: ::libc::c_uchar, thirdSize: ::libc::c_uchar, fourthSize: ::libc::c_uchar, fifthSize: ::libc::c_uchar, alphaSize: ::libc::c_uchar, alphaUsage: ::pixel_format::AlphaUsage, alphaPosition: ::pixel_format::AlphaPosition, premultiplied: ::pixel_format::AlphaPremultiplied, typeInterpretation: ::pixel_format::TypeInterpretation, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_constructor_colorModel_firstSize_secondSize_thirdSize_fourthSize_fifthSize_alphaSize_alphaUsage_alphaPosition_premultiplied_typeInterpretation_byteOrder(colorModel: ::pixel_format::ColorModel, firstSize: ::libc::c_uchar, secondSize: ::libc::c_uchar, thirdSize: ::libc::c_uchar, fourthSize: ::libc::c_uchar, fifthSize: ::libc::c_uchar, alphaSize: ::libc::c_uchar, alphaUsage: ::pixel_format::AlphaUsage, alphaPosition: ::pixel_format::AlphaPosition, premultiplied: ::pixel_format::AlphaPremultiplied, typeInterpretation: ::pixel_format::TypeInterpretation, byteOrder: ::pixel_format::ByteOrder, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_constructor_colorModel_firstSize_secondSize_thirdSize_fourthSize_fifthSize_alphaSize_alphaUsage_alphaPosition_premultiplied_typeInterpretation_byteOrder_subEnum(colorModel: ::pixel_format::ColorModel, firstSize: ::libc::c_uchar, secondSize: ::libc::c_uchar, thirdSize: ::libc::c_uchar, fourthSize: ::libc::c_uchar, fifthSize: ::libc::c_uchar, alphaSize: ::libc::c_uchar, alphaUsage: ::pixel_format::AlphaUsage, alphaPosition: ::pixel_format::AlphaPosition, premultiplied: ::pixel_format::AlphaPremultiplied, typeInterpretation: ::pixel_format::TypeInterpretation, byteOrder: ::pixel_format::ByteOrder, subEnum: ::libc::c_uchar, output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_constructor_no_args(output: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_cyanSize(this_ptr: *const ::pixel_format::PixelFormat) -> ::libc::c_uchar;
  pub fn qt_gui_c_QPixelFormat_destructor(this_ptr: *mut ::pixel_format::PixelFormat);
  pub fn qt_gui_c_QPixelFormat_greenSize(this_ptr: *const ::pixel_format::PixelFormat) -> ::libc::c_uchar;
  pub fn qt_gui_c_QPixelFormat_hueSize(this_ptr: *const ::pixel_format::PixelFormat) -> ::libc::c_uchar;
  pub fn qt_gui_c_QPixelFormat_lightnessSize(this_ptr: *const ::pixel_format::PixelFormat) -> ::libc::c_uchar;
  pub fn qt_gui_c_QPixelFormat_magentaSize(this_ptr: *const ::pixel_format::PixelFormat) -> ::libc::c_uchar;
  pub fn qt_gui_c_QPixelFormat_premultiplied(this_ptr: *const ::pixel_format::PixelFormat) -> ::pixel_format::AlphaPremultiplied;
  pub fn qt_gui_c_QPixelFormat_redSize(this_ptr: *const ::pixel_format::PixelFormat) -> ::libc::c_uchar;
  pub fn qt_gui_c_QPixelFormat_saturationSize(this_ptr: *const ::pixel_format::PixelFormat) -> ::libc::c_uchar;
  pub fn qt_gui_c_QPixelFormat_subEnum(this_ptr: *const ::pixel_format::PixelFormat) -> ::libc::c_uchar;
  pub fn qt_gui_c_QPixelFormat_typeInterpretation(this_ptr: *const ::pixel_format::PixelFormat) -> ::pixel_format::TypeInterpretation;
  pub fn qt_gui_c_QPixelFormat_yellowSize(this_ptr: *const ::pixel_format::PixelFormat) -> ::libc::c_uchar;
  pub fn qt_gui_c_QPixelFormat_yuvLayout(this_ptr: *const ::pixel_format::PixelFormat) -> ::pixel_format::YUVLayout;

  // Header: QPixmap
  pub fn qt_gui_c_QPixmap_G_dynamic_cast_QPixmap_ptr(ptr: *mut ::paint_device::PaintDevice) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_G_operator_shl(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *const ::pixmap::Pixmap) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QPixmap_G_operator_shl_to_output(arg1: *const ::qt_core::debug::Debug, arg2: *const ::pixmap::Pixmap, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QPixmap_G_static_cast_QPaintDevice_ptr(ptr: *mut ::pixmap::Pixmap) -> *mut ::paint_device::PaintDevice;
  pub fn qt_gui_c_QPixmap_G_static_cast_QPixmap_ptr(ptr: *mut ::paint_device::PaintDevice) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_G_swap(value1: *mut ::pixmap::Pixmap, value2: *mut ::pixmap::Pixmap);
  pub fn qt_gui_c_QPixmap_cacheKey(this_ptr: *const ::pixmap::Pixmap) -> i64;
  pub fn qt_gui_c_QPixmap_convert_to_QVariant_to_output(this_ptr: *const ::pixmap::Pixmap, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QPixmap_copy_as_ptr_no_args(this_ptr: *const ::pixmap::Pixmap) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_copy_as_ptr_rect(this_ptr: *const ::pixmap::Pixmap, rect: *const ::qt_core::rect::Rect) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_copy_as_ptr_x_y_width_height(this_ptr: *const ::pixmap::Pixmap, x: ::libc::c_int, y: ::libc::c_int, width: ::libc::c_int, height: ::libc::c_int) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_createHeuristicMask_as_ptr_clipTight(this_ptr: *const ::pixmap::Pixmap, clipTight: bool) -> *mut ::bitmap::Bitmap;
  pub fn qt_gui_c_QPixmap_createHeuristicMask_as_ptr_no_args(this_ptr: *const ::pixmap::Pixmap) -> *mut ::bitmap::Bitmap;
  pub fn qt_gui_c_QPixmap_createMaskFromColor_as_ptr_maskColor(this_ptr: *const ::pixmap::Pixmap, maskColor: *const ::color::Color) -> *mut ::bitmap::Bitmap;
  pub fn qt_gui_c_QPixmap_createMaskFromColor_as_ptr_maskColor_mode(this_ptr: *const ::pixmap::Pixmap, maskColor: *const ::color::Color, mode: *const ::qt_core::qt::MaskMode) -> *mut ::bitmap::Bitmap;
  pub fn qt_gui_c_QPixmap_defaultDepth() -> ::libc::c_int;
  pub fn qt_gui_c_QPixmap_delete(this_ptr: *mut ::pixmap::Pixmap);
  pub fn qt_gui_c_QPixmap_depth(this_ptr: *const ::pixmap::Pixmap) -> ::libc::c_int;
  pub fn qt_gui_c_QPixmap_detach(this_ptr: *mut ::pixmap::Pixmap);
  pub fn qt_gui_c_QPixmap_devType(this_ptr: *const ::pixmap::Pixmap) -> ::libc::c_int;
  pub fn qt_gui_c_QPixmap_devicePixelRatio(this_ptr: *const ::pixmap::Pixmap) -> ::libc::c_double;
  pub fn qt_gui_c_QPixmap_fill_device_ofs(this_ptr: *mut ::pixmap::Pixmap, device: *const ::paint_device::PaintDevice, ofs: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QPixmap_fill_device_xofs_yofs(this_ptr: *mut ::pixmap::Pixmap, device: *const ::paint_device::PaintDevice, xofs: ::libc::c_int, yofs: ::libc::c_int);
  pub fn qt_gui_c_QPixmap_fill_fillColor(this_ptr: *mut ::pixmap::Pixmap, fillColor: *const ::color::Color);
  pub fn qt_gui_c_QPixmap_fill_no_args(this_ptr: *mut ::pixmap::Pixmap);
  pub fn qt_gui_c_QPixmap_grabWidget_as_ptr_widget(widget: *mut ::qt_core::object::Object) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_grabWidget_as_ptr_widget_rect(widget: *mut ::qt_core::object::Object, rect: *const ::qt_core::rect::Rect) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_grabWidget_as_ptr_widget_x(widget: *mut ::qt_core::object::Object, x: ::libc::c_int) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_grabWidget_as_ptr_widget_x_y(widget: *mut ::qt_core::object::Object, x: ::libc::c_int, y: ::libc::c_int) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_grabWidget_as_ptr_widget_x_y_w(widget: *mut ::qt_core::object::Object, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_grabWidget_as_ptr_widget_x_y_w_h(widget: *mut ::qt_core::object::Object, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_grabWindow_as_ptr_arg1(arg1: ::libc::c_ulonglong) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_grabWindow_as_ptr_arg1_x(arg1: ::libc::c_ulonglong, x: ::libc::c_int) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_grabWindow_as_ptr_arg1_x_y(arg1: ::libc::c_ulonglong, x: ::libc::c_int, y: ::libc::c_int) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_grabWindow_as_ptr_arg1_x_y_w(arg1: ::libc::c_ulonglong, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_grabWindow_as_ptr_arg1_x_y_w_h(arg1: ::libc::c_ulonglong, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_hasAlpha(this_ptr: *const ::pixmap::Pixmap) -> bool;
  pub fn qt_gui_c_QPixmap_hasAlphaChannel(this_ptr: *const ::pixmap::Pixmap) -> bool;
  pub fn qt_gui_c_QPixmap_height(this_ptr: *const ::pixmap::Pixmap) -> ::libc::c_int;
  pub fn qt_gui_c_QPixmap_isDetached(this_ptr: *const ::pixmap::Pixmap) -> bool;
  pub fn qt_gui_c_QPixmap_isNull(this_ptr: *const ::pixmap::Pixmap) -> bool;
  pub fn qt_gui_c_QPixmap_isQBitmap(this_ptr: *const ::pixmap::Pixmap) -> bool;
  pub fn qt_gui_c_QPixmap_mask_as_ptr(this_ptr: *const ::pixmap::Pixmap) -> *mut ::bitmap::Bitmap;
  pub fn qt_gui_c_QPixmap_new_QPixmap(arg1: *const ::pixmap::Pixmap) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_new_QSize(arg1: *const ::qt_core::size::Size) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_new_int_int(w: ::libc::c_int, h: ::libc::c_int) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_new_no_args() -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_operator_assign(this_ptr: *mut ::pixmap::Pixmap, arg1: *const ::pixmap::Pixmap) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_operator_not(this_ptr: *const ::pixmap::Pixmap) -> bool;
  pub fn qt_gui_c_QPixmap_paintEngine(this_ptr: *const ::pixmap::Pixmap) -> *mut ::paint_engine::PaintEngine;
  pub fn qt_gui_c_QPixmap_rect_to_output(this_ptr: *const ::pixmap::Pixmap, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPixmap_save_device(this_ptr: *const ::pixmap::Pixmap, device: *mut ::qt_core::io_device::IODevice) -> bool;
  pub fn qt_gui_c_QPixmap_save_device_format(this_ptr: *const ::pixmap::Pixmap, device: *mut ::qt_core::io_device::IODevice, format: *const ::libc::c_char) -> bool;
  pub fn qt_gui_c_QPixmap_save_device_format_quality(this_ptr: *const ::pixmap::Pixmap, device: *mut ::qt_core::io_device::IODevice, format: *const ::libc::c_char, quality: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QPixmap_save_fileName(this_ptr: *const ::pixmap::Pixmap, fileName: *const ::qt_core::string::String) -> bool;
  pub fn qt_gui_c_QPixmap_save_fileName_format(this_ptr: *const ::pixmap::Pixmap, fileName: *const ::qt_core::string::String, format: *const ::libc::c_char) -> bool;
  pub fn qt_gui_c_QPixmap_save_fileName_format_quality(this_ptr: *const ::pixmap::Pixmap, fileName: *const ::qt_core::string::String, format: *const ::libc::c_char, quality: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QPixmap_scaledToHeight_as_ptr_h(this_ptr: *const ::pixmap::Pixmap, h: ::libc::c_int) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_scaledToHeight_as_ptr_h_mode(this_ptr: *const ::pixmap::Pixmap, h: ::libc::c_int, mode: *const ::qt_core::qt::TransformationMode) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_scaledToWidth_as_ptr_w(this_ptr: *const ::pixmap::Pixmap, w: ::libc::c_int) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_scaledToWidth_as_ptr_w_mode(this_ptr: *const ::pixmap::Pixmap, w: ::libc::c_int, mode: *const ::qt_core::qt::TransformationMode) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_scaled_as_ptr_s(this_ptr: *const ::pixmap::Pixmap, s: *const ::qt_core::size::Size) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_scaled_as_ptr_s_aspectMode(this_ptr: *const ::pixmap::Pixmap, s: *const ::qt_core::size::Size, aspectMode: *const ::qt_core::qt::AspectRatioMode) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_scaled_as_ptr_s_aspectMode_mode(this_ptr: *const ::pixmap::Pixmap, s: *const ::qt_core::size::Size, aspectMode: *const ::qt_core::qt::AspectRatioMode, mode: *const ::qt_core::qt::TransformationMode) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_scaled_as_ptr_w_h(this_ptr: *const ::pixmap::Pixmap, w: ::libc::c_int, h: ::libc::c_int) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_scaled_as_ptr_w_h_aspectMode(this_ptr: *const ::pixmap::Pixmap, w: ::libc::c_int, h: ::libc::c_int, aspectMode: *const ::qt_core::qt::AspectRatioMode) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_scaled_as_ptr_w_h_aspectMode_mode(this_ptr: *const ::pixmap::Pixmap, w: ::libc::c_int, h: ::libc::c_int, aspectMode: *const ::qt_core::qt::AspectRatioMode, mode: *const ::qt_core::qt::TransformationMode) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_scroll_dx_dy_rect(this_ptr: *mut ::pixmap::Pixmap, dx: ::libc::c_int, dy: ::libc::c_int, rect: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPixmap_scroll_dx_dy_rect_exposed(this_ptr: *mut ::pixmap::Pixmap, dx: ::libc::c_int, dy: ::libc::c_int, rect: *const ::qt_core::rect::Rect, exposed: *mut ::region::Region);
  pub fn qt_gui_c_QPixmap_scroll_dx_dy_x_y_width_height(this_ptr: *mut ::pixmap::Pixmap, dx: ::libc::c_int, dy: ::libc::c_int, x: ::libc::c_int, y: ::libc::c_int, width: ::libc::c_int, height: ::libc::c_int);
  pub fn qt_gui_c_QPixmap_scroll_dx_dy_x_y_width_height_exposed(this_ptr: *mut ::pixmap::Pixmap, dx: ::libc::c_int, dy: ::libc::c_int, x: ::libc::c_int, y: ::libc::c_int, width: ::libc::c_int, height: ::libc::c_int, exposed: *mut ::region::Region);
  pub fn qt_gui_c_QPixmap_setDevicePixelRatio(this_ptr: *mut ::pixmap::Pixmap, scaleFactor: ::libc::c_double);
  pub fn qt_gui_c_QPixmap_setMask(this_ptr: *mut ::pixmap::Pixmap, arg1: *const ::bitmap::Bitmap);
  pub fn qt_gui_c_QPixmap_size_to_output(this_ptr: *const ::pixmap::Pixmap, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QPixmap_swap(this_ptr: *mut ::pixmap::Pixmap, other: *mut ::pixmap::Pixmap);
  pub fn qt_gui_c_QPixmap_toImage_as_ptr(this_ptr: *const ::pixmap::Pixmap) -> *mut ::image::Image;
  pub fn qt_gui_c_QPixmap_transformed_as_ptr_QMatrix(this_ptr: *const ::pixmap::Pixmap, arg1: *const ::matrix::Matrix) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_transformed_as_ptr_QMatrix_Qt_TransformationMode(this_ptr: *const ::pixmap::Pixmap, arg1: *const ::matrix::Matrix, mode: *const ::qt_core::qt::TransformationMode) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_transformed_as_ptr_QTransform(this_ptr: *const ::pixmap::Pixmap, arg1: *const ::transform::Transform) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_transformed_as_ptr_QTransform_Qt_TransformationMode(this_ptr: *const ::pixmap::Pixmap, arg1: *const ::transform::Transform, mode: *const ::qt_core::qt::TransformationMode) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmap_trueMatrix_to_output_QMatrix_int_int(m: *const ::matrix::Matrix, w: ::libc::c_int, h: ::libc::c_int, output: *mut ::matrix::Matrix);
  pub fn qt_gui_c_QPixmap_trueMatrix_to_output_QTransform_int_int(m: *const ::transform::Transform, w: ::libc::c_int, h: ::libc::c_int, output: *mut ::transform::Transform);
  pub fn qt_gui_c_QPixmap_width(this_ptr: *const ::pixmap::Pixmap) -> ::libc::c_int;

  // Header: QPixmapCache
  pub fn qt_gui_c_QPixmapCache_G_swap(value1: *mut ::pixmap_cache::Key, value2: *mut ::pixmap_cache::Key);
  pub fn qt_gui_c_QPixmapCache_Key_constructor_no_args(output: *mut ::pixmap_cache::Key);
  pub fn qt_gui_c_QPixmapCache_Key_constructor_other(other: *const ::pixmap_cache::Key, output: *mut ::pixmap_cache::Key);
  pub fn qt_gui_c_QPixmapCache_Key_destructor(this_ptr: *mut ::pixmap_cache::Key);
  pub fn qt_gui_c_QPixmapCache_Key_isValid(this_ptr: *const ::pixmap_cache::Key) -> bool;
  pub fn qt_gui_c_QPixmapCache_Key_operator_assign(this_ptr: *mut ::pixmap_cache::Key, other: *const ::pixmap_cache::Key) -> *mut ::pixmap_cache::Key;
  pub fn qt_gui_c_QPixmapCache_Key_operator_eq(this_ptr: *const ::pixmap_cache::Key, key: *const ::pixmap_cache::Key) -> bool;
  pub fn qt_gui_c_QPixmapCache_Key_operator_neq(this_ptr: *const ::pixmap_cache::Key, key: *const ::pixmap_cache::Key) -> bool;
  pub fn qt_gui_c_QPixmapCache_Key_swap(this_ptr: *mut ::pixmap_cache::Key, other: *mut ::pixmap_cache::Key);
  pub fn qt_gui_c_QPixmapCache_cacheLimit() -> ::libc::c_int;
  pub fn qt_gui_c_QPixmapCache_clear();
  pub fn qt_gui_c_QPixmapCache_delete(this_ptr: *mut ::pixmap_cache::PixmapCache);
  pub fn qt_gui_c_QPixmapCache_find_const_QPixmapCache_Key_ref_QPixmap_ptr(key: *const ::pixmap_cache::Key, pixmap: *mut ::pixmap::Pixmap) -> bool;
  pub fn qt_gui_c_QPixmapCache_find_const_QString_ref(key: *const ::qt_core::string::String) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QPixmapCache_find_const_QString_ref_QPixmap_ptr(key: *const ::qt_core::string::String, pixmap: *mut ::pixmap::Pixmap) -> bool;
  pub fn qt_gui_c_QPixmapCache_find_const_QString_ref_QPixmap_ref(key: *const ::qt_core::string::String, pixmap: *mut ::pixmap::Pixmap) -> bool;
  pub fn qt_gui_c_QPixmapCache_insert(key: *const ::qt_core::string::String, pixmap: *const ::pixmap::Pixmap) -> bool;
  pub fn qt_gui_c_QPixmapCache_insert_to_output(pixmap: *const ::pixmap::Pixmap, output: *mut ::pixmap_cache::Key);
  pub fn qt_gui_c_QPixmapCache_remove_QPixmapCache_Key(key: *const ::pixmap_cache::Key);
  pub fn qt_gui_c_QPixmapCache_remove_QString(key: *const ::qt_core::string::String);
  pub fn qt_gui_c_QPixmapCache_replace(key: *const ::pixmap_cache::Key, pixmap: *const ::pixmap::Pixmap) -> bool;
  pub fn qt_gui_c_QPixmapCache_setCacheLimit(arg1: ::libc::c_int);

  // Header: QPlatformSurfaceEvent
  pub fn qt_gui_c_QPlatformSurfaceEvent_G_static_cast_QEvent_ptr(ptr: *mut ::platform_surface_event::PlatformSurfaceEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QPlatformSurfaceEvent_G_static_cast_QPlatformSurfaceEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::platform_surface_event::PlatformSurfaceEvent;
  pub fn qt_gui_c_QPlatformSurfaceEvent_delete(this_ptr: *mut ::platform_surface_event::PlatformSurfaceEvent);
  pub fn qt_gui_c_QPlatformSurfaceEvent_new(surfaceEventType: ::platform_surface_event::SurfaceEventType) -> *mut ::platform_surface_event::PlatformSurfaceEvent;
  pub fn qt_gui_c_QPlatformSurfaceEvent_surfaceEventType(this_ptr: *const ::platform_surface_event::PlatformSurfaceEvent) -> ::platform_surface_event::SurfaceEventType;

  // Header: QPointingDeviceUniqueId
  pub fn qt_gui_c_QPointingDeviceUniqueId_constructor(output: *mut ::pointing_device_unique_id::PointingDeviceUniqueId);
  pub fn qt_gui_c_QPointingDeviceUniqueId_destructor(this_ptr: *mut ::pointing_device_unique_id::PointingDeviceUniqueId);
  pub fn qt_gui_c_QPointingDeviceUniqueId_fromNumericId_to_output(id: i64, output: *mut ::pointing_device_unique_id::PointingDeviceUniqueId);
  pub fn qt_gui_c_QPointingDeviceUniqueId_isValid(this_ptr: *const ::pointing_device_unique_id::PointingDeviceUniqueId) -> bool;
  pub fn qt_gui_c_QPointingDeviceUniqueId_numericId(this_ptr: *const ::pointing_device_unique_id::PointingDeviceUniqueId) -> i64;

  // Header: QPolygon
  pub fn qt_gui_c_QPolygon_G_operator_shl_stream_array(stream: *mut ::qt_core::data_stream::DataStream, array: *const ::polygon_f::PolygonF) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QPolygon_G_operator_shl_stream_polygon(stream: *mut ::qt_core::data_stream::DataStream, polygon: *const ::polygon::Polygon) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QPolygon_G_operator_shl_to_output_QDebug_QPolygon(arg1: *const ::qt_core::debug::Debug, arg2: *const ::polygon::Polygon, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QPolygon_G_operator_shl_to_output_QDebug_QPolygonF(arg1: *const ::qt_core::debug::Debug, arg2: *const ::polygon_f::PolygonF, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QPolygon_G_operator_shr_stream_array(stream: *mut ::qt_core::data_stream::DataStream, array: *mut ::polygon_f::PolygonF) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QPolygon_G_operator_shr_stream_polygon(stream: *mut ::qt_core::data_stream::DataStream, polygon: *mut ::polygon::Polygon) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QPolygon_G_static_cast_QPolygon_ptr(ptr: *mut ::vector::VectorQtCorePoint) -> *mut ::polygon::Polygon;
  pub fn qt_gui_c_QPolygon_G_static_cast_QVector_QPoint_ptr(ptr: *mut ::polygon::Polygon) -> *mut ::vector::VectorQtCorePoint;
  pub fn qt_gui_c_QPolygon_G_swap_QPolygonF_QPolygonF(value1: *mut ::polygon_f::PolygonF, value2: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QPolygon_G_swap_QPolygon_QPolygon(value1: *mut ::polygon::Polygon, value2: *mut ::polygon::Polygon);
  pub fn qt_gui_c_QPolygon_boundingRect_to_output(this_ptr: *const ::polygon::Polygon, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QPolygon_constructor_nPoints_points(nPoints: ::libc::c_int, points: *const ::libc::c_int, output: *mut ::polygon::Polygon);
  pub fn qt_gui_c_QPolygon_constructor_no_args(output: *mut ::polygon::Polygon);
  pub fn qt_gui_c_QPolygon_constructor_other(other: *const ::polygon::Polygon, output: *mut ::polygon::Polygon);
  pub fn qt_gui_c_QPolygon_constructor_r(r: *const ::qt_core::rect::Rect, output: *mut ::polygon::Polygon);
  pub fn qt_gui_c_QPolygon_constructor_r_closed(r: *const ::qt_core::rect::Rect, closed: bool, output: *mut ::polygon::Polygon);
  pub fn qt_gui_c_QPolygon_constructor_size(size: ::libc::c_int, output: *mut ::polygon::Polygon);
  pub fn qt_gui_c_QPolygon_constructor_v(v: *const ::vector::VectorQtCorePoint, output: *mut ::polygon::Polygon);
  pub fn qt_gui_c_QPolygon_containsPoint(this_ptr: *const ::polygon::Polygon, pt: *const ::qt_core::point::Point, fillRule: *const ::qt_core::qt::FillRule) -> bool;
  pub fn qt_gui_c_QPolygon_convert_to_QVariant_to_output(this_ptr: *const ::polygon::Polygon, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QPolygon_destructor(this_ptr: *mut ::polygon::Polygon);
  pub fn qt_gui_c_QPolygon_intersected_to_output(this_ptr: *const ::polygon::Polygon, r: *const ::polygon::Polygon, output: *mut ::polygon::Polygon);
  pub fn qt_gui_c_QPolygon_operator_assign(this_ptr: *mut ::polygon::Polygon, other: *const ::polygon::Polygon) -> *mut ::polygon::Polygon;
  pub fn qt_gui_c_QPolygon_point(this_ptr: *const ::polygon::Polygon, i: ::libc::c_int, x: *mut ::libc::c_int, y: *mut ::libc::c_int);
  pub fn qt_gui_c_QPolygon_point_to_output(this_ptr: *const ::polygon::Polygon, i: ::libc::c_int, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QPolygon_putPoints_index_nPoints_from(this_ptr: *mut ::polygon::Polygon, index: ::libc::c_int, nPoints: ::libc::c_int, from: *const ::polygon::Polygon);
  pub fn qt_gui_c_QPolygon_putPoints_index_nPoints_from_fromIndex(this_ptr: *mut ::polygon::Polygon, index: ::libc::c_int, nPoints: ::libc::c_int, from: *const ::polygon::Polygon, fromIndex: ::libc::c_int);
  pub fn qt_gui_c_QPolygon_putPoints_index_nPoints_points(this_ptr: *mut ::polygon::Polygon, index: ::libc::c_int, nPoints: ::libc::c_int, points: *const ::libc::c_int);
  pub fn qt_gui_c_QPolygon_setPoint_index_p(this_ptr: *mut ::polygon::Polygon, index: ::libc::c_int, p: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QPolygon_setPoint_index_x_y(this_ptr: *mut ::polygon::Polygon, index: ::libc::c_int, x: ::libc::c_int, y: ::libc::c_int);
  pub fn qt_gui_c_QPolygon_setPoints(this_ptr: *mut ::polygon::Polygon, nPoints: ::libc::c_int, points: *const ::libc::c_int);
  pub fn qt_gui_c_QPolygon_subtracted_to_output(this_ptr: *const ::polygon::Polygon, r: *const ::polygon::Polygon, output: *mut ::polygon::Polygon);
  pub fn qt_gui_c_QPolygon_swap(this_ptr: *mut ::polygon::Polygon, other: *mut ::polygon::Polygon);
  pub fn qt_gui_c_QPolygon_translate_dx_dy(this_ptr: *mut ::polygon::Polygon, dx: ::libc::c_int, dy: ::libc::c_int);
  pub fn qt_gui_c_QPolygon_translate_offset(this_ptr: *mut ::polygon::Polygon, offset: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QPolygon_translated_to_output_dx_dy(this_ptr: *const ::polygon::Polygon, dx: ::libc::c_int, dy: ::libc::c_int, output: *mut ::polygon::Polygon);
  pub fn qt_gui_c_QPolygon_translated_to_output_offset(this_ptr: *const ::polygon::Polygon, offset: *const ::qt_core::point::Point, output: *mut ::polygon::Polygon);
  pub fn qt_gui_c_QPolygon_united_to_output(this_ptr: *const ::polygon::Polygon, r: *const ::polygon::Polygon, output: *mut ::polygon::Polygon);

  // Header: QPolygonF
  pub fn qt_gui_c_QPolygonF_G_static_cast_QPolygonF_ptr(ptr: *mut ::qt_core::vector::VectorPointF) -> *mut ::polygon_f::PolygonF;
  pub fn qt_gui_c_QPolygonF_G_static_cast_QVector_QPointF_ptr(ptr: *mut ::polygon_f::PolygonF) -> *mut ::qt_core::vector::VectorPointF;
  pub fn qt_gui_c_QPolygonF_boundingRect_to_output(this_ptr: *const ::polygon_f::PolygonF, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QPolygonF_constructor_QPolygon(a: *const ::polygon::Polygon, output: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QPolygonF_constructor_QPolygonF(a: *const ::polygon_f::PolygonF, output: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QPolygonF_constructor_QRectF(r: *const ::qt_core::rect_f::RectF, output: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QPolygonF_constructor_QVector_QPointF(v: *const ::qt_core::vector::VectorPointF, output: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QPolygonF_constructor_int(size: ::libc::c_int, output: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QPolygonF_constructor_no_args(output: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QPolygonF_containsPoint(this_ptr: *const ::polygon_f::PolygonF, pt: *const ::qt_core::point_f::PointF, fillRule: *const ::qt_core::qt::FillRule) -> bool;
  pub fn qt_gui_c_QPolygonF_convert_to_QVariant_to_output(this_ptr: *const ::polygon_f::PolygonF, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QPolygonF_destructor(this_ptr: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QPolygonF_intersected_to_output(this_ptr: *const ::polygon_f::PolygonF, r: *const ::polygon_f::PolygonF, output: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QPolygonF_isClosed(this_ptr: *const ::polygon_f::PolygonF) -> bool;
  pub fn qt_gui_c_QPolygonF_operator_assign(this_ptr: *mut ::polygon_f::PolygonF, other: *const ::polygon_f::PolygonF) -> *mut ::polygon_f::PolygonF;
  pub fn qt_gui_c_QPolygonF_subtracted_to_output(this_ptr: *const ::polygon_f::PolygonF, r: *const ::polygon_f::PolygonF, output: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QPolygonF_swap(this_ptr: *mut ::polygon_f::PolygonF, other: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QPolygonF_toPolygon_to_output(this_ptr: *const ::polygon_f::PolygonF, output: *mut ::polygon::Polygon);
  pub fn qt_gui_c_QPolygonF_translate_dx_dy(this_ptr: *mut ::polygon_f::PolygonF, dx: ::libc::c_double, dy: ::libc::c_double);
  pub fn qt_gui_c_QPolygonF_translate_offset(this_ptr: *mut ::polygon_f::PolygonF, offset: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QPolygonF_translated_to_output_dx_dy(this_ptr: *const ::polygon_f::PolygonF, dx: ::libc::c_double, dy: ::libc::c_double, output: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QPolygonF_translated_to_output_offset(this_ptr: *const ::polygon_f::PolygonF, offset: *const ::qt_core::point_f::PointF, output: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QPolygonF_united_to_output(this_ptr: *const ::polygon_f::PolygonF, r: *const ::polygon_f::PolygonF, output: *mut ::polygon_f::PolygonF);

  // Header: QQuaternion
  pub fn qt_gui_c_QQuaternion_G_operator_mul_as_ptr(quaternion: *const ::quaternion::Quaternion, vec: *const ::vector_3d::Vector3D) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QQuaternion_G_operator_shl(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *const ::quaternion::Quaternion) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QQuaternion_G_operator_shl_to_output(dbg: *const ::qt_core::debug::Debug, q: *const ::quaternion::Quaternion, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QQuaternion_G_operator_shr(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *mut ::quaternion::Quaternion) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QQuaternion_conjugate_to_output(this_ptr: *const ::quaternion::Quaternion, output: *mut ::quaternion::Quaternion);
  pub fn qt_gui_c_QQuaternion_conjugated_to_output(this_ptr: *const ::quaternion::Quaternion, output: *mut ::quaternion::Quaternion);
  pub fn qt_gui_c_QQuaternion_constructor_no_args(output: *mut ::quaternion::Quaternion);
  pub fn qt_gui_c_QQuaternion_constructor_scalar_vector(scalar: ::libc::c_float, vector: *const ::vector_3d::Vector3D, output: *mut ::quaternion::Quaternion);
  pub fn qt_gui_c_QQuaternion_constructor_scalar_xpos_ypos_zpos(scalar: ::libc::c_float, xpos: ::libc::c_float, ypos: ::libc::c_float, zpos: ::libc::c_float, output: *mut ::quaternion::Quaternion);
  pub fn qt_gui_c_QQuaternion_constructor_vector(vector: *const ::vector_4d::Vector4D, output: *mut ::quaternion::Quaternion);
  pub fn qt_gui_c_QQuaternion_convert_to_QVariant_to_output(this_ptr: *const ::quaternion::Quaternion, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QQuaternion_destructor(this_ptr: *mut ::quaternion::Quaternion);
  pub fn qt_gui_c_QQuaternion_dotProduct(q1: *const ::quaternion::Quaternion, q2: *const ::quaternion::Quaternion) -> ::libc::c_float;
  pub fn qt_gui_c_QQuaternion_fromAxes_to_output(xAxis: *const ::vector_3d::Vector3D, yAxis: *const ::vector_3d::Vector3D, zAxis: *const ::vector_3d::Vector3D, output: *mut ::quaternion::Quaternion);
  pub fn qt_gui_c_QQuaternion_fromAxisAndAngle_to_output_axis_angle(axis: *const ::vector_3d::Vector3D, angle: ::libc::c_float, output: *mut ::quaternion::Quaternion);
  pub fn qt_gui_c_QQuaternion_fromAxisAndAngle_to_output_x_y_z_angle(x: ::libc::c_float, y: ::libc::c_float, z: ::libc::c_float, angle: ::libc::c_float, output: *mut ::quaternion::Quaternion);
  pub fn qt_gui_c_QQuaternion_fromDirection_to_output(direction: *const ::vector_3d::Vector3D, up: *const ::vector_3d::Vector3D, output: *mut ::quaternion::Quaternion);
  pub fn qt_gui_c_QQuaternion_fromEulerAngles_to_output_eulerAngles(eulerAngles: *const ::vector_3d::Vector3D, output: *mut ::quaternion::Quaternion);
  pub fn qt_gui_c_QQuaternion_fromEulerAngles_to_output_pitch_yaw_roll(pitch: ::libc::c_float, yaw: ::libc::c_float, roll: ::libc::c_float, output: *mut ::quaternion::Quaternion);
  pub fn qt_gui_c_QQuaternion_getAxes(this_ptr: *const ::quaternion::Quaternion, xAxis: *mut ::vector_3d::Vector3D, yAxis: *mut ::vector_3d::Vector3D, zAxis: *mut ::vector_3d::Vector3D);
  pub fn qt_gui_c_QQuaternion_getAxisAndAngle_axis_angle(this_ptr: *const ::quaternion::Quaternion, axis: *mut ::vector_3d::Vector3D, angle: *mut ::libc::c_float);
  pub fn qt_gui_c_QQuaternion_getAxisAndAngle_x_y_z_angle(this_ptr: *const ::quaternion::Quaternion, x: *mut ::libc::c_float, y: *mut ::libc::c_float, z: *mut ::libc::c_float, angle: *mut ::libc::c_float);
  pub fn qt_gui_c_QQuaternion_getEulerAngles(this_ptr: *const ::quaternion::Quaternion, pitch: *mut ::libc::c_float, yaw: *mut ::libc::c_float, roll: *mut ::libc::c_float);
  pub fn qt_gui_c_QQuaternion_inverted_to_output(this_ptr: *const ::quaternion::Quaternion, output: *mut ::quaternion::Quaternion);
  pub fn qt_gui_c_QQuaternion_isIdentity(this_ptr: *const ::quaternion::Quaternion) -> bool;
  pub fn qt_gui_c_QQuaternion_isNull(this_ptr: *const ::quaternion::Quaternion) -> bool;
  pub fn qt_gui_c_QQuaternion_length(this_ptr: *const ::quaternion::Quaternion) -> ::libc::c_float;
  pub fn qt_gui_c_QQuaternion_lengthSquared(this_ptr: *const ::quaternion::Quaternion) -> ::libc::c_float;
  pub fn qt_gui_c_QQuaternion_nlerp_to_output(q1: *const ::quaternion::Quaternion, q2: *const ::quaternion::Quaternion, t: ::libc::c_float, output: *mut ::quaternion::Quaternion);
  pub fn qt_gui_c_QQuaternion_normalize(this_ptr: *mut ::quaternion::Quaternion);
  pub fn qt_gui_c_QQuaternion_normalized_to_output(this_ptr: *const ::quaternion::Quaternion, output: *mut ::quaternion::Quaternion);
  pub fn qt_gui_c_QQuaternion_operator_add_assign(this_ptr: *mut ::quaternion::Quaternion, quaternion: *const ::quaternion::Quaternion) -> *mut ::quaternion::Quaternion;
  pub fn qt_gui_c_QQuaternion_operator_div_assign(this_ptr: *mut ::quaternion::Quaternion, divisor: ::libc::c_float) -> *mut ::quaternion::Quaternion;
  pub fn qt_gui_c_QQuaternion_operator_mul_assign_factor(this_ptr: *mut ::quaternion::Quaternion, factor: ::libc::c_float) -> *mut ::quaternion::Quaternion;
  pub fn qt_gui_c_QQuaternion_operator_mul_assign_quaternion(this_ptr: *mut ::quaternion::Quaternion, quaternion: *const ::quaternion::Quaternion) -> *mut ::quaternion::Quaternion;
  pub fn qt_gui_c_QQuaternion_operator_sub_assign(this_ptr: *mut ::quaternion::Quaternion, quaternion: *const ::quaternion::Quaternion) -> *mut ::quaternion::Quaternion;
  pub fn qt_gui_c_QQuaternion_rotatedVector_as_ptr(this_ptr: *const ::quaternion::Quaternion, vector: *const ::vector_3d::Vector3D) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QQuaternion_rotationTo_to_output(from: *const ::vector_3d::Vector3D, to: *const ::vector_3d::Vector3D, output: *mut ::quaternion::Quaternion);
  pub fn qt_gui_c_QQuaternion_scalar(this_ptr: *const ::quaternion::Quaternion) -> ::libc::c_float;
  pub fn qt_gui_c_QQuaternion_setScalar(this_ptr: *mut ::quaternion::Quaternion, scalar: ::libc::c_float);
  pub fn qt_gui_c_QQuaternion_setVector_vector(this_ptr: *mut ::quaternion::Quaternion, vector: *const ::vector_3d::Vector3D);
  pub fn qt_gui_c_QQuaternion_setVector_x_y_z(this_ptr: *mut ::quaternion::Quaternion, x: ::libc::c_float, y: ::libc::c_float, z: ::libc::c_float);
  pub fn qt_gui_c_QQuaternion_setX(this_ptr: *mut ::quaternion::Quaternion, x: ::libc::c_float);
  pub fn qt_gui_c_QQuaternion_setY(this_ptr: *mut ::quaternion::Quaternion, y: ::libc::c_float);
  pub fn qt_gui_c_QQuaternion_setZ(this_ptr: *mut ::quaternion::Quaternion, z: ::libc::c_float);
  pub fn qt_gui_c_QQuaternion_slerp_to_output(q1: *const ::quaternion::Quaternion, q2: *const ::quaternion::Quaternion, t: ::libc::c_float, output: *mut ::quaternion::Quaternion);
  pub fn qt_gui_c_QQuaternion_toEulerAngles_as_ptr(this_ptr: *const ::quaternion::Quaternion) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QQuaternion_toVector4D_as_ptr(this_ptr: *const ::quaternion::Quaternion) -> *mut ::vector_4d::Vector4D;
  pub fn qt_gui_c_QQuaternion_vector_as_ptr(this_ptr: *const ::quaternion::Quaternion) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QQuaternion_x(this_ptr: *const ::quaternion::Quaternion) -> ::libc::c_float;
  pub fn qt_gui_c_QQuaternion_y(this_ptr: *const ::quaternion::Quaternion) -> ::libc::c_float;
  pub fn qt_gui_c_QQuaternion_z(this_ptr: *const ::quaternion::Quaternion) -> ::libc::c_float;

  // Header: QRadialGradient
  pub fn qt_gui_c_QRadialGradient_G_static_cast_QGradient_ptr(ptr: *mut ::radial_gradient::RadialGradient) -> *mut ::gradient::Gradient;
  pub fn qt_gui_c_QRadialGradient_G_static_cast_QRadialGradient_ptr(ptr: *mut ::gradient::Gradient) -> *mut ::radial_gradient::RadialGradient;
  pub fn qt_gui_c_QRadialGradient_centerRadius(this_ptr: *const ::radial_gradient::RadialGradient) -> ::libc::c_double;
  pub fn qt_gui_c_QRadialGradient_center_to_output(this_ptr: *const ::radial_gradient::RadialGradient, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QRadialGradient_delete(this_ptr: *mut ::radial_gradient::RadialGradient);
  pub fn qt_gui_c_QRadialGradient_focalPoint_to_output(this_ptr: *const ::radial_gradient::RadialGradient, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QRadialGradient_focalRadius(this_ptr: *const ::radial_gradient::RadialGradient) -> ::libc::c_double;
  pub fn qt_gui_c_QRadialGradient_new_center_centerRadius_focalPoint_focalRadius(center: *const ::qt_core::point_f::PointF, centerRadius: ::libc::c_double, focalPoint: *const ::qt_core::point_f::PointF, focalRadius: ::libc::c_double) -> *mut ::radial_gradient::RadialGradient;
  pub fn qt_gui_c_QRadialGradient_new_center_radius(center: *const ::qt_core::point_f::PointF, radius: ::libc::c_double) -> *mut ::radial_gradient::RadialGradient;
  pub fn qt_gui_c_QRadialGradient_new_center_radius_focalPoint(center: *const ::qt_core::point_f::PointF, radius: ::libc::c_double, focalPoint: *const ::qt_core::point_f::PointF) -> *mut ::radial_gradient::RadialGradient;
  pub fn qt_gui_c_QRadialGradient_new_cx_cy_centerRadius_fx_fy_focalRadius(cx: ::libc::c_double, cy: ::libc::c_double, centerRadius: ::libc::c_double, fx: ::libc::c_double, fy: ::libc::c_double, focalRadius: ::libc::c_double) -> *mut ::radial_gradient::RadialGradient;
  pub fn qt_gui_c_QRadialGradient_new_cx_cy_radius(cx: ::libc::c_double, cy: ::libc::c_double, radius: ::libc::c_double) -> *mut ::radial_gradient::RadialGradient;
  pub fn qt_gui_c_QRadialGradient_new_cx_cy_radius_fx_fy(cx: ::libc::c_double, cy: ::libc::c_double, radius: ::libc::c_double, fx: ::libc::c_double, fy: ::libc::c_double) -> *mut ::radial_gradient::RadialGradient;
  pub fn qt_gui_c_QRadialGradient_new_no_args() -> *mut ::radial_gradient::RadialGradient;
  pub fn qt_gui_c_QRadialGradient_radius(this_ptr: *const ::radial_gradient::RadialGradient) -> ::libc::c_double;
  pub fn qt_gui_c_QRadialGradient_setCenterRadius(this_ptr: *mut ::radial_gradient::RadialGradient, radius: ::libc::c_double);
  pub fn qt_gui_c_QRadialGradient_setCenter_center(this_ptr: *mut ::radial_gradient::RadialGradient, center: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QRadialGradient_setCenter_x_y(this_ptr: *mut ::radial_gradient::RadialGradient, x: ::libc::c_double, y: ::libc::c_double);
  pub fn qt_gui_c_QRadialGradient_setFocalPoint_focalPoint(this_ptr: *mut ::radial_gradient::RadialGradient, focalPoint: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QRadialGradient_setFocalPoint_x_y(this_ptr: *mut ::radial_gradient::RadialGradient, x: ::libc::c_double, y: ::libc::c_double);
  pub fn qt_gui_c_QRadialGradient_setFocalRadius(this_ptr: *mut ::radial_gradient::RadialGradient, radius: ::libc::c_double);
  pub fn qt_gui_c_QRadialGradient_setRadius(this_ptr: *mut ::radial_gradient::RadialGradient, radius: ::libc::c_double);

  // Header: QRasterWindow
  pub fn qt_gui_c_QRasterWindow_G_dynamic_cast_QRasterWindow_ptr_QPaintDevice(ptr: *mut ::paint_device::PaintDevice) -> *mut ::raster_window::RasterWindow;
  pub fn qt_gui_c_QRasterWindow_G_dynamic_cast_QRasterWindow_ptr_QPaintDeviceWindow(ptr: *mut ::paint_device_window::PaintDeviceWindow) -> *mut ::raster_window::RasterWindow;
  pub fn qt_gui_c_QRasterWindow_G_dynamic_cast_QRasterWindow_ptr_QSurface(ptr: *mut ::surface::Surface) -> *mut ::raster_window::RasterWindow;
  pub fn qt_gui_c_QRasterWindow_G_dynamic_cast_QRasterWindow_ptr_QWindow(ptr: *mut ::window::Window) -> *mut ::raster_window::RasterWindow;
  pub fn qt_gui_c_QRasterWindow_G_static_cast_QObject_ptr(ptr: *mut ::raster_window::RasterWindow) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QRasterWindow_G_static_cast_QPaintDeviceWindow_ptr(ptr: *mut ::raster_window::RasterWindow) -> *mut ::paint_device_window::PaintDeviceWindow;
  pub fn qt_gui_c_QRasterWindow_G_static_cast_QPaintDevice_ptr(ptr: *mut ::raster_window::RasterWindow) -> *mut ::paint_device::PaintDevice;
  pub fn qt_gui_c_QRasterWindow_G_static_cast_QRasterWindow_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::raster_window::RasterWindow;
  pub fn qt_gui_c_QRasterWindow_G_static_cast_QRasterWindow_ptr_QPaintDevice(ptr: *mut ::paint_device::PaintDevice) -> *mut ::raster_window::RasterWindow;
  pub fn qt_gui_c_QRasterWindow_G_static_cast_QRasterWindow_ptr_QPaintDeviceWindow(ptr: *mut ::paint_device_window::PaintDeviceWindow) -> *mut ::raster_window::RasterWindow;
  pub fn qt_gui_c_QRasterWindow_G_static_cast_QRasterWindow_ptr_QSurface(ptr: *mut ::surface::Surface) -> *mut ::raster_window::RasterWindow;
  pub fn qt_gui_c_QRasterWindow_G_static_cast_QRasterWindow_ptr_QWindow(ptr: *mut ::window::Window) -> *mut ::raster_window::RasterWindow;
  pub fn qt_gui_c_QRasterWindow_G_static_cast_QSurface_ptr(ptr: *mut ::raster_window::RasterWindow) -> *mut ::surface::Surface;
  pub fn qt_gui_c_QRasterWindow_G_static_cast_QWindow_ptr(ptr: *mut ::raster_window::RasterWindow) -> *mut ::window::Window;
  pub fn qt_gui_c_QRasterWindow_delete(this_ptr: *mut ::raster_window::RasterWindow);
  pub fn qt_gui_c_QRasterWindow_metaObject(this_ptr: *const ::raster_window::RasterWindow) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QRasterWindow_new_no_args() -> *mut ::raster_window::RasterWindow;
  pub fn qt_gui_c_QRasterWindow_new_parent(parent: *mut ::window::Window) -> *mut ::raster_window::RasterWindow;
  pub fn qt_gui_c_QRasterWindow_qt_metacall(this_ptr: *mut ::raster_window::RasterWindow, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QRasterWindow_qt_metacast(this_ptr: *mut ::raster_window::RasterWindow, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QRasterWindow_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QRasterWindow_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QRawFont
  pub fn qt_gui_c_QRawFont_G_qHash_font(font: *const ::raw_font::RawFont) -> ::libc::c_uint;
  pub fn qt_gui_c_QRawFont_G_qHash_font_seed(font: *const ::raw_font::RawFont, seed: ::libc::c_uint) -> ::libc::c_uint;
  pub fn qt_gui_c_QRawFont_G_swap(value1: *mut ::raw_font::RawFont, value2: *mut ::raw_font::RawFont);
  pub fn qt_gui_c_QRawFont_advancesForGlyphIndexes_glyphIndexes_advances_numGlyphs(this_ptr: *const ::raw_font::RawFont, glyphIndexes: *const u32, advances: *mut ::qt_core::point_f::PointF, numGlyphs: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QRawFont_advancesForGlyphIndexes_glyphIndexes_advances_numGlyphs_layoutFlags(this_ptr: *const ::raw_font::RawFont, glyphIndexes: *const u32, advances: *mut ::qt_core::point_f::PointF, numGlyphs: ::libc::c_int, layoutFlags: ::libc::c_uint) -> bool;
  pub fn qt_gui_c_QRawFont_advancesForGlyphIndexes_to_output_glyphIndexes(this_ptr: *const ::raw_font::RawFont, glyphIndexes: *const ::vector::VectorU32, output: *mut ::qt_core::vector::VectorPointF);
  pub fn qt_gui_c_QRawFont_advancesForGlyphIndexes_to_output_glyphIndexes_layoutFlags(this_ptr: *const ::raw_font::RawFont, glyphIndexes: *const ::vector::VectorU32, layoutFlags: ::libc::c_uint, output: *mut ::qt_core::vector::VectorPointF);
  pub fn qt_gui_c_QRawFont_alphaMapForGlyph_as_ptr_glyphIndex(this_ptr: *const ::raw_font::RawFont, glyphIndex: u32) -> *mut ::image::Image;
  pub fn qt_gui_c_QRawFont_alphaMapForGlyph_as_ptr_glyphIndex_antialiasingType(this_ptr: *const ::raw_font::RawFont, glyphIndex: u32, antialiasingType: ::raw_font::AntialiasingType) -> *mut ::image::Image;
  pub fn qt_gui_c_QRawFont_alphaMapForGlyph_as_ptr_glyphIndex_antialiasingType_transform(this_ptr: *const ::raw_font::RawFont, glyphIndex: u32, antialiasingType: ::raw_font::AntialiasingType, transform: *const ::transform::Transform) -> *mut ::image::Image;
  pub fn qt_gui_c_QRawFont_ascent(this_ptr: *const ::raw_font::RawFont) -> ::libc::c_double;
  pub fn qt_gui_c_QRawFont_averageCharWidth(this_ptr: *const ::raw_font::RawFont) -> ::libc::c_double;
  pub fn qt_gui_c_QRawFont_boundingRect_to_output(this_ptr: *const ::raw_font::RawFont, glyphIndex: u32, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QRawFont_capHeight(this_ptr: *const ::raw_font::RawFont) -> ::libc::c_double;
  pub fn qt_gui_c_QRawFont_constructor_fileName_pixelSize(fileName: *const ::qt_core::string::String, pixelSize: ::libc::c_double, output: *mut ::raw_font::RawFont);
  pub fn qt_gui_c_QRawFont_constructor_fileName_pixelSize_hintingPreference(fileName: *const ::qt_core::string::String, pixelSize: ::libc::c_double, hintingPreference: *const ::font::HintingPreference, output: *mut ::raw_font::RawFont);
  pub fn qt_gui_c_QRawFont_constructor_fontData_pixelSize(fontData: *const ::qt_core::byte_array::ByteArray, pixelSize: ::libc::c_double, output: *mut ::raw_font::RawFont);
  pub fn qt_gui_c_QRawFont_constructor_fontData_pixelSize_hintingPreference(fontData: *const ::qt_core::byte_array::ByteArray, pixelSize: ::libc::c_double, hintingPreference: *const ::font::HintingPreference, output: *mut ::raw_font::RawFont);
  pub fn qt_gui_c_QRawFont_constructor_no_args(output: *mut ::raw_font::RawFont);
  pub fn qt_gui_c_QRawFont_constructor_other(other: *const ::raw_font::RawFont, output: *mut ::raw_font::RawFont);
  pub fn qt_gui_c_QRawFont_descent(this_ptr: *const ::raw_font::RawFont) -> ::libc::c_double;
  pub fn qt_gui_c_QRawFont_destructor(this_ptr: *mut ::raw_font::RawFont);
  pub fn qt_gui_c_QRawFont_familyName_to_output(this_ptr: *const ::raw_font::RawFont, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QRawFont_fontTable_to_output(this_ptr: *const ::raw_font::RawFont, tagName: *const ::libc::c_char, output: *mut ::qt_core::byte_array::ByteArray);
  pub fn qt_gui_c_QRawFont_fromFont_to_output_font(font: *const ::font::Font, output: *mut ::raw_font::RawFont);
  pub fn qt_gui_c_QRawFont_fromFont_to_output_font_writingSystem(font: *const ::font::Font, writingSystem: *const ::font_database::WritingSystem, output: *mut ::raw_font::RawFont);
  pub fn qt_gui_c_QRawFont_glyphIndexesForChars(this_ptr: *const ::raw_font::RawFont, chars: *const ::qt_core::char::Char, numChars: ::libc::c_int, glyphIndexes: *mut u32, numGlyphs: *mut ::libc::c_int) -> bool;
  pub fn qt_gui_c_QRawFont_glyphIndexesForString_to_output(this_ptr: *const ::raw_font::RawFont, text: *const ::qt_core::string::String, output: *mut ::vector::VectorU32);
  pub fn qt_gui_c_QRawFont_isValid(this_ptr: *const ::raw_font::RawFont) -> bool;
  pub fn qt_gui_c_QRawFont_leading(this_ptr: *const ::raw_font::RawFont) -> ::libc::c_double;
  pub fn qt_gui_c_QRawFont_lineThickness(this_ptr: *const ::raw_font::RawFont) -> ::libc::c_double;
  pub fn qt_gui_c_QRawFont_loadFromData(this_ptr: *mut ::raw_font::RawFont, fontData: *const ::qt_core::byte_array::ByteArray, pixelSize: ::libc::c_double, hintingPreference: *const ::font::HintingPreference);
  pub fn qt_gui_c_QRawFont_loadFromFile(this_ptr: *mut ::raw_font::RawFont, fileName: *const ::qt_core::string::String, pixelSize: ::libc::c_double, hintingPreference: *const ::font::HintingPreference);
  pub fn qt_gui_c_QRawFont_maxCharWidth(this_ptr: *const ::raw_font::RawFont) -> ::libc::c_double;
  pub fn qt_gui_c_QRawFont_operator_assign(this_ptr: *mut ::raw_font::RawFont, other: *const ::raw_font::RawFont) -> *mut ::raw_font::RawFont;
  pub fn qt_gui_c_QRawFont_operator_eq(this_ptr: *const ::raw_font::RawFont, other: *const ::raw_font::RawFont) -> bool;
  pub fn qt_gui_c_QRawFont_operator_neq(this_ptr: *const ::raw_font::RawFont, other: *const ::raw_font::RawFont) -> bool;
  pub fn qt_gui_c_QRawFont_pathForGlyph_to_output(this_ptr: *const ::raw_font::RawFont, glyphIndex: u32, output: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QRawFont_pixelSize(this_ptr: *const ::raw_font::RawFont) -> ::libc::c_double;
  pub fn qt_gui_c_QRawFont_setPixelSize(this_ptr: *mut ::raw_font::RawFont, pixelSize: ::libc::c_double);
  pub fn qt_gui_c_QRawFont_styleName_to_output(this_ptr: *const ::raw_font::RawFont, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QRawFont_supportedWritingSystems_to_output(this_ptr: *const ::raw_font::RawFont, output: *mut ::list::ListFontDatabaseWritingSystem);
  pub fn qt_gui_c_QRawFont_supportsCharacter_character(this_ptr: *const ::raw_font::RawFont, character: *const ::qt_core::char::Char) -> bool;
  pub fn qt_gui_c_QRawFont_supportsCharacter_ucs4(this_ptr: *const ::raw_font::RawFont, ucs4: ::libc::c_uint) -> bool;
  pub fn qt_gui_c_QRawFont_swap(this_ptr: *mut ::raw_font::RawFont, other: *mut ::raw_font::RawFont);
  pub fn qt_gui_c_QRawFont_underlinePosition(this_ptr: *const ::raw_font::RawFont) -> ::libc::c_double;
  pub fn qt_gui_c_QRawFont_unitsPerEm(this_ptr: *const ::raw_font::RawFont) -> ::libc::c_double;
  pub fn qt_gui_c_QRawFont_weight(this_ptr: *const ::raw_font::RawFont) -> ::libc::c_int;
  pub fn qt_gui_c_QRawFont_xHeight(this_ptr: *const ::raw_font::RawFont) -> ::libc::c_double;

  // Header: QRegExpValidator
  pub fn qt_gui_c_QRegExpValidator_G_dynamic_cast_QRegExpValidator_ptr(ptr: *mut ::validator::Validator) -> *mut ::reg_exp_validator::RegExpValidator;
  pub fn qt_gui_c_QRegExpValidator_G_static_cast_QObject_ptr(ptr: *mut ::reg_exp_validator::RegExpValidator) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QRegExpValidator_G_static_cast_QRegExpValidator_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::reg_exp_validator::RegExpValidator;
  pub fn qt_gui_c_QRegExpValidator_G_static_cast_QRegExpValidator_ptr_QValidator(ptr: *mut ::validator::Validator) -> *mut ::reg_exp_validator::RegExpValidator;
  pub fn qt_gui_c_QRegExpValidator_G_static_cast_QValidator_ptr(ptr: *mut ::reg_exp_validator::RegExpValidator) -> *mut ::validator::Validator;
  pub fn qt_gui_c_QRegExpValidator_delete(this_ptr: *mut ::reg_exp_validator::RegExpValidator);
  pub fn qt_gui_c_QRegExpValidator_metaObject(this_ptr: *const ::reg_exp_validator::RegExpValidator) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QRegExpValidator_new_no_args() -> *mut ::reg_exp_validator::RegExpValidator;
  pub fn qt_gui_c_QRegExpValidator_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::reg_exp_validator::RegExpValidator;
  pub fn qt_gui_c_QRegExpValidator_new_rx(rx: *const ::qt_core::reg_exp::RegExp) -> *mut ::reg_exp_validator::RegExpValidator;
  pub fn qt_gui_c_QRegExpValidator_new_rx_parent(rx: *const ::qt_core::reg_exp::RegExp, parent: *mut ::qt_core::object::Object) -> *mut ::reg_exp_validator::RegExpValidator;
  pub fn qt_gui_c_QRegExpValidator_qt_metacall(this_ptr: *mut ::reg_exp_validator::RegExpValidator, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QRegExpValidator_qt_metacast(this_ptr: *mut ::reg_exp_validator::RegExpValidator, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QRegExpValidator_regExp(this_ptr: *const ::reg_exp_validator::RegExpValidator) -> *const ::qt_core::reg_exp::RegExp;
  pub fn qt_gui_c_QRegExpValidator_setRegExp(this_ptr: *mut ::reg_exp_validator::RegExpValidator, rx: *const ::qt_core::reg_exp::RegExp);
  pub fn qt_gui_c_QRegExpValidator_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QRegExpValidator_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QRegion
  pub fn qt_gui_c_QRegion_G_operator_shl_to_output(arg1: *const ::qt_core::debug::Debug, arg2: *const ::region::Region, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QRegion_G_swap(value1: *mut ::region::Region, value2: *mut ::region::Region);
  pub fn qt_gui_c_QRegion_begin(this_ptr: *const ::region::Region) -> *const ::qt_core::rect::Rect;
  pub fn qt_gui_c_QRegion_boundingRect_to_output(this_ptr: *const ::region::Region, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QRegion_cbegin(this_ptr: *const ::region::Region) -> *const ::qt_core::rect::Rect;
  pub fn qt_gui_c_QRegion_cend(this_ptr: *const ::region::Region) -> *const ::qt_core::rect::Rect;
  pub fn qt_gui_c_QRegion_contains_p(this_ptr: *const ::region::Region, p: *const ::qt_core::point::Point) -> bool;
  pub fn qt_gui_c_QRegion_contains_r(this_ptr: *const ::region::Region, r: *const ::qt_core::rect::Rect) -> bool;
  pub fn qt_gui_c_QRegion_convert_to_QVariant_to_output(this_ptr: *const ::region::Region, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QRegion_delete(this_ptr: *mut ::region::Region);
  pub fn qt_gui_c_QRegion_end(this_ptr: *const ::region::Region) -> *const ::qt_core::rect::Rect;
  pub fn qt_gui_c_QRegion_intersected_as_ptr_QRect(this_ptr: *const ::region::Region, r: *const ::qt_core::rect::Rect) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_intersected_as_ptr_QRegion(this_ptr: *const ::region::Region, r: *const ::region::Region) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_intersects_QRect(this_ptr: *const ::region::Region, r: *const ::qt_core::rect::Rect) -> bool;
  pub fn qt_gui_c_QRegion_intersects_QRegion(this_ptr: *const ::region::Region, r: *const ::region::Region) -> bool;
  pub fn qt_gui_c_QRegion_isEmpty(this_ptr: *const ::region::Region) -> bool;
  pub fn qt_gui_c_QRegion_isNull(this_ptr: *const ::region::Region) -> bool;
  pub fn qt_gui_c_QRegion_new_bitmap(bitmap: *const ::bitmap::Bitmap) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_new_no_args() -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_new_pa(pa: *const ::polygon::Polygon) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_new_pa_fillRule(pa: *const ::polygon::Polygon, fillRule: *const ::qt_core::qt::FillRule) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_new_r(r: *const ::qt_core::rect::Rect) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_new_r_t(r: *const ::qt_core::rect::Rect, t: ::region::RegionType) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_new_region(region: *const ::region::Region) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_new_x_y_w_h(x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_new_x_y_w_h_t(x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int, t: ::region::RegionType) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_operator_add_as_ptr_QRect(this_ptr: *const ::region::Region, r: *const ::qt_core::rect::Rect) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_operator_add_as_ptr_QRegion(this_ptr: *const ::region::Region, r: *const ::region::Region) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_operator_add_assign_QRect(this_ptr: *mut ::region::Region, r: *const ::qt_core::rect::Rect) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_operator_add_assign_QRegion(this_ptr: *mut ::region::Region, r: *const ::region::Region) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_operator_assign(this_ptr: *mut ::region::Region, arg1: *const ::region::Region) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_operator_bit_and_as_ptr_QRect(this_ptr: *const ::region::Region, r: *const ::qt_core::rect::Rect) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_operator_bit_and_as_ptr_QRegion(this_ptr: *const ::region::Region, r: *const ::region::Region) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_operator_bit_and_assign_QRect(this_ptr: *mut ::region::Region, r: *const ::qt_core::rect::Rect) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_operator_bit_and_assign_QRegion(this_ptr: *mut ::region::Region, r: *const ::region::Region) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_operator_bit_or_as_ptr(this_ptr: *const ::region::Region, r: *const ::region::Region) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_operator_bit_or_assign(this_ptr: *mut ::region::Region, r: *const ::region::Region) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_operator_bit_xor_as_ptr(this_ptr: *const ::region::Region, r: *const ::region::Region) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_operator_bit_xor_assign(this_ptr: *mut ::region::Region, r: *const ::region::Region) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_operator_eq(this_ptr: *const ::region::Region, r: *const ::region::Region) -> bool;
  pub fn qt_gui_c_QRegion_operator_neq(this_ptr: *const ::region::Region, r: *const ::region::Region) -> bool;
  pub fn qt_gui_c_QRegion_operator_sub_as_ptr(this_ptr: *const ::region::Region, r: *const ::region::Region) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_operator_sub_assign(this_ptr: *mut ::region::Region, r: *const ::region::Region) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_rectCount(this_ptr: *const ::region::Region) -> ::libc::c_int;
  pub fn qt_gui_c_QRegion_rects_to_output(this_ptr: *const ::region::Region, output: *mut ::vector::VectorQtCoreRect);
  pub fn qt_gui_c_QRegion_setRects(this_ptr: *mut ::region::Region, rect: *const ::qt_core::rect::Rect, num: ::libc::c_int);
  pub fn qt_gui_c_QRegion_subtracted_as_ptr(this_ptr: *const ::region::Region, r: *const ::region::Region) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_swap(this_ptr: *mut ::region::Region, other: *mut ::region::Region);
  pub fn qt_gui_c_QRegion_translate_dx_dy(this_ptr: *mut ::region::Region, dx: ::libc::c_int, dy: ::libc::c_int);
  pub fn qt_gui_c_QRegion_translate_p(this_ptr: *mut ::region::Region, p: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QRegion_translated_as_ptr_dx_dy(this_ptr: *const ::region::Region, dx: ::libc::c_int, dy: ::libc::c_int) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_translated_as_ptr_p(this_ptr: *const ::region::Region, p: *const ::qt_core::point::Point) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_united_as_ptr_QRect(this_ptr: *const ::region::Region, r: *const ::qt_core::rect::Rect) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_united_as_ptr_QRegion(this_ptr: *const ::region::Region, r: *const ::region::Region) -> *mut ::region::Region;
  pub fn qt_gui_c_QRegion_xored_as_ptr(this_ptr: *const ::region::Region, r: *const ::region::Region) -> *mut ::region::Region;

  // Header: QRegularExpressionValidator
  pub fn qt_gui_c_QRegularExpressionValidator_G_dynamic_cast_QRegularExpressionValidator_ptr(ptr: *mut ::validator::Validator) -> *mut ::regular_expression_validator::RegularExpressionValidator;
  pub fn qt_gui_c_QRegularExpressionValidator_G_static_cast_QObject_ptr(ptr: *mut ::regular_expression_validator::RegularExpressionValidator) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QRegularExpressionValidator_G_static_cast_QRegularExpressionValidator_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::regular_expression_validator::RegularExpressionValidator;
  pub fn qt_gui_c_QRegularExpressionValidator_G_static_cast_QRegularExpressionValidator_ptr_QValidator(ptr: *mut ::validator::Validator) -> *mut ::regular_expression_validator::RegularExpressionValidator;
  pub fn qt_gui_c_QRegularExpressionValidator_G_static_cast_QValidator_ptr(ptr: *mut ::regular_expression_validator::RegularExpressionValidator) -> *mut ::validator::Validator;
  pub fn qt_gui_c_QRegularExpressionValidator_delete(this_ptr: *mut ::regular_expression_validator::RegularExpressionValidator);
  pub fn qt_gui_c_QRegularExpressionValidator_metaObject(this_ptr: *const ::regular_expression_validator::RegularExpressionValidator) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QRegularExpressionValidator_new_no_args() -> *mut ::regular_expression_validator::RegularExpressionValidator;
  pub fn qt_gui_c_QRegularExpressionValidator_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::regular_expression_validator::RegularExpressionValidator;
  pub fn qt_gui_c_QRegularExpressionValidator_new_re(re: *const ::qt_core::regular_expression::RegularExpression) -> *mut ::regular_expression_validator::RegularExpressionValidator;
  pub fn qt_gui_c_QRegularExpressionValidator_new_re_parent(re: *const ::qt_core::regular_expression::RegularExpression, parent: *mut ::qt_core::object::Object) -> *mut ::regular_expression_validator::RegularExpressionValidator;
  pub fn qt_gui_c_QRegularExpressionValidator_qt_metacall(this_ptr: *mut ::regular_expression_validator::RegularExpressionValidator, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QRegularExpressionValidator_qt_metacast(this_ptr: *mut ::regular_expression_validator::RegularExpressionValidator, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QRegularExpressionValidator_regularExpression_to_output(this_ptr: *const ::regular_expression_validator::RegularExpressionValidator, output: *mut ::qt_core::regular_expression::RegularExpression);
  pub fn qt_gui_c_QRegularExpressionValidator_setRegularExpression(this_ptr: *mut ::regular_expression_validator::RegularExpressionValidator, re: *const ::qt_core::regular_expression::RegularExpression);
  pub fn qt_gui_c_QRegularExpressionValidator_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QRegularExpressionValidator_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QResizeEvent
  pub fn qt_gui_c_QResizeEvent_G_static_cast_QEvent_ptr(ptr: *mut ::resize_event::ResizeEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QResizeEvent_G_static_cast_QResizeEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::resize_event::ResizeEvent;
  pub fn qt_gui_c_QResizeEvent_delete(this_ptr: *mut ::resize_event::ResizeEvent);
  pub fn qt_gui_c_QResizeEvent_new(size: *const ::qt_core::size::Size, oldSize: *const ::qt_core::size::Size) -> *mut ::resize_event::ResizeEvent;
  pub fn qt_gui_c_QResizeEvent_oldSize(this_ptr: *const ::resize_event::ResizeEvent) -> *const ::qt_core::size::Size;
  pub fn qt_gui_c_QResizeEvent_size(this_ptr: *const ::resize_event::ResizeEvent) -> *const ::qt_core::size::Size;

  // Header: QRgb
  pub fn qt_gui_c_QRgb_G_qAlpha(rgb: ::libc::c_uint) -> ::libc::c_int;
  pub fn qt_gui_c_QRgb_G_qBlue(rgb: ::libc::c_uint) -> ::libc::c_int;
  pub fn qt_gui_c_QRgb_G_qGray_r_g_b(r: ::libc::c_int, g: ::libc::c_int, b: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QRgb_G_qGray_rgb(rgb: ::libc::c_uint) -> ::libc::c_int;
  pub fn qt_gui_c_QRgb_G_qGreen(rgb: ::libc::c_uint) -> ::libc::c_int;
  pub fn qt_gui_c_QRgb_G_qIsGray(rgb: ::libc::c_uint) -> bool;
  pub fn qt_gui_c_QRgb_G_qPremultiply(x: ::libc::c_uint) -> ::libc::c_uint;
  pub fn qt_gui_c_QRgb_G_qRed(rgb: ::libc::c_uint) -> ::libc::c_int;
  pub fn qt_gui_c_QRgb_G_qRgb(r: ::libc::c_int, g: ::libc::c_int, b: ::libc::c_int) -> ::libc::c_uint;
  pub fn qt_gui_c_QRgb_G_qRgba(r: ::libc::c_int, g: ::libc::c_int, b: ::libc::c_int, a: ::libc::c_int) -> ::libc::c_uint;
  pub fn qt_gui_c_QRgb_G_qUnpremultiply(p: ::libc::c_uint) -> ::libc::c_uint;

  // Header: QRgba64
  pub fn qt_gui_c_QRgba64_G_qAlpha(rgb: *const ::rgba64::Rgba64) -> ::libc::c_uint;
  pub fn qt_gui_c_QRgba64_G_qBlue(rgb: *const ::rgba64::Rgba64) -> ::libc::c_uint;
  pub fn qt_gui_c_QRgba64_G_qGreen(rgb: *const ::rgba64::Rgba64) -> ::libc::c_uint;
  pub fn qt_gui_c_QRgba64_G_qPremultiply_to_output(c: *const ::rgba64::Rgba64, output: *mut ::rgba64::Rgba64);
  pub fn qt_gui_c_QRgba64_G_qRed(rgb: *const ::rgba64::Rgba64) -> ::libc::c_uint;
  pub fn qt_gui_c_QRgba64_G_qRgba64_to_output_c(c: u64, output: *mut ::rgba64::Rgba64);
  pub fn qt_gui_c_QRgba64_G_qRgba64_to_output_r_g_b_a(r: u16, g: u16, b: u16, a: u16, output: *mut ::rgba64::Rgba64);
  pub fn qt_gui_c_QRgba64_G_qUnpremultiply_to_output(c: *const ::rgba64::Rgba64, output: *mut ::rgba64::Rgba64);
  pub fn qt_gui_c_QRgba64_alpha(this_ptr: *const ::rgba64::Rgba64) -> u16;
  pub fn qt_gui_c_QRgba64_alpha8(this_ptr: *const ::rgba64::Rgba64) -> u8;
  pub fn qt_gui_c_QRgba64_blue(this_ptr: *const ::rgba64::Rgba64) -> u16;
  pub fn qt_gui_c_QRgba64_blue8(this_ptr: *const ::rgba64::Rgba64) -> u8;
  pub fn qt_gui_c_QRgba64_constructor(output: *mut ::rgba64::Rgba64);
  pub fn qt_gui_c_QRgba64_convert_to_unsigned_long_long(this_ptr: *const ::rgba64::Rgba64) -> u64;
  pub fn qt_gui_c_QRgba64_destructor(this_ptr: *mut ::rgba64::Rgba64);
  pub fn qt_gui_c_QRgba64_fromArgb32_to_output(rgb: ::libc::c_uint, output: *mut ::rgba64::Rgba64);
  pub fn qt_gui_c_QRgba64_fromRgba64_to_output_c(c: u64, output: *mut ::rgba64::Rgba64);
  pub fn qt_gui_c_QRgba64_fromRgba64_to_output_red_green_blue_alpha(red: u16, green: u16, blue: u16, alpha: u16, output: *mut ::rgba64::Rgba64);
  pub fn qt_gui_c_QRgba64_fromRgba_to_output(red: u8, green: u8, blue: u8, alpha: u8, output: *mut ::rgba64::Rgba64);
  pub fn qt_gui_c_QRgba64_green(this_ptr: *const ::rgba64::Rgba64) -> u16;
  pub fn qt_gui_c_QRgba64_green8(this_ptr: *const ::rgba64::Rgba64) -> u8;
  pub fn qt_gui_c_QRgba64_isOpaque(this_ptr: *const ::rgba64::Rgba64) -> bool;
  pub fn qt_gui_c_QRgba64_isTransparent(this_ptr: *const ::rgba64::Rgba64) -> bool;
  pub fn qt_gui_c_QRgba64_operator_assign_to_output(this_ptr: *mut ::rgba64::Rgba64, _rgba: u64, output: *mut ::rgba64::Rgba64);
  pub fn qt_gui_c_QRgba64_premultiplied_to_output(this_ptr: *const ::rgba64::Rgba64, output: *mut ::rgba64::Rgba64);
  pub fn qt_gui_c_QRgba64_red(this_ptr: *const ::rgba64::Rgba64) -> u16;
  pub fn qt_gui_c_QRgba64_red8(this_ptr: *const ::rgba64::Rgba64) -> u8;
  pub fn qt_gui_c_QRgba64_setAlpha(this_ptr: *mut ::rgba64::Rgba64, _alpha: u16);
  pub fn qt_gui_c_QRgba64_setBlue(this_ptr: *mut ::rgba64::Rgba64, _blue: u16);
  pub fn qt_gui_c_QRgba64_setGreen(this_ptr: *mut ::rgba64::Rgba64, _green: u16);
  pub fn qt_gui_c_QRgba64_setRed(this_ptr: *mut ::rgba64::Rgba64, _red: u16);
  pub fn qt_gui_c_QRgba64_toArgb32(this_ptr: *const ::rgba64::Rgba64) -> ::libc::c_uint;
  pub fn qt_gui_c_QRgba64_toRgb16(this_ptr: *const ::rgba64::Rgba64) -> ::libc::c_ushort;
  pub fn qt_gui_c_QRgba64_unpremultiplied_to_output(this_ptr: *const ::rgba64::Rgba64, output: *mut ::rgba64::Rgba64);

  // Header: QScreen
  pub fn qt_gui_c_QScreen_G_operator_shl_to_output(arg1: *const ::qt_core::debug::Debug, arg2: *const ::screen::Screen, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QScreen_G_static_cast_QObject_ptr(ptr: *mut ::screen::Screen) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QScreen_G_static_cast_QScreen_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::screen::Screen;
  pub fn qt_gui_c_QScreen_angleBetween(this_ptr: *const ::screen::Screen, a: *const ::qt_core::qt::ScreenOrientation, b: *const ::qt_core::qt::ScreenOrientation) -> ::libc::c_int;
  pub fn qt_gui_c_QScreen_availableGeometry_to_output(this_ptr: *const ::screen::Screen, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QScreen_availableSize_to_output(this_ptr: *const ::screen::Screen, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QScreen_availableVirtualGeometry_to_output(this_ptr: *const ::screen::Screen, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QScreen_availableVirtualSize_to_output(this_ptr: *const ::screen::Screen, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QScreen_delete(this_ptr: *mut ::screen::Screen);
  pub fn qt_gui_c_QScreen_depth(this_ptr: *const ::screen::Screen) -> ::libc::c_int;
  pub fn qt_gui_c_QScreen_devicePixelRatio(this_ptr: *const ::screen::Screen) -> ::libc::c_double;
  pub fn qt_gui_c_QScreen_geometry_to_output(this_ptr: *const ::screen::Screen, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QScreen_grabWindow_as_ptr_window(this_ptr: *mut ::screen::Screen, window: ::libc::c_ulonglong) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QScreen_grabWindow_as_ptr_window_x(this_ptr: *mut ::screen::Screen, window: ::libc::c_ulonglong, x: ::libc::c_int) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QScreen_grabWindow_as_ptr_window_x_y(this_ptr: *mut ::screen::Screen, window: ::libc::c_ulonglong, x: ::libc::c_int, y: ::libc::c_int) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QScreen_grabWindow_as_ptr_window_x_y_w(this_ptr: *mut ::screen::Screen, window: ::libc::c_ulonglong, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QScreen_grabWindow_as_ptr_window_x_y_w_h(this_ptr: *mut ::screen::Screen, window: ::libc::c_ulonglong, x: ::libc::c_int, y: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int) -> *mut ::pixmap::Pixmap;
  pub fn qt_gui_c_QScreen_isLandscape(this_ptr: *const ::screen::Screen, orientation: *const ::qt_core::qt::ScreenOrientation) -> bool;
  pub fn qt_gui_c_QScreen_isPortrait(this_ptr: *const ::screen::Screen, orientation: *const ::qt_core::qt::ScreenOrientation) -> bool;
  pub fn qt_gui_c_QScreen_logicalDotsPerInch(this_ptr: *const ::screen::Screen) -> ::libc::c_double;
  pub fn qt_gui_c_QScreen_logicalDotsPerInchX(this_ptr: *const ::screen::Screen) -> ::libc::c_double;
  pub fn qt_gui_c_QScreen_logicalDotsPerInchY(this_ptr: *const ::screen::Screen) -> ::libc::c_double;
  pub fn qt_gui_c_QScreen_manufacturer_to_output(this_ptr: *const ::screen::Screen, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QScreen_mapBetween_to_output(this_ptr: *const ::screen::Screen, a: *const ::qt_core::qt::ScreenOrientation, b: *const ::qt_core::qt::ScreenOrientation, rect: *const ::qt_core::rect::Rect, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QScreen_metaObject(this_ptr: *const ::screen::Screen) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QScreen_model_to_output(this_ptr: *const ::screen::Screen, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QScreen_name_to_output(this_ptr: *const ::screen::Screen, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QScreen_physicalDotsPerInch(this_ptr: *const ::screen::Screen) -> ::libc::c_double;
  pub fn qt_gui_c_QScreen_physicalDotsPerInchX(this_ptr: *const ::screen::Screen) -> ::libc::c_double;
  pub fn qt_gui_c_QScreen_physicalDotsPerInchY(this_ptr: *const ::screen::Screen) -> ::libc::c_double;
  pub fn qt_gui_c_QScreen_physicalSize_to_output(this_ptr: *const ::screen::Screen, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_gui_c_QScreen_qt_metacall(this_ptr: *mut ::screen::Screen, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QScreen_qt_metacast(this_ptr: *mut ::screen::Screen, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QScreen_refreshRate(this_ptr: *const ::screen::Screen) -> ::libc::c_double;
  pub fn qt_gui_c_QScreen_serialNumber_to_output(this_ptr: *const ::screen::Screen, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QScreen_size_to_output(this_ptr: *const ::screen::Screen, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QScreen_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QScreen_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QScreen_transformBetween_to_output(this_ptr: *const ::screen::Screen, a: *const ::qt_core::qt::ScreenOrientation, b: *const ::qt_core::qt::ScreenOrientation, target: *const ::qt_core::rect::Rect, output: *mut ::transform::Transform);
  pub fn qt_gui_c_QScreen_virtualGeometry_to_output(this_ptr: *const ::screen::Screen, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QScreen_virtualSiblings_to_output(this_ptr: *const ::screen::Screen, output: *mut ::list::ListScreenMutPtr);
  pub fn qt_gui_c_QScreen_virtualSize_to_output(this_ptr: *const ::screen::Screen, output: *mut ::qt_core::size::Size);

  // Header: QScreenOrientationChangeEvent
  pub fn qt_gui_c_QScreenOrientationChangeEvent_G_static_cast_QEvent_ptr(ptr: *mut ::screen_orientation_change_event::ScreenOrientationChangeEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QScreenOrientationChangeEvent_G_static_cast_QScreenOrientationChangeEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::screen_orientation_change_event::ScreenOrientationChangeEvent;
  pub fn qt_gui_c_QScreenOrientationChangeEvent_delete(this_ptr: *mut ::screen_orientation_change_event::ScreenOrientationChangeEvent);
  pub fn qt_gui_c_QScreenOrientationChangeEvent_new(screen: *mut ::screen::Screen, orientation: *const ::qt_core::qt::ScreenOrientation) -> *mut ::screen_orientation_change_event::ScreenOrientationChangeEvent;
  pub fn qt_gui_c_QScreenOrientationChangeEvent_screen(this_ptr: *const ::screen_orientation_change_event::ScreenOrientationChangeEvent) -> *mut ::screen::Screen;

  // Header: QScrollEvent
  pub fn qt_gui_c_QScrollEvent_G_static_cast_QEvent_ptr(ptr: *mut ::scroll_event::ScrollEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QScrollEvent_G_static_cast_QScrollEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::scroll_event::ScrollEvent;
  pub fn qt_gui_c_QScrollEvent_contentPos_to_output(this_ptr: *const ::scroll_event::ScrollEvent, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QScrollEvent_delete(this_ptr: *mut ::scroll_event::ScrollEvent);
  pub fn qt_gui_c_QScrollEvent_new(contentPos: *const ::qt_core::point_f::PointF, overshoot: *const ::qt_core::point_f::PointF, scrollState: ::scroll_event::ScrollState) -> *mut ::scroll_event::ScrollEvent;
  pub fn qt_gui_c_QScrollEvent_overshootDistance_to_output(this_ptr: *const ::scroll_event::ScrollEvent, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QScrollEvent_scrollState(this_ptr: *const ::scroll_event::ScrollEvent) -> ::scroll_event::ScrollState;

  // Header: QScrollPrepareEvent
  pub fn qt_gui_c_QScrollPrepareEvent_G_static_cast_QEvent_ptr(ptr: *mut ::scroll_prepare_event::ScrollPrepareEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QScrollPrepareEvent_G_static_cast_QScrollPrepareEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::scroll_prepare_event::ScrollPrepareEvent;
  pub fn qt_gui_c_QScrollPrepareEvent_contentPosRange_to_output(this_ptr: *const ::scroll_prepare_event::ScrollPrepareEvent, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QScrollPrepareEvent_contentPos_to_output(this_ptr: *const ::scroll_prepare_event::ScrollPrepareEvent, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QScrollPrepareEvent_delete(this_ptr: *mut ::scroll_prepare_event::ScrollPrepareEvent);
  pub fn qt_gui_c_QScrollPrepareEvent_new(startPos: *const ::qt_core::point_f::PointF) -> *mut ::scroll_prepare_event::ScrollPrepareEvent;
  pub fn qt_gui_c_QScrollPrepareEvent_setContentPos(this_ptr: *mut ::scroll_prepare_event::ScrollPrepareEvent, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QScrollPrepareEvent_setContentPosRange(this_ptr: *mut ::scroll_prepare_event::ScrollPrepareEvent, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QScrollPrepareEvent_setViewportSize(this_ptr: *mut ::scroll_prepare_event::ScrollPrepareEvent, size: *const ::qt_core::size_f::SizeF);
  pub fn qt_gui_c_QScrollPrepareEvent_startPos_to_output(this_ptr: *const ::scroll_prepare_event::ScrollPrepareEvent, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QScrollPrepareEvent_viewportSize_to_output(this_ptr: *const ::scroll_prepare_event::ScrollPrepareEvent, output: *mut ::qt_core::size_f::SizeF);

  // Header: QSessionManager
  pub fn qt_gui_c_QSessionManager_G_static_cast_QObject_ptr(ptr: *mut ::session_manager::SessionManager) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QSessionManager_G_static_cast_QSessionManager_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::session_manager::SessionManager;
  pub fn qt_gui_c_QSessionManager_allowsErrorInteraction(this_ptr: *mut ::session_manager::SessionManager) -> bool;
  pub fn qt_gui_c_QSessionManager_allowsInteraction(this_ptr: *mut ::session_manager::SessionManager) -> bool;
  pub fn qt_gui_c_QSessionManager_cancel(this_ptr: *mut ::session_manager::SessionManager);
  pub fn qt_gui_c_QSessionManager_discardCommand_to_output(this_ptr: *const ::session_manager::SessionManager, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QSessionManager_isPhase2(this_ptr: *const ::session_manager::SessionManager) -> bool;
  pub fn qt_gui_c_QSessionManager_metaObject(this_ptr: *const ::session_manager::SessionManager) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QSessionManager_qt_metacall(this_ptr: *mut ::session_manager::SessionManager, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QSessionManager_qt_metacast(this_ptr: *mut ::session_manager::SessionManager, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QSessionManager_release(this_ptr: *mut ::session_manager::SessionManager);
  pub fn qt_gui_c_QSessionManager_requestPhase2(this_ptr: *mut ::session_manager::SessionManager);
  pub fn qt_gui_c_QSessionManager_restartCommand_to_output(this_ptr: *const ::session_manager::SessionManager, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QSessionManager_restartHint(this_ptr: *const ::session_manager::SessionManager) -> ::session_manager::RestartHint;
  pub fn qt_gui_c_QSessionManager_sessionId_to_output(this_ptr: *const ::session_manager::SessionManager, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QSessionManager_sessionKey_to_output(this_ptr: *const ::session_manager::SessionManager, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QSessionManager_setDiscardCommand(this_ptr: *mut ::session_manager::SessionManager, arg1: *const ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QSessionManager_setManagerProperty_QString_QString(this_ptr: *mut ::session_manager::SessionManager, name: *const ::qt_core::string::String, value: *const ::qt_core::string::String);
  pub fn qt_gui_c_QSessionManager_setManagerProperty_QString_QStringList(this_ptr: *mut ::session_manager::SessionManager, name: *const ::qt_core::string::String, value: *const ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QSessionManager_setRestartCommand(this_ptr: *mut ::session_manager::SessionManager, arg1: *const ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QSessionManager_setRestartHint(this_ptr: *mut ::session_manager::SessionManager, arg1: ::session_manager::RestartHint);
  pub fn qt_gui_c_QSessionManager_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QSessionManager_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QSet
  pub fn qt_gui_c_QSet_QByteArray_capacity(this_ptr: *const ::set::SetQtCoreByteArray) -> ::libc::c_int;
  pub fn qt_gui_c_QSet_QByteArray_clear(this_ptr: *mut ::set::SetQtCoreByteArray);
  pub fn qt_gui_c_QSet_QByteArray_constructor(output: *mut ::set::SetQtCoreByteArray);
  pub fn qt_gui_c_QSet_QByteArray_contains_set(this_ptr: *const ::set::SetQtCoreByteArray, set: *const ::set::SetQtCoreByteArray) -> bool;
  pub fn qt_gui_c_QSet_QByteArray_contains_value(this_ptr: *const ::set::SetQtCoreByteArray, value: *const ::qt_core::byte_array::ByteArray) -> bool;
  pub fn qt_gui_c_QSet_QByteArray_count(this_ptr: *const ::set::SetQtCoreByteArray) -> ::libc::c_int;
  pub fn qt_gui_c_QSet_QByteArray_destructor(this_ptr: *mut ::set::SetQtCoreByteArray);
  pub fn qt_gui_c_QSet_QByteArray_empty(this_ptr: *const ::set::SetQtCoreByteArray) -> bool;
  pub fn qt_gui_c_QSet_QByteArray_fromList_to_output(list: *const ::qt_core::list::ListByteArray, output: *mut ::set::SetQtCoreByteArray);
  pub fn qt_gui_c_QSet_QByteArray_intersect(this_ptr: *mut ::set::SetQtCoreByteArray, other: *const ::set::SetQtCoreByteArray) -> *mut ::set::SetQtCoreByteArray;
  pub fn qt_gui_c_QSet_QByteArray_intersects(this_ptr: *const ::set::SetQtCoreByteArray, other: *const ::set::SetQtCoreByteArray) -> bool;
  pub fn qt_gui_c_QSet_QByteArray_isEmpty(this_ptr: *const ::set::SetQtCoreByteArray) -> bool;
  pub fn qt_gui_c_QSet_QByteArray_operator_add_assign_other(this_ptr: *mut ::set::SetQtCoreByteArray, other: *const ::set::SetQtCoreByteArray) -> *mut ::set::SetQtCoreByteArray;
  pub fn qt_gui_c_QSet_QByteArray_operator_add_assign_value(this_ptr: *mut ::set::SetQtCoreByteArray, value: *const ::qt_core::byte_array::ByteArray) -> *mut ::set::SetQtCoreByteArray;
  pub fn qt_gui_c_QSet_QByteArray_operator_add_to_output(this_ptr: *const ::set::SetQtCoreByteArray, other: *const ::set::SetQtCoreByteArray, output: *mut ::set::SetQtCoreByteArray);
  pub fn qt_gui_c_QSet_QByteArray_operator_bit_and_assign_other(this_ptr: *mut ::set::SetQtCoreByteArray, other: *const ::set::SetQtCoreByteArray) -> *mut ::set::SetQtCoreByteArray;
  pub fn qt_gui_c_QSet_QByteArray_operator_bit_and_assign_value(this_ptr: *mut ::set::SetQtCoreByteArray, value: *const ::qt_core::byte_array::ByteArray) -> *mut ::set::SetQtCoreByteArray;
  pub fn qt_gui_c_QSet_QByteArray_operator_bit_and_to_output(this_ptr: *const ::set::SetQtCoreByteArray, other: *const ::set::SetQtCoreByteArray, output: *mut ::set::SetQtCoreByteArray);
  pub fn qt_gui_c_QSet_QByteArray_operator_bit_or_assign_other(this_ptr: *mut ::set::SetQtCoreByteArray, other: *const ::set::SetQtCoreByteArray) -> *mut ::set::SetQtCoreByteArray;
  pub fn qt_gui_c_QSet_QByteArray_operator_bit_or_assign_value(this_ptr: *mut ::set::SetQtCoreByteArray, value: *const ::qt_core::byte_array::ByteArray) -> *mut ::set::SetQtCoreByteArray;
  pub fn qt_gui_c_QSet_QByteArray_operator_bit_or_to_output(this_ptr: *const ::set::SetQtCoreByteArray, other: *const ::set::SetQtCoreByteArray, output: *mut ::set::SetQtCoreByteArray);
  pub fn qt_gui_c_QSet_QByteArray_operator_eq(this_ptr: *const ::set::SetQtCoreByteArray, other: *const ::set::SetQtCoreByteArray) -> bool;
  pub fn qt_gui_c_QSet_QByteArray_operator_neq(this_ptr: *const ::set::SetQtCoreByteArray, other: *const ::set::SetQtCoreByteArray) -> bool;
  pub fn qt_gui_c_QSet_QByteArray_operator_shl(this_ptr: *mut ::set::SetQtCoreByteArray, value: *const ::qt_core::byte_array::ByteArray) -> *mut ::set::SetQtCoreByteArray;
  pub fn qt_gui_c_QSet_QByteArray_operator_sub_assign_other(this_ptr: *mut ::set::SetQtCoreByteArray, other: *const ::set::SetQtCoreByteArray) -> *mut ::set::SetQtCoreByteArray;
  pub fn qt_gui_c_QSet_QByteArray_operator_sub_assign_value(this_ptr: *mut ::set::SetQtCoreByteArray, value: *const ::qt_core::byte_array::ByteArray) -> *mut ::set::SetQtCoreByteArray;
  pub fn qt_gui_c_QSet_QByteArray_operator_sub_to_output(this_ptr: *const ::set::SetQtCoreByteArray, other: *const ::set::SetQtCoreByteArray, output: *mut ::set::SetQtCoreByteArray);
  pub fn qt_gui_c_QSet_QByteArray_remove(this_ptr: *mut ::set::SetQtCoreByteArray, value: *const ::qt_core::byte_array::ByteArray) -> bool;
  pub fn qt_gui_c_QSet_QByteArray_reserve(this_ptr: *mut ::set::SetQtCoreByteArray, size: ::libc::c_int);
  pub fn qt_gui_c_QSet_QByteArray_size(this_ptr: *const ::set::SetQtCoreByteArray) -> ::libc::c_int;
  pub fn qt_gui_c_QSet_QByteArray_squeeze(this_ptr: *mut ::set::SetQtCoreByteArray);
  pub fn qt_gui_c_QSet_QByteArray_subtract(this_ptr: *mut ::set::SetQtCoreByteArray, other: *const ::set::SetQtCoreByteArray) -> *mut ::set::SetQtCoreByteArray;
  pub fn qt_gui_c_QSet_QByteArray_swap(this_ptr: *mut ::set::SetQtCoreByteArray, other: *mut ::set::SetQtCoreByteArray);
  pub fn qt_gui_c_QSet_QByteArray_toList_to_output(this_ptr: *const ::set::SetQtCoreByteArray, output: *mut ::qt_core::list::ListByteArray);
  pub fn qt_gui_c_QSet_QByteArray_unite(this_ptr: *mut ::set::SetQtCoreByteArray, other: *const ::set::SetQtCoreByteArray) -> *mut ::set::SetQtCoreByteArray;
  pub fn qt_gui_c_QSet_QByteArray_values_to_output(this_ptr: *const ::set::SetQtCoreByteArray, output: *mut ::qt_core::list::ListByteArray);

  // Header: QShortcutEvent
  pub fn qt_gui_c_QShortcutEvent_G_static_cast_QEvent_ptr(ptr: *mut ::shortcut_event::ShortcutEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QShortcutEvent_G_static_cast_QShortcutEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::shortcut_event::ShortcutEvent;
  pub fn qt_gui_c_QShortcutEvent_delete(this_ptr: *mut ::shortcut_event::ShortcutEvent);
  pub fn qt_gui_c_QShortcutEvent_isAmbiguous(this_ptr: *const ::shortcut_event::ShortcutEvent) -> bool;
  pub fn qt_gui_c_QShortcutEvent_key(this_ptr: *const ::shortcut_event::ShortcutEvent) -> *const ::key_sequence::KeySequence;
  pub fn qt_gui_c_QShortcutEvent_new_key_id(key: *const ::key_sequence::KeySequence, id: ::libc::c_int) -> *mut ::shortcut_event::ShortcutEvent;
  pub fn qt_gui_c_QShortcutEvent_new_key_id_ambiguous(key: *const ::key_sequence::KeySequence, id: ::libc::c_int, ambiguous: bool) -> *mut ::shortcut_event::ShortcutEvent;
  pub fn qt_gui_c_QShortcutEvent_shortcutId(this_ptr: *const ::shortcut_event::ShortcutEvent) -> ::libc::c_int;

  // Header: QShowEvent
  pub fn qt_gui_c_QShowEvent_G_static_cast_QEvent_ptr(ptr: *mut ::show_event::ShowEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QShowEvent_G_static_cast_QShowEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::show_event::ShowEvent;
  pub fn qt_gui_c_QShowEvent_delete(this_ptr: *mut ::show_event::ShowEvent);
  pub fn qt_gui_c_QShowEvent_new() -> *mut ::show_event::ShowEvent;

  // Header: QStandardItem
  pub fn qt_gui_c_QStandardItem_accessibleDescription_to_output(this_ptr: *const ::standard_item::StandardItem, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QStandardItem_accessibleText_to_output(this_ptr: *const ::standard_item::StandardItem, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QStandardItem_appendColumn(this_ptr: *mut ::standard_item::StandardItem, items: *const ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QStandardItem_appendRow_item(this_ptr: *mut ::standard_item::StandardItem, item: *mut ::standard_item::StandardItem);
  pub fn qt_gui_c_QStandardItem_appendRow_items(this_ptr: *mut ::standard_item::StandardItem, items: *const ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QStandardItem_appendRows(this_ptr: *mut ::standard_item::StandardItem, items: *const ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QStandardItem_background_to_output(this_ptr: *const ::standard_item::StandardItem, output: *mut ::brush::Brush);
  pub fn qt_gui_c_QStandardItem_child_row(this_ptr: *const ::standard_item::StandardItem, row: ::libc::c_int) -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QStandardItem_child_row_column(this_ptr: *const ::standard_item::StandardItem, row: ::libc::c_int, column: ::libc::c_int) -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QStandardItem_clone(this_ptr: *const ::standard_item::StandardItem) -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QStandardItem_column(this_ptr: *const ::standard_item::StandardItem) -> ::libc::c_int;
  pub fn qt_gui_c_QStandardItem_columnCount(this_ptr: *const ::standard_item::StandardItem) -> ::libc::c_int;
  pub fn qt_gui_c_QStandardItem_data_to_output_no_args(this_ptr: *const ::standard_item::StandardItem, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QStandardItem_data_to_output_role(this_ptr: *const ::standard_item::StandardItem, role: ::libc::c_int, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QStandardItem_delete(this_ptr: *mut ::standard_item::StandardItem);
  pub fn qt_gui_c_QStandardItem_font_to_output(this_ptr: *const ::standard_item::StandardItem, output: *mut ::font::Font);
  pub fn qt_gui_c_QStandardItem_foreground_to_output(this_ptr: *const ::standard_item::StandardItem, output: *mut ::brush::Brush);
  pub fn qt_gui_c_QStandardItem_hasChildren(this_ptr: *const ::standard_item::StandardItem) -> bool;
  pub fn qt_gui_c_QStandardItem_icon_to_output(this_ptr: *const ::standard_item::StandardItem, output: *mut ::icon::Icon);
  pub fn qt_gui_c_QStandardItem_index_to_output(this_ptr: *const ::standard_item::StandardItem, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_gui_c_QStandardItem_insertColumn(this_ptr: *mut ::standard_item::StandardItem, column: ::libc::c_int, items: *const ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QStandardItem_insertColumns(this_ptr: *mut ::standard_item::StandardItem, column: ::libc::c_int, count: ::libc::c_int);
  pub fn qt_gui_c_QStandardItem_insertRow_row_item(this_ptr: *mut ::standard_item::StandardItem, row: ::libc::c_int, item: *mut ::standard_item::StandardItem);
  pub fn qt_gui_c_QStandardItem_insertRow_row_items(this_ptr: *mut ::standard_item::StandardItem, row: ::libc::c_int, items: *const ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QStandardItem_insertRows_row_count(this_ptr: *mut ::standard_item::StandardItem, row: ::libc::c_int, count: ::libc::c_int);
  pub fn qt_gui_c_QStandardItem_insertRows_row_items(this_ptr: *mut ::standard_item::StandardItem, row: ::libc::c_int, items: *const ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QStandardItem_isAutoTristate(this_ptr: *const ::standard_item::StandardItem) -> bool;
  pub fn qt_gui_c_QStandardItem_isCheckable(this_ptr: *const ::standard_item::StandardItem) -> bool;
  pub fn qt_gui_c_QStandardItem_isDragEnabled(this_ptr: *const ::standard_item::StandardItem) -> bool;
  pub fn qt_gui_c_QStandardItem_isDropEnabled(this_ptr: *const ::standard_item::StandardItem) -> bool;
  pub fn qt_gui_c_QStandardItem_isEditable(this_ptr: *const ::standard_item::StandardItem) -> bool;
  pub fn qt_gui_c_QStandardItem_isEnabled(this_ptr: *const ::standard_item::StandardItem) -> bool;
  pub fn qt_gui_c_QStandardItem_isSelectable(this_ptr: *const ::standard_item::StandardItem) -> bool;
  pub fn qt_gui_c_QStandardItem_isTristate(this_ptr: *const ::standard_item::StandardItem) -> bool;
  pub fn qt_gui_c_QStandardItem_isUserTristate(this_ptr: *const ::standard_item::StandardItem) -> bool;
  pub fn qt_gui_c_QStandardItem_model(this_ptr: *const ::standard_item::StandardItem) -> *mut ::standard_item_model::StandardItemModel;
  pub fn qt_gui_c_QStandardItem_new_icon_text(icon: *const ::icon::Icon, text: *const ::qt_core::string::String) -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QStandardItem_new_no_args() -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QStandardItem_new_rows(rows: ::libc::c_int) -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QStandardItem_new_rows_columns(rows: ::libc::c_int, columns: ::libc::c_int) -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QStandardItem_new_text(text: *const ::qt_core::string::String) -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QStandardItem_operator_lt(this_ptr: *const ::standard_item::StandardItem, other: *const ::standard_item::StandardItem) -> bool;
  pub fn qt_gui_c_QStandardItem_parent(this_ptr: *const ::standard_item::StandardItem) -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QStandardItem_read(this_ptr: *mut ::standard_item::StandardItem, in_: *mut ::qt_core::data_stream::DataStream);
  pub fn qt_gui_c_QStandardItem_removeColumn(this_ptr: *mut ::standard_item::StandardItem, column: ::libc::c_int);
  pub fn qt_gui_c_QStandardItem_removeColumns(this_ptr: *mut ::standard_item::StandardItem, column: ::libc::c_int, count: ::libc::c_int);
  pub fn qt_gui_c_QStandardItem_removeRow(this_ptr: *mut ::standard_item::StandardItem, row: ::libc::c_int);
  pub fn qt_gui_c_QStandardItem_removeRows(this_ptr: *mut ::standard_item::StandardItem, row: ::libc::c_int, count: ::libc::c_int);
  pub fn qt_gui_c_QStandardItem_row(this_ptr: *const ::standard_item::StandardItem) -> ::libc::c_int;
  pub fn qt_gui_c_QStandardItem_rowCount(this_ptr: *const ::standard_item::StandardItem) -> ::libc::c_int;
  pub fn qt_gui_c_QStandardItem_setAccessibleDescription(this_ptr: *mut ::standard_item::StandardItem, accessibleDescription: *const ::qt_core::string::String);
  pub fn qt_gui_c_QStandardItem_setAccessibleText(this_ptr: *mut ::standard_item::StandardItem, accessibleText: *const ::qt_core::string::String);
  pub fn qt_gui_c_QStandardItem_setAutoTristate(this_ptr: *mut ::standard_item::StandardItem, tristate: bool);
  pub fn qt_gui_c_QStandardItem_setBackground(this_ptr: *mut ::standard_item::StandardItem, brush: *const ::brush::Brush);
  pub fn qt_gui_c_QStandardItem_setCheckState(this_ptr: *mut ::standard_item::StandardItem, checkState: *const ::qt_core::qt::CheckState);
  pub fn qt_gui_c_QStandardItem_setCheckable(this_ptr: *mut ::standard_item::StandardItem, checkable: bool);
  pub fn qt_gui_c_QStandardItem_setChild_row_column_item(this_ptr: *mut ::standard_item::StandardItem, row: ::libc::c_int, column: ::libc::c_int, item: *mut ::standard_item::StandardItem);
  pub fn qt_gui_c_QStandardItem_setChild_row_item(this_ptr: *mut ::standard_item::StandardItem, row: ::libc::c_int, item: *mut ::standard_item::StandardItem);
  pub fn qt_gui_c_QStandardItem_setColumnCount(this_ptr: *mut ::standard_item::StandardItem, columns: ::libc::c_int);
  pub fn qt_gui_c_QStandardItem_setData_value(this_ptr: *mut ::standard_item::StandardItem, value: *const ::qt_core::variant::Variant);
  pub fn qt_gui_c_QStandardItem_setData_value_role(this_ptr: *mut ::standard_item::StandardItem, value: *const ::qt_core::variant::Variant, role: ::libc::c_int);
  pub fn qt_gui_c_QStandardItem_setDragEnabled(this_ptr: *mut ::standard_item::StandardItem, dragEnabled: bool);
  pub fn qt_gui_c_QStandardItem_setDropEnabled(this_ptr: *mut ::standard_item::StandardItem, dropEnabled: bool);
  pub fn qt_gui_c_QStandardItem_setEditable(this_ptr: *mut ::standard_item::StandardItem, editable: bool);
  pub fn qt_gui_c_QStandardItem_setEnabled(this_ptr: *mut ::standard_item::StandardItem, enabled: bool);
  pub fn qt_gui_c_QStandardItem_setFont(this_ptr: *mut ::standard_item::StandardItem, font: *const ::font::Font);
  pub fn qt_gui_c_QStandardItem_setForeground(this_ptr: *mut ::standard_item::StandardItem, brush: *const ::brush::Brush);
  pub fn qt_gui_c_QStandardItem_setIcon(this_ptr: *mut ::standard_item::StandardItem, icon: *const ::icon::Icon);
  pub fn qt_gui_c_QStandardItem_setRowCount(this_ptr: *mut ::standard_item::StandardItem, rows: ::libc::c_int);
  pub fn qt_gui_c_QStandardItem_setSelectable(this_ptr: *mut ::standard_item::StandardItem, selectable: bool);
  pub fn qt_gui_c_QStandardItem_setSizeHint(this_ptr: *mut ::standard_item::StandardItem, sizeHint: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QStandardItem_setStatusTip(this_ptr: *mut ::standard_item::StandardItem, statusTip: *const ::qt_core::string::String);
  pub fn qt_gui_c_QStandardItem_setText(this_ptr: *mut ::standard_item::StandardItem, text: *const ::qt_core::string::String);
  pub fn qt_gui_c_QStandardItem_setToolTip(this_ptr: *mut ::standard_item::StandardItem, toolTip: *const ::qt_core::string::String);
  pub fn qt_gui_c_QStandardItem_setTristate(this_ptr: *mut ::standard_item::StandardItem, tristate: bool);
  pub fn qt_gui_c_QStandardItem_setUserTristate(this_ptr: *mut ::standard_item::StandardItem, tristate: bool);
  pub fn qt_gui_c_QStandardItem_setWhatsThis(this_ptr: *mut ::standard_item::StandardItem, whatsThis: *const ::qt_core::string::String);
  pub fn qt_gui_c_QStandardItem_sizeHint_to_output(this_ptr: *const ::standard_item::StandardItem, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QStandardItem_sortChildren_column(this_ptr: *mut ::standard_item::StandardItem, column: ::libc::c_int);
  pub fn qt_gui_c_QStandardItem_sortChildren_column_order(this_ptr: *mut ::standard_item::StandardItem, column: ::libc::c_int, order: *const ::qt_core::qt::SortOrder);
  pub fn qt_gui_c_QStandardItem_statusTip_to_output(this_ptr: *const ::standard_item::StandardItem, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QStandardItem_takeChild_row(this_ptr: *mut ::standard_item::StandardItem, row: ::libc::c_int) -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QStandardItem_takeChild_row_column(this_ptr: *mut ::standard_item::StandardItem, row: ::libc::c_int, column: ::libc::c_int) -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QStandardItem_takeColumn_to_output(this_ptr: *mut ::standard_item::StandardItem, column: ::libc::c_int, output: *mut ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QStandardItem_takeRow_to_output(this_ptr: *mut ::standard_item::StandardItem, row: ::libc::c_int, output: *mut ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QStandardItem_text_to_output(this_ptr: *const ::standard_item::StandardItem, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QStandardItem_toolTip_to_output(this_ptr: *const ::standard_item::StandardItem, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QStandardItem_type(this_ptr: *const ::standard_item::StandardItem) -> ::libc::c_int;
  pub fn qt_gui_c_QStandardItem_whatsThis_to_output(this_ptr: *const ::standard_item::StandardItem, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QStandardItem_write(this_ptr: *const ::standard_item::StandardItem, out: *mut ::qt_core::data_stream::DataStream);

  // Header: QStandardItemModel
  pub fn qt_gui_c_QStandardItemModel_G_operator_shl(out: *mut ::qt_core::data_stream::DataStream, item: *const ::standard_item::StandardItem) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QStandardItemModel_G_operator_shr(in_: *mut ::qt_core::data_stream::DataStream, item: *mut ::standard_item::StandardItem) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QStandardItemModel_G_static_cast_QAbstractItemModel_ptr(ptr: *mut ::standard_item_model::StandardItemModel) -> *mut ::qt_core::abstract_item_model::AbstractItemModel;
  pub fn qt_gui_c_QStandardItemModel_G_static_cast_QObject_ptr(ptr: *mut ::standard_item_model::StandardItemModel) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QStandardItemModel_G_static_cast_QStandardItemModel_ptr_QAbstractItemModel(ptr: *mut ::qt_core::abstract_item_model::AbstractItemModel) -> *mut ::standard_item_model::StandardItemModel;
  pub fn qt_gui_c_QStandardItemModel_G_static_cast_QStandardItemModel_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::standard_item_model::StandardItemModel;
  pub fn qt_gui_c_QStandardItemModel_appendColumn(this_ptr: *mut ::standard_item_model::StandardItemModel, items: *const ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QStandardItemModel_appendRow_item(this_ptr: *mut ::standard_item_model::StandardItemModel, item: *mut ::standard_item::StandardItem);
  pub fn qt_gui_c_QStandardItemModel_appendRow_items(this_ptr: *mut ::standard_item_model::StandardItemModel, items: *const ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QStandardItemModel_clear(this_ptr: *mut ::standard_item_model::StandardItemModel);
  pub fn qt_gui_c_QStandardItemModel_columnCount_no_args(this_ptr: *const ::standard_item_model::StandardItemModel) -> ::libc::c_int;
  pub fn qt_gui_c_QStandardItemModel_columnCount_parent(this_ptr: *const ::standard_item_model::StandardItemModel, parent: *const ::qt_core::model_index::ModelIndex) -> ::libc::c_int;
  pub fn qt_gui_c_QStandardItemModel_data_to_output_index(this_ptr: *const ::standard_item_model::StandardItemModel, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QStandardItemModel_data_to_output_index_role(this_ptr: *const ::standard_item_model::StandardItemModel, index: *const ::qt_core::model_index::ModelIndex, role: ::libc::c_int, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QStandardItemModel_delete(this_ptr: *mut ::standard_item_model::StandardItemModel);
  pub fn qt_gui_c_QStandardItemModel_dropMimeData(this_ptr: *mut ::standard_item_model::StandardItemModel, data: *const ::qt_core::mime_data::MimeData, action: *const ::qt_core::qt::DropAction, row: ::libc::c_int, column: ::libc::c_int, parent: *const ::qt_core::model_index::ModelIndex) -> bool;
  pub fn qt_gui_c_QStandardItemModel_hasChildren_no_args(this_ptr: *const ::standard_item_model::StandardItemModel) -> bool;
  pub fn qt_gui_c_QStandardItemModel_hasChildren_parent(this_ptr: *const ::standard_item_model::StandardItemModel, parent: *const ::qt_core::model_index::ModelIndex) -> bool;
  pub fn qt_gui_c_QStandardItemModel_headerData_to_output_section_orientation(this_ptr: *const ::standard_item_model::StandardItemModel, section: ::libc::c_int, orientation: *const ::qt_core::qt::Orientation, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QStandardItemModel_headerData_to_output_section_orientation_role(this_ptr: *const ::standard_item_model::StandardItemModel, section: ::libc::c_int, orientation: *const ::qt_core::qt::Orientation, role: ::libc::c_int, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QStandardItemModel_horizontalHeaderItem(this_ptr: *const ::standard_item_model::StandardItemModel, column: ::libc::c_int) -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QStandardItemModel_indexFromItem_to_output(this_ptr: *const ::standard_item_model::StandardItemModel, item: *const ::standard_item::StandardItem, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_gui_c_QStandardItemModel_index_to_output_row_column(this_ptr: *const ::standard_item_model::StandardItemModel, row: ::libc::c_int, column: ::libc::c_int, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_gui_c_QStandardItemModel_index_to_output_row_column_parent(this_ptr: *const ::standard_item_model::StandardItemModel, row: ::libc::c_int, column: ::libc::c_int, parent: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_gui_c_QStandardItemModel_insertColumn_column(this_ptr: *mut ::standard_item_model::StandardItemModel, column: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QStandardItemModel_insertColumn_column_items(this_ptr: *mut ::standard_item_model::StandardItemModel, column: ::libc::c_int, items: *const ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QStandardItemModel_insertColumn_column_parent(this_ptr: *mut ::standard_item_model::StandardItemModel, column: ::libc::c_int, parent: *const ::qt_core::model_index::ModelIndex) -> bool;
  pub fn qt_gui_c_QStandardItemModel_insertColumns_column_count(this_ptr: *mut ::standard_item_model::StandardItemModel, column: ::libc::c_int, count: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QStandardItemModel_insertColumns_column_count_parent(this_ptr: *mut ::standard_item_model::StandardItemModel, column: ::libc::c_int, count: ::libc::c_int, parent: *const ::qt_core::model_index::ModelIndex) -> bool;
  pub fn qt_gui_c_QStandardItemModel_insertRow_row(this_ptr: *mut ::standard_item_model::StandardItemModel, row: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QStandardItemModel_insertRow_row_item(this_ptr: *mut ::standard_item_model::StandardItemModel, row: ::libc::c_int, item: *mut ::standard_item::StandardItem);
  pub fn qt_gui_c_QStandardItemModel_insertRow_row_items(this_ptr: *mut ::standard_item_model::StandardItemModel, row: ::libc::c_int, items: *const ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QStandardItemModel_insertRow_row_parent(this_ptr: *mut ::standard_item_model::StandardItemModel, row: ::libc::c_int, parent: *const ::qt_core::model_index::ModelIndex) -> bool;
  pub fn qt_gui_c_QStandardItemModel_insertRows_row_count(this_ptr: *mut ::standard_item_model::StandardItemModel, row: ::libc::c_int, count: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QStandardItemModel_insertRows_row_count_parent(this_ptr: *mut ::standard_item_model::StandardItemModel, row: ::libc::c_int, count: ::libc::c_int, parent: *const ::qt_core::model_index::ModelIndex) -> bool;
  pub fn qt_gui_c_QStandardItemModel_invisibleRootItem(this_ptr: *const ::standard_item_model::StandardItemModel) -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QStandardItemModel_itemData_to_output(this_ptr: *const ::standard_item_model::StandardItemModel, index: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::map::MapCIntVariant);
  pub fn qt_gui_c_QStandardItemModel_itemFromIndex(this_ptr: *const ::standard_item_model::StandardItemModel, index: *const ::qt_core::model_index::ModelIndex) -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QStandardItemModel_itemPrototype(this_ptr: *const ::standard_item_model::StandardItemModel) -> *const ::standard_item::StandardItem;
  pub fn qt_gui_c_QStandardItemModel_item_row(this_ptr: *const ::standard_item_model::StandardItemModel, row: ::libc::c_int) -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QStandardItemModel_item_row_column(this_ptr: *const ::standard_item_model::StandardItemModel, row: ::libc::c_int, column: ::libc::c_int) -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QStandardItemModel_metaObject(this_ptr: *const ::standard_item_model::StandardItemModel) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QStandardItemModel_mimeData(this_ptr: *const ::standard_item_model::StandardItemModel, indexes: *const ::qt_core::list::ListModelIndex) -> *mut ::qt_core::mime_data::MimeData;
  pub fn qt_gui_c_QStandardItemModel_mimeTypes_to_output(this_ptr: *const ::standard_item_model::StandardItemModel, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QStandardItemModel_new_no_args() -> *mut ::standard_item_model::StandardItemModel;
  pub fn qt_gui_c_QStandardItemModel_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::standard_item_model::StandardItemModel;
  pub fn qt_gui_c_QStandardItemModel_new_rows_columns(rows: ::libc::c_int, columns: ::libc::c_int) -> *mut ::standard_item_model::StandardItemModel;
  pub fn qt_gui_c_QStandardItemModel_new_rows_columns_parent(rows: ::libc::c_int, columns: ::libc::c_int, parent: *mut ::qt_core::object::Object) -> *mut ::standard_item_model::StandardItemModel;
  pub fn qt_gui_c_QStandardItemModel_parent_to_output(this_ptr: *const ::standard_item_model::StandardItemModel, child: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_gui_c_QStandardItemModel_qt_metacall(this_ptr: *mut ::standard_item_model::StandardItemModel, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QStandardItemModel_qt_metacast(this_ptr: *mut ::standard_item_model::StandardItemModel, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QStandardItemModel_removeColumns_column_count(this_ptr: *mut ::standard_item_model::StandardItemModel, column: ::libc::c_int, count: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QStandardItemModel_removeColumns_column_count_parent(this_ptr: *mut ::standard_item_model::StandardItemModel, column: ::libc::c_int, count: ::libc::c_int, parent: *const ::qt_core::model_index::ModelIndex) -> bool;
  pub fn qt_gui_c_QStandardItemModel_removeRows_row_count(this_ptr: *mut ::standard_item_model::StandardItemModel, row: ::libc::c_int, count: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QStandardItemModel_removeRows_row_count_parent(this_ptr: *mut ::standard_item_model::StandardItemModel, row: ::libc::c_int, count: ::libc::c_int, parent: *const ::qt_core::model_index::ModelIndex) -> bool;
  pub fn qt_gui_c_QStandardItemModel_rowCount_no_args(this_ptr: *const ::standard_item_model::StandardItemModel) -> ::libc::c_int;
  pub fn qt_gui_c_QStandardItemModel_rowCount_parent(this_ptr: *const ::standard_item_model::StandardItemModel, parent: *const ::qt_core::model_index::ModelIndex) -> ::libc::c_int;
  pub fn qt_gui_c_QStandardItemModel_setColumnCount(this_ptr: *mut ::standard_item_model::StandardItemModel, columns: ::libc::c_int);
  pub fn qt_gui_c_QStandardItemModel_setData_index_value(this_ptr: *mut ::standard_item_model::StandardItemModel, index: *const ::qt_core::model_index::ModelIndex, value: *const ::qt_core::variant::Variant) -> bool;
  pub fn qt_gui_c_QStandardItemModel_setData_index_value_role(this_ptr: *mut ::standard_item_model::StandardItemModel, index: *const ::qt_core::model_index::ModelIndex, value: *const ::qt_core::variant::Variant, role: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QStandardItemModel_setHeaderData_section_orientation_value(this_ptr: *mut ::standard_item_model::StandardItemModel, section: ::libc::c_int, orientation: *const ::qt_core::qt::Orientation, value: *const ::qt_core::variant::Variant) -> bool;
  pub fn qt_gui_c_QStandardItemModel_setHeaderData_section_orientation_value_role(this_ptr: *mut ::standard_item_model::StandardItemModel, section: ::libc::c_int, orientation: *const ::qt_core::qt::Orientation, value: *const ::qt_core::variant::Variant, role: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QStandardItemModel_setHorizontalHeaderItem(this_ptr: *mut ::standard_item_model::StandardItemModel, column: ::libc::c_int, item: *mut ::standard_item::StandardItem);
  pub fn qt_gui_c_QStandardItemModel_setHorizontalHeaderLabels(this_ptr: *mut ::standard_item_model::StandardItemModel, labels: *const ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QStandardItemModel_setItemData(this_ptr: *mut ::standard_item_model::StandardItemModel, index: *const ::qt_core::model_index::ModelIndex, roles: *const ::qt_core::map::MapCIntVariant) -> bool;
  pub fn qt_gui_c_QStandardItemModel_setItemPrototype(this_ptr: *mut ::standard_item_model::StandardItemModel, item: *const ::standard_item::StandardItem);
  pub fn qt_gui_c_QStandardItemModel_setItemRoleNames(this_ptr: *mut ::standard_item_model::StandardItemModel, roleNames: *const ::qt_core::hash::HashCIntByteArray);
  pub fn qt_gui_c_QStandardItemModel_setItem_row_column_item(this_ptr: *mut ::standard_item_model::StandardItemModel, row: ::libc::c_int, column: ::libc::c_int, item: *mut ::standard_item::StandardItem);
  pub fn qt_gui_c_QStandardItemModel_setItem_row_item(this_ptr: *mut ::standard_item_model::StandardItemModel, row: ::libc::c_int, item: *mut ::standard_item::StandardItem);
  pub fn qt_gui_c_QStandardItemModel_setRowCount(this_ptr: *mut ::standard_item_model::StandardItemModel, rows: ::libc::c_int);
  pub fn qt_gui_c_QStandardItemModel_setSortRole(this_ptr: *mut ::standard_item_model::StandardItemModel, role: ::libc::c_int);
  pub fn qt_gui_c_QStandardItemModel_setVerticalHeaderItem(this_ptr: *mut ::standard_item_model::StandardItemModel, row: ::libc::c_int, item: *mut ::standard_item::StandardItem);
  pub fn qt_gui_c_QStandardItemModel_setVerticalHeaderLabels(this_ptr: *mut ::standard_item_model::StandardItemModel, labels: *const ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QStandardItemModel_sibling_to_output(this_ptr: *const ::standard_item_model::StandardItemModel, row: ::libc::c_int, column: ::libc::c_int, idx: *const ::qt_core::model_index::ModelIndex, output: *mut ::qt_core::model_index::ModelIndex);
  pub fn qt_gui_c_QStandardItemModel_sortRole(this_ptr: *const ::standard_item_model::StandardItemModel) -> ::libc::c_int;
  pub fn qt_gui_c_QStandardItemModel_sort_column(this_ptr: *mut ::standard_item_model::StandardItemModel, column: ::libc::c_int);
  pub fn qt_gui_c_QStandardItemModel_sort_column_order(this_ptr: *mut ::standard_item_model::StandardItemModel, column: ::libc::c_int, order: *const ::qt_core::qt::SortOrder);
  pub fn qt_gui_c_QStandardItemModel_takeColumn_to_output(this_ptr: *mut ::standard_item_model::StandardItemModel, column: ::libc::c_int, output: *mut ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QStandardItemModel_takeHorizontalHeaderItem(this_ptr: *mut ::standard_item_model::StandardItemModel, column: ::libc::c_int) -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QStandardItemModel_takeItem_row(this_ptr: *mut ::standard_item_model::StandardItemModel, row: ::libc::c_int) -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QStandardItemModel_takeItem_row_column(this_ptr: *mut ::standard_item_model::StandardItemModel, row: ::libc::c_int, column: ::libc::c_int) -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QStandardItemModel_takeRow_to_output(this_ptr: *mut ::standard_item_model::StandardItemModel, row: ::libc::c_int, output: *mut ::list::ListStandardItemMutPtr);
  pub fn qt_gui_c_QStandardItemModel_takeVerticalHeaderItem(this_ptr: *mut ::standard_item_model::StandardItemModel, row: ::libc::c_int) -> *mut ::standard_item::StandardItem;
  pub fn qt_gui_c_QStandardItemModel_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QStandardItemModel_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QStandardItemModel_verticalHeaderItem(this_ptr: *const ::standard_item_model::StandardItemModel, row: ::libc::c_int) -> *mut ::standard_item::StandardItem;

  // Header: QStaticText
  pub fn qt_gui_c_QStaticText_G_swap(value1: *mut ::static_text::StaticText, value2: *mut ::static_text::StaticText);
  pub fn qt_gui_c_QStaticText_constructor_no_args(output: *mut ::static_text::StaticText);
  pub fn qt_gui_c_QStaticText_constructor_other(other: *const ::static_text::StaticText, output: *mut ::static_text::StaticText);
  pub fn qt_gui_c_QStaticText_constructor_text(text: *const ::qt_core::string::String, output: *mut ::static_text::StaticText);
  pub fn qt_gui_c_QStaticText_destructor(this_ptr: *mut ::static_text::StaticText);
  pub fn qt_gui_c_QStaticText_operator_assign(this_ptr: *mut ::static_text::StaticText, arg1: *const ::static_text::StaticText) -> *mut ::static_text::StaticText;
  pub fn qt_gui_c_QStaticText_operator_eq(this_ptr: *const ::static_text::StaticText, arg1: *const ::static_text::StaticText) -> bool;
  pub fn qt_gui_c_QStaticText_operator_neq(this_ptr: *const ::static_text::StaticText, arg1: *const ::static_text::StaticText) -> bool;
  pub fn qt_gui_c_QStaticText_performanceHint(this_ptr: *const ::static_text::StaticText) -> ::static_text::PerformanceHint;
  pub fn qt_gui_c_QStaticText_prepare_matrix(this_ptr: *mut ::static_text::StaticText, matrix: *const ::transform::Transform);
  pub fn qt_gui_c_QStaticText_prepare_matrix_font(this_ptr: *mut ::static_text::StaticText, matrix: *const ::transform::Transform, font: *const ::font::Font);
  pub fn qt_gui_c_QStaticText_prepare_no_args(this_ptr: *mut ::static_text::StaticText);
  pub fn qt_gui_c_QStaticText_setPerformanceHint(this_ptr: *mut ::static_text::StaticText, performanceHint: ::static_text::PerformanceHint);
  pub fn qt_gui_c_QStaticText_setText(this_ptr: *mut ::static_text::StaticText, text: *const ::qt_core::string::String);
  pub fn qt_gui_c_QStaticText_setTextFormat(this_ptr: *mut ::static_text::StaticText, textFormat: *const ::qt_core::qt::TextFormat);
  pub fn qt_gui_c_QStaticText_setTextOption(this_ptr: *mut ::static_text::StaticText, textOption: *const ::text_option::TextOption);
  pub fn qt_gui_c_QStaticText_setTextWidth(this_ptr: *mut ::static_text::StaticText, textWidth: ::libc::c_double);
  pub fn qt_gui_c_QStaticText_size_to_output(this_ptr: *const ::static_text::StaticText, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_gui_c_QStaticText_swap(this_ptr: *mut ::static_text::StaticText, other: *mut ::static_text::StaticText);
  pub fn qt_gui_c_QStaticText_textOption_to_output(this_ptr: *const ::static_text::StaticText, output: *mut ::text_option::TextOption);
  pub fn qt_gui_c_QStaticText_textWidth(this_ptr: *const ::static_text::StaticText) -> ::libc::c_double;
  pub fn qt_gui_c_QStaticText_text_to_output(this_ptr: *const ::static_text::StaticText, output: *mut ::qt_core::string::String);

  // Header: QStatusTipEvent
  pub fn qt_gui_c_QStatusTipEvent_G_static_cast_QEvent_ptr(ptr: *mut ::status_tip_event::StatusTipEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QStatusTipEvent_G_static_cast_QStatusTipEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::status_tip_event::StatusTipEvent;
  pub fn qt_gui_c_QStatusTipEvent_delete(this_ptr: *mut ::status_tip_event::StatusTipEvent);
  pub fn qt_gui_c_QStatusTipEvent_new(tip: *const ::qt_core::string::String) -> *mut ::status_tip_event::StatusTipEvent;
  pub fn qt_gui_c_QStatusTipEvent_tip_to_output(this_ptr: *const ::status_tip_event::StatusTipEvent, output: *mut ::qt_core::string::String);

  // Header: QStyleHints
  pub fn qt_gui_c_QStyleHints_G_static_cast_QObject_ptr(ptr: *mut ::style_hints::StyleHints) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QStyleHints_G_static_cast_QStyleHints_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::style_hints::StyleHints;
  pub fn qt_gui_c_QStyleHints_cursorFlashTime(this_ptr: *const ::style_hints::StyleHints) -> ::libc::c_int;
  pub fn qt_gui_c_QStyleHints_delete(this_ptr: *mut ::style_hints::StyleHints);
  pub fn qt_gui_c_QStyleHints_fontSmoothingGamma(this_ptr: *const ::style_hints::StyleHints) -> ::libc::c_double;
  pub fn qt_gui_c_QStyleHints_keyboardAutoRepeatRate(this_ptr: *const ::style_hints::StyleHints) -> ::libc::c_int;
  pub fn qt_gui_c_QStyleHints_keyboardInputInterval(this_ptr: *const ::style_hints::StyleHints) -> ::libc::c_int;
  pub fn qt_gui_c_QStyleHints_metaObject(this_ptr: *const ::style_hints::StyleHints) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QStyleHints_mouseDoubleClickInterval(this_ptr: *const ::style_hints::StyleHints) -> ::libc::c_int;
  pub fn qt_gui_c_QStyleHints_mousePressAndHoldInterval(this_ptr: *const ::style_hints::StyleHints) -> ::libc::c_int;
  pub fn qt_gui_c_QStyleHints_passwordMaskCharacter_to_output(this_ptr: *const ::style_hints::StyleHints, output: *mut ::qt_core::char::Char);
  pub fn qt_gui_c_QStyleHints_passwordMaskDelay(this_ptr: *const ::style_hints::StyleHints) -> ::libc::c_int;
  pub fn qt_gui_c_QStyleHints_qt_metacall(this_ptr: *mut ::style_hints::StyleHints, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QStyleHints_qt_metacast(this_ptr: *mut ::style_hints::StyleHints, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QStyleHints_setCursorFlashTime(this_ptr: *mut ::style_hints::StyleHints, cursorFlashTime: ::libc::c_int);
  pub fn qt_gui_c_QStyleHints_setFocusOnTouchRelease(this_ptr: *const ::style_hints::StyleHints) -> bool;
  pub fn qt_gui_c_QStyleHints_setKeyboardInputInterval(this_ptr: *mut ::style_hints::StyleHints, keyboardInputInterval: ::libc::c_int);
  pub fn qt_gui_c_QStyleHints_setMouseDoubleClickInterval(this_ptr: *mut ::style_hints::StyleHints, mouseDoubleClickInterval: ::libc::c_int);
  pub fn qt_gui_c_QStyleHints_setMousePressAndHoldInterval(this_ptr: *mut ::style_hints::StyleHints, mousePressAndHoldInterval: ::libc::c_int);
  pub fn qt_gui_c_QStyleHints_setStartDragDistance(this_ptr: *mut ::style_hints::StyleHints, startDragDistance: ::libc::c_int);
  pub fn qt_gui_c_QStyleHints_setStartDragTime(this_ptr: *mut ::style_hints::StyleHints, startDragTime: ::libc::c_int);
  pub fn qt_gui_c_QStyleHints_setTabFocusBehavior(this_ptr: *mut ::style_hints::StyleHints, tabFocusBehavior: *const ::qt_core::qt::TabFocusBehavior);
  pub fn qt_gui_c_QStyleHints_setUseHoverEffects(this_ptr: *mut ::style_hints::StyleHints, useHoverEffects: bool);
  pub fn qt_gui_c_QStyleHints_setWheelScrollLines(this_ptr: *mut ::style_hints::StyleHints, scrollLines: ::libc::c_int);
  pub fn qt_gui_c_QStyleHints_showIsFullScreen(this_ptr: *const ::style_hints::StyleHints) -> bool;
  pub fn qt_gui_c_QStyleHints_showIsMaximized(this_ptr: *const ::style_hints::StyleHints) -> bool;
  pub fn qt_gui_c_QStyleHints_singleClickActivation(this_ptr: *const ::style_hints::StyleHints) -> bool;
  pub fn qt_gui_c_QStyleHints_startDragDistance(this_ptr: *const ::style_hints::StyleHints) -> ::libc::c_int;
  pub fn qt_gui_c_QStyleHints_startDragTime(this_ptr: *const ::style_hints::StyleHints) -> ::libc::c_int;
  pub fn qt_gui_c_QStyleHints_startDragVelocity(this_ptr: *const ::style_hints::StyleHints) -> ::libc::c_int;
  pub fn qt_gui_c_QStyleHints_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QStyleHints_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QStyleHints_useHoverEffects(this_ptr: *const ::style_hints::StyleHints) -> bool;
  pub fn qt_gui_c_QStyleHints_useRtlExtensions(this_ptr: *const ::style_hints::StyleHints) -> bool;
  pub fn qt_gui_c_QStyleHints_wheelScrollLines(this_ptr: *const ::style_hints::StyleHints) -> ::libc::c_int;

  // Header: QSurface
  pub fn qt_gui_c_QSurface_delete(this_ptr: *mut ::surface::Surface);
  pub fn qt_gui_c_QSurface_format_to_output(this_ptr: *const ::surface::Surface, output: *mut ::surface_format::SurfaceFormat);
  pub fn qt_gui_c_QSurface_size_to_output(this_ptr: *const ::surface::Surface, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QSurface_supportsOpenGL(this_ptr: *const ::surface::Surface) -> bool;
  pub fn qt_gui_c_QSurface_surfaceClass(this_ptr: *const ::surface::Surface) -> ::surface::SurfaceClass;
  pub fn qt_gui_c_QSurface_surfaceType(this_ptr: *const ::surface::Surface) -> ::surface::SurfaceType;

  // Header: QSurfaceFormat
  pub fn qt_gui_c_QSurfaceFormat_alphaBufferSize(this_ptr: *const ::surface_format::SurfaceFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QSurfaceFormat_blueBufferSize(this_ptr: *const ::surface_format::SurfaceFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QSurfaceFormat_constructor_no_args(output: *mut ::surface_format::SurfaceFormat);
  pub fn qt_gui_c_QSurfaceFormat_constructor_options(options: ::libc::c_uint, output: *mut ::surface_format::SurfaceFormat);
  pub fn qt_gui_c_QSurfaceFormat_constructor_other(other: *const ::surface_format::SurfaceFormat, output: *mut ::surface_format::SurfaceFormat);
  pub fn qt_gui_c_QSurfaceFormat_defaultFormat_to_output(output: *mut ::surface_format::SurfaceFormat);
  pub fn qt_gui_c_QSurfaceFormat_depthBufferSize(this_ptr: *const ::surface_format::SurfaceFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QSurfaceFormat_destructor(this_ptr: *mut ::surface_format::SurfaceFormat);
  pub fn qt_gui_c_QSurfaceFormat_greenBufferSize(this_ptr: *const ::surface_format::SurfaceFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QSurfaceFormat_hasAlpha(this_ptr: *const ::surface_format::SurfaceFormat) -> bool;
  pub fn qt_gui_c_QSurfaceFormat_majorVersion(this_ptr: *const ::surface_format::SurfaceFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QSurfaceFormat_minorVersion(this_ptr: *const ::surface_format::SurfaceFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QSurfaceFormat_operator_assign(this_ptr: *mut ::surface_format::SurfaceFormat, other: *const ::surface_format::SurfaceFormat) -> *mut ::surface_format::SurfaceFormat;
  pub fn qt_gui_c_QSurfaceFormat_profile(this_ptr: *const ::surface_format::SurfaceFormat) -> ::surface_format::OpenGLContextProfile;
  pub fn qt_gui_c_QSurfaceFormat_redBufferSize(this_ptr: *const ::surface_format::SurfaceFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QSurfaceFormat_renderableType(this_ptr: *const ::surface_format::SurfaceFormat) -> ::surface_format::RenderableType;
  pub fn qt_gui_c_QSurfaceFormat_samples(this_ptr: *const ::surface_format::SurfaceFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QSurfaceFormat_setAlphaBufferSize(this_ptr: *mut ::surface_format::SurfaceFormat, size: ::libc::c_int);
  pub fn qt_gui_c_QSurfaceFormat_setBlueBufferSize(this_ptr: *mut ::surface_format::SurfaceFormat, size: ::libc::c_int);
  pub fn qt_gui_c_QSurfaceFormat_setDefaultFormat(format: *const ::surface_format::SurfaceFormat);
  pub fn qt_gui_c_QSurfaceFormat_setDepthBufferSize(this_ptr: *mut ::surface_format::SurfaceFormat, size: ::libc::c_int);
  pub fn qt_gui_c_QSurfaceFormat_setGreenBufferSize(this_ptr: *mut ::surface_format::SurfaceFormat, size: ::libc::c_int);
  pub fn qt_gui_c_QSurfaceFormat_setMajorVersion(this_ptr: *mut ::surface_format::SurfaceFormat, majorVersion: ::libc::c_int);
  pub fn qt_gui_c_QSurfaceFormat_setMinorVersion(this_ptr: *mut ::surface_format::SurfaceFormat, minorVersion: ::libc::c_int);
  pub fn qt_gui_c_QSurfaceFormat_setOption_option(this_ptr: *mut ::surface_format::SurfaceFormat, option: ::surface_format::FormatOption);
  pub fn qt_gui_c_QSurfaceFormat_setOption_option_on(this_ptr: *mut ::surface_format::SurfaceFormat, option: ::surface_format::FormatOption, on: bool);
  pub fn qt_gui_c_QSurfaceFormat_setProfile(this_ptr: *mut ::surface_format::SurfaceFormat, profile: ::surface_format::OpenGLContextProfile);
  pub fn qt_gui_c_QSurfaceFormat_setRedBufferSize(this_ptr: *mut ::surface_format::SurfaceFormat, size: ::libc::c_int);
  pub fn qt_gui_c_QSurfaceFormat_setRenderableType(this_ptr: *mut ::surface_format::SurfaceFormat, type_: ::surface_format::RenderableType);
  pub fn qt_gui_c_QSurfaceFormat_setSamples(this_ptr: *mut ::surface_format::SurfaceFormat, numSamples: ::libc::c_int);
  pub fn qt_gui_c_QSurfaceFormat_setStencilBufferSize(this_ptr: *mut ::surface_format::SurfaceFormat, size: ::libc::c_int);
  pub fn qt_gui_c_QSurfaceFormat_setStereo(this_ptr: *mut ::surface_format::SurfaceFormat, enable: bool);
  pub fn qt_gui_c_QSurfaceFormat_setSwapBehavior(this_ptr: *mut ::surface_format::SurfaceFormat, behavior: ::surface_format::SwapBehavior);
  pub fn qt_gui_c_QSurfaceFormat_setSwapInterval(this_ptr: *mut ::surface_format::SurfaceFormat, interval: ::libc::c_int);
  pub fn qt_gui_c_QSurfaceFormat_setVersion(this_ptr: *mut ::surface_format::SurfaceFormat, major: ::libc::c_int, minor: ::libc::c_int);
  pub fn qt_gui_c_QSurfaceFormat_stencilBufferSize(this_ptr: *const ::surface_format::SurfaceFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QSurfaceFormat_stereo(this_ptr: *const ::surface_format::SurfaceFormat) -> bool;
  pub fn qt_gui_c_QSurfaceFormat_swapBehavior(this_ptr: *const ::surface_format::SurfaceFormat) -> ::surface_format::SwapBehavior;
  pub fn qt_gui_c_QSurfaceFormat_swapInterval(this_ptr: *const ::surface_format::SurfaceFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QSurfaceFormat_testOption(this_ptr: *const ::surface_format::SurfaceFormat, option: ::surface_format::FormatOption) -> bool;
  pub fn qt_gui_c_QSurfaceFormat_version_to_output(this_ptr: *const ::surface_format::SurfaceFormat, output: *mut ::pair::PairCIntCInt);

  // Header: QSyntaxHighlighter
  pub fn qt_gui_c_QSyntaxHighlighter_G_static_cast_QObject_ptr(ptr: *mut ::syntax_highlighter::SyntaxHighlighter) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QSyntaxHighlighter_G_static_cast_QSyntaxHighlighter_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::syntax_highlighter::SyntaxHighlighter;
  pub fn qt_gui_c_QSyntaxHighlighter_delete(this_ptr: *mut ::syntax_highlighter::SyntaxHighlighter);
  pub fn qt_gui_c_QSyntaxHighlighter_document(this_ptr: *const ::syntax_highlighter::SyntaxHighlighter) -> *mut ::text_document::TextDocument;
  pub fn qt_gui_c_QSyntaxHighlighter_metaObject(this_ptr: *const ::syntax_highlighter::SyntaxHighlighter) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QSyntaxHighlighter_qt_metacall(this_ptr: *mut ::syntax_highlighter::SyntaxHighlighter, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QSyntaxHighlighter_qt_metacast(this_ptr: *mut ::syntax_highlighter::SyntaxHighlighter, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QSyntaxHighlighter_rehighlight(this_ptr: *mut ::syntax_highlighter::SyntaxHighlighter);
  pub fn qt_gui_c_QSyntaxHighlighter_rehighlightBlock(this_ptr: *mut ::syntax_highlighter::SyntaxHighlighter, block: *const ::text_block::TextBlock);
  pub fn qt_gui_c_QSyntaxHighlighter_setDocument(this_ptr: *mut ::syntax_highlighter::SyntaxHighlighter, doc: *mut ::text_document::TextDocument);
  pub fn qt_gui_c_QSyntaxHighlighter_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QSyntaxHighlighter_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QTabletEvent
  pub fn qt_gui_c_QTabletEvent_G_dynamic_cast_QTabletEvent_ptr(ptr: *mut ::input_event::InputEvent) -> *mut ::tablet_event::TabletEvent;
  pub fn qt_gui_c_QTabletEvent_G_static_cast_QEvent_ptr(ptr: *mut ::tablet_event::TabletEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QTabletEvent_G_static_cast_QInputEvent_ptr(ptr: *mut ::tablet_event::TabletEvent) -> *mut ::input_event::InputEvent;
  pub fn qt_gui_c_QTabletEvent_G_static_cast_QTabletEvent_ptr_QEvent(ptr: *mut ::qt_core::event::Event) -> *mut ::tablet_event::TabletEvent;
  pub fn qt_gui_c_QTabletEvent_G_static_cast_QTabletEvent_ptr_QInputEvent(ptr: *mut ::input_event::InputEvent) -> *mut ::tablet_event::TabletEvent;
  pub fn qt_gui_c_QTabletEvent_delete(this_ptr: *mut ::tablet_event::TabletEvent);
  pub fn qt_gui_c_QTabletEvent_device(this_ptr: *const ::tablet_event::TabletEvent) -> ::tablet_event::TabletDevice;
  pub fn qt_gui_c_QTabletEvent_globalPosF(this_ptr: *const ::tablet_event::TabletEvent) -> *const ::qt_core::point_f::PointF;
  pub fn qt_gui_c_QTabletEvent_globalPos_to_output(this_ptr: *const ::tablet_event::TabletEvent, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QTabletEvent_globalX(this_ptr: *const ::tablet_event::TabletEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QTabletEvent_globalY(this_ptr: *const ::tablet_event::TabletEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QTabletEvent_hiResGlobalX(this_ptr: *const ::tablet_event::TabletEvent) -> ::libc::c_double;
  pub fn qt_gui_c_QTabletEvent_hiResGlobalY(this_ptr: *const ::tablet_event::TabletEvent) -> ::libc::c_double;
  pub fn qt_gui_c_QTabletEvent_pointerType(this_ptr: *const ::tablet_event::TabletEvent) -> ::tablet_event::PointerType;
  pub fn qt_gui_c_QTabletEvent_posF(this_ptr: *const ::tablet_event::TabletEvent) -> *const ::qt_core::point_f::PointF;
  pub fn qt_gui_c_QTabletEvent_pos_to_output(this_ptr: *const ::tablet_event::TabletEvent, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QTabletEvent_pressure(this_ptr: *const ::tablet_event::TabletEvent) -> ::libc::c_double;
  pub fn qt_gui_c_QTabletEvent_rotation(this_ptr: *const ::tablet_event::TabletEvent) -> ::libc::c_double;
  pub fn qt_gui_c_QTabletEvent_tangentialPressure(this_ptr: *const ::tablet_event::TabletEvent) -> ::libc::c_double;
  pub fn qt_gui_c_QTabletEvent_uniqueId(this_ptr: *const ::tablet_event::TabletEvent) -> i64;
  pub fn qt_gui_c_QTabletEvent_x(this_ptr: *const ::tablet_event::TabletEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QTabletEvent_xTilt(this_ptr: *const ::tablet_event::TabletEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QTabletEvent_y(this_ptr: *const ::tablet_event::TabletEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QTabletEvent_yTilt(this_ptr: *const ::tablet_event::TabletEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QTabletEvent_z(this_ptr: *const ::tablet_event::TabletEvent) -> ::libc::c_int;

  // Header: QTextBlock
  pub fn qt_gui_c_QTextBlock_begin_to_output(this_ptr: *const ::text_block::TextBlock, output: *mut ::text_block::Iterator);
  pub fn qt_gui_c_QTextBlock_blockFormatIndex(this_ptr: *const ::text_block::TextBlock) -> ::libc::c_int;
  pub fn qt_gui_c_QTextBlock_blockFormat_to_output(this_ptr: *const ::text_block::TextBlock, output: *mut ::text_block_format::TextBlockFormat);
  pub fn qt_gui_c_QTextBlock_blockNumber(this_ptr: *const ::text_block::TextBlock) -> ::libc::c_int;
  pub fn qt_gui_c_QTextBlock_charFormatIndex(this_ptr: *const ::text_block::TextBlock) -> ::libc::c_int;
  pub fn qt_gui_c_QTextBlock_charFormat_to_output(this_ptr: *const ::text_block::TextBlock, output: *mut ::text_char_format::TextCharFormat);
  pub fn qt_gui_c_QTextBlock_clearLayout(this_ptr: *mut ::text_block::TextBlock);
  pub fn qt_gui_c_QTextBlock_constructor_no_args(output: *mut ::text_block::TextBlock);
  pub fn qt_gui_c_QTextBlock_constructor_o(o: *const ::text_block::TextBlock, output: *mut ::text_block::TextBlock);
  pub fn qt_gui_c_QTextBlock_contains(this_ptr: *const ::text_block::TextBlock, position: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QTextBlock_destructor(this_ptr: *mut ::text_block::TextBlock);
  pub fn qt_gui_c_QTextBlock_document(this_ptr: *const ::text_block::TextBlock) -> *const ::text_document::TextDocument;
  pub fn qt_gui_c_QTextBlock_end_to_output(this_ptr: *const ::text_block::TextBlock, output: *mut ::text_block::Iterator);
  pub fn qt_gui_c_QTextBlock_firstLineNumber(this_ptr: *const ::text_block::TextBlock) -> ::libc::c_int;
  pub fn qt_gui_c_QTextBlock_fragmentIndex(this_ptr: *const ::text_block::TextBlock) -> ::libc::c_int;
  pub fn qt_gui_c_QTextBlock_isValid(this_ptr: *const ::text_block::TextBlock) -> bool;
  pub fn qt_gui_c_QTextBlock_isVisible(this_ptr: *const ::text_block::TextBlock) -> bool;
  pub fn qt_gui_c_QTextBlock_iterator_atEnd(this_ptr: *const ::text_block::Iterator) -> bool;
  pub fn qt_gui_c_QTextBlock_iterator_constructor_no_args(output: *mut ::text_block::Iterator);
  pub fn qt_gui_c_QTextBlock_iterator_constructor_o(o: *const ::text_block::Iterator, output: *mut ::text_block::Iterator);
  pub fn qt_gui_c_QTextBlock_iterator_destructor(this_ptr: *mut ::text_block::Iterator);
  pub fn qt_gui_c_QTextBlock_iterator_fragment_to_output(this_ptr: *const ::text_block::Iterator, output: *mut ::text_fragment::TextFragment);
  pub fn qt_gui_c_QTextBlock_iterator_operator_dec(this_ptr: *mut ::text_block::Iterator) -> *mut ::text_block::Iterator;
  pub fn qt_gui_c_QTextBlock_iterator_operator_dec_postfix_to_output(this_ptr: *mut ::text_block::Iterator, arg1: ::libc::c_int, output: *mut ::text_block::Iterator);
  pub fn qt_gui_c_QTextBlock_iterator_operator_eq(this_ptr: *const ::text_block::Iterator, o: *const ::text_block::Iterator) -> bool;
  pub fn qt_gui_c_QTextBlock_iterator_operator_inc(this_ptr: *mut ::text_block::Iterator) -> *mut ::text_block::Iterator;
  pub fn qt_gui_c_QTextBlock_iterator_operator_inc_postfix_to_output(this_ptr: *mut ::text_block::Iterator, arg1: ::libc::c_int, output: *mut ::text_block::Iterator);
  pub fn qt_gui_c_QTextBlock_iterator_operator_neq(this_ptr: *const ::text_block::Iterator, o: *const ::text_block::Iterator) -> bool;
  pub fn qt_gui_c_QTextBlock_layout(this_ptr: *const ::text_block::TextBlock) -> *mut ::text_layout::TextLayout;
  pub fn qt_gui_c_QTextBlock_length(this_ptr: *const ::text_block::TextBlock) -> ::libc::c_int;
  pub fn qt_gui_c_QTextBlock_lineCount(this_ptr: *const ::text_block::TextBlock) -> ::libc::c_int;
  pub fn qt_gui_c_QTextBlock_next_to_output(this_ptr: *const ::text_block::TextBlock, output: *mut ::text_block::TextBlock);
  pub fn qt_gui_c_QTextBlock_operator_assign(this_ptr: *mut ::text_block::TextBlock, o: *const ::text_block::TextBlock) -> *mut ::text_block::TextBlock;
  pub fn qt_gui_c_QTextBlock_operator_eq(this_ptr: *const ::text_block::TextBlock, o: *const ::text_block::TextBlock) -> bool;
  pub fn qt_gui_c_QTextBlock_operator_lt(this_ptr: *const ::text_block::TextBlock, o: *const ::text_block::TextBlock) -> bool;
  pub fn qt_gui_c_QTextBlock_operator_neq(this_ptr: *const ::text_block::TextBlock, o: *const ::text_block::TextBlock) -> bool;
  pub fn qt_gui_c_QTextBlock_position(this_ptr: *const ::text_block::TextBlock) -> ::libc::c_int;
  pub fn qt_gui_c_QTextBlock_previous_to_output(this_ptr: *const ::text_block::TextBlock, output: *mut ::text_block::TextBlock);
  pub fn qt_gui_c_QTextBlock_revision(this_ptr: *const ::text_block::TextBlock) -> ::libc::c_int;
  pub fn qt_gui_c_QTextBlock_setLineCount(this_ptr: *mut ::text_block::TextBlock, count: ::libc::c_int);
  pub fn qt_gui_c_QTextBlock_setRevision(this_ptr: *mut ::text_block::TextBlock, rev: ::libc::c_int);
  pub fn qt_gui_c_QTextBlock_setUserData(this_ptr: *mut ::text_block::TextBlock, data: *mut ::text_block_user_data::TextBlockUserData);
  pub fn qt_gui_c_QTextBlock_setUserState(this_ptr: *mut ::text_block::TextBlock, state: ::libc::c_int);
  pub fn qt_gui_c_QTextBlock_setVisible(this_ptr: *mut ::text_block::TextBlock, visible: bool);
  pub fn qt_gui_c_QTextBlock_textFormats_to_output(this_ptr: *const ::text_block::TextBlock, output: *mut ::vector::VectorTextLayoutFormatRange);
  pub fn qt_gui_c_QTextBlock_textList(this_ptr: *const ::text_block::TextBlock) -> *mut ::text_list::TextList;
  pub fn qt_gui_c_QTextBlock_text_to_output(this_ptr: *const ::text_block::TextBlock, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextBlock_userData(this_ptr: *const ::text_block::TextBlock) -> *mut ::text_block_user_data::TextBlockUserData;
  pub fn qt_gui_c_QTextBlock_userState(this_ptr: *const ::text_block::TextBlock) -> ::libc::c_int;

  // Header: QTextBlockFormat
  pub fn qt_gui_c_QTextBlockFormat_G_static_cast_QTextBlockFormat_ptr(ptr: *mut ::text_format::TextFormat) -> *mut ::text_block_format::TextBlockFormat;
  pub fn qt_gui_c_QTextBlockFormat_G_static_cast_QTextFormat_ptr(ptr: *mut ::text_block_format::TextBlockFormat) -> *mut ::text_format::TextFormat;
  pub fn qt_gui_c_QTextBlockFormat_bottomMargin(this_ptr: *const ::text_block_format::TextBlockFormat) -> ::libc::c_double;
  pub fn qt_gui_c_QTextBlockFormat_constructor(output: *mut ::text_block_format::TextBlockFormat);
  pub fn qt_gui_c_QTextBlockFormat_destructor(this_ptr: *mut ::text_block_format::TextBlockFormat);
  pub fn qt_gui_c_QTextBlockFormat_indent(this_ptr: *const ::text_block_format::TextBlockFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QTextBlockFormat_isValid(this_ptr: *const ::text_block_format::TextBlockFormat) -> bool;
  pub fn qt_gui_c_QTextBlockFormat_leftMargin(this_ptr: *const ::text_block_format::TextBlockFormat) -> ::libc::c_double;
  pub fn qt_gui_c_QTextBlockFormat_lineHeightType(this_ptr: *const ::text_block_format::TextBlockFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QTextBlockFormat_lineHeight_no_args(this_ptr: *const ::text_block_format::TextBlockFormat) -> ::libc::c_double;
  pub fn qt_gui_c_QTextBlockFormat_lineHeight_scriptLineHeight_scaling(this_ptr: *const ::text_block_format::TextBlockFormat, scriptLineHeight: ::libc::c_double, scaling: ::libc::c_double) -> ::libc::c_double;
  pub fn qt_gui_c_QTextBlockFormat_nonBreakableLines(this_ptr: *const ::text_block_format::TextBlockFormat) -> bool;
  pub fn qt_gui_c_QTextBlockFormat_pageBreakPolicy(this_ptr: *const ::text_block_format::TextBlockFormat) -> ::libc::c_uint;
  pub fn qt_gui_c_QTextBlockFormat_rightMargin(this_ptr: *const ::text_block_format::TextBlockFormat) -> ::libc::c_double;
  pub fn qt_gui_c_QTextBlockFormat_setBottomMargin(this_ptr: *mut ::text_block_format::TextBlockFormat, margin: ::libc::c_double);
  pub fn qt_gui_c_QTextBlockFormat_setIndent(this_ptr: *mut ::text_block_format::TextBlockFormat, indent: ::libc::c_int);
  pub fn qt_gui_c_QTextBlockFormat_setLeftMargin(this_ptr: *mut ::text_block_format::TextBlockFormat, margin: ::libc::c_double);
  pub fn qt_gui_c_QTextBlockFormat_setLineHeight(this_ptr: *mut ::text_block_format::TextBlockFormat, height: ::libc::c_double, heightType: ::libc::c_int);
  pub fn qt_gui_c_QTextBlockFormat_setNonBreakableLines(this_ptr: *mut ::text_block_format::TextBlockFormat, b: bool);
  pub fn qt_gui_c_QTextBlockFormat_setPageBreakPolicy(this_ptr: *mut ::text_block_format::TextBlockFormat, flags: ::libc::c_uint);
  pub fn qt_gui_c_QTextBlockFormat_setRightMargin(this_ptr: *mut ::text_block_format::TextBlockFormat, margin: ::libc::c_double);
  pub fn qt_gui_c_QTextBlockFormat_setTabPositions(this_ptr: *mut ::text_block_format::TextBlockFormat, tabs: *const ::list::ListTextOptionTab);
  pub fn qt_gui_c_QTextBlockFormat_setTextIndent(this_ptr: *mut ::text_block_format::TextBlockFormat, aindent: ::libc::c_double);
  pub fn qt_gui_c_QTextBlockFormat_setTopMargin(this_ptr: *mut ::text_block_format::TextBlockFormat, margin: ::libc::c_double);
  pub fn qt_gui_c_QTextBlockFormat_tabPositions_to_output(this_ptr: *const ::text_block_format::TextBlockFormat, output: *mut ::list::ListTextOptionTab);
  pub fn qt_gui_c_QTextBlockFormat_textIndent(this_ptr: *const ::text_block_format::TextBlockFormat) -> ::libc::c_double;
  pub fn qt_gui_c_QTextBlockFormat_topMargin(this_ptr: *const ::text_block_format::TextBlockFormat) -> ::libc::c_double;

  // Header: QTextBlockGroup
  pub fn qt_gui_c_QTextBlockGroup_G_dynamic_cast_QTextBlockGroup_ptr(ptr: *mut ::text_object::TextObject) -> *mut ::text_block_group::TextBlockGroup;
  pub fn qt_gui_c_QTextBlockGroup_G_static_cast_QObject_ptr(ptr: *mut ::text_block_group::TextBlockGroup) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QTextBlockGroup_G_static_cast_QTextBlockGroup_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::text_block_group::TextBlockGroup;
  pub fn qt_gui_c_QTextBlockGroup_G_static_cast_QTextBlockGroup_ptr_QTextObject(ptr: *mut ::text_object::TextObject) -> *mut ::text_block_group::TextBlockGroup;
  pub fn qt_gui_c_QTextBlockGroup_G_static_cast_QTextObject_ptr(ptr: *mut ::text_block_group::TextBlockGroup) -> *mut ::text_object::TextObject;
  pub fn qt_gui_c_QTextBlockGroup_metaObject(this_ptr: *const ::text_block_group::TextBlockGroup) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QTextBlockGroup_qt_metacall(this_ptr: *mut ::text_block_group::TextBlockGroup, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QTextBlockGroup_qt_metacast(this_ptr: *mut ::text_block_group::TextBlockGroup, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QTextBlockGroup_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextBlockGroup_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QTextBlockUserData
  pub fn qt_gui_c_QTextBlockUserData_delete(this_ptr: *mut ::text_block_user_data::TextBlockUserData);

  // Header: QTextCharFormat
  pub fn qt_gui_c_QTextCharFormat_G_static_cast_QTextCharFormat_ptr(ptr: *mut ::text_format::TextFormat) -> *mut ::text_char_format::TextCharFormat;
  pub fn qt_gui_c_QTextCharFormat_G_static_cast_QTextFormat_ptr(ptr: *mut ::text_char_format::TextCharFormat) -> *mut ::text_format::TextFormat;
  pub fn qt_gui_c_QTextCharFormat_anchorHref_to_output(this_ptr: *const ::text_char_format::TextCharFormat, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextCharFormat_anchorName_to_output(this_ptr: *const ::text_char_format::TextCharFormat, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextCharFormat_anchorNames_to_output(this_ptr: *const ::text_char_format::TextCharFormat, output: *mut ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QTextCharFormat_constructor(output: *mut ::text_char_format::TextCharFormat);
  pub fn qt_gui_c_QTextCharFormat_destructor(this_ptr: *mut ::text_char_format::TextCharFormat);
  pub fn qt_gui_c_QTextCharFormat_fontFamily_to_output(this_ptr: *const ::text_char_format::TextCharFormat, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextCharFormat_fontFixedPitch(this_ptr: *const ::text_char_format::TextCharFormat) -> bool;
  pub fn qt_gui_c_QTextCharFormat_fontItalic(this_ptr: *const ::text_char_format::TextCharFormat) -> bool;
  pub fn qt_gui_c_QTextCharFormat_fontKerning(this_ptr: *const ::text_char_format::TextCharFormat) -> bool;
  pub fn qt_gui_c_QTextCharFormat_fontLetterSpacing(this_ptr: *const ::text_char_format::TextCharFormat) -> ::libc::c_double;
  pub fn qt_gui_c_QTextCharFormat_fontOverline(this_ptr: *const ::text_char_format::TextCharFormat) -> bool;
  pub fn qt_gui_c_QTextCharFormat_fontPointSize(this_ptr: *const ::text_char_format::TextCharFormat) -> ::libc::c_double;
  pub fn qt_gui_c_QTextCharFormat_fontStretch(this_ptr: *const ::text_char_format::TextCharFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QTextCharFormat_fontStrikeOut(this_ptr: *const ::text_char_format::TextCharFormat) -> bool;
  pub fn qt_gui_c_QTextCharFormat_fontUnderline(this_ptr: *const ::text_char_format::TextCharFormat) -> bool;
  pub fn qt_gui_c_QTextCharFormat_fontWeight(this_ptr: *const ::text_char_format::TextCharFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QTextCharFormat_fontWordSpacing(this_ptr: *const ::text_char_format::TextCharFormat) -> ::libc::c_double;
  pub fn qt_gui_c_QTextCharFormat_font_to_output(this_ptr: *const ::text_char_format::TextCharFormat, output: *mut ::font::Font);
  pub fn qt_gui_c_QTextCharFormat_isAnchor(this_ptr: *const ::text_char_format::TextCharFormat) -> bool;
  pub fn qt_gui_c_QTextCharFormat_isValid(this_ptr: *const ::text_char_format::TextCharFormat) -> bool;
  pub fn qt_gui_c_QTextCharFormat_setAnchor(this_ptr: *mut ::text_char_format::TextCharFormat, anchor: bool);
  pub fn qt_gui_c_QTextCharFormat_setAnchorHref(this_ptr: *mut ::text_char_format::TextCharFormat, value: *const ::qt_core::string::String);
  pub fn qt_gui_c_QTextCharFormat_setAnchorName(this_ptr: *mut ::text_char_format::TextCharFormat, name: *const ::qt_core::string::String);
  pub fn qt_gui_c_QTextCharFormat_setAnchorNames(this_ptr: *mut ::text_char_format::TextCharFormat, names: *const ::qt_core::string_list::StringList);
  pub fn qt_gui_c_QTextCharFormat_setFontCapitalization(this_ptr: *mut ::text_char_format::TextCharFormat, capitalization: *const ::font::Capitalization);
  pub fn qt_gui_c_QTextCharFormat_setFontFamily(this_ptr: *mut ::text_char_format::TextCharFormat, family: *const ::qt_core::string::String);
  pub fn qt_gui_c_QTextCharFormat_setFontFixedPitch(this_ptr: *mut ::text_char_format::TextCharFormat, fixedPitch: bool);
  pub fn qt_gui_c_QTextCharFormat_setFontHintingPreference(this_ptr: *mut ::text_char_format::TextCharFormat, hintingPreference: *const ::font::HintingPreference);
  pub fn qt_gui_c_QTextCharFormat_setFontItalic(this_ptr: *mut ::text_char_format::TextCharFormat, italic: bool);
  pub fn qt_gui_c_QTextCharFormat_setFontKerning(this_ptr: *mut ::text_char_format::TextCharFormat, enable: bool);
  pub fn qt_gui_c_QTextCharFormat_setFontLetterSpacing(this_ptr: *mut ::text_char_format::TextCharFormat, spacing: ::libc::c_double);
  pub fn qt_gui_c_QTextCharFormat_setFontLetterSpacingType(this_ptr: *mut ::text_char_format::TextCharFormat, letterSpacingType: *const ::font::SpacingType);
  pub fn qt_gui_c_QTextCharFormat_setFontOverline(this_ptr: *mut ::text_char_format::TextCharFormat, overline: bool);
  pub fn qt_gui_c_QTextCharFormat_setFontPointSize(this_ptr: *mut ::text_char_format::TextCharFormat, size: ::libc::c_double);
  pub fn qt_gui_c_QTextCharFormat_setFontStretch(this_ptr: *mut ::text_char_format::TextCharFormat, factor: ::libc::c_int);
  pub fn qt_gui_c_QTextCharFormat_setFontStrikeOut(this_ptr: *mut ::text_char_format::TextCharFormat, strikeOut: bool);
  pub fn qt_gui_c_QTextCharFormat_setFontStyleHint_hint(this_ptr: *mut ::text_char_format::TextCharFormat, hint: *const ::font::StyleHint);
  pub fn qt_gui_c_QTextCharFormat_setFontStyleHint_hint_strategy(this_ptr: *mut ::text_char_format::TextCharFormat, hint: *const ::font::StyleHint, strategy: *const ::font::StyleStrategy);
  pub fn qt_gui_c_QTextCharFormat_setFontStyleStrategy(this_ptr: *mut ::text_char_format::TextCharFormat, strategy: *const ::font::StyleStrategy);
  pub fn qt_gui_c_QTextCharFormat_setFontUnderline(this_ptr: *mut ::text_char_format::TextCharFormat, underline: bool);
  pub fn qt_gui_c_QTextCharFormat_setFontWeight(this_ptr: *mut ::text_char_format::TextCharFormat, weight: ::libc::c_int);
  pub fn qt_gui_c_QTextCharFormat_setFontWordSpacing(this_ptr: *mut ::text_char_format::TextCharFormat, spacing: ::libc::c_double);
  pub fn qt_gui_c_QTextCharFormat_setFont_font(this_ptr: *mut ::text_char_format::TextCharFormat, font: *const ::font::Font);
  pub fn qt_gui_c_QTextCharFormat_setFont_font_behavior(this_ptr: *mut ::text_char_format::TextCharFormat, font: *const ::font::Font, behavior: ::text_char_format::FontPropertiesInheritanceBehavior);
  pub fn qt_gui_c_QTextCharFormat_setTableCellColumnSpan(this_ptr: *mut ::text_char_format::TextCharFormat, tableCellColumnSpan: ::libc::c_int);
  pub fn qt_gui_c_QTextCharFormat_setTableCellRowSpan(this_ptr: *mut ::text_char_format::TextCharFormat, tableCellRowSpan: ::libc::c_int);
  pub fn qt_gui_c_QTextCharFormat_setTextOutline(this_ptr: *mut ::text_char_format::TextCharFormat, pen: *const ::pen::Pen);
  pub fn qt_gui_c_QTextCharFormat_setToolTip(this_ptr: *mut ::text_char_format::TextCharFormat, tip: *const ::qt_core::string::String);
  pub fn qt_gui_c_QTextCharFormat_setUnderlineColor(this_ptr: *mut ::text_char_format::TextCharFormat, color: *const ::color::Color);
  pub fn qt_gui_c_QTextCharFormat_setUnderlineStyle(this_ptr: *mut ::text_char_format::TextCharFormat, style: ::text_char_format::UnderlineStyle);
  pub fn qt_gui_c_QTextCharFormat_setVerticalAlignment(this_ptr: *mut ::text_char_format::TextCharFormat, alignment: ::text_char_format::VerticalAlignment);
  pub fn qt_gui_c_QTextCharFormat_tableCellColumnSpan(this_ptr: *const ::text_char_format::TextCharFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QTextCharFormat_tableCellRowSpan(this_ptr: *const ::text_char_format::TextCharFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QTextCharFormat_textOutline_to_output(this_ptr: *const ::text_char_format::TextCharFormat, output: *mut ::pen::Pen);
  pub fn qt_gui_c_QTextCharFormat_toolTip_to_output(this_ptr: *const ::text_char_format::TextCharFormat, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextCharFormat_underlineColor_to_output(this_ptr: *const ::text_char_format::TextCharFormat, output: *mut ::color::Color);
  pub fn qt_gui_c_QTextCharFormat_underlineStyle(this_ptr: *const ::text_char_format::TextCharFormat) -> ::text_char_format::UnderlineStyle;
  pub fn qt_gui_c_QTextCharFormat_verticalAlignment(this_ptr: *const ::text_char_format::TextCharFormat) -> ::text_char_format::VerticalAlignment;

  // Header: QTextCursor
  pub fn qt_gui_c_QTextCursor_G_swap(value1: *mut ::text_cursor::TextCursor, value2: *mut ::text_cursor::TextCursor);
  pub fn qt_gui_c_QTextCursor_anchor(this_ptr: *const ::text_cursor::TextCursor) -> ::libc::c_int;
  pub fn qt_gui_c_QTextCursor_atBlockEnd(this_ptr: *const ::text_cursor::TextCursor) -> bool;
  pub fn qt_gui_c_QTextCursor_atBlockStart(this_ptr: *const ::text_cursor::TextCursor) -> bool;
  pub fn qt_gui_c_QTextCursor_atEnd(this_ptr: *const ::text_cursor::TextCursor) -> bool;
  pub fn qt_gui_c_QTextCursor_atStart(this_ptr: *const ::text_cursor::TextCursor) -> bool;
  pub fn qt_gui_c_QTextCursor_beginEditBlock(this_ptr: *mut ::text_cursor::TextCursor);
  pub fn qt_gui_c_QTextCursor_blockCharFormat_to_output(this_ptr: *const ::text_cursor::TextCursor, output: *mut ::text_char_format::TextCharFormat);
  pub fn qt_gui_c_QTextCursor_blockFormat_to_output(this_ptr: *const ::text_cursor::TextCursor, output: *mut ::text_block_format::TextBlockFormat);
  pub fn qt_gui_c_QTextCursor_blockNumber(this_ptr: *const ::text_cursor::TextCursor) -> ::libc::c_int;
  pub fn qt_gui_c_QTextCursor_block_to_output(this_ptr: *const ::text_cursor::TextCursor, output: *mut ::text_block::TextBlock);
  pub fn qt_gui_c_QTextCursor_charFormat_to_output(this_ptr: *const ::text_cursor::TextCursor, output: *mut ::text_char_format::TextCharFormat);
  pub fn qt_gui_c_QTextCursor_clearSelection(this_ptr: *mut ::text_cursor::TextCursor);
  pub fn qt_gui_c_QTextCursor_columnNumber(this_ptr: *const ::text_cursor::TextCursor) -> ::libc::c_int;
  pub fn qt_gui_c_QTextCursor_createList_format(this_ptr: *mut ::text_cursor::TextCursor, format: *const ::text_list_format::TextListFormat) -> *mut ::text_list::TextList;
  pub fn qt_gui_c_QTextCursor_createList_style(this_ptr: *mut ::text_cursor::TextCursor, style: *const ::text_list_format::Style) -> *mut ::text_list::TextList;
  pub fn qt_gui_c_QTextCursor_currentFrame(this_ptr: *const ::text_cursor::TextCursor) -> *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QTextCursor_currentList(this_ptr: *const ::text_cursor::TextCursor) -> *mut ::text_list::TextList;
  pub fn qt_gui_c_QTextCursor_currentTable(this_ptr: *const ::text_cursor::TextCursor) -> *mut ::text_table::TextTable;
  pub fn qt_gui_c_QTextCursor_delete(this_ptr: *mut ::text_cursor::TextCursor);
  pub fn qt_gui_c_QTextCursor_deleteChar(this_ptr: *mut ::text_cursor::TextCursor);
  pub fn qt_gui_c_QTextCursor_deletePreviousChar(this_ptr: *mut ::text_cursor::TextCursor);
  pub fn qt_gui_c_QTextCursor_document(this_ptr: *const ::text_cursor::TextCursor) -> *mut ::text_document::TextDocument;
  pub fn qt_gui_c_QTextCursor_endEditBlock(this_ptr: *mut ::text_cursor::TextCursor);
  pub fn qt_gui_c_QTextCursor_hasComplexSelection(this_ptr: *const ::text_cursor::TextCursor) -> bool;
  pub fn qt_gui_c_QTextCursor_hasSelection(this_ptr: *const ::text_cursor::TextCursor) -> bool;
  pub fn qt_gui_c_QTextCursor_insertBlock_format(this_ptr: *mut ::text_cursor::TextCursor, format: *const ::text_block_format::TextBlockFormat);
  pub fn qt_gui_c_QTextCursor_insertBlock_format_charFormat(this_ptr: *mut ::text_cursor::TextCursor, format: *const ::text_block_format::TextBlockFormat, charFormat: *const ::text_char_format::TextCharFormat);
  pub fn qt_gui_c_QTextCursor_insertBlock_no_args(this_ptr: *mut ::text_cursor::TextCursor);
  pub fn qt_gui_c_QTextCursor_insertFragment(this_ptr: *mut ::text_cursor::TextCursor, fragment: *const ::text_document_fragment::TextDocumentFragment);
  pub fn qt_gui_c_QTextCursor_insertFrame(this_ptr: *mut ::text_cursor::TextCursor, format: *const ::text_frame_format::TextFrameFormat) -> *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QTextCursor_insertHtml(this_ptr: *mut ::text_cursor::TextCursor, html: *const ::qt_core::string::String);
  pub fn qt_gui_c_QTextCursor_insertImage_format(this_ptr: *mut ::text_cursor::TextCursor, format: *const ::text_image_format::TextImageFormat);
  pub fn qt_gui_c_QTextCursor_insertImage_format_alignment(this_ptr: *mut ::text_cursor::TextCursor, format: *const ::text_image_format::TextImageFormat, alignment: *const ::text_frame_format::Position);
  pub fn qt_gui_c_QTextCursor_insertImage_image(this_ptr: *mut ::text_cursor::TextCursor, image: *const ::image::Image);
  pub fn qt_gui_c_QTextCursor_insertImage_image_name(this_ptr: *mut ::text_cursor::TextCursor, image: *const ::image::Image, name: *const ::qt_core::string::String);
  pub fn qt_gui_c_QTextCursor_insertImage_name(this_ptr: *mut ::text_cursor::TextCursor, name: *const ::qt_core::string::String);
  pub fn qt_gui_c_QTextCursor_insertList_format(this_ptr: *mut ::text_cursor::TextCursor, format: *const ::text_list_format::TextListFormat) -> *mut ::text_list::TextList;
  pub fn qt_gui_c_QTextCursor_insertList_style(this_ptr: *mut ::text_cursor::TextCursor, style: *const ::text_list_format::Style) -> *mut ::text_list::TextList;
  pub fn qt_gui_c_QTextCursor_insertTable_rows_cols(this_ptr: *mut ::text_cursor::TextCursor, rows: ::libc::c_int, cols: ::libc::c_int) -> *mut ::text_table::TextTable;
  pub fn qt_gui_c_QTextCursor_insertTable_rows_cols_format(this_ptr: *mut ::text_cursor::TextCursor, rows: ::libc::c_int, cols: ::libc::c_int, format: *const ::text_table_format::TextTableFormat) -> *mut ::text_table::TextTable;
  pub fn qt_gui_c_QTextCursor_insertText_text(this_ptr: *mut ::text_cursor::TextCursor, text: *const ::qt_core::string::String);
  pub fn qt_gui_c_QTextCursor_insertText_text_format(this_ptr: *mut ::text_cursor::TextCursor, text: *const ::qt_core::string::String, format: *const ::text_char_format::TextCharFormat);
  pub fn qt_gui_c_QTextCursor_isCopyOf(this_ptr: *const ::text_cursor::TextCursor, other: *const ::text_cursor::TextCursor) -> bool;
  pub fn qt_gui_c_QTextCursor_isNull(this_ptr: *const ::text_cursor::TextCursor) -> bool;
  pub fn qt_gui_c_QTextCursor_joinPreviousEditBlock(this_ptr: *mut ::text_cursor::TextCursor);
  pub fn qt_gui_c_QTextCursor_keepPositionOnInsert(this_ptr: *const ::text_cursor::TextCursor) -> bool;
  pub fn qt_gui_c_QTextCursor_mergeBlockCharFormat(this_ptr: *mut ::text_cursor::TextCursor, modifier: *const ::text_char_format::TextCharFormat);
  pub fn qt_gui_c_QTextCursor_mergeBlockFormat(this_ptr: *mut ::text_cursor::TextCursor, modifier: *const ::text_block_format::TextBlockFormat);
  pub fn qt_gui_c_QTextCursor_mergeCharFormat(this_ptr: *mut ::text_cursor::TextCursor, modifier: *const ::text_char_format::TextCharFormat);
  pub fn qt_gui_c_QTextCursor_movePosition_op(this_ptr: *mut ::text_cursor::TextCursor, op: ::text_cursor::MoveOperation) -> bool;
  pub fn qt_gui_c_QTextCursor_movePosition_op_arg2(this_ptr: *mut ::text_cursor::TextCursor, op: ::text_cursor::MoveOperation, arg2: ::text_cursor::MoveMode) -> bool;
  pub fn qt_gui_c_QTextCursor_movePosition_op_arg2_n(this_ptr: *mut ::text_cursor::TextCursor, op: ::text_cursor::MoveOperation, arg2: ::text_cursor::MoveMode, n: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QTextCursor_new_block(block: *const ::text_block::TextBlock) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextCursor_new_cursor(cursor: *const ::text_cursor::TextCursor) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextCursor_new_document(document: *mut ::text_document::TextDocument) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextCursor_new_frame(frame: *mut ::text_frame::TextFrame) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextCursor_new_no_args() -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextCursor_operator_assign(this_ptr: *mut ::text_cursor::TextCursor, other: *const ::text_cursor::TextCursor) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextCursor_operator_eq(this_ptr: *const ::text_cursor::TextCursor, rhs: *const ::text_cursor::TextCursor) -> bool;
  pub fn qt_gui_c_QTextCursor_operator_ge(this_ptr: *const ::text_cursor::TextCursor, rhs: *const ::text_cursor::TextCursor) -> bool;
  pub fn qt_gui_c_QTextCursor_operator_gt(this_ptr: *const ::text_cursor::TextCursor, rhs: *const ::text_cursor::TextCursor) -> bool;
  pub fn qt_gui_c_QTextCursor_operator_le(this_ptr: *const ::text_cursor::TextCursor, rhs: *const ::text_cursor::TextCursor) -> bool;
  pub fn qt_gui_c_QTextCursor_operator_lt(this_ptr: *const ::text_cursor::TextCursor, rhs: *const ::text_cursor::TextCursor) -> bool;
  pub fn qt_gui_c_QTextCursor_operator_neq(this_ptr: *const ::text_cursor::TextCursor, rhs: *const ::text_cursor::TextCursor) -> bool;
  pub fn qt_gui_c_QTextCursor_position(this_ptr: *const ::text_cursor::TextCursor) -> ::libc::c_int;
  pub fn qt_gui_c_QTextCursor_positionInBlock(this_ptr: *const ::text_cursor::TextCursor) -> ::libc::c_int;
  pub fn qt_gui_c_QTextCursor_removeSelectedText(this_ptr: *mut ::text_cursor::TextCursor);
  pub fn qt_gui_c_QTextCursor_select(this_ptr: *mut ::text_cursor::TextCursor, selection: ::text_cursor::SelectionType);
  pub fn qt_gui_c_QTextCursor_selectedTableCells(this_ptr: *const ::text_cursor::TextCursor, firstRow: *mut ::libc::c_int, numRows: *mut ::libc::c_int, firstColumn: *mut ::libc::c_int, numColumns: *mut ::libc::c_int);
  pub fn qt_gui_c_QTextCursor_selectedText_to_output(this_ptr: *const ::text_cursor::TextCursor, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextCursor_selectionEnd(this_ptr: *const ::text_cursor::TextCursor) -> ::libc::c_int;
  pub fn qt_gui_c_QTextCursor_selectionStart(this_ptr: *const ::text_cursor::TextCursor) -> ::libc::c_int;
  pub fn qt_gui_c_QTextCursor_selection_to_output(this_ptr: *const ::text_cursor::TextCursor, output: *mut ::text_document_fragment::TextDocumentFragment);
  pub fn qt_gui_c_QTextCursor_setBlockCharFormat(this_ptr: *mut ::text_cursor::TextCursor, format: *const ::text_char_format::TextCharFormat);
  pub fn qt_gui_c_QTextCursor_setBlockFormat(this_ptr: *mut ::text_cursor::TextCursor, format: *const ::text_block_format::TextBlockFormat);
  pub fn qt_gui_c_QTextCursor_setCharFormat(this_ptr: *mut ::text_cursor::TextCursor, format: *const ::text_char_format::TextCharFormat);
  pub fn qt_gui_c_QTextCursor_setKeepPositionOnInsert(this_ptr: *mut ::text_cursor::TextCursor, b: bool);
  pub fn qt_gui_c_QTextCursor_setPosition_pos(this_ptr: *mut ::text_cursor::TextCursor, pos: ::libc::c_int);
  pub fn qt_gui_c_QTextCursor_setPosition_pos_mode(this_ptr: *mut ::text_cursor::TextCursor, pos: ::libc::c_int, mode: ::text_cursor::MoveMode);
  pub fn qt_gui_c_QTextCursor_setVerticalMovementX(this_ptr: *mut ::text_cursor::TextCursor, x: ::libc::c_int);
  pub fn qt_gui_c_QTextCursor_setVisualNavigation(this_ptr: *mut ::text_cursor::TextCursor, b: bool);
  pub fn qt_gui_c_QTextCursor_swap(this_ptr: *mut ::text_cursor::TextCursor, other: *mut ::text_cursor::TextCursor);
  pub fn qt_gui_c_QTextCursor_verticalMovementX(this_ptr: *const ::text_cursor::TextCursor) -> ::libc::c_int;
  pub fn qt_gui_c_QTextCursor_visualNavigation(this_ptr: *const ::text_cursor::TextCursor) -> bool;

  // Header: QTextDocument
  pub fn qt_gui_c_QTextDocument_G_Qt_codecForHtml(ba: *const ::qt_core::byte_array::ByteArray) -> *mut ::qt_core::text_codec::TextCodec;
  pub fn qt_gui_c_QTextDocument_G_Qt_convertFromPlainText_to_output_plain(plain: *const ::qt_core::string::String, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextDocument_G_Qt_convertFromPlainText_to_output_plain_mode(plain: *const ::qt_core::string::String, mode: ::qt_core::qt::WhiteSpaceMode, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextDocument_G_Qt_mightBeRichText(arg1: *const ::qt_core::string::String) -> bool;
  pub fn qt_gui_c_QTextDocument_G_static_cast_QObject_ptr(ptr: *mut ::text_document::TextDocument) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QTextDocument_G_static_cast_QTextDocument_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::text_document::TextDocument;
  pub fn qt_gui_c_QTextDocument_addResource(this_ptr: *mut ::text_document::TextDocument, type_: ::libc::c_int, name: *const ::qt_core::url::Url, resource: *const ::qt_core::variant::Variant);
  pub fn qt_gui_c_QTextDocument_adjustSize(this_ptr: *mut ::text_document::TextDocument);
  pub fn qt_gui_c_QTextDocument_allFormats_to_output(this_ptr: *const ::text_document::TextDocument, output: *mut ::vector::VectorTextFormat);
  pub fn qt_gui_c_QTextDocument_appendUndoItem(this_ptr: *mut ::text_document::TextDocument, arg1: *mut ::abstract_undo_item::AbstractUndoItem);
  pub fn qt_gui_c_QTextDocument_availableRedoSteps(this_ptr: *const ::text_document::TextDocument) -> ::libc::c_int;
  pub fn qt_gui_c_QTextDocument_availableUndoSteps(this_ptr: *const ::text_document::TextDocument) -> ::libc::c_int;
  pub fn qt_gui_c_QTextDocument_baseUrl_to_output(this_ptr: *const ::text_document::TextDocument, output: *mut ::qt_core::url::Url);
  pub fn qt_gui_c_QTextDocument_begin_to_output(this_ptr: *const ::text_document::TextDocument, output: *mut ::text_block::TextBlock);
  pub fn qt_gui_c_QTextDocument_blockCount(this_ptr: *const ::text_document::TextDocument) -> ::libc::c_int;
  pub fn qt_gui_c_QTextDocument_characterAt_to_output(this_ptr: *const ::text_document::TextDocument, pos: ::libc::c_int, output: *mut ::qt_core::char::Char);
  pub fn qt_gui_c_QTextDocument_characterCount(this_ptr: *const ::text_document::TextDocument) -> ::libc::c_int;
  pub fn qt_gui_c_QTextDocument_clear(this_ptr: *mut ::text_document::TextDocument);
  pub fn qt_gui_c_QTextDocument_clearUndoRedoStacks_historyToClear(this_ptr: *mut ::text_document::TextDocument, historyToClear: ::text_document::Stacks);
  pub fn qt_gui_c_QTextDocument_clearUndoRedoStacks_no_args(this_ptr: *mut ::text_document::TextDocument);
  pub fn qt_gui_c_QTextDocument_clone_no_args(this_ptr: *const ::text_document::TextDocument) -> *mut ::text_document::TextDocument;
  pub fn qt_gui_c_QTextDocument_clone_parent(this_ptr: *const ::text_document::TextDocument, parent: *mut ::qt_core::object::Object) -> *mut ::text_document::TextDocument;
  pub fn qt_gui_c_QTextDocument_defaultFont_to_output(this_ptr: *const ::text_document::TextDocument, output: *mut ::font::Font);
  pub fn qt_gui_c_QTextDocument_defaultStyleSheet_to_output(this_ptr: *const ::text_document::TextDocument, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextDocument_defaultTextOption_to_output(this_ptr: *const ::text_document::TextDocument, output: *mut ::text_option::TextOption);
  pub fn qt_gui_c_QTextDocument_delete(this_ptr: *mut ::text_document::TextDocument);
  pub fn qt_gui_c_QTextDocument_documentLayout(this_ptr: *const ::text_document::TextDocument) -> *mut ::abstract_text_document_layout::AbstractTextDocumentLayout;
  pub fn qt_gui_c_QTextDocument_documentMargin(this_ptr: *const ::text_document::TextDocument) -> ::libc::c_double;
  pub fn qt_gui_c_QTextDocument_drawContents_painter(this_ptr: *mut ::text_document::TextDocument, painter: *mut ::painter::Painter);
  pub fn qt_gui_c_QTextDocument_drawContents_painter_rect(this_ptr: *mut ::text_document::TextDocument, painter: *mut ::painter::Painter, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QTextDocument_end_to_output(this_ptr: *const ::text_document::TextDocument, output: *mut ::text_block::TextBlock);
  pub fn qt_gui_c_QTextDocument_findBlockByLineNumber_to_output(this_ptr: *const ::text_document::TextDocument, blockNumber: ::libc::c_int, output: *mut ::text_block::TextBlock);
  pub fn qt_gui_c_QTextDocument_findBlockByNumber_to_output(this_ptr: *const ::text_document::TextDocument, blockNumber: ::libc::c_int, output: *mut ::text_block::TextBlock);
  pub fn qt_gui_c_QTextDocument_findBlock_to_output(this_ptr: *const ::text_document::TextDocument, pos: ::libc::c_int, output: *mut ::text_block::TextBlock);
  pub fn qt_gui_c_QTextDocument_find_as_ptr_QRegExp(this_ptr: *const ::text_document::TextDocument, expr: *const ::qt_core::reg_exp::RegExp) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextDocument_find_as_ptr_QRegExp_QTextCursor(this_ptr: *const ::text_document::TextDocument, expr: *const ::qt_core::reg_exp::RegExp, cursor: *const ::text_cursor::TextCursor) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextDocument_find_as_ptr_QRegExp_QTextCursor_QFlags_QTextDocument_FindFlag(this_ptr: *const ::text_document::TextDocument, expr: *const ::qt_core::reg_exp::RegExp, cursor: *const ::text_cursor::TextCursor, options: ::libc::c_uint) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextDocument_find_as_ptr_QRegExp_int(this_ptr: *const ::text_document::TextDocument, expr: *const ::qt_core::reg_exp::RegExp, from: ::libc::c_int) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextDocument_find_as_ptr_QRegExp_int_QFlags_QTextDocument_FindFlag(this_ptr: *const ::text_document::TextDocument, expr: *const ::qt_core::reg_exp::RegExp, from: ::libc::c_int, options: ::libc::c_uint) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextDocument_find_as_ptr_QRegularExpression(this_ptr: *const ::text_document::TextDocument, expr: *const ::qt_core::regular_expression::RegularExpression) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextDocument_find_as_ptr_QRegularExpression_QTextCursor(this_ptr: *const ::text_document::TextDocument, expr: *const ::qt_core::regular_expression::RegularExpression, cursor: *const ::text_cursor::TextCursor) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextDocument_find_as_ptr_QRegularExpression_QTextCursor_QFlags_QTextDocument_FindFlag(this_ptr: *const ::text_document::TextDocument, expr: *const ::qt_core::regular_expression::RegularExpression, cursor: *const ::text_cursor::TextCursor, options: ::libc::c_uint) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextDocument_find_as_ptr_QRegularExpression_int(this_ptr: *const ::text_document::TextDocument, expr: *const ::qt_core::regular_expression::RegularExpression, from: ::libc::c_int) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextDocument_find_as_ptr_QRegularExpression_int_QFlags_QTextDocument_FindFlag(this_ptr: *const ::text_document::TextDocument, expr: *const ::qt_core::regular_expression::RegularExpression, from: ::libc::c_int, options: ::libc::c_uint) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextDocument_find_as_ptr_QString(this_ptr: *const ::text_document::TextDocument, subString: *const ::qt_core::string::String) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextDocument_find_as_ptr_QString_QTextCursor(this_ptr: *const ::text_document::TextDocument, subString: *const ::qt_core::string::String, cursor: *const ::text_cursor::TextCursor) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextDocument_find_as_ptr_QString_QTextCursor_QFlags_QTextDocument_FindFlag(this_ptr: *const ::text_document::TextDocument, subString: *const ::qt_core::string::String, cursor: *const ::text_cursor::TextCursor, options: ::libc::c_uint) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextDocument_find_as_ptr_QString_int(this_ptr: *const ::text_document::TextDocument, subString: *const ::qt_core::string::String, from: ::libc::c_int) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextDocument_find_as_ptr_QString_int_QFlags_QTextDocument_FindFlag(this_ptr: *const ::text_document::TextDocument, subString: *const ::qt_core::string::String, from: ::libc::c_int, options: ::libc::c_uint) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextDocument_firstBlock_to_output(this_ptr: *const ::text_document::TextDocument, output: *mut ::text_block::TextBlock);
  pub fn qt_gui_c_QTextDocument_frameAt(this_ptr: *const ::text_document::TextDocument, pos: ::libc::c_int) -> *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QTextDocument_idealWidth(this_ptr: *const ::text_document::TextDocument) -> ::libc::c_double;
  pub fn qt_gui_c_QTextDocument_indentWidth(this_ptr: *const ::text_document::TextDocument) -> ::libc::c_double;
  pub fn qt_gui_c_QTextDocument_isEmpty(this_ptr: *const ::text_document::TextDocument) -> bool;
  pub fn qt_gui_c_QTextDocument_isModified(this_ptr: *const ::text_document::TextDocument) -> bool;
  pub fn qt_gui_c_QTextDocument_isRedoAvailable(this_ptr: *const ::text_document::TextDocument) -> bool;
  pub fn qt_gui_c_QTextDocument_isUndoAvailable(this_ptr: *const ::text_document::TextDocument) -> bool;
  pub fn qt_gui_c_QTextDocument_isUndoRedoEnabled(this_ptr: *const ::text_document::TextDocument) -> bool;
  pub fn qt_gui_c_QTextDocument_lastBlock_to_output(this_ptr: *const ::text_document::TextDocument, output: *mut ::text_block::TextBlock);
  pub fn qt_gui_c_QTextDocument_lineCount(this_ptr: *const ::text_document::TextDocument) -> ::libc::c_int;
  pub fn qt_gui_c_QTextDocument_markContentsDirty(this_ptr: *mut ::text_document::TextDocument, from: ::libc::c_int, length: ::libc::c_int);
  pub fn qt_gui_c_QTextDocument_maximumBlockCount(this_ptr: *const ::text_document::TextDocument) -> ::libc::c_int;
  pub fn qt_gui_c_QTextDocument_metaInformation_to_output(this_ptr: *const ::text_document::TextDocument, info: ::text_document::MetaInformation, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextDocument_metaObject(this_ptr: *const ::text_document::TextDocument) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QTextDocument_new_no_args() -> *mut ::text_document::TextDocument;
  pub fn qt_gui_c_QTextDocument_new_parent(parent: *mut ::qt_core::object::Object) -> *mut ::text_document::TextDocument;
  pub fn qt_gui_c_QTextDocument_new_text(text: *const ::qt_core::string::String) -> *mut ::text_document::TextDocument;
  pub fn qt_gui_c_QTextDocument_new_text_parent(text: *const ::qt_core::string::String, parent: *mut ::qt_core::object::Object) -> *mut ::text_document::TextDocument;
  pub fn qt_gui_c_QTextDocument_object(this_ptr: *const ::text_document::TextDocument, objectIndex: ::libc::c_int) -> *mut ::text_object::TextObject;
  pub fn qt_gui_c_QTextDocument_objectForFormat(this_ptr: *const ::text_document::TextDocument, arg1: *const ::text_format::TextFormat) -> *mut ::text_object::TextObject;
  pub fn qt_gui_c_QTextDocument_pageCount(this_ptr: *const ::text_document::TextDocument) -> ::libc::c_int;
  pub fn qt_gui_c_QTextDocument_pageSize_to_output(this_ptr: *const ::text_document::TextDocument, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_gui_c_QTextDocument_print(this_ptr: *const ::text_document::TextDocument, printer: *mut ::paged_paint_device::PagedPaintDevice);
  pub fn qt_gui_c_QTextDocument_qt_metacall(this_ptr: *mut ::text_document::TextDocument, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QTextDocument_qt_metacast(this_ptr: *mut ::text_document::TextDocument, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QTextDocument_redo_cursor(this_ptr: *mut ::text_document::TextDocument, cursor: *mut ::text_cursor::TextCursor);
  pub fn qt_gui_c_QTextDocument_redo_no_args(this_ptr: *mut ::text_document::TextDocument);
  pub fn qt_gui_c_QTextDocument_resource_to_output(this_ptr: *const ::text_document::TextDocument, type_: ::libc::c_int, name: *const ::qt_core::url::Url, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QTextDocument_revision(this_ptr: *const ::text_document::TextDocument) -> ::libc::c_int;
  pub fn qt_gui_c_QTextDocument_rootFrame(this_ptr: *const ::text_document::TextDocument) -> *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QTextDocument_setBaseUrl(this_ptr: *mut ::text_document::TextDocument, url: *const ::qt_core::url::Url);
  pub fn qt_gui_c_QTextDocument_setDefaultCursorMoveStyle(this_ptr: *mut ::text_document::TextDocument, style: *const ::qt_core::qt::CursorMoveStyle);
  pub fn qt_gui_c_QTextDocument_setDefaultFont(this_ptr: *mut ::text_document::TextDocument, font: *const ::font::Font);
  pub fn qt_gui_c_QTextDocument_setDefaultStyleSheet(this_ptr: *mut ::text_document::TextDocument, sheet: *const ::qt_core::string::String);
  pub fn qt_gui_c_QTextDocument_setDefaultTextOption(this_ptr: *mut ::text_document::TextDocument, option: *const ::text_option::TextOption);
  pub fn qt_gui_c_QTextDocument_setDocumentLayout(this_ptr: *mut ::text_document::TextDocument, layout: *mut ::abstract_text_document_layout::AbstractTextDocumentLayout);
  pub fn qt_gui_c_QTextDocument_setDocumentMargin(this_ptr: *mut ::text_document::TextDocument, margin: ::libc::c_double);
  pub fn qt_gui_c_QTextDocument_setHtml(this_ptr: *mut ::text_document::TextDocument, html: *const ::qt_core::string::String);
  pub fn qt_gui_c_QTextDocument_setIndentWidth(this_ptr: *mut ::text_document::TextDocument, width: ::libc::c_double);
  pub fn qt_gui_c_QTextDocument_setMaximumBlockCount(this_ptr: *mut ::text_document::TextDocument, maximum: ::libc::c_int);
  pub fn qt_gui_c_QTextDocument_setMetaInformation(this_ptr: *mut ::text_document::TextDocument, info: ::text_document::MetaInformation, arg2: *const ::qt_core::string::String);
  pub fn qt_gui_c_QTextDocument_setModified_m(this_ptr: *mut ::text_document::TextDocument, m: bool);
  pub fn qt_gui_c_QTextDocument_setModified_no_args(this_ptr: *mut ::text_document::TextDocument);
  pub fn qt_gui_c_QTextDocument_setPageSize(this_ptr: *mut ::text_document::TextDocument, size: *const ::qt_core::size_f::SizeF);
  pub fn qt_gui_c_QTextDocument_setPlainText(this_ptr: *mut ::text_document::TextDocument, text: *const ::qt_core::string::String);
  pub fn qt_gui_c_QTextDocument_setTextWidth(this_ptr: *mut ::text_document::TextDocument, width: ::libc::c_double);
  pub fn qt_gui_c_QTextDocument_setUndoRedoEnabled(this_ptr: *mut ::text_document::TextDocument, enable: bool);
  pub fn qt_gui_c_QTextDocument_setUseDesignMetrics(this_ptr: *mut ::text_document::TextDocument, b: bool);
  pub fn qt_gui_c_QTextDocument_size_to_output(this_ptr: *const ::text_document::TextDocument, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_gui_c_QTextDocument_textWidth(this_ptr: *const ::text_document::TextDocument) -> ::libc::c_double;
  pub fn qt_gui_c_QTextDocument_toHtml_to_output_encoding(this_ptr: *const ::text_document::TextDocument, encoding: *const ::qt_core::byte_array::ByteArray, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextDocument_toHtml_to_output_no_args(this_ptr: *const ::text_document::TextDocument, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextDocument_toPlainText_to_output(this_ptr: *const ::text_document::TextDocument, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextDocument_toRawText_to_output(this_ptr: *const ::text_document::TextDocument, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextDocument_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextDocument_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextDocument_undo_cursor(this_ptr: *mut ::text_document::TextDocument, cursor: *mut ::text_cursor::TextCursor);
  pub fn qt_gui_c_QTextDocument_undo_no_args(this_ptr: *mut ::text_document::TextDocument);
  pub fn qt_gui_c_QTextDocument_useDesignMetrics(this_ptr: *const ::text_document::TextDocument) -> bool;

  // Header: QTextDocumentFragment
  pub fn qt_gui_c_QTextDocumentFragment_constructor_document(document: *const ::text_document::TextDocument, output: *mut ::text_document_fragment::TextDocumentFragment);
  pub fn qt_gui_c_QTextDocumentFragment_constructor_no_args(output: *mut ::text_document_fragment::TextDocumentFragment);
  pub fn qt_gui_c_QTextDocumentFragment_constructor_range(range: *const ::text_cursor::TextCursor, output: *mut ::text_document_fragment::TextDocumentFragment);
  pub fn qt_gui_c_QTextDocumentFragment_constructor_rhs(rhs: *const ::text_document_fragment::TextDocumentFragment, output: *mut ::text_document_fragment::TextDocumentFragment);
  pub fn qt_gui_c_QTextDocumentFragment_destructor(this_ptr: *mut ::text_document_fragment::TextDocumentFragment);
  pub fn qt_gui_c_QTextDocumentFragment_fromHtml_to_output_html(html: *const ::qt_core::string::String, output: *mut ::text_document_fragment::TextDocumentFragment);
  pub fn qt_gui_c_QTextDocumentFragment_fromHtml_to_output_html_resourceProvider(html: *const ::qt_core::string::String, resourceProvider: *const ::text_document::TextDocument, output: *mut ::text_document_fragment::TextDocumentFragment);
  pub fn qt_gui_c_QTextDocumentFragment_fromPlainText_to_output(plainText: *const ::qt_core::string::String, output: *mut ::text_document_fragment::TextDocumentFragment);
  pub fn qt_gui_c_QTextDocumentFragment_isEmpty(this_ptr: *const ::text_document_fragment::TextDocumentFragment) -> bool;
  pub fn qt_gui_c_QTextDocumentFragment_operator_assign(this_ptr: *mut ::text_document_fragment::TextDocumentFragment, rhs: *const ::text_document_fragment::TextDocumentFragment) -> *mut ::text_document_fragment::TextDocumentFragment;
  pub fn qt_gui_c_QTextDocumentFragment_toHtml_to_output_encoding(this_ptr: *const ::text_document_fragment::TextDocumentFragment, encoding: *const ::qt_core::byte_array::ByteArray, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextDocumentFragment_toHtml_to_output_no_args(this_ptr: *const ::text_document_fragment::TextDocumentFragment, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextDocumentFragment_toPlainText_to_output(this_ptr: *const ::text_document_fragment::TextDocumentFragment, output: *mut ::qt_core::string::String);

  // Header: QTextDocumentWriter
  pub fn qt_gui_c_QTextDocumentWriter_codec(this_ptr: *const ::text_document_writer::TextDocumentWriter) -> *mut ::qt_core::text_codec::TextCodec;
  pub fn qt_gui_c_QTextDocumentWriter_constructor_device_format(device: *mut ::qt_core::io_device::IODevice, format: *const ::qt_core::byte_array::ByteArray, output: *mut ::text_document_writer::TextDocumentWriter);
  pub fn qt_gui_c_QTextDocumentWriter_constructor_fileName(fileName: *const ::qt_core::string::String, output: *mut ::text_document_writer::TextDocumentWriter);
  pub fn qt_gui_c_QTextDocumentWriter_constructor_fileName_format(fileName: *const ::qt_core::string::String, format: *const ::qt_core::byte_array::ByteArray, output: *mut ::text_document_writer::TextDocumentWriter);
  pub fn qt_gui_c_QTextDocumentWriter_constructor_no_args(output: *mut ::text_document_writer::TextDocumentWriter);
  pub fn qt_gui_c_QTextDocumentWriter_destructor(this_ptr: *mut ::text_document_writer::TextDocumentWriter);
  pub fn qt_gui_c_QTextDocumentWriter_device(this_ptr: *const ::text_document_writer::TextDocumentWriter) -> *mut ::qt_core::io_device::IODevice;
  pub fn qt_gui_c_QTextDocumentWriter_fileName_to_output(this_ptr: *const ::text_document_writer::TextDocumentWriter, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextDocumentWriter_format_to_output(this_ptr: *const ::text_document_writer::TextDocumentWriter, output: *mut ::qt_core::byte_array::ByteArray);
  pub fn qt_gui_c_QTextDocumentWriter_setCodec(this_ptr: *mut ::text_document_writer::TextDocumentWriter, codec: *mut ::qt_core::text_codec::TextCodec);
  pub fn qt_gui_c_QTextDocumentWriter_setDevice(this_ptr: *mut ::text_document_writer::TextDocumentWriter, device: *mut ::qt_core::io_device::IODevice);
  pub fn qt_gui_c_QTextDocumentWriter_setFileName(this_ptr: *mut ::text_document_writer::TextDocumentWriter, fileName: *const ::qt_core::string::String);
  pub fn qt_gui_c_QTextDocumentWriter_setFormat(this_ptr: *mut ::text_document_writer::TextDocumentWriter, format: *const ::qt_core::byte_array::ByteArray);
  pub fn qt_gui_c_QTextDocumentWriter_supportedDocumentFormats_to_output(output: *mut ::qt_core::list::ListByteArray);
  pub fn qt_gui_c_QTextDocumentWriter_write_document(this_ptr: *mut ::text_document_writer::TextDocumentWriter, document: *const ::text_document::TextDocument) -> bool;
  pub fn qt_gui_c_QTextDocumentWriter_write_fragment(this_ptr: *mut ::text_document_writer::TextDocumentWriter, fragment: *const ::text_document_fragment::TextDocumentFragment) -> bool;

  // Header: QTextFormat
  pub fn qt_gui_c_QTextFormat_G_operator_shl_QDataStream_QTextFormat(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *const ::text_format::TextFormat) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QTextFormat_G_operator_shl_QDataStream_QTextLength(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *const ::text_length::TextLength) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QTextFormat_G_operator_shl_to_output_QDebug_QTextFormat(arg1: *const ::qt_core::debug::Debug, arg2: *const ::text_format::TextFormat, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QTextFormat_G_operator_shl_to_output_QDebug_QTextLength(arg1: *const ::qt_core::debug::Debug, arg2: *const ::text_length::TextLength, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QTextFormat_G_operator_shr_QDataStream_QTextFormat(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *mut ::text_format::TextFormat) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QTextFormat_G_operator_shr_QDataStream_QTextLength(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *mut ::text_length::TextLength) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QTextFormat_G_swap_QTextBlockFormat_QTextBlockFormat(value1: *mut ::text_block_format::TextBlockFormat, value2: *mut ::text_block_format::TextBlockFormat);
  pub fn qt_gui_c_QTextFormat_G_swap_QTextCharFormat_QTextCharFormat(value1: *mut ::text_char_format::TextCharFormat, value2: *mut ::text_char_format::TextCharFormat);
  pub fn qt_gui_c_QTextFormat_G_swap_QTextFormat_QTextFormat(value1: *mut ::text_format::TextFormat, value2: *mut ::text_format::TextFormat);
  pub fn qt_gui_c_QTextFormat_G_swap_QTextFrameFormat_QTextFrameFormat(value1: *mut ::text_frame_format::TextFrameFormat, value2: *mut ::text_frame_format::TextFrameFormat);
  pub fn qt_gui_c_QTextFormat_G_swap_QTextImageFormat_QTextImageFormat(value1: *mut ::text_image_format::TextImageFormat, value2: *mut ::text_image_format::TextImageFormat);
  pub fn qt_gui_c_QTextFormat_G_swap_QTextListFormat_QTextListFormat(value1: *mut ::text_list_format::TextListFormat, value2: *mut ::text_list_format::TextListFormat);
  pub fn qt_gui_c_QTextFormat_G_swap_QTextTableCellFormat_QTextTableCellFormat(value1: *mut ::text_table_cell_format::TextTableCellFormat, value2: *mut ::text_table_cell_format::TextTableCellFormat);
  pub fn qt_gui_c_QTextFormat_G_swap_QTextTableFormat_QTextTableFormat(value1: *mut ::text_table_format::TextTableFormat, value2: *mut ::text_table_format::TextTableFormat);
  pub fn qt_gui_c_QTextFormat_background_to_output(this_ptr: *const ::text_format::TextFormat, output: *mut ::brush::Brush);
  pub fn qt_gui_c_QTextFormat_boolProperty(this_ptr: *const ::text_format::TextFormat, propertyId: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QTextFormat_brushProperty_to_output(this_ptr: *const ::text_format::TextFormat, propertyId: ::libc::c_int, output: *mut ::brush::Brush);
  pub fn qt_gui_c_QTextFormat_clearBackground(this_ptr: *mut ::text_format::TextFormat);
  pub fn qt_gui_c_QTextFormat_clearForeground(this_ptr: *mut ::text_format::TextFormat);
  pub fn qt_gui_c_QTextFormat_clearProperty(this_ptr: *mut ::text_format::TextFormat, propertyId: ::libc::c_int);
  pub fn qt_gui_c_QTextFormat_colorProperty_to_output(this_ptr: *const ::text_format::TextFormat, propertyId: ::libc::c_int, output: *mut ::color::Color);
  pub fn qt_gui_c_QTextFormat_constructor_no_args(output: *mut ::text_format::TextFormat);
  pub fn qt_gui_c_QTextFormat_constructor_rhs(rhs: *const ::text_format::TextFormat, output: *mut ::text_format::TextFormat);
  pub fn qt_gui_c_QTextFormat_constructor_type(type_: ::libc::c_int, output: *mut ::text_format::TextFormat);
  pub fn qt_gui_c_QTextFormat_convert_to_QVariant_to_output(this_ptr: *const ::text_format::TextFormat, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QTextFormat_destructor(this_ptr: *mut ::text_format::TextFormat);
  pub fn qt_gui_c_QTextFormat_doubleProperty(this_ptr: *const ::text_format::TextFormat, propertyId: ::libc::c_int) -> ::libc::c_double;
  pub fn qt_gui_c_QTextFormat_foreground_to_output(this_ptr: *const ::text_format::TextFormat, output: *mut ::brush::Brush);
  pub fn qt_gui_c_QTextFormat_hasProperty(this_ptr: *const ::text_format::TextFormat, propertyId: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QTextFormat_intProperty(this_ptr: *const ::text_format::TextFormat, propertyId: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QTextFormat_isBlockFormat(this_ptr: *const ::text_format::TextFormat) -> bool;
  pub fn qt_gui_c_QTextFormat_isCharFormat(this_ptr: *const ::text_format::TextFormat) -> bool;
  pub fn qt_gui_c_QTextFormat_isEmpty(this_ptr: *const ::text_format::TextFormat) -> bool;
  pub fn qt_gui_c_QTextFormat_isFrameFormat(this_ptr: *const ::text_format::TextFormat) -> bool;
  pub fn qt_gui_c_QTextFormat_isImageFormat(this_ptr: *const ::text_format::TextFormat) -> bool;
  pub fn qt_gui_c_QTextFormat_isListFormat(this_ptr: *const ::text_format::TextFormat) -> bool;
  pub fn qt_gui_c_QTextFormat_isTableCellFormat(this_ptr: *const ::text_format::TextFormat) -> bool;
  pub fn qt_gui_c_QTextFormat_isTableFormat(this_ptr: *const ::text_format::TextFormat) -> bool;
  pub fn qt_gui_c_QTextFormat_isValid(this_ptr: *const ::text_format::TextFormat) -> bool;
  pub fn qt_gui_c_QTextFormat_lengthProperty_to_output(this_ptr: *const ::text_format::TextFormat, propertyId: ::libc::c_int, output: *mut ::text_length::TextLength);
  pub fn qt_gui_c_QTextFormat_lengthVectorProperty_to_output(this_ptr: *const ::text_format::TextFormat, propertyId: ::libc::c_int, output: *mut ::vector::VectorTextLength);
  pub fn qt_gui_c_QTextFormat_merge(this_ptr: *mut ::text_format::TextFormat, other: *const ::text_format::TextFormat);
  pub fn qt_gui_c_QTextFormat_objectIndex(this_ptr: *const ::text_format::TextFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QTextFormat_objectType(this_ptr: *const ::text_format::TextFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QTextFormat_operator_assign(this_ptr: *mut ::text_format::TextFormat, rhs: *const ::text_format::TextFormat) -> *mut ::text_format::TextFormat;
  pub fn qt_gui_c_QTextFormat_operator_eq(this_ptr: *const ::text_format::TextFormat, rhs: *const ::text_format::TextFormat) -> bool;
  pub fn qt_gui_c_QTextFormat_operator_neq(this_ptr: *const ::text_format::TextFormat, rhs: *const ::text_format::TextFormat) -> bool;
  pub fn qt_gui_c_QTextFormat_penProperty_to_output(this_ptr: *const ::text_format::TextFormat, propertyId: ::libc::c_int, output: *mut ::pen::Pen);
  pub fn qt_gui_c_QTextFormat_properties_to_output(this_ptr: *const ::text_format::TextFormat, output: *mut ::qt_core::map::MapCIntVariant);
  pub fn qt_gui_c_QTextFormat_propertyCount(this_ptr: *const ::text_format::TextFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QTextFormat_property_to_output(this_ptr: *const ::text_format::TextFormat, propertyId: ::libc::c_int, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QTextFormat_setBackground(this_ptr: *mut ::text_format::TextFormat, brush: *const ::brush::Brush);
  pub fn qt_gui_c_QTextFormat_setForeground(this_ptr: *mut ::text_format::TextFormat, brush: *const ::brush::Brush);
  pub fn qt_gui_c_QTextFormat_setLayoutDirection(this_ptr: *mut ::text_format::TextFormat, direction: *const ::qt_core::qt::LayoutDirection);
  pub fn qt_gui_c_QTextFormat_setObjectIndex(this_ptr: *mut ::text_format::TextFormat, object: ::libc::c_int);
  pub fn qt_gui_c_QTextFormat_setObjectType(this_ptr: *mut ::text_format::TextFormat, type_: ::libc::c_int);
  pub fn qt_gui_c_QTextFormat_setProperty_propertyId_lengths(this_ptr: *mut ::text_format::TextFormat, propertyId: ::libc::c_int, lengths: *const ::vector::VectorTextLength);
  pub fn qt_gui_c_QTextFormat_setProperty_propertyId_value(this_ptr: *mut ::text_format::TextFormat, propertyId: ::libc::c_int, value: *const ::qt_core::variant::Variant);
  pub fn qt_gui_c_QTextFormat_stringProperty_to_output(this_ptr: *const ::text_format::TextFormat, propertyId: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextFormat_swap(this_ptr: *mut ::text_format::TextFormat, other: *mut ::text_format::TextFormat);
  pub fn qt_gui_c_QTextFormat_toBlockFormat_to_output(this_ptr: *const ::text_format::TextFormat, output: *mut ::text_block_format::TextBlockFormat);
  pub fn qt_gui_c_QTextFormat_toCharFormat_to_output(this_ptr: *const ::text_format::TextFormat, output: *mut ::text_char_format::TextCharFormat);
  pub fn qt_gui_c_QTextFormat_toFrameFormat_to_output(this_ptr: *const ::text_format::TextFormat, output: *mut ::text_frame_format::TextFrameFormat);
  pub fn qt_gui_c_QTextFormat_toImageFormat_to_output(this_ptr: *const ::text_format::TextFormat, output: *mut ::text_image_format::TextImageFormat);
  pub fn qt_gui_c_QTextFormat_toListFormat_to_output(this_ptr: *const ::text_format::TextFormat, output: *mut ::text_list_format::TextListFormat);
  pub fn qt_gui_c_QTextFormat_toTableCellFormat_to_output(this_ptr: *const ::text_format::TextFormat, output: *mut ::text_table_cell_format::TextTableCellFormat);
  pub fn qt_gui_c_QTextFormat_toTableFormat_to_output(this_ptr: *const ::text_format::TextFormat, output: *mut ::text_table_format::TextTableFormat);
  pub fn qt_gui_c_QTextFormat_type(this_ptr: *const ::text_format::TextFormat) -> ::libc::c_int;

  // Header: QTextFragment
  pub fn qt_gui_c_QTextFragment_charFormatIndex(this_ptr: *const ::text_fragment::TextFragment) -> ::libc::c_int;
  pub fn qt_gui_c_QTextFragment_charFormat_to_output(this_ptr: *const ::text_fragment::TextFragment, output: *mut ::text_char_format::TextCharFormat);
  pub fn qt_gui_c_QTextFragment_constructor_no_args(output: *mut ::text_fragment::TextFragment);
  pub fn qt_gui_c_QTextFragment_constructor_o(o: *const ::text_fragment::TextFragment, output: *mut ::text_fragment::TextFragment);
  pub fn qt_gui_c_QTextFragment_contains(this_ptr: *const ::text_fragment::TextFragment, position: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QTextFragment_destructor(this_ptr: *mut ::text_fragment::TextFragment);
  pub fn qt_gui_c_QTextFragment_glyphRuns_to_output_from(this_ptr: *const ::text_fragment::TextFragment, from: ::libc::c_int, output: *mut ::list::ListGlyphRun);
  pub fn qt_gui_c_QTextFragment_glyphRuns_to_output_from_length(this_ptr: *const ::text_fragment::TextFragment, from: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListGlyphRun);
  pub fn qt_gui_c_QTextFragment_glyphRuns_to_output_no_args(this_ptr: *const ::text_fragment::TextFragment, output: *mut ::list::ListGlyphRun);
  pub fn qt_gui_c_QTextFragment_isValid(this_ptr: *const ::text_fragment::TextFragment) -> bool;
  pub fn qt_gui_c_QTextFragment_length(this_ptr: *const ::text_fragment::TextFragment) -> ::libc::c_int;
  pub fn qt_gui_c_QTextFragment_operator_assign(this_ptr: *mut ::text_fragment::TextFragment, o: *const ::text_fragment::TextFragment) -> *mut ::text_fragment::TextFragment;
  pub fn qt_gui_c_QTextFragment_operator_eq(this_ptr: *const ::text_fragment::TextFragment, o: *const ::text_fragment::TextFragment) -> bool;
  pub fn qt_gui_c_QTextFragment_operator_lt(this_ptr: *const ::text_fragment::TextFragment, o: *const ::text_fragment::TextFragment) -> bool;
  pub fn qt_gui_c_QTextFragment_operator_neq(this_ptr: *const ::text_fragment::TextFragment, o: *const ::text_fragment::TextFragment) -> bool;
  pub fn qt_gui_c_QTextFragment_position(this_ptr: *const ::text_fragment::TextFragment) -> ::libc::c_int;
  pub fn qt_gui_c_QTextFragment_text_to_output(this_ptr: *const ::text_fragment::TextFragment, output: *mut ::qt_core::string::String);

  // Header: QTextFrame
  pub fn qt_gui_c_QTextFrame_G_dynamic_cast_QTextFrame_ptr(ptr: *mut ::text_object::TextObject) -> *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QTextFrame_G_static_cast_QObject_ptr(ptr: *mut ::text_frame::TextFrame) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QTextFrame_G_static_cast_QTextFrame_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QTextFrame_G_static_cast_QTextFrame_ptr_QTextObject(ptr: *mut ::text_object::TextObject) -> *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QTextFrame_G_static_cast_QTextObject_ptr(ptr: *mut ::text_frame::TextFrame) -> *mut ::text_object::TextObject;
  pub fn qt_gui_c_QTextFrame_begin_to_output(this_ptr: *const ::text_frame::TextFrame, output: *mut ::text_frame::Iterator);
  pub fn qt_gui_c_QTextFrame_childFrames_to_output(this_ptr: *const ::text_frame::TextFrame, output: *mut ::list::ListTextFrameMutPtr);
  pub fn qt_gui_c_QTextFrame_delete(this_ptr: *mut ::text_frame::TextFrame);
  pub fn qt_gui_c_QTextFrame_end_to_output(this_ptr: *const ::text_frame::TextFrame, output: *mut ::text_frame::Iterator);
  pub fn qt_gui_c_QTextFrame_firstCursorPosition_as_ptr(this_ptr: *const ::text_frame::TextFrame) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextFrame_firstPosition(this_ptr: *const ::text_frame::TextFrame) -> ::libc::c_int;
  pub fn qt_gui_c_QTextFrame_frameFormat_to_output(this_ptr: *const ::text_frame::TextFrame, output: *mut ::text_frame_format::TextFrameFormat);
  pub fn qt_gui_c_QTextFrame_iterator_atEnd(this_ptr: *const ::text_frame::Iterator) -> bool;
  pub fn qt_gui_c_QTextFrame_iterator_constructor_no_args(output: *mut ::text_frame::Iterator);
  pub fn qt_gui_c_QTextFrame_iterator_constructor_o(o: *const ::text_frame::Iterator, output: *mut ::text_frame::Iterator);
  pub fn qt_gui_c_QTextFrame_iterator_currentBlock_to_output(this_ptr: *const ::text_frame::Iterator, output: *mut ::text_block::TextBlock);
  pub fn qt_gui_c_QTextFrame_iterator_currentFrame(this_ptr: *const ::text_frame::Iterator) -> *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QTextFrame_iterator_destructor(this_ptr: *mut ::text_frame::Iterator);
  pub fn qt_gui_c_QTextFrame_iterator_operator_assign(this_ptr: *mut ::text_frame::Iterator, o: *const ::text_frame::Iterator) -> *mut ::text_frame::Iterator;
  pub fn qt_gui_c_QTextFrame_iterator_operator_dec(this_ptr: *mut ::text_frame::Iterator) -> *mut ::text_frame::Iterator;
  pub fn qt_gui_c_QTextFrame_iterator_operator_dec_postfix_to_output(this_ptr: *mut ::text_frame::Iterator, arg1: ::libc::c_int, output: *mut ::text_frame::Iterator);
  pub fn qt_gui_c_QTextFrame_iterator_operator_eq(this_ptr: *const ::text_frame::Iterator, o: *const ::text_frame::Iterator) -> bool;
  pub fn qt_gui_c_QTextFrame_iterator_operator_inc(this_ptr: *mut ::text_frame::Iterator) -> *mut ::text_frame::Iterator;
  pub fn qt_gui_c_QTextFrame_iterator_operator_inc_postfix_to_output(this_ptr: *mut ::text_frame::Iterator, arg1: ::libc::c_int, output: *mut ::text_frame::Iterator);
  pub fn qt_gui_c_QTextFrame_iterator_operator_neq(this_ptr: *const ::text_frame::Iterator, o: *const ::text_frame::Iterator) -> bool;
  pub fn qt_gui_c_QTextFrame_iterator_parentFrame(this_ptr: *const ::text_frame::Iterator) -> *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QTextFrame_lastCursorPosition_as_ptr(this_ptr: *const ::text_frame::TextFrame) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextFrame_lastPosition(this_ptr: *const ::text_frame::TextFrame) -> ::libc::c_int;
  pub fn qt_gui_c_QTextFrame_metaObject(this_ptr: *const ::text_frame::TextFrame) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QTextFrame_new(doc: *mut ::text_document::TextDocument) -> *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QTextFrame_parentFrame(this_ptr: *const ::text_frame::TextFrame) -> *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QTextFrame_qt_metacall(this_ptr: *mut ::text_frame::TextFrame, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QTextFrame_qt_metacast(this_ptr: *mut ::text_frame::TextFrame, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QTextFrame_setFrameFormat(this_ptr: *mut ::text_frame::TextFrame, format: *const ::text_frame_format::TextFrameFormat);
  pub fn qt_gui_c_QTextFrame_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextFrame_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QTextFrameFormat
  pub fn qt_gui_c_QTextFrameFormat_G_static_cast_QTextFormat_ptr(ptr: *mut ::text_frame_format::TextFrameFormat) -> *mut ::text_format::TextFormat;
  pub fn qt_gui_c_QTextFrameFormat_G_static_cast_QTextFrameFormat_ptr(ptr: *mut ::text_format::TextFormat) -> *mut ::text_frame_format::TextFrameFormat;
  pub fn qt_gui_c_QTextFrameFormat_border(this_ptr: *const ::text_frame_format::TextFrameFormat) -> ::libc::c_double;
  pub fn qt_gui_c_QTextFrameFormat_borderBrush_to_output(this_ptr: *const ::text_frame_format::TextFrameFormat, output: *mut ::brush::Brush);
  pub fn qt_gui_c_QTextFrameFormat_borderStyle(this_ptr: *const ::text_frame_format::TextFrameFormat) -> ::text_frame_format::BorderStyle;
  pub fn qt_gui_c_QTextFrameFormat_bottomMargin(this_ptr: *const ::text_frame_format::TextFrameFormat) -> ::libc::c_double;
  pub fn qt_gui_c_QTextFrameFormat_constructor(output: *mut ::text_frame_format::TextFrameFormat);
  pub fn qt_gui_c_QTextFrameFormat_destructor(this_ptr: *mut ::text_frame_format::TextFrameFormat);
  pub fn qt_gui_c_QTextFrameFormat_height_to_output(this_ptr: *const ::text_frame_format::TextFrameFormat, output: *mut ::text_length::TextLength);
  pub fn qt_gui_c_QTextFrameFormat_isValid(this_ptr: *const ::text_frame_format::TextFrameFormat) -> bool;
  pub fn qt_gui_c_QTextFrameFormat_leftMargin(this_ptr: *const ::text_frame_format::TextFrameFormat) -> ::libc::c_double;
  pub fn qt_gui_c_QTextFrameFormat_margin(this_ptr: *const ::text_frame_format::TextFrameFormat) -> ::libc::c_double;
  pub fn qt_gui_c_QTextFrameFormat_padding(this_ptr: *const ::text_frame_format::TextFrameFormat) -> ::libc::c_double;
  pub fn qt_gui_c_QTextFrameFormat_pageBreakPolicy(this_ptr: *const ::text_frame_format::TextFrameFormat) -> ::libc::c_uint;
  pub fn qt_gui_c_QTextFrameFormat_position(this_ptr: *const ::text_frame_format::TextFrameFormat) -> ::text_frame_format::Position;
  pub fn qt_gui_c_QTextFrameFormat_rightMargin(this_ptr: *const ::text_frame_format::TextFrameFormat) -> ::libc::c_double;
  pub fn qt_gui_c_QTextFrameFormat_setBorder(this_ptr: *mut ::text_frame_format::TextFrameFormat, border: ::libc::c_double);
  pub fn qt_gui_c_QTextFrameFormat_setBorderBrush(this_ptr: *mut ::text_frame_format::TextFrameFormat, brush: *const ::brush::Brush);
  pub fn qt_gui_c_QTextFrameFormat_setBorderStyle(this_ptr: *mut ::text_frame_format::TextFrameFormat, style: ::text_frame_format::BorderStyle);
  pub fn qt_gui_c_QTextFrameFormat_setBottomMargin(this_ptr: *mut ::text_frame_format::TextFrameFormat, margin: ::libc::c_double);
  pub fn qt_gui_c_QTextFrameFormat_setHeight_QTextLength(this_ptr: *mut ::text_frame_format::TextFrameFormat, height: *const ::text_length::TextLength);
  pub fn qt_gui_c_QTextFrameFormat_setHeight_double(this_ptr: *mut ::text_frame_format::TextFrameFormat, height: ::libc::c_double);
  pub fn qt_gui_c_QTextFrameFormat_setLeftMargin(this_ptr: *mut ::text_frame_format::TextFrameFormat, margin: ::libc::c_double);
  pub fn qt_gui_c_QTextFrameFormat_setMargin(this_ptr: *mut ::text_frame_format::TextFrameFormat, margin: ::libc::c_double);
  pub fn qt_gui_c_QTextFrameFormat_setPadding(this_ptr: *mut ::text_frame_format::TextFrameFormat, padding: ::libc::c_double);
  pub fn qt_gui_c_QTextFrameFormat_setPageBreakPolicy(this_ptr: *mut ::text_frame_format::TextFrameFormat, flags: ::libc::c_uint);
  pub fn qt_gui_c_QTextFrameFormat_setPosition(this_ptr: *mut ::text_frame_format::TextFrameFormat, f: ::text_frame_format::Position);
  pub fn qt_gui_c_QTextFrameFormat_setRightMargin(this_ptr: *mut ::text_frame_format::TextFrameFormat, margin: ::libc::c_double);
  pub fn qt_gui_c_QTextFrameFormat_setTopMargin(this_ptr: *mut ::text_frame_format::TextFrameFormat, margin: ::libc::c_double);
  pub fn qt_gui_c_QTextFrameFormat_setWidth_length(this_ptr: *mut ::text_frame_format::TextFrameFormat, length: *const ::text_length::TextLength);
  pub fn qt_gui_c_QTextFrameFormat_setWidth_width(this_ptr: *mut ::text_frame_format::TextFrameFormat, width: ::libc::c_double);
  pub fn qt_gui_c_QTextFrameFormat_topMargin(this_ptr: *const ::text_frame_format::TextFrameFormat) -> ::libc::c_double;
  pub fn qt_gui_c_QTextFrameFormat_width_to_output(this_ptr: *const ::text_frame_format::TextFrameFormat, output: *mut ::text_length::TextLength);

  // Header: QTextImageFormat
  pub fn qt_gui_c_QTextImageFormat_G_static_cast_QTextCharFormat_ptr(ptr: *mut ::text_image_format::TextImageFormat) -> *mut ::text_char_format::TextCharFormat;
  pub fn qt_gui_c_QTextImageFormat_G_static_cast_QTextFormat_ptr(ptr: *mut ::text_image_format::TextImageFormat) -> *mut ::text_format::TextFormat;
  pub fn qt_gui_c_QTextImageFormat_G_static_cast_QTextImageFormat_ptr_QTextCharFormat(ptr: *mut ::text_char_format::TextCharFormat) -> *mut ::text_image_format::TextImageFormat;
  pub fn qt_gui_c_QTextImageFormat_G_static_cast_QTextImageFormat_ptr_QTextFormat(ptr: *mut ::text_format::TextFormat) -> *mut ::text_image_format::TextImageFormat;
  pub fn qt_gui_c_QTextImageFormat_constructor(output: *mut ::text_image_format::TextImageFormat);
  pub fn qt_gui_c_QTextImageFormat_destructor(this_ptr: *mut ::text_image_format::TextImageFormat);
  pub fn qt_gui_c_QTextImageFormat_height(this_ptr: *const ::text_image_format::TextImageFormat) -> ::libc::c_double;
  pub fn qt_gui_c_QTextImageFormat_isValid(this_ptr: *const ::text_image_format::TextImageFormat) -> bool;
  pub fn qt_gui_c_QTextImageFormat_name_to_output(this_ptr: *const ::text_image_format::TextImageFormat, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextImageFormat_setHeight(this_ptr: *mut ::text_image_format::TextImageFormat, height: ::libc::c_double);
  pub fn qt_gui_c_QTextImageFormat_setName(this_ptr: *mut ::text_image_format::TextImageFormat, name: *const ::qt_core::string::String);
  pub fn qt_gui_c_QTextImageFormat_setWidth(this_ptr: *mut ::text_image_format::TextImageFormat, width: ::libc::c_double);
  pub fn qt_gui_c_QTextImageFormat_width(this_ptr: *const ::text_image_format::TextImageFormat) -> ::libc::c_double;

  // Header: QTextInlineObject
  pub fn qt_gui_c_QTextInlineObject_ascent(this_ptr: *const ::text_inline_object::TextInlineObject) -> ::libc::c_double;
  pub fn qt_gui_c_QTextInlineObject_constructor(output: *mut ::text_inline_object::TextInlineObject);
  pub fn qt_gui_c_QTextInlineObject_descent(this_ptr: *const ::text_inline_object::TextInlineObject) -> ::libc::c_double;
  pub fn qt_gui_c_QTextInlineObject_destructor(this_ptr: *mut ::text_inline_object::TextInlineObject);
  pub fn qt_gui_c_QTextInlineObject_formatIndex(this_ptr: *const ::text_inline_object::TextInlineObject) -> ::libc::c_int;
  pub fn qt_gui_c_QTextInlineObject_format_to_output(this_ptr: *const ::text_inline_object::TextInlineObject, output: *mut ::text_format::TextFormat);
  pub fn qt_gui_c_QTextInlineObject_height(this_ptr: *const ::text_inline_object::TextInlineObject) -> ::libc::c_double;
  pub fn qt_gui_c_QTextInlineObject_isValid(this_ptr: *const ::text_inline_object::TextInlineObject) -> bool;
  pub fn qt_gui_c_QTextInlineObject_rect_to_output(this_ptr: *const ::text_inline_object::TextInlineObject, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QTextInlineObject_setAscent(this_ptr: *mut ::text_inline_object::TextInlineObject, a: ::libc::c_double);
  pub fn qt_gui_c_QTextInlineObject_setDescent(this_ptr: *mut ::text_inline_object::TextInlineObject, d: ::libc::c_double);
  pub fn qt_gui_c_QTextInlineObject_setWidth(this_ptr: *mut ::text_inline_object::TextInlineObject, w: ::libc::c_double);
  pub fn qt_gui_c_QTextInlineObject_textPosition(this_ptr: *const ::text_inline_object::TextInlineObject) -> ::libc::c_int;
  pub fn qt_gui_c_QTextInlineObject_width(this_ptr: *const ::text_inline_object::TextInlineObject) -> ::libc::c_double;

  // Header: QTextItem
  pub fn qt_gui_c_QTextItem_ascent(this_ptr: *const ::text_item::TextItem) -> ::libc::c_double;
  pub fn qt_gui_c_QTextItem_descent(this_ptr: *const ::text_item::TextItem) -> ::libc::c_double;
  pub fn qt_gui_c_QTextItem_destructor(this_ptr: *mut ::text_item::TextItem);
  pub fn qt_gui_c_QTextItem_font_to_output(this_ptr: *const ::text_item::TextItem, output: *mut ::font::Font);
  pub fn qt_gui_c_QTextItem_renderFlags(this_ptr: *const ::text_item::TextItem) -> ::libc::c_uint;
  pub fn qt_gui_c_QTextItem_text_to_output(this_ptr: *const ::text_item::TextItem, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextItem_width(this_ptr: *const ::text_item::TextItem) -> ::libc::c_double;

  // Header: QTextLayout
  pub fn qt_gui_c_QTextLayout_FormatRange_delete(this_ptr: *mut ::text_layout::FormatRange);
  pub fn qt_gui_c_QTextLayout_FormatRange_format(this_ptr: *const ::text_layout::FormatRange) -> *const ::text_char_format::TextCharFormat;
  pub fn qt_gui_c_QTextLayout_FormatRange_format_mut(this_ptr: *mut ::text_layout::FormatRange) -> *mut ::text_char_format::TextCharFormat;
  pub fn qt_gui_c_QTextLayout_FormatRange_length(this_ptr: *const ::text_layout::FormatRange) -> ::libc::c_int;
  pub fn qt_gui_c_QTextLayout_FormatRange_set_format(this_ptr: *mut ::text_layout::FormatRange, value: *const ::text_char_format::TextCharFormat);
  pub fn qt_gui_c_QTextLayout_FormatRange_set_length(this_ptr: *mut ::text_layout::FormatRange, value: ::libc::c_int);
  pub fn qt_gui_c_QTextLayout_FormatRange_set_start(this_ptr: *mut ::text_layout::FormatRange, value: ::libc::c_int);
  pub fn qt_gui_c_QTextLayout_FormatRange_start(this_ptr: *const ::text_layout::FormatRange) -> ::libc::c_int;
  pub fn qt_gui_c_QTextLayout_additionalFormats_to_output(this_ptr: *const ::text_layout::TextLayout, output: *mut ::list::ListTextLayoutFormatRange);
  pub fn qt_gui_c_QTextLayout_beginLayout(this_ptr: *mut ::text_layout::TextLayout);
  pub fn qt_gui_c_QTextLayout_boundingRect_to_output(this_ptr: *const ::text_layout::TextLayout, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QTextLayout_cacheEnabled(this_ptr: *const ::text_layout::TextLayout) -> bool;
  pub fn qt_gui_c_QTextLayout_clearAdditionalFormats(this_ptr: *mut ::text_layout::TextLayout);
  pub fn qt_gui_c_QTextLayout_clearFormats(this_ptr: *mut ::text_layout::TextLayout);
  pub fn qt_gui_c_QTextLayout_clearLayout(this_ptr: *mut ::text_layout::TextLayout);
  pub fn qt_gui_c_QTextLayout_createLine_to_output(this_ptr: *mut ::text_layout::TextLayout, output: *mut ::text_line::TextLine);
  pub fn qt_gui_c_QTextLayout_delete(this_ptr: *mut ::text_layout::TextLayout);
  pub fn qt_gui_c_QTextLayout_drawCursor_p_pos_cursorPosition(this_ptr: *const ::text_layout::TextLayout, p: *mut ::painter::Painter, pos: *const ::qt_core::point_f::PointF, cursorPosition: ::libc::c_int);
  pub fn qt_gui_c_QTextLayout_drawCursor_p_pos_cursorPosition_width(this_ptr: *const ::text_layout::TextLayout, p: *mut ::painter::Painter, pos: *const ::qt_core::point_f::PointF, cursorPosition: ::libc::c_int, width: ::libc::c_int);
  pub fn qt_gui_c_QTextLayout_draw_p_pos(this_ptr: *const ::text_layout::TextLayout, p: *mut ::painter::Painter, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTextLayout_draw_p_pos_selections(this_ptr: *const ::text_layout::TextLayout, p: *mut ::painter::Painter, pos: *const ::qt_core::point_f::PointF, selections: *const ::vector::VectorTextLayoutFormatRange);
  pub fn qt_gui_c_QTextLayout_draw_p_pos_selections_clip(this_ptr: *const ::text_layout::TextLayout, p: *mut ::painter::Painter, pos: *const ::qt_core::point_f::PointF, selections: *const ::vector::VectorTextLayoutFormatRange, clip: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QTextLayout_endLayout(this_ptr: *mut ::text_layout::TextLayout);
  pub fn qt_gui_c_QTextLayout_font_to_output(this_ptr: *const ::text_layout::TextLayout, output: *mut ::font::Font);
  pub fn qt_gui_c_QTextLayout_formats_to_output(this_ptr: *const ::text_layout::TextLayout, output: *mut ::vector::VectorTextLayoutFormatRange);
  pub fn qt_gui_c_QTextLayout_glyphRuns_to_output_from(this_ptr: *const ::text_layout::TextLayout, from: ::libc::c_int, output: *mut ::list::ListGlyphRun);
  pub fn qt_gui_c_QTextLayout_glyphRuns_to_output_from_length(this_ptr: *const ::text_layout::TextLayout, from: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListGlyphRun);
  pub fn qt_gui_c_QTextLayout_glyphRuns_to_output_no_args(this_ptr: *const ::text_layout::TextLayout, output: *mut ::list::ListGlyphRun);
  pub fn qt_gui_c_QTextLayout_isValidCursorPosition(this_ptr: *const ::text_layout::TextLayout, pos: ::libc::c_int) -> bool;
  pub fn qt_gui_c_QTextLayout_leftCursorPosition(this_ptr: *const ::text_layout::TextLayout, oldPos: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QTextLayout_lineAt_to_output(this_ptr: *const ::text_layout::TextLayout, i: ::libc::c_int, output: *mut ::text_line::TextLine);
  pub fn qt_gui_c_QTextLayout_lineCount(this_ptr: *const ::text_layout::TextLayout) -> ::libc::c_int;
  pub fn qt_gui_c_QTextLayout_lineForTextPosition_to_output(this_ptr: *const ::text_layout::TextLayout, pos: ::libc::c_int, output: *mut ::text_line::TextLine);
  pub fn qt_gui_c_QTextLayout_maximumWidth(this_ptr: *const ::text_layout::TextLayout) -> ::libc::c_double;
  pub fn qt_gui_c_QTextLayout_minimumWidth(this_ptr: *const ::text_layout::TextLayout) -> ::libc::c_double;
  pub fn qt_gui_c_QTextLayout_new_b(b: *const ::text_block::TextBlock) -> *mut ::text_layout::TextLayout;
  pub fn qt_gui_c_QTextLayout_new_no_args() -> *mut ::text_layout::TextLayout;
  pub fn qt_gui_c_QTextLayout_new_text(text: *const ::qt_core::string::String) -> *mut ::text_layout::TextLayout;
  pub fn qt_gui_c_QTextLayout_new_text_font(text: *const ::qt_core::string::String, font: *const ::font::Font) -> *mut ::text_layout::TextLayout;
  pub fn qt_gui_c_QTextLayout_new_text_font_paintdevice(text: *const ::qt_core::string::String, font: *const ::font::Font, paintdevice: *mut ::paint_device::PaintDevice) -> *mut ::text_layout::TextLayout;
  pub fn qt_gui_c_QTextLayout_nextCursorPosition_oldPos(this_ptr: *const ::text_layout::TextLayout, oldPos: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QTextLayout_nextCursorPosition_oldPos_mode(this_ptr: *const ::text_layout::TextLayout, oldPos: ::libc::c_int, mode: ::text_layout::CursorMode) -> ::libc::c_int;
  pub fn qt_gui_c_QTextLayout_position_to_output(this_ptr: *const ::text_layout::TextLayout, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTextLayout_preeditAreaPosition(this_ptr: *const ::text_layout::TextLayout) -> ::libc::c_int;
  pub fn qt_gui_c_QTextLayout_preeditAreaText_to_output(this_ptr: *const ::text_layout::TextLayout, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextLayout_previousCursorPosition_oldPos(this_ptr: *const ::text_layout::TextLayout, oldPos: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QTextLayout_previousCursorPosition_oldPos_mode(this_ptr: *const ::text_layout::TextLayout, oldPos: ::libc::c_int, mode: ::text_layout::CursorMode) -> ::libc::c_int;
  pub fn qt_gui_c_QTextLayout_rightCursorPosition(this_ptr: *const ::text_layout::TextLayout, oldPos: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QTextLayout_setAdditionalFormats(this_ptr: *mut ::text_layout::TextLayout, overrides: *const ::list::ListTextLayoutFormatRange);
  pub fn qt_gui_c_QTextLayout_setCacheEnabled(this_ptr: *mut ::text_layout::TextLayout, enable: bool);
  pub fn qt_gui_c_QTextLayout_setCursorMoveStyle(this_ptr: *mut ::text_layout::TextLayout, style: *const ::qt_core::qt::CursorMoveStyle);
  pub fn qt_gui_c_QTextLayout_setFlags(this_ptr: *mut ::text_layout::TextLayout, flags: ::libc::c_int);
  pub fn qt_gui_c_QTextLayout_setFont(this_ptr: *mut ::text_layout::TextLayout, f: *const ::font::Font);
  pub fn qt_gui_c_QTextLayout_setFormats(this_ptr: *mut ::text_layout::TextLayout, overrides: *const ::vector::VectorTextLayoutFormatRange);
  pub fn qt_gui_c_QTextLayout_setPosition(this_ptr: *mut ::text_layout::TextLayout, p: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTextLayout_setPreeditArea(this_ptr: *mut ::text_layout::TextLayout, position: ::libc::c_int, text: *const ::qt_core::string::String);
  pub fn qt_gui_c_QTextLayout_setRawFont(this_ptr: *mut ::text_layout::TextLayout, rawFont: *const ::raw_font::RawFont);
  pub fn qt_gui_c_QTextLayout_setText(this_ptr: *mut ::text_layout::TextLayout, string: *const ::qt_core::string::String);
  pub fn qt_gui_c_QTextLayout_setTextOption(this_ptr: *mut ::text_layout::TextLayout, option: *const ::text_option::TextOption);
  pub fn qt_gui_c_QTextLayout_textOption(this_ptr: *const ::text_layout::TextLayout) -> *const ::text_option::TextOption;
  pub fn qt_gui_c_QTextLayout_text_to_output(this_ptr: *const ::text_layout::TextLayout, output: *mut ::qt_core::string::String);

  // Header: QTextLength
  pub fn qt_gui_c_QTextLength_constructor_no_args(output: *mut ::text_length::TextLength);
  pub fn qt_gui_c_QTextLength_constructor_type_value(type_: ::text_length::Type, value: ::libc::c_double, output: *mut ::text_length::TextLength);
  pub fn qt_gui_c_QTextLength_convert_to_QVariant_to_output(this_ptr: *const ::text_length::TextLength, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QTextLength_destructor(this_ptr: *mut ::text_length::TextLength);
  pub fn qt_gui_c_QTextLength_operator_eq(this_ptr: *const ::text_length::TextLength, other: *const ::text_length::TextLength) -> bool;
  pub fn qt_gui_c_QTextLength_operator_neq(this_ptr: *const ::text_length::TextLength, other: *const ::text_length::TextLength) -> bool;
  pub fn qt_gui_c_QTextLength_rawValue(this_ptr: *const ::text_length::TextLength) -> ::libc::c_double;
  pub fn qt_gui_c_QTextLength_type(this_ptr: *const ::text_length::TextLength) -> ::text_length::Type;
  pub fn qt_gui_c_QTextLength_value(this_ptr: *const ::text_length::TextLength, maximumLength: ::libc::c_double) -> ::libc::c_double;

  // Header: QTextLine
  pub fn qt_gui_c_QTextLine_ascent(this_ptr: *const ::text_line::TextLine) -> ::libc::c_double;
  pub fn qt_gui_c_QTextLine_constructor(output: *mut ::text_line::TextLine);
  pub fn qt_gui_c_QTextLine_cursorToX_int(this_ptr: *const ::text_line::TextLine, cursorPos: ::libc::c_int) -> ::libc::c_double;
  pub fn qt_gui_c_QTextLine_cursorToX_int_QTextLine_Edge(this_ptr: *const ::text_line::TextLine, cursorPos: ::libc::c_int, edge: ::text_line::Edge) -> ::libc::c_double;
  pub fn qt_gui_c_QTextLine_cursorToX_int_ptr(this_ptr: *const ::text_line::TextLine, cursorPos: *mut ::libc::c_int) -> ::libc::c_double;
  pub fn qt_gui_c_QTextLine_cursorToX_int_ptr_QTextLine_Edge(this_ptr: *const ::text_line::TextLine, cursorPos: *mut ::libc::c_int, edge: ::text_line::Edge) -> ::libc::c_double;
  pub fn qt_gui_c_QTextLine_descent(this_ptr: *const ::text_line::TextLine) -> ::libc::c_double;
  pub fn qt_gui_c_QTextLine_destructor(this_ptr: *mut ::text_line::TextLine);
  pub fn qt_gui_c_QTextLine_draw_p_point(this_ptr: *const ::text_line::TextLine, p: *mut ::painter::Painter, point: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTextLine_draw_p_point_selection(this_ptr: *const ::text_line::TextLine, p: *mut ::painter::Painter, point: *const ::qt_core::point_f::PointF, selection: *const ::text_layout::FormatRange);
  pub fn qt_gui_c_QTextLine_glyphRuns_to_output_from(this_ptr: *const ::text_line::TextLine, from: ::libc::c_int, output: *mut ::list::ListGlyphRun);
  pub fn qt_gui_c_QTextLine_glyphRuns_to_output_from_length(this_ptr: *const ::text_line::TextLine, from: ::libc::c_int, length: ::libc::c_int, output: *mut ::list::ListGlyphRun);
  pub fn qt_gui_c_QTextLine_glyphRuns_to_output_no_args(this_ptr: *const ::text_line::TextLine, output: *mut ::list::ListGlyphRun);
  pub fn qt_gui_c_QTextLine_height(this_ptr: *const ::text_line::TextLine) -> ::libc::c_double;
  pub fn qt_gui_c_QTextLine_horizontalAdvance(this_ptr: *const ::text_line::TextLine) -> ::libc::c_double;
  pub fn qt_gui_c_QTextLine_isValid(this_ptr: *const ::text_line::TextLine) -> bool;
  pub fn qt_gui_c_QTextLine_leading(this_ptr: *const ::text_line::TextLine) -> ::libc::c_double;
  pub fn qt_gui_c_QTextLine_leadingIncluded(this_ptr: *const ::text_line::TextLine) -> bool;
  pub fn qt_gui_c_QTextLine_lineNumber(this_ptr: *const ::text_line::TextLine) -> ::libc::c_int;
  pub fn qt_gui_c_QTextLine_naturalTextRect_to_output(this_ptr: *const ::text_line::TextLine, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QTextLine_naturalTextWidth(this_ptr: *const ::text_line::TextLine) -> ::libc::c_double;
  pub fn qt_gui_c_QTextLine_position_to_output(this_ptr: *const ::text_line::TextLine, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTextLine_rect_to_output(this_ptr: *const ::text_line::TextLine, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QTextLine_setLeadingIncluded(this_ptr: *mut ::text_line::TextLine, included: bool);
  pub fn qt_gui_c_QTextLine_setLineWidth(this_ptr: *mut ::text_line::TextLine, width: ::libc::c_double);
  pub fn qt_gui_c_QTextLine_setNumColumns_columns(this_ptr: *mut ::text_line::TextLine, columns: ::libc::c_int);
  pub fn qt_gui_c_QTextLine_setNumColumns_columns_alignmentWidth(this_ptr: *mut ::text_line::TextLine, columns: ::libc::c_int, alignmentWidth: ::libc::c_double);
  pub fn qt_gui_c_QTextLine_setPosition(this_ptr: *mut ::text_line::TextLine, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTextLine_textLength(this_ptr: *const ::text_line::TextLine) -> ::libc::c_int;
  pub fn qt_gui_c_QTextLine_textStart(this_ptr: *const ::text_line::TextLine) -> ::libc::c_int;
  pub fn qt_gui_c_QTextLine_width(this_ptr: *const ::text_line::TextLine) -> ::libc::c_double;
  pub fn qt_gui_c_QTextLine_x(this_ptr: *const ::text_line::TextLine) -> ::libc::c_double;
  pub fn qt_gui_c_QTextLine_xToCursor_x(this_ptr: *const ::text_line::TextLine, x: ::libc::c_double) -> ::libc::c_int;
  pub fn qt_gui_c_QTextLine_xToCursor_x_arg2(this_ptr: *const ::text_line::TextLine, x: ::libc::c_double, arg2: ::text_line::CursorPosition) -> ::libc::c_int;
  pub fn qt_gui_c_QTextLine_y(this_ptr: *const ::text_line::TextLine) -> ::libc::c_double;

  // Header: QTextList
  pub fn qt_gui_c_QTextList_G_dynamic_cast_QTextList_ptr_QTextBlockGroup(ptr: *mut ::text_block_group::TextBlockGroup) -> *mut ::text_list::TextList;
  pub fn qt_gui_c_QTextList_G_dynamic_cast_QTextList_ptr_QTextObject(ptr: *mut ::text_object::TextObject) -> *mut ::text_list::TextList;
  pub fn qt_gui_c_QTextList_G_static_cast_QObject_ptr(ptr: *mut ::text_list::TextList) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QTextList_G_static_cast_QTextBlockGroup_ptr(ptr: *mut ::text_list::TextList) -> *mut ::text_block_group::TextBlockGroup;
  pub fn qt_gui_c_QTextList_G_static_cast_QTextList_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::text_list::TextList;
  pub fn qt_gui_c_QTextList_G_static_cast_QTextList_ptr_QTextBlockGroup(ptr: *mut ::text_block_group::TextBlockGroup) -> *mut ::text_list::TextList;
  pub fn qt_gui_c_QTextList_G_static_cast_QTextList_ptr_QTextObject(ptr: *mut ::text_object::TextObject) -> *mut ::text_list::TextList;
  pub fn qt_gui_c_QTextList_G_static_cast_QTextObject_ptr(ptr: *mut ::text_list::TextList) -> *mut ::text_object::TextObject;
  pub fn qt_gui_c_QTextList_add(this_ptr: *mut ::text_list::TextList, block: *const ::text_block::TextBlock);
  pub fn qt_gui_c_QTextList_count(this_ptr: *const ::text_list::TextList) -> ::libc::c_int;
  pub fn qt_gui_c_QTextList_delete(this_ptr: *mut ::text_list::TextList);
  pub fn qt_gui_c_QTextList_format_to_output(this_ptr: *const ::text_list::TextList, output: *mut ::text_list_format::TextListFormat);
  pub fn qt_gui_c_QTextList_isEmpty(this_ptr: *const ::text_list::TextList) -> bool;
  pub fn qt_gui_c_QTextList_itemNumber(this_ptr: *const ::text_list::TextList, arg1: *const ::text_block::TextBlock) -> ::libc::c_int;
  pub fn qt_gui_c_QTextList_itemText_to_output(this_ptr: *const ::text_list::TextList, arg1: *const ::text_block::TextBlock, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextList_item_to_output(this_ptr: *const ::text_list::TextList, i: ::libc::c_int, output: *mut ::text_block::TextBlock);
  pub fn qt_gui_c_QTextList_metaObject(this_ptr: *const ::text_list::TextList) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QTextList_new(doc: *mut ::text_document::TextDocument) -> *mut ::text_list::TextList;
  pub fn qt_gui_c_QTextList_qt_metacall(this_ptr: *mut ::text_list::TextList, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QTextList_qt_metacast(this_ptr: *mut ::text_list::TextList, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QTextList_remove(this_ptr: *mut ::text_list::TextList, arg1: *const ::text_block::TextBlock);
  pub fn qt_gui_c_QTextList_removeItem(this_ptr: *mut ::text_list::TextList, i: ::libc::c_int);
  pub fn qt_gui_c_QTextList_setFormat(this_ptr: *mut ::text_list::TextList, format: *const ::text_list_format::TextListFormat);
  pub fn qt_gui_c_QTextList_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextList_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QTextListFormat
  pub fn qt_gui_c_QTextListFormat_G_static_cast_QTextFormat_ptr(ptr: *mut ::text_list_format::TextListFormat) -> *mut ::text_format::TextFormat;
  pub fn qt_gui_c_QTextListFormat_G_static_cast_QTextListFormat_ptr(ptr: *mut ::text_format::TextFormat) -> *mut ::text_list_format::TextListFormat;
  pub fn qt_gui_c_QTextListFormat_constructor(output: *mut ::text_list_format::TextListFormat);
  pub fn qt_gui_c_QTextListFormat_destructor(this_ptr: *mut ::text_list_format::TextListFormat);
  pub fn qt_gui_c_QTextListFormat_indent(this_ptr: *const ::text_list_format::TextListFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QTextListFormat_isValid(this_ptr: *const ::text_list_format::TextListFormat) -> bool;
  pub fn qt_gui_c_QTextListFormat_numberPrefix_to_output(this_ptr: *const ::text_list_format::TextListFormat, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextListFormat_numberSuffix_to_output(this_ptr: *const ::text_list_format::TextListFormat, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextListFormat_setIndent(this_ptr: *mut ::text_list_format::TextListFormat, indent: ::libc::c_int);
  pub fn qt_gui_c_QTextListFormat_setNumberPrefix(this_ptr: *mut ::text_list_format::TextListFormat, numberPrefix: *const ::qt_core::string::String);
  pub fn qt_gui_c_QTextListFormat_setNumberSuffix(this_ptr: *mut ::text_list_format::TextListFormat, numberSuffix: *const ::qt_core::string::String);
  pub fn qt_gui_c_QTextListFormat_setStyle(this_ptr: *mut ::text_list_format::TextListFormat, style: ::text_list_format::Style);
  pub fn qt_gui_c_QTextListFormat_style(this_ptr: *const ::text_list_format::TextListFormat) -> ::text_list_format::Style;

  // Header: QTextObject
  pub fn qt_gui_c_QTextObject_G_static_cast_QObject_ptr(ptr: *mut ::text_object::TextObject) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QTextObject_G_static_cast_QTextObject_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::text_object::TextObject;
  pub fn qt_gui_c_QTextObject_document(this_ptr: *const ::text_object::TextObject) -> *mut ::text_document::TextDocument;
  pub fn qt_gui_c_QTextObject_formatIndex(this_ptr: *const ::text_object::TextObject) -> ::libc::c_int;
  pub fn qt_gui_c_QTextObject_format_to_output(this_ptr: *const ::text_object::TextObject, output: *mut ::text_format::TextFormat);
  pub fn qt_gui_c_QTextObject_metaObject(this_ptr: *const ::text_object::TextObject) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QTextObject_objectIndex(this_ptr: *const ::text_object::TextObject) -> ::libc::c_int;
  pub fn qt_gui_c_QTextObject_qt_metacall(this_ptr: *mut ::text_object::TextObject, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QTextObject_qt_metacast(this_ptr: *mut ::text_object::TextObject, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QTextObject_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextObject_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QTextObjectInterface
  pub fn qt_gui_c_QTextObjectInterface_delete(this_ptr: *mut ::text_object_interface::TextObjectInterface);
  pub fn qt_gui_c_QTextObjectInterface_drawObject(this_ptr: *mut ::text_object_interface::TextObjectInterface, painter: *mut ::painter::Painter, rect: *const ::qt_core::rect_f::RectF, doc: *mut ::text_document::TextDocument, posInDocument: ::libc::c_int, format: *const ::text_format::TextFormat);
  pub fn qt_gui_c_QTextObjectInterface_intrinsicSize_to_output(this_ptr: *mut ::text_object_interface::TextObjectInterface, doc: *mut ::text_document::TextDocument, posInDocument: ::libc::c_int, format: *const ::text_format::TextFormat, output: *mut ::qt_core::size_f::SizeF);

  // Header: QTextOption
  pub fn qt_gui_c_QTextOption_Tab_constructor_no_args(output: *mut ::text_option::Tab);
  pub fn qt_gui_c_QTextOption_Tab_constructor_pos_tabType(pos: ::libc::c_double, tabType: ::text_option::TabType, output: *mut ::text_option::Tab);
  pub fn qt_gui_c_QTextOption_Tab_constructor_pos_tabType_delim(pos: ::libc::c_double, tabType: ::text_option::TabType, delim: *const ::qt_core::char::Char, output: *mut ::text_option::Tab);
  pub fn qt_gui_c_QTextOption_Tab_delimiter(this_ptr: *const ::text_option::Tab) -> *const ::qt_core::char::Char;
  pub fn qt_gui_c_QTextOption_Tab_delimiter_mut(this_ptr: *mut ::text_option::Tab) -> *mut ::qt_core::char::Char;
  pub fn qt_gui_c_QTextOption_Tab_destructor(this_ptr: *mut ::text_option::Tab);
  pub fn qt_gui_c_QTextOption_Tab_operator_eq(this_ptr: *const ::text_option::Tab, other: *const ::text_option::Tab) -> bool;
  pub fn qt_gui_c_QTextOption_Tab_operator_neq(this_ptr: *const ::text_option::Tab, other: *const ::text_option::Tab) -> bool;
  pub fn qt_gui_c_QTextOption_Tab_position(this_ptr: *const ::text_option::Tab) -> ::libc::c_double;
  pub fn qt_gui_c_QTextOption_Tab_set_delimiter(this_ptr: *mut ::text_option::Tab, value: *const ::qt_core::char::Char);
  pub fn qt_gui_c_QTextOption_Tab_set_position(this_ptr: *mut ::text_option::Tab, value: ::libc::c_double);
  pub fn qt_gui_c_QTextOption_Tab_set_type(this_ptr: *mut ::text_option::Tab, value: ::text_option::TabType);
  pub fn qt_gui_c_QTextOption_Tab_type(this_ptr: *const ::text_option::Tab) -> ::text_option::TabType;
  pub fn qt_gui_c_QTextOption_constructor_no_args(output: *mut ::text_option::TextOption);
  pub fn qt_gui_c_QTextOption_constructor_o(o: *const ::text_option::TextOption, output: *mut ::text_option::TextOption);
  pub fn qt_gui_c_QTextOption_destructor(this_ptr: *mut ::text_option::TextOption);
  pub fn qt_gui_c_QTextOption_flags(this_ptr: *const ::text_option::TextOption) -> ::libc::c_uint;
  pub fn qt_gui_c_QTextOption_operator_assign(this_ptr: *mut ::text_option::TextOption, o: *const ::text_option::TextOption) -> *mut ::text_option::TextOption;
  pub fn qt_gui_c_QTextOption_setFlags(this_ptr: *mut ::text_option::TextOption, flags: ::libc::c_uint);
  pub fn qt_gui_c_QTextOption_setTabArray(this_ptr: *mut ::text_option::TextOption, tabStops: *const ::list::ListCDouble);
  pub fn qt_gui_c_QTextOption_setTabStop(this_ptr: *mut ::text_option::TextOption, tabStop: ::libc::c_double);
  pub fn qt_gui_c_QTextOption_setTabs(this_ptr: *mut ::text_option::TextOption, tabStops: *const ::list::ListTextOptionTab);
  pub fn qt_gui_c_QTextOption_setTextDirection(this_ptr: *mut ::text_option::TextOption, aDirection: *const ::qt_core::qt::LayoutDirection);
  pub fn qt_gui_c_QTextOption_setUseDesignMetrics(this_ptr: *mut ::text_option::TextOption, b: bool);
  pub fn qt_gui_c_QTextOption_setWrapMode(this_ptr: *mut ::text_option::TextOption, wrap: ::text_option::WrapMode);
  pub fn qt_gui_c_QTextOption_tabArray_to_output(this_ptr: *const ::text_option::TextOption, output: *mut ::list::ListCDouble);
  pub fn qt_gui_c_QTextOption_tabStop(this_ptr: *const ::text_option::TextOption) -> ::libc::c_double;
  pub fn qt_gui_c_QTextOption_tabs_to_output(this_ptr: *const ::text_option::TextOption, output: *mut ::list::ListTextOptionTab);
  pub fn qt_gui_c_QTextOption_useDesignMetrics(this_ptr: *const ::text_option::TextOption) -> bool;
  pub fn qt_gui_c_QTextOption_wrapMode(this_ptr: *const ::text_option::TextOption) -> ::text_option::WrapMode;

  // Header: QTextTable
  pub fn qt_gui_c_QTextTable_G_dynamic_cast_QTextTable_ptr_QTextFrame(ptr: *mut ::text_frame::TextFrame) -> *mut ::text_table::TextTable;
  pub fn qt_gui_c_QTextTable_G_dynamic_cast_QTextTable_ptr_QTextObject(ptr: *mut ::text_object::TextObject) -> *mut ::text_table::TextTable;
  pub fn qt_gui_c_QTextTable_G_static_cast_QObject_ptr(ptr: *mut ::text_table::TextTable) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QTextTable_G_static_cast_QTextFrame_ptr(ptr: *mut ::text_table::TextTable) -> *mut ::text_frame::TextFrame;
  pub fn qt_gui_c_QTextTable_G_static_cast_QTextObject_ptr(ptr: *mut ::text_table::TextTable) -> *mut ::text_object::TextObject;
  pub fn qt_gui_c_QTextTable_G_static_cast_QTextTable_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::text_table::TextTable;
  pub fn qt_gui_c_QTextTable_G_static_cast_QTextTable_ptr_QTextFrame(ptr: *mut ::text_frame::TextFrame) -> *mut ::text_table::TextTable;
  pub fn qt_gui_c_QTextTable_G_static_cast_QTextTable_ptr_QTextObject(ptr: *mut ::text_object::TextObject) -> *mut ::text_table::TextTable;
  pub fn qt_gui_c_QTextTable_appendColumns(this_ptr: *mut ::text_table::TextTable, count: ::libc::c_int);
  pub fn qt_gui_c_QTextTable_appendRows(this_ptr: *mut ::text_table::TextTable, count: ::libc::c_int);
  pub fn qt_gui_c_QTextTable_cellAt_to_output_c(this_ptr: *const ::text_table::TextTable, c: *const ::text_cursor::TextCursor, output: *mut ::text_table_cell::TextTableCell);
  pub fn qt_gui_c_QTextTable_cellAt_to_output_position(this_ptr: *const ::text_table::TextTable, position: ::libc::c_int, output: *mut ::text_table_cell::TextTableCell);
  pub fn qt_gui_c_QTextTable_cellAt_to_output_row_col(this_ptr: *const ::text_table::TextTable, row: ::libc::c_int, col: ::libc::c_int, output: *mut ::text_table_cell::TextTableCell);
  pub fn qt_gui_c_QTextTable_columns(this_ptr: *const ::text_table::TextTable) -> ::libc::c_int;
  pub fn qt_gui_c_QTextTable_delete(this_ptr: *mut ::text_table::TextTable);
  pub fn qt_gui_c_QTextTable_format_to_output(this_ptr: *const ::text_table::TextTable, output: *mut ::text_table_format::TextTableFormat);
  pub fn qt_gui_c_QTextTable_insertColumns(this_ptr: *mut ::text_table::TextTable, pos: ::libc::c_int, num: ::libc::c_int);
  pub fn qt_gui_c_QTextTable_insertRows(this_ptr: *mut ::text_table::TextTable, pos: ::libc::c_int, num: ::libc::c_int);
  pub fn qt_gui_c_QTextTable_mergeCells_cursor(this_ptr: *mut ::text_table::TextTable, cursor: *const ::text_cursor::TextCursor);
  pub fn qt_gui_c_QTextTable_mergeCells_row_col_numRows_numCols(this_ptr: *mut ::text_table::TextTable, row: ::libc::c_int, col: ::libc::c_int, numRows: ::libc::c_int, numCols: ::libc::c_int);
  pub fn qt_gui_c_QTextTable_metaObject(this_ptr: *const ::text_table::TextTable) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QTextTable_new(doc: *mut ::text_document::TextDocument) -> *mut ::text_table::TextTable;
  pub fn qt_gui_c_QTextTable_qt_metacall(this_ptr: *mut ::text_table::TextTable, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QTextTable_qt_metacast(this_ptr: *mut ::text_table::TextTable, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QTextTable_removeColumns(this_ptr: *mut ::text_table::TextTable, pos: ::libc::c_int, num: ::libc::c_int);
  pub fn qt_gui_c_QTextTable_removeRows(this_ptr: *mut ::text_table::TextTable, pos: ::libc::c_int, num: ::libc::c_int);
  pub fn qt_gui_c_QTextTable_resize(this_ptr: *mut ::text_table::TextTable, rows: ::libc::c_int, cols: ::libc::c_int);
  pub fn qt_gui_c_QTextTable_rowEnd_as_ptr(this_ptr: *const ::text_table::TextTable, c: *const ::text_cursor::TextCursor) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextTable_rowStart_as_ptr(this_ptr: *const ::text_table::TextTable, c: *const ::text_cursor::TextCursor) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextTable_rows(this_ptr: *const ::text_table::TextTable) -> ::libc::c_int;
  pub fn qt_gui_c_QTextTable_setFormat(this_ptr: *mut ::text_table::TextTable, format: *const ::text_table_format::TextTableFormat);
  pub fn qt_gui_c_QTextTable_splitCell(this_ptr: *mut ::text_table::TextTable, row: ::libc::c_int, col: ::libc::c_int, numRows: ::libc::c_int, numCols: ::libc::c_int);
  pub fn qt_gui_c_QTextTable_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTextTable_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);

  // Header: QTextTableCell
  pub fn qt_gui_c_QTextTableCell_begin_to_output(this_ptr: *const ::text_table_cell::TextTableCell, output: *mut ::text_frame::Iterator);
  pub fn qt_gui_c_QTextTableCell_column(this_ptr: *const ::text_table_cell::TextTableCell) -> ::libc::c_int;
  pub fn qt_gui_c_QTextTableCell_columnSpan(this_ptr: *const ::text_table_cell::TextTableCell) -> ::libc::c_int;
  pub fn qt_gui_c_QTextTableCell_constructor_no_args(output: *mut ::text_table_cell::TextTableCell);
  pub fn qt_gui_c_QTextTableCell_constructor_o(o: *const ::text_table_cell::TextTableCell, output: *mut ::text_table_cell::TextTableCell);
  pub fn qt_gui_c_QTextTableCell_destructor(this_ptr: *mut ::text_table_cell::TextTableCell);
  pub fn qt_gui_c_QTextTableCell_end_to_output(this_ptr: *const ::text_table_cell::TextTableCell, output: *mut ::text_frame::Iterator);
  pub fn qt_gui_c_QTextTableCell_firstCursorPosition_as_ptr(this_ptr: *const ::text_table_cell::TextTableCell) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextTableCell_firstPosition(this_ptr: *const ::text_table_cell::TextTableCell) -> ::libc::c_int;
  pub fn qt_gui_c_QTextTableCell_format_to_output(this_ptr: *const ::text_table_cell::TextTableCell, output: *mut ::text_char_format::TextCharFormat);
  pub fn qt_gui_c_QTextTableCell_isValid(this_ptr: *const ::text_table_cell::TextTableCell) -> bool;
  pub fn qt_gui_c_QTextTableCell_lastCursorPosition_as_ptr(this_ptr: *const ::text_table_cell::TextTableCell) -> *mut ::text_cursor::TextCursor;
  pub fn qt_gui_c_QTextTableCell_lastPosition(this_ptr: *const ::text_table_cell::TextTableCell) -> ::libc::c_int;
  pub fn qt_gui_c_QTextTableCell_operator_assign(this_ptr: *mut ::text_table_cell::TextTableCell, o: *const ::text_table_cell::TextTableCell) -> *mut ::text_table_cell::TextTableCell;
  pub fn qt_gui_c_QTextTableCell_operator_eq(this_ptr: *const ::text_table_cell::TextTableCell, other: *const ::text_table_cell::TextTableCell) -> bool;
  pub fn qt_gui_c_QTextTableCell_operator_neq(this_ptr: *const ::text_table_cell::TextTableCell, other: *const ::text_table_cell::TextTableCell) -> bool;
  pub fn qt_gui_c_QTextTableCell_row(this_ptr: *const ::text_table_cell::TextTableCell) -> ::libc::c_int;
  pub fn qt_gui_c_QTextTableCell_rowSpan(this_ptr: *const ::text_table_cell::TextTableCell) -> ::libc::c_int;
  pub fn qt_gui_c_QTextTableCell_setFormat(this_ptr: *mut ::text_table_cell::TextTableCell, format: *const ::text_char_format::TextCharFormat);
  pub fn qt_gui_c_QTextTableCell_tableCellFormatIndex(this_ptr: *const ::text_table_cell::TextTableCell) -> ::libc::c_int;

  // Header: QTextTableCellFormat
  pub fn qt_gui_c_QTextTableCellFormat_G_static_cast_QTextCharFormat_ptr(ptr: *mut ::text_table_cell_format::TextTableCellFormat) -> *mut ::text_char_format::TextCharFormat;
  pub fn qt_gui_c_QTextTableCellFormat_G_static_cast_QTextFormat_ptr(ptr: *mut ::text_table_cell_format::TextTableCellFormat) -> *mut ::text_format::TextFormat;
  pub fn qt_gui_c_QTextTableCellFormat_G_static_cast_QTextTableCellFormat_ptr_QTextCharFormat(ptr: *mut ::text_char_format::TextCharFormat) -> *mut ::text_table_cell_format::TextTableCellFormat;
  pub fn qt_gui_c_QTextTableCellFormat_G_static_cast_QTextTableCellFormat_ptr_QTextFormat(ptr: *mut ::text_format::TextFormat) -> *mut ::text_table_cell_format::TextTableCellFormat;
  pub fn qt_gui_c_QTextTableCellFormat_bottomPadding(this_ptr: *const ::text_table_cell_format::TextTableCellFormat) -> ::libc::c_double;
  pub fn qt_gui_c_QTextTableCellFormat_constructor(output: *mut ::text_table_cell_format::TextTableCellFormat);
  pub fn qt_gui_c_QTextTableCellFormat_destructor(this_ptr: *mut ::text_table_cell_format::TextTableCellFormat);
  pub fn qt_gui_c_QTextTableCellFormat_isValid(this_ptr: *const ::text_table_cell_format::TextTableCellFormat) -> bool;
  pub fn qt_gui_c_QTextTableCellFormat_leftPadding(this_ptr: *const ::text_table_cell_format::TextTableCellFormat) -> ::libc::c_double;
  pub fn qt_gui_c_QTextTableCellFormat_rightPadding(this_ptr: *const ::text_table_cell_format::TextTableCellFormat) -> ::libc::c_double;
  pub fn qt_gui_c_QTextTableCellFormat_setBottomPadding(this_ptr: *mut ::text_table_cell_format::TextTableCellFormat, padding: ::libc::c_double);
  pub fn qt_gui_c_QTextTableCellFormat_setLeftPadding(this_ptr: *mut ::text_table_cell_format::TextTableCellFormat, padding: ::libc::c_double);
  pub fn qt_gui_c_QTextTableCellFormat_setPadding(this_ptr: *mut ::text_table_cell_format::TextTableCellFormat, padding: ::libc::c_double);
  pub fn qt_gui_c_QTextTableCellFormat_setRightPadding(this_ptr: *mut ::text_table_cell_format::TextTableCellFormat, padding: ::libc::c_double);
  pub fn qt_gui_c_QTextTableCellFormat_setTopPadding(this_ptr: *mut ::text_table_cell_format::TextTableCellFormat, padding: ::libc::c_double);
  pub fn qt_gui_c_QTextTableCellFormat_topPadding(this_ptr: *const ::text_table_cell_format::TextTableCellFormat) -> ::libc::c_double;

  // Header: QTextTableFormat
  pub fn qt_gui_c_QTextTableFormat_G_static_cast_QTextFormat_ptr(ptr: *mut ::text_table_format::TextTableFormat) -> *mut ::text_format::TextFormat;
  pub fn qt_gui_c_QTextTableFormat_G_static_cast_QTextFrameFormat_ptr(ptr: *mut ::text_table_format::TextTableFormat) -> *mut ::text_frame_format::TextFrameFormat;
  pub fn qt_gui_c_QTextTableFormat_G_static_cast_QTextTableFormat_ptr_QTextFormat(ptr: *mut ::text_format::TextFormat) -> *mut ::text_table_format::TextTableFormat;
  pub fn qt_gui_c_QTextTableFormat_G_static_cast_QTextTableFormat_ptr_QTextFrameFormat(ptr: *mut ::text_frame_format::TextFrameFormat) -> *mut ::text_table_format::TextTableFormat;
  pub fn qt_gui_c_QTextTableFormat_cellPadding(this_ptr: *const ::text_table_format::TextTableFormat) -> ::libc::c_double;
  pub fn qt_gui_c_QTextTableFormat_cellSpacing(this_ptr: *const ::text_table_format::TextTableFormat) -> ::libc::c_double;
  pub fn qt_gui_c_QTextTableFormat_clearColumnWidthConstraints(this_ptr: *mut ::text_table_format::TextTableFormat);
  pub fn qt_gui_c_QTextTableFormat_columnWidthConstraints_to_output(this_ptr: *const ::text_table_format::TextTableFormat, output: *mut ::vector::VectorTextLength);
  pub fn qt_gui_c_QTextTableFormat_columns(this_ptr: *const ::text_table_format::TextTableFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QTextTableFormat_constructor(output: *mut ::text_table_format::TextTableFormat);
  pub fn qt_gui_c_QTextTableFormat_destructor(this_ptr: *mut ::text_table_format::TextTableFormat);
  pub fn qt_gui_c_QTextTableFormat_headerRowCount(this_ptr: *const ::text_table_format::TextTableFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QTextTableFormat_isValid(this_ptr: *const ::text_table_format::TextTableFormat) -> bool;
  pub fn qt_gui_c_QTextTableFormat_setCellPadding(this_ptr: *mut ::text_table_format::TextTableFormat, padding: ::libc::c_double);
  pub fn qt_gui_c_QTextTableFormat_setCellSpacing(this_ptr: *mut ::text_table_format::TextTableFormat, spacing: ::libc::c_double);
  pub fn qt_gui_c_QTextTableFormat_setColumnWidthConstraints(this_ptr: *mut ::text_table_format::TextTableFormat, constraints: *const ::vector::VectorTextLength);
  pub fn qt_gui_c_QTextTableFormat_setColumns(this_ptr: *mut ::text_table_format::TextTableFormat, columns: ::libc::c_int);
  pub fn qt_gui_c_QTextTableFormat_setHeaderRowCount(this_ptr: *mut ::text_table_format::TextTableFormat, count: ::libc::c_int);

  // Header: QToolBarChangeEvent
  pub fn qt_gui_c_QToolBarChangeEvent_G_static_cast_QEvent_ptr(ptr: *mut ::tool_bar_change_event::ToolBarChangeEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QToolBarChangeEvent_G_static_cast_QToolBarChangeEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::tool_bar_change_event::ToolBarChangeEvent;
  pub fn qt_gui_c_QToolBarChangeEvent_delete(this_ptr: *mut ::tool_bar_change_event::ToolBarChangeEvent);
  pub fn qt_gui_c_QToolBarChangeEvent_new(t: bool) -> *mut ::tool_bar_change_event::ToolBarChangeEvent;
  pub fn qt_gui_c_QToolBarChangeEvent_toggle(this_ptr: *const ::tool_bar_change_event::ToolBarChangeEvent) -> bool;

  // Header: QTouchDevice
  pub fn qt_gui_c_QTouchDevice_G_operator_shl_to_output(arg1: *const ::qt_core::debug::Debug, arg2: *const ::touch_device::TouchDevice, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QTouchDevice_capabilities(this_ptr: *const ::touch_device::TouchDevice) -> ::libc::c_uint;
  pub fn qt_gui_c_QTouchDevice_delete(this_ptr: *mut ::touch_device::TouchDevice);
  pub fn qt_gui_c_QTouchDevice_devices_to_output(output: *mut ::list::ListTouchDevicePtr);
  pub fn qt_gui_c_QTouchDevice_maximumTouchPoints(this_ptr: *const ::touch_device::TouchDevice) -> ::libc::c_int;
  pub fn qt_gui_c_QTouchDevice_name_to_output(this_ptr: *const ::touch_device::TouchDevice, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QTouchDevice_new() -> *mut ::touch_device::TouchDevice;
  pub fn qt_gui_c_QTouchDevice_setCapabilities(this_ptr: *mut ::touch_device::TouchDevice, caps: ::libc::c_uint);
  pub fn qt_gui_c_QTouchDevice_setMaximumTouchPoints(this_ptr: *mut ::touch_device::TouchDevice, max: ::libc::c_int);
  pub fn qt_gui_c_QTouchDevice_setName(this_ptr: *mut ::touch_device::TouchDevice, name: *const ::qt_core::string::String);
  pub fn qt_gui_c_QTouchDevice_setType(this_ptr: *mut ::touch_device::TouchDevice, devType: ::touch_device::DeviceType);
  pub fn qt_gui_c_QTouchDevice_type(this_ptr: *const ::touch_device::TouchDevice) -> ::touch_device::DeviceType;

  // Header: QTouchEvent
  pub fn qt_gui_c_QTouchEvent_G_dynamic_cast_QTouchEvent_ptr(ptr: *mut ::input_event::InputEvent) -> *mut ::touch_event::TouchEvent;
  pub fn qt_gui_c_QTouchEvent_G_static_cast_QEvent_ptr(ptr: *mut ::touch_event::TouchEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QTouchEvent_G_static_cast_QInputEvent_ptr(ptr: *mut ::touch_event::TouchEvent) -> *mut ::input_event::InputEvent;
  pub fn qt_gui_c_QTouchEvent_G_static_cast_QTouchEvent_ptr_QEvent(ptr: *mut ::qt_core::event::Event) -> *mut ::touch_event::TouchEvent;
  pub fn qt_gui_c_QTouchEvent_G_static_cast_QTouchEvent_ptr_QInputEvent(ptr: *mut ::input_event::InputEvent) -> *mut ::touch_event::TouchEvent;
  pub fn qt_gui_c_QTouchEvent_TouchPoint_constructor_id(id: ::libc::c_int, output: *mut ::touch_event::TouchPoint);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_constructor_no_args(output: *mut ::touch_event::TouchPoint);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_constructor_other(other: *const ::touch_event::TouchPoint, output: *mut ::touch_event::TouchPoint);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_destructor(this_ptr: *mut ::touch_event::TouchPoint);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_ellipseDiameters_to_output(this_ptr: *const ::touch_event::TouchPoint, output: *mut ::qt_core::size_f::SizeF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_flags(this_ptr: *const ::touch_event::TouchPoint) -> ::libc::c_uint;
  pub fn qt_gui_c_QTouchEvent_TouchPoint_id(this_ptr: *const ::touch_event::TouchPoint) -> ::libc::c_int;
  pub fn qt_gui_c_QTouchEvent_TouchPoint_lastNormalizedPos_to_output(this_ptr: *const ::touch_event::TouchPoint, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_lastPos_to_output(this_ptr: *const ::touch_event::TouchPoint, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_lastScenePos_to_output(this_ptr: *const ::touch_event::TouchPoint, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_lastScreenPos_to_output(this_ptr: *const ::touch_event::TouchPoint, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_normalizedPos_to_output(this_ptr: *const ::touch_event::TouchPoint, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_operator_assign(this_ptr: *mut ::touch_event::TouchPoint, other: *const ::touch_event::TouchPoint) -> *mut ::touch_event::TouchPoint;
  pub fn qt_gui_c_QTouchEvent_TouchPoint_pos_to_output(this_ptr: *const ::touch_event::TouchPoint, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_pressure(this_ptr: *const ::touch_event::TouchPoint) -> ::libc::c_double;
  pub fn qt_gui_c_QTouchEvent_TouchPoint_rawScreenPositions_to_output(this_ptr: *const ::touch_event::TouchPoint, output: *mut ::qt_core::vector::VectorPointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_rect_to_output(this_ptr: *const ::touch_event::TouchPoint, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_rotation(this_ptr: *const ::touch_event::TouchPoint) -> ::libc::c_double;
  pub fn qt_gui_c_QTouchEvent_TouchPoint_scenePos_to_output(this_ptr: *const ::touch_event::TouchPoint, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_sceneRect_to_output(this_ptr: *const ::touch_event::TouchPoint, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_screenPos_to_output(this_ptr: *const ::touch_event::TouchPoint, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_screenRect_to_output(this_ptr: *const ::touch_event::TouchPoint, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_setEllipseDiameters(this_ptr: *mut ::touch_event::TouchPoint, dia: *const ::qt_core::size_f::SizeF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_setFlags(this_ptr: *mut ::touch_event::TouchPoint, flags: ::libc::c_uint);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_setId(this_ptr: *mut ::touch_event::TouchPoint, id: ::libc::c_int);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_setLastNormalizedPos(this_ptr: *mut ::touch_event::TouchPoint, lastNormalizedPos: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_setLastPos(this_ptr: *mut ::touch_event::TouchPoint, lastPos: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_setLastScenePos(this_ptr: *mut ::touch_event::TouchPoint, lastScenePos: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_setLastScreenPos(this_ptr: *mut ::touch_event::TouchPoint, lastScreenPos: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_setNormalizedPos(this_ptr: *mut ::touch_event::TouchPoint, normalizedPos: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_setPos(this_ptr: *mut ::touch_event::TouchPoint, pos: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_setPressure(this_ptr: *mut ::touch_event::TouchPoint, pressure: ::libc::c_double);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_setRawScreenPositions(this_ptr: *mut ::touch_event::TouchPoint, positions: *const ::qt_core::vector::VectorPointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_setRect(this_ptr: *mut ::touch_event::TouchPoint, rect: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_setRotation(this_ptr: *mut ::touch_event::TouchPoint, angle: ::libc::c_double);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_setScenePos(this_ptr: *mut ::touch_event::TouchPoint, scenePos: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_setSceneRect(this_ptr: *mut ::touch_event::TouchPoint, sceneRect: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_setScreenPos(this_ptr: *mut ::touch_event::TouchPoint, screenPos: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_setScreenRect(this_ptr: *mut ::touch_event::TouchPoint, screenRect: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_setStartNormalizedPos(this_ptr: *mut ::touch_event::TouchPoint, startNormalizedPos: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_setStartPos(this_ptr: *mut ::touch_event::TouchPoint, startPos: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_setStartScenePos(this_ptr: *mut ::touch_event::TouchPoint, startScenePos: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_setStartScreenPos(this_ptr: *mut ::touch_event::TouchPoint, startScreenPos: *const ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_setUniqueId(this_ptr: *mut ::touch_event::TouchPoint, uid: i64);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_setVelocity(this_ptr: *mut ::touch_event::TouchPoint, v: *const ::vector_2d::Vector2D);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_startNormalizedPos_to_output(this_ptr: *const ::touch_event::TouchPoint, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_startPos_to_output(this_ptr: *const ::touch_event::TouchPoint, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_startScenePos_to_output(this_ptr: *const ::touch_event::TouchPoint, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_startScreenPos_to_output(this_ptr: *const ::touch_event::TouchPoint, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_swap(this_ptr: *mut ::touch_event::TouchPoint, other: *mut ::touch_event::TouchPoint);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_uniqueId_to_output(this_ptr: *const ::touch_event::TouchPoint, output: *mut ::pointing_device_unique_id::PointingDeviceUniqueId);
  pub fn qt_gui_c_QTouchEvent_TouchPoint_velocity_as_ptr(this_ptr: *const ::touch_event::TouchPoint) -> *mut ::vector_2d::Vector2D;
  pub fn qt_gui_c_QTouchEvent_delete(this_ptr: *mut ::touch_event::TouchEvent);
  pub fn qt_gui_c_QTouchEvent_device(this_ptr: *const ::touch_event::TouchEvent) -> *mut ::touch_device::TouchDevice;
  pub fn qt_gui_c_QTouchEvent_setDevice(this_ptr: *mut ::touch_event::TouchEvent, adevice: *mut ::touch_device::TouchDevice);
  pub fn qt_gui_c_QTouchEvent_setTarget(this_ptr: *mut ::touch_event::TouchEvent, atarget: *mut ::qt_core::object::Object);
  pub fn qt_gui_c_QTouchEvent_setTouchPoints(this_ptr: *mut ::touch_event::TouchEvent, atouchPoints: *const ::list::ListTouchEventTouchPoint);
  pub fn qt_gui_c_QTouchEvent_setWindow(this_ptr: *mut ::touch_event::TouchEvent, awindow: *mut ::window::Window);
  pub fn qt_gui_c_QTouchEvent_target(this_ptr: *const ::touch_event::TouchEvent) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QTouchEvent_touchPoints(this_ptr: *const ::touch_event::TouchEvent) -> *const ::list::ListTouchEventTouchPoint;
  pub fn qt_gui_c_QTouchEvent_window(this_ptr: *const ::touch_event::TouchEvent) -> *mut ::window::Window;

  // Header: QTransform
  pub fn qt_gui_c_QTransform_G_operator_add_to_output(a: *const ::transform::Transform, n: ::libc::c_double, output: *mut ::transform::Transform);
  pub fn qt_gui_c_QTransform_G_operator_div_to_output(a: *const ::transform::Transform, n: ::libc::c_double, output: *mut ::transform::Transform);
  pub fn qt_gui_c_QTransform_G_operator_mul_as_ptr(r: *const ::region::Region, m: *const ::transform::Transform) -> *mut ::region::Region;
  pub fn qt_gui_c_QTransform_G_operator_mul_to_output_QLineF_QTransform(l: *const ::qt_core::line_f::LineF, m: *const ::transform::Transform, output: *mut ::qt_core::line_f::LineF);
  pub fn qt_gui_c_QTransform_G_operator_mul_to_output_QLine_QTransform(l: *const ::qt_core::line::Line, m: *const ::transform::Transform, output: *mut ::qt_core::line::Line);
  pub fn qt_gui_c_QTransform_G_operator_mul_to_output_QPainterPath_QTransform(p: *const ::painter_path::PainterPath, m: *const ::transform::Transform, output: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QTransform_G_operator_mul_to_output_QPointF_QTransform(p: *const ::qt_core::point_f::PointF, m: *const ::transform::Transform, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTransform_G_operator_mul_to_output_QPoint_QTransform(p: *const ::qt_core::point::Point, m: *const ::transform::Transform, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QTransform_G_operator_mul_to_output_QPolygonF_QTransform(a: *const ::polygon_f::PolygonF, m: *const ::transform::Transform, output: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QTransform_G_operator_mul_to_output_QPolygon_QTransform(a: *const ::polygon::Polygon, m: *const ::transform::Transform, output: *mut ::polygon::Polygon);
  pub fn qt_gui_c_QTransform_G_operator_mul_to_output_QTransform_double(a: *const ::transform::Transform, n: ::libc::c_double, output: *mut ::transform::Transform);
  pub fn qt_gui_c_QTransform_G_operator_shl(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *const ::transform::Transform) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QTransform_G_operator_shl_to_output(arg1: *const ::qt_core::debug::Debug, arg2: *const ::transform::Transform, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QTransform_G_operator_shr(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *mut ::transform::Transform) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QTransform_G_operator_sub_to_output(a: *const ::transform::Transform, n: ::libc::c_double, output: *mut ::transform::Transform);
  pub fn qt_gui_c_QTransform_G_qFuzzyCompare(t1: *const ::transform::Transform, t2: *const ::transform::Transform) -> bool;
  pub fn qt_gui_c_QTransform_G_qHash_key(key: *const ::transform::Transform) -> ::libc::c_uint;
  pub fn qt_gui_c_QTransform_G_qHash_key_seed(key: *const ::transform::Transform, seed: ::libc::c_uint) -> ::libc::c_uint;
  pub fn qt_gui_c_QTransform_adjoint_to_output(this_ptr: *const ::transform::Transform, output: *mut ::transform::Transform);
  pub fn qt_gui_c_QTransform_constructor_h11_h12_h13_h21_h22_h23_h31_h32(h11: ::libc::c_double, h12: ::libc::c_double, h13: ::libc::c_double, h21: ::libc::c_double, h22: ::libc::c_double, h23: ::libc::c_double, h31: ::libc::c_double, h32: ::libc::c_double, output: *mut ::transform::Transform);
  pub fn qt_gui_c_QTransform_constructor_h11_h12_h13_h21_h22_h23_h31_h32_h33(h11: ::libc::c_double, h12: ::libc::c_double, h13: ::libc::c_double, h21: ::libc::c_double, h22: ::libc::c_double, h23: ::libc::c_double, h31: ::libc::c_double, h32: ::libc::c_double, h33: ::libc::c_double, output: *mut ::transform::Transform);
  pub fn qt_gui_c_QTransform_constructor_h11_h12_h21_h22_dx_dy(h11: ::libc::c_double, h12: ::libc::c_double, h21: ::libc::c_double, h22: ::libc::c_double, dx: ::libc::c_double, dy: ::libc::c_double, output: *mut ::transform::Transform);
  pub fn qt_gui_c_QTransform_constructor_mtx(mtx: *const ::matrix::Matrix, output: *mut ::transform::Transform);
  pub fn qt_gui_c_QTransform_constructor_no_args(output: *mut ::transform::Transform);
  pub fn qt_gui_c_QTransform_constructor_other(other: *const ::transform::Transform, output: *mut ::transform::Transform);
  pub fn qt_gui_c_QTransform_convert_to_QVariant_to_output(this_ptr: *const ::transform::Transform, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QTransform_destructor(this_ptr: *mut ::transform::Transform);
  pub fn qt_gui_c_QTransform_det(this_ptr: *const ::transform::Transform) -> ::libc::c_double;
  pub fn qt_gui_c_QTransform_determinant(this_ptr: *const ::transform::Transform) -> ::libc::c_double;
  pub fn qt_gui_c_QTransform_dx(this_ptr: *const ::transform::Transform) -> ::libc::c_double;
  pub fn qt_gui_c_QTransform_dy(this_ptr: *const ::transform::Transform) -> ::libc::c_double;
  pub fn qt_gui_c_QTransform_fromScale_to_output(dx: ::libc::c_double, dy: ::libc::c_double, output: *mut ::transform::Transform);
  pub fn qt_gui_c_QTransform_fromTranslate_to_output(dx: ::libc::c_double, dy: ::libc::c_double, output: *mut ::transform::Transform);
  pub fn qt_gui_c_QTransform_inverted_to_output_invertible(this_ptr: *const ::transform::Transform, invertible: *mut bool, output: *mut ::transform::Transform);
  pub fn qt_gui_c_QTransform_inverted_to_output_no_args(this_ptr: *const ::transform::Transform, output: *mut ::transform::Transform);
  pub fn qt_gui_c_QTransform_isAffine(this_ptr: *const ::transform::Transform) -> bool;
  pub fn qt_gui_c_QTransform_isIdentity(this_ptr: *const ::transform::Transform) -> bool;
  pub fn qt_gui_c_QTransform_isInvertible(this_ptr: *const ::transform::Transform) -> bool;
  pub fn qt_gui_c_QTransform_isRotating(this_ptr: *const ::transform::Transform) -> bool;
  pub fn qt_gui_c_QTransform_isScaling(this_ptr: *const ::transform::Transform) -> bool;
  pub fn qt_gui_c_QTransform_isTranslating(this_ptr: *const ::transform::Transform) -> bool;
  pub fn qt_gui_c_QTransform_m11(this_ptr: *const ::transform::Transform) -> ::libc::c_double;
  pub fn qt_gui_c_QTransform_m12(this_ptr: *const ::transform::Transform) -> ::libc::c_double;
  pub fn qt_gui_c_QTransform_m13(this_ptr: *const ::transform::Transform) -> ::libc::c_double;
  pub fn qt_gui_c_QTransform_m21(this_ptr: *const ::transform::Transform) -> ::libc::c_double;
  pub fn qt_gui_c_QTransform_m22(this_ptr: *const ::transform::Transform) -> ::libc::c_double;
  pub fn qt_gui_c_QTransform_m23(this_ptr: *const ::transform::Transform) -> ::libc::c_double;
  pub fn qt_gui_c_QTransform_m31(this_ptr: *const ::transform::Transform) -> ::libc::c_double;
  pub fn qt_gui_c_QTransform_m32(this_ptr: *const ::transform::Transform) -> ::libc::c_double;
  pub fn qt_gui_c_QTransform_m33(this_ptr: *const ::transform::Transform) -> ::libc::c_double;
  pub fn qt_gui_c_QTransform_mapRect_to_output_QRect(this_ptr: *const ::transform::Transform, arg1: *const ::qt_core::rect::Rect, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QTransform_mapRect_to_output_QRectF(this_ptr: *const ::transform::Transform, arg1: *const ::qt_core::rect_f::RectF, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QTransform_mapToPolygon_to_output(this_ptr: *const ::transform::Transform, r: *const ::qt_core::rect::Rect, output: *mut ::polygon::Polygon);
  pub fn qt_gui_c_QTransform_map_as_ptr(this_ptr: *const ::transform::Transform, r: *const ::region::Region) -> *mut ::region::Region;
  pub fn qt_gui_c_QTransform_map_double_double_double_double(this_ptr: *const ::transform::Transform, x: ::libc::c_double, y: ::libc::c_double, tx: *mut ::libc::c_double, ty: *mut ::libc::c_double);
  pub fn qt_gui_c_QTransform_map_int_int_int_int(this_ptr: *const ::transform::Transform, x: ::libc::c_int, y: ::libc::c_int, tx: *mut ::libc::c_int, ty: *mut ::libc::c_int);
  pub fn qt_gui_c_QTransform_map_to_output_QLine(this_ptr: *const ::transform::Transform, l: *const ::qt_core::line::Line, output: *mut ::qt_core::line::Line);
  pub fn qt_gui_c_QTransform_map_to_output_QLineF(this_ptr: *const ::transform::Transform, l: *const ::qt_core::line_f::LineF, output: *mut ::qt_core::line_f::LineF);
  pub fn qt_gui_c_QTransform_map_to_output_QPainterPath(this_ptr: *const ::transform::Transform, p: *const ::painter_path::PainterPath, output: *mut ::painter_path::PainterPath);
  pub fn qt_gui_c_QTransform_map_to_output_QPoint(this_ptr: *const ::transform::Transform, p: *const ::qt_core::point::Point, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QTransform_map_to_output_QPointF(this_ptr: *const ::transform::Transform, p: *const ::qt_core::point_f::PointF, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QTransform_map_to_output_QPolygon(this_ptr: *const ::transform::Transform, a: *const ::polygon::Polygon, output: *mut ::polygon::Polygon);
  pub fn qt_gui_c_QTransform_map_to_output_QPolygonF(this_ptr: *const ::transform::Transform, a: *const ::polygon_f::PolygonF, output: *mut ::polygon_f::PolygonF);
  pub fn qt_gui_c_QTransform_operator_add_assign(this_ptr: *mut ::transform::Transform, div: ::libc::c_double) -> *mut ::transform::Transform;
  pub fn qt_gui_c_QTransform_operator_assign(this_ptr: *mut ::transform::Transform, arg1: *const ::transform::Transform) -> *mut ::transform::Transform;
  pub fn qt_gui_c_QTransform_operator_div_assign(this_ptr: *mut ::transform::Transform, div: ::libc::c_double) -> *mut ::transform::Transform;
  pub fn qt_gui_c_QTransform_operator_eq(this_ptr: *const ::transform::Transform, arg1: *const ::transform::Transform) -> bool;
  pub fn qt_gui_c_QTransform_operator_mul_assign_arg1(this_ptr: *mut ::transform::Transform, arg1: *const ::transform::Transform) -> *mut ::transform::Transform;
  pub fn qt_gui_c_QTransform_operator_mul_assign_div(this_ptr: *mut ::transform::Transform, div: ::libc::c_double) -> *mut ::transform::Transform;
  pub fn qt_gui_c_QTransform_operator_mul_to_output(this_ptr: *const ::transform::Transform, o: *const ::transform::Transform, output: *mut ::transform::Transform);
  pub fn qt_gui_c_QTransform_operator_neq(this_ptr: *const ::transform::Transform, arg1: *const ::transform::Transform) -> bool;
  pub fn qt_gui_c_QTransform_operator_sub_assign(this_ptr: *mut ::transform::Transform, div: ::libc::c_double) -> *mut ::transform::Transform;
  pub fn qt_gui_c_QTransform_quadToQuad(one: *const ::polygon_f::PolygonF, two: *const ::polygon_f::PolygonF, result: *mut ::transform::Transform) -> bool;
  pub fn qt_gui_c_QTransform_quadToSquare(quad: *const ::polygon_f::PolygonF, result: *mut ::transform::Transform) -> bool;
  pub fn qt_gui_c_QTransform_reset(this_ptr: *mut ::transform::Transform);
  pub fn qt_gui_c_QTransform_rotateRadians_a(this_ptr: *mut ::transform::Transform, a: ::libc::c_double) -> *mut ::transform::Transform;
  pub fn qt_gui_c_QTransform_rotateRadians_a_axis(this_ptr: *mut ::transform::Transform, a: ::libc::c_double, axis: *const ::qt_core::qt::Axis) -> *mut ::transform::Transform;
  pub fn qt_gui_c_QTransform_rotate_a(this_ptr: *mut ::transform::Transform, a: ::libc::c_double) -> *mut ::transform::Transform;
  pub fn qt_gui_c_QTransform_rotate_a_axis(this_ptr: *mut ::transform::Transform, a: ::libc::c_double, axis: *const ::qt_core::qt::Axis) -> *mut ::transform::Transform;
  pub fn qt_gui_c_QTransform_scale(this_ptr: *mut ::transform::Transform, sx: ::libc::c_double, sy: ::libc::c_double) -> *mut ::transform::Transform;
  pub fn qt_gui_c_QTransform_setMatrix(this_ptr: *mut ::transform::Transform, m11: ::libc::c_double, m12: ::libc::c_double, m13: ::libc::c_double, m21: ::libc::c_double, m22: ::libc::c_double, m23: ::libc::c_double, m31: ::libc::c_double, m32: ::libc::c_double, m33: ::libc::c_double);
  pub fn qt_gui_c_QTransform_shear(this_ptr: *mut ::transform::Transform, sh: ::libc::c_double, sv: ::libc::c_double) -> *mut ::transform::Transform;
  pub fn qt_gui_c_QTransform_squareToQuad(square: *const ::polygon_f::PolygonF, result: *mut ::transform::Transform) -> bool;
  pub fn qt_gui_c_QTransform_toAffine(this_ptr: *const ::transform::Transform) -> *const ::matrix::Matrix;
  pub fn qt_gui_c_QTransform_translate(this_ptr: *mut ::transform::Transform, dx: ::libc::c_double, dy: ::libc::c_double) -> *mut ::transform::Transform;
  pub fn qt_gui_c_QTransform_transposed_to_output(this_ptr: *const ::transform::Transform, output: *mut ::transform::Transform);
  pub fn qt_gui_c_QTransform_type(this_ptr: *const ::transform::Transform) -> ::transform::TransformationType;

  // Header: QValidator
  pub fn qt_gui_c_QValidator_G_static_cast_QObject_ptr(ptr: *mut ::validator::Validator) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QValidator_G_static_cast_QValidator_ptr(ptr: *mut ::qt_core::object::Object) -> *mut ::validator::Validator;
  pub fn qt_gui_c_QValidator_delete(this_ptr: *mut ::validator::Validator);
  pub fn qt_gui_c_QValidator_fixup(this_ptr: *const ::validator::Validator, arg1: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QValidator_locale_to_output(this_ptr: *const ::validator::Validator, output: *mut ::qt_core::locale::Locale);
  pub fn qt_gui_c_QValidator_metaObject(this_ptr: *const ::validator::Validator) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QValidator_qt_metacall(this_ptr: *mut ::validator::Validator, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QValidator_qt_metacast(this_ptr: *mut ::validator::Validator, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QValidator_setLocale(this_ptr: *mut ::validator::Validator, locale: *const ::qt_core::locale::Locale);
  pub fn qt_gui_c_QValidator_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QValidator_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QValidator_validate(this_ptr: *const ::validator::Validator, arg1: *mut ::qt_core::string::String, arg2: *mut ::libc::c_int) -> ::validator::State;

  // Header: QVector
  pub fn qt_gui_c_QVector_GLuint64_append_l(this_ptr: *mut ::vector::VectorU64, l: *const ::vector::VectorU64);
  pub fn qt_gui_c_QVector_GLuint64_append_t(this_ptr: *mut ::vector::VectorU64, t: *const u64);
  pub fn qt_gui_c_QVector_GLuint64_at(this_ptr: *const ::vector::VectorU64, i: ::libc::c_int) -> *const u64;
  pub fn qt_gui_c_QVector_GLuint64_back(this_ptr: *mut ::vector::VectorU64) -> *mut u64;
  pub fn qt_gui_c_QVector_GLuint64_back_const(this_ptr: *const ::vector::VectorU64) -> *const u64;
  pub fn qt_gui_c_QVector_GLuint64_capacity(this_ptr: *const ::vector::VectorU64) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_GLuint64_clear(this_ptr: *mut ::vector::VectorU64);
  pub fn qt_gui_c_QVector_GLuint64_constData(this_ptr: *const ::vector::VectorU64) -> *const u64;
  pub fn qt_gui_c_QVector_GLuint64_constFirst(this_ptr: *const ::vector::VectorU64) -> *const u64;
  pub fn qt_gui_c_QVector_GLuint64_constLast(this_ptr: *const ::vector::VectorU64) -> *const u64;
  pub fn qt_gui_c_QVector_GLuint64_constructor_no_args(output: *mut ::vector::VectorU64);
  pub fn qt_gui_c_QVector_GLuint64_constructor_size(size: ::libc::c_int, output: *mut ::vector::VectorU64);
  pub fn qt_gui_c_QVector_GLuint64_constructor_size_t(size: ::libc::c_int, t: *const u64, output: *mut ::vector::VectorU64);
  pub fn qt_gui_c_QVector_GLuint64_constructor_v(v: *const ::vector::VectorU64, output: *mut ::vector::VectorU64);
  pub fn qt_gui_c_QVector_GLuint64_contains(this_ptr: *const ::vector::VectorU64, t: *const u64) -> bool;
  pub fn qt_gui_c_QVector_GLuint64_count_no_args(this_ptr: *const ::vector::VectorU64) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_GLuint64_count_t(this_ptr: *const ::vector::VectorU64, t: *const u64) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_GLuint64_data(this_ptr: *mut ::vector::VectorU64) -> *mut u64;
  pub fn qt_gui_c_QVector_GLuint64_data_const(this_ptr: *const ::vector::VectorU64) -> *const u64;
  pub fn qt_gui_c_QVector_GLuint64_destructor(this_ptr: *mut ::vector::VectorU64);
  pub fn qt_gui_c_QVector_GLuint64_empty(this_ptr: *const ::vector::VectorU64) -> bool;
  pub fn qt_gui_c_QVector_GLuint64_endsWith(this_ptr: *const ::vector::VectorU64, t: *const u64) -> bool;
  pub fn qt_gui_c_QVector_GLuint64_fill_t(this_ptr: *mut ::vector::VectorU64, t: *const u64) -> *mut ::vector::VectorU64;
  pub fn qt_gui_c_QVector_GLuint64_fill_t_size(this_ptr: *mut ::vector::VectorU64, t: *const u64, size: ::libc::c_int) -> *mut ::vector::VectorU64;
  pub fn qt_gui_c_QVector_GLuint64_first(this_ptr: *mut ::vector::VectorU64) -> *mut u64;
  pub fn qt_gui_c_QVector_GLuint64_first_const(this_ptr: *const ::vector::VectorU64) -> *const u64;
  pub fn qt_gui_c_QVector_GLuint64_front(this_ptr: *mut ::vector::VectorU64) -> *mut u64;
  pub fn qt_gui_c_QVector_GLuint64_front_const(this_ptr: *const ::vector::VectorU64) -> *const u64;
  pub fn qt_gui_c_QVector_GLuint64_indexOf_t(this_ptr: *const ::vector::VectorU64, t: *const u64) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_GLuint64_indexOf_t_from(this_ptr: *const ::vector::VectorU64, t: *const u64, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_GLuint64_insert_i_n_t(this_ptr: *mut ::vector::VectorU64, i: ::libc::c_int, n: ::libc::c_int, t: *const u64);
  pub fn qt_gui_c_QVector_GLuint64_insert_i_t(this_ptr: *mut ::vector::VectorU64, i: ::libc::c_int, t: *const u64);
  pub fn qt_gui_c_QVector_GLuint64_isEmpty(this_ptr: *const ::vector::VectorU64) -> bool;
  pub fn qt_gui_c_QVector_GLuint64_last(this_ptr: *mut ::vector::VectorU64) -> *mut u64;
  pub fn qt_gui_c_QVector_GLuint64_lastIndexOf_t(this_ptr: *const ::vector::VectorU64, t: *const u64) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_GLuint64_lastIndexOf_t_from(this_ptr: *const ::vector::VectorU64, t: *const u64, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_GLuint64_last_const(this_ptr: *const ::vector::VectorU64) -> *const u64;
  pub fn qt_gui_c_QVector_GLuint64_length(this_ptr: *const ::vector::VectorU64) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_GLuint64_mid_to_output_pos(this_ptr: *const ::vector::VectorU64, pos: ::libc::c_int, output: *mut ::vector::VectorU64);
  pub fn qt_gui_c_QVector_GLuint64_mid_to_output_pos_len(this_ptr: *const ::vector::VectorU64, pos: ::libc::c_int, len: ::libc::c_int, output: *mut ::vector::VectorU64);
  pub fn qt_gui_c_QVector_GLuint64_move(this_ptr: *mut ::vector::VectorU64, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QVector_GLuint64_operator_add_assign_l(this_ptr: *mut ::vector::VectorU64, l: *const ::vector::VectorU64) -> *mut ::vector::VectorU64;
  pub fn qt_gui_c_QVector_GLuint64_operator_add_assign_t(this_ptr: *mut ::vector::VectorU64, t: *const u64) -> *mut ::vector::VectorU64;
  pub fn qt_gui_c_QVector_GLuint64_operator_add_to_output(this_ptr: *const ::vector::VectorU64, l: *const ::vector::VectorU64, output: *mut ::vector::VectorU64);
  pub fn qt_gui_c_QVector_GLuint64_operator_assign(this_ptr: *mut ::vector::VectorU64, v: *const ::vector::VectorU64) -> *mut ::vector::VectorU64;
  pub fn qt_gui_c_QVector_GLuint64_operator_eq(this_ptr: *const ::vector::VectorU64, v: *const ::vector::VectorU64) -> bool;
  pub fn qt_gui_c_QVector_GLuint64_operator_index(this_ptr: *mut ::vector::VectorU64, i: ::libc::c_int) -> *mut u64;
  pub fn qt_gui_c_QVector_GLuint64_operator_index_const(this_ptr: *const ::vector::VectorU64, i: ::libc::c_int) -> *const u64;
  pub fn qt_gui_c_QVector_GLuint64_operator_neq(this_ptr: *const ::vector::VectorU64, v: *const ::vector::VectorU64) -> bool;
  pub fn qt_gui_c_QVector_GLuint64_operator_shl_l(this_ptr: *mut ::vector::VectorU64, l: *const ::vector::VectorU64) -> *mut ::vector::VectorU64;
  pub fn qt_gui_c_QVector_GLuint64_operator_shl_t(this_ptr: *mut ::vector::VectorU64, t: *const u64) -> *mut ::vector::VectorU64;
  pub fn qt_gui_c_QVector_GLuint64_pop_back(this_ptr: *mut ::vector::VectorU64);
  pub fn qt_gui_c_QVector_GLuint64_pop_front(this_ptr: *mut ::vector::VectorU64);
  pub fn qt_gui_c_QVector_GLuint64_prepend(this_ptr: *mut ::vector::VectorU64, t: *const u64);
  pub fn qt_gui_c_QVector_GLuint64_push_back(this_ptr: *mut ::vector::VectorU64, t: *const u64);
  pub fn qt_gui_c_QVector_GLuint64_push_front(this_ptr: *mut ::vector::VectorU64, t: *const u64);
  pub fn qt_gui_c_QVector_GLuint64_removeAll(this_ptr: *mut ::vector::VectorU64, t: *const u64) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_GLuint64_removeAt(this_ptr: *mut ::vector::VectorU64, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_GLuint64_removeFirst(this_ptr: *mut ::vector::VectorU64);
  pub fn qt_gui_c_QVector_GLuint64_removeLast(this_ptr: *mut ::vector::VectorU64);
  pub fn qt_gui_c_QVector_GLuint64_removeOne(this_ptr: *mut ::vector::VectorU64, t: *const u64) -> bool;
  pub fn qt_gui_c_QVector_GLuint64_remove_i(this_ptr: *mut ::vector::VectorU64, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_GLuint64_remove_i_n(this_ptr: *mut ::vector::VectorU64, i: ::libc::c_int, n: ::libc::c_int);
  pub fn qt_gui_c_QVector_GLuint64_replace(this_ptr: *mut ::vector::VectorU64, i: ::libc::c_int, t: *const u64);
  pub fn qt_gui_c_QVector_GLuint64_reserve(this_ptr: *mut ::vector::VectorU64, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_GLuint64_resize(this_ptr: *mut ::vector::VectorU64, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_GLuint64_size(this_ptr: *const ::vector::VectorU64) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_GLuint64_squeeze(this_ptr: *mut ::vector::VectorU64);
  pub fn qt_gui_c_QVector_GLuint64_startsWith(this_ptr: *const ::vector::VectorU64, t: *const u64) -> bool;
  pub fn qt_gui_c_QVector_GLuint64_swap(this_ptr: *mut ::vector::VectorU64, other: *mut ::vector::VectorU64);
  pub fn qt_gui_c_QVector_GLuint64_takeAt(this_ptr: *mut ::vector::VectorU64, i: ::libc::c_int) -> u64;
  pub fn qt_gui_c_QVector_GLuint64_takeFirst(this_ptr: *mut ::vector::VectorU64) -> u64;
  pub fn qt_gui_c_QVector_GLuint64_takeLast(this_ptr: *mut ::vector::VectorU64) -> u64;
  pub fn qt_gui_c_QVector_GLuint64_value_i(this_ptr: *const ::vector::VectorU64, i: ::libc::c_int) -> u64;
  pub fn qt_gui_c_QVector_GLuint64_value_i_defaultValue(this_ptr: *const ::vector::VectorU64, i: ::libc::c_int, defaultValue: *const u64) -> u64;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_append_l(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection, l: *const ::vector::VectorAbstractTextDocumentLayoutSelection);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_append_t(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection, t: *const ::abstract_text_document_layout::Selection);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_at(this_ptr: *const ::vector::VectorAbstractTextDocumentLayoutSelection, i: ::libc::c_int) -> *const ::abstract_text_document_layout::Selection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_back(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection) -> *mut ::abstract_text_document_layout::Selection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_back_const(this_ptr: *const ::vector::VectorAbstractTextDocumentLayoutSelection) -> *const ::abstract_text_document_layout::Selection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_capacity(this_ptr: *const ::vector::VectorAbstractTextDocumentLayoutSelection) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_clear(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_constData(this_ptr: *const ::vector::VectorAbstractTextDocumentLayoutSelection) -> *const ::abstract_text_document_layout::Selection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_constFirst(this_ptr: *const ::vector::VectorAbstractTextDocumentLayoutSelection) -> *const ::abstract_text_document_layout::Selection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_constLast(this_ptr: *const ::vector::VectorAbstractTextDocumentLayoutSelection) -> *const ::abstract_text_document_layout::Selection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_constructor_no_args(output: *mut ::vector::VectorAbstractTextDocumentLayoutSelection);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_constructor_size(size: ::libc::c_int, output: *mut ::vector::VectorAbstractTextDocumentLayoutSelection);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_constructor_size_t(size: ::libc::c_int, t: *const ::abstract_text_document_layout::Selection, output: *mut ::vector::VectorAbstractTextDocumentLayoutSelection);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_constructor_v(v: *const ::vector::VectorAbstractTextDocumentLayoutSelection, output: *mut ::vector::VectorAbstractTextDocumentLayoutSelection);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_count(this_ptr: *const ::vector::VectorAbstractTextDocumentLayoutSelection) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_data(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection) -> *mut ::abstract_text_document_layout::Selection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_data_const(this_ptr: *const ::vector::VectorAbstractTextDocumentLayoutSelection) -> *const ::abstract_text_document_layout::Selection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_destructor(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_empty(this_ptr: *const ::vector::VectorAbstractTextDocumentLayoutSelection) -> bool;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_fill_t(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection, t: *const ::abstract_text_document_layout::Selection) -> *mut ::vector::VectorAbstractTextDocumentLayoutSelection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_fill_t_size(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection, t: *const ::abstract_text_document_layout::Selection, size: ::libc::c_int) -> *mut ::vector::VectorAbstractTextDocumentLayoutSelection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_first(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection) -> *mut ::abstract_text_document_layout::Selection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_first_const(this_ptr: *const ::vector::VectorAbstractTextDocumentLayoutSelection) -> *const ::abstract_text_document_layout::Selection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_front(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection) -> *mut ::abstract_text_document_layout::Selection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_front_const(this_ptr: *const ::vector::VectorAbstractTextDocumentLayoutSelection) -> *const ::abstract_text_document_layout::Selection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_insert_i_n_t(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection, i: ::libc::c_int, n: ::libc::c_int, t: *const ::abstract_text_document_layout::Selection);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_insert_i_t(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection, i: ::libc::c_int, t: *const ::abstract_text_document_layout::Selection);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_isEmpty(this_ptr: *const ::vector::VectorAbstractTextDocumentLayoutSelection) -> bool;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_last(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection) -> *mut ::abstract_text_document_layout::Selection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_last_const(this_ptr: *const ::vector::VectorAbstractTextDocumentLayoutSelection) -> *const ::abstract_text_document_layout::Selection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_length(this_ptr: *const ::vector::VectorAbstractTextDocumentLayoutSelection) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_mid_to_output_pos(this_ptr: *const ::vector::VectorAbstractTextDocumentLayoutSelection, pos: ::libc::c_int, output: *mut ::vector::VectorAbstractTextDocumentLayoutSelection);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_mid_to_output_pos_len(this_ptr: *const ::vector::VectorAbstractTextDocumentLayoutSelection, pos: ::libc::c_int, len: ::libc::c_int, output: *mut ::vector::VectorAbstractTextDocumentLayoutSelection);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_move(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_operator_add_assign_l(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection, l: *const ::vector::VectorAbstractTextDocumentLayoutSelection) -> *mut ::vector::VectorAbstractTextDocumentLayoutSelection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_operator_add_assign_t(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection, t: *const ::abstract_text_document_layout::Selection) -> *mut ::vector::VectorAbstractTextDocumentLayoutSelection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_operator_add_to_output(this_ptr: *const ::vector::VectorAbstractTextDocumentLayoutSelection, l: *const ::vector::VectorAbstractTextDocumentLayoutSelection, output: *mut ::vector::VectorAbstractTextDocumentLayoutSelection);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_operator_assign(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection, v: *const ::vector::VectorAbstractTextDocumentLayoutSelection) -> *mut ::vector::VectorAbstractTextDocumentLayoutSelection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_operator_index(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection, i: ::libc::c_int) -> *mut ::abstract_text_document_layout::Selection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_operator_index_const(this_ptr: *const ::vector::VectorAbstractTextDocumentLayoutSelection, i: ::libc::c_int) -> *const ::abstract_text_document_layout::Selection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_operator_shl_l(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection, l: *const ::vector::VectorAbstractTextDocumentLayoutSelection) -> *mut ::vector::VectorAbstractTextDocumentLayoutSelection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_operator_shl_t(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection, t: *const ::abstract_text_document_layout::Selection) -> *mut ::vector::VectorAbstractTextDocumentLayoutSelection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_pop_back(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_pop_front(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_prepend(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection, t: *const ::abstract_text_document_layout::Selection);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_push_back(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection, t: *const ::abstract_text_document_layout::Selection);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_push_front(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection, t: *const ::abstract_text_document_layout::Selection);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_removeAt(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_removeFirst(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_removeLast(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_remove_i(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_remove_i_n(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection, i: ::libc::c_int, n: ::libc::c_int);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_replace(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection, i: ::libc::c_int, t: *const ::abstract_text_document_layout::Selection);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_reserve(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_resize(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_size(this_ptr: *const ::vector::VectorAbstractTextDocumentLayoutSelection) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_squeeze(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_swap(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection, other: *mut ::vector::VectorAbstractTextDocumentLayoutSelection);
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_takeAt_as_ptr(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection, i: ::libc::c_int) -> *mut ::abstract_text_document_layout::Selection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_takeFirst_as_ptr(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection) -> *mut ::abstract_text_document_layout::Selection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_takeLast_as_ptr(this_ptr: *mut ::vector::VectorAbstractTextDocumentLayoutSelection) -> *mut ::abstract_text_document_layout::Selection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_value_as_ptr_i(this_ptr: *const ::vector::VectorAbstractTextDocumentLayoutSelection, i: ::libc::c_int) -> *mut ::abstract_text_document_layout::Selection;
  pub fn qt_gui_c_QVector_QAbstractTextDocumentLayout_Selection_value_as_ptr_i_defaultValue(this_ptr: *const ::vector::VectorAbstractTextDocumentLayoutSelection, i: ::libc::c_int, defaultValue: *const ::abstract_text_document_layout::Selection) -> *mut ::abstract_text_document_layout::Selection;
  pub fn qt_gui_c_QVector_QLineF_append_l(this_ptr: *mut ::vector::VectorQtCoreLineF, l: *const ::vector::VectorQtCoreLineF);
  pub fn qt_gui_c_QVector_QLineF_append_t(this_ptr: *mut ::vector::VectorQtCoreLineF, t: *const ::qt_core::line_f::LineF);
  pub fn qt_gui_c_QVector_QLineF_at(this_ptr: *const ::vector::VectorQtCoreLineF, i: ::libc::c_int) -> *const ::qt_core::line_f::LineF;
  pub fn qt_gui_c_QVector_QLineF_back(this_ptr: *mut ::vector::VectorQtCoreLineF) -> *mut ::qt_core::line_f::LineF;
  pub fn qt_gui_c_QVector_QLineF_back_const(this_ptr: *const ::vector::VectorQtCoreLineF) -> *const ::qt_core::line_f::LineF;
  pub fn qt_gui_c_QVector_QLineF_capacity(this_ptr: *const ::vector::VectorQtCoreLineF) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QLineF_clear(this_ptr: *mut ::vector::VectorQtCoreLineF);
  pub fn qt_gui_c_QVector_QLineF_constData(this_ptr: *const ::vector::VectorQtCoreLineF) -> *const ::qt_core::line_f::LineF;
  pub fn qt_gui_c_QVector_QLineF_constFirst(this_ptr: *const ::vector::VectorQtCoreLineF) -> *const ::qt_core::line_f::LineF;
  pub fn qt_gui_c_QVector_QLineF_constLast(this_ptr: *const ::vector::VectorQtCoreLineF) -> *const ::qt_core::line_f::LineF;
  pub fn qt_gui_c_QVector_QLineF_constructor_no_args(output: *mut ::vector::VectorQtCoreLineF);
  pub fn qt_gui_c_QVector_QLineF_constructor_size(size: ::libc::c_int, output: *mut ::vector::VectorQtCoreLineF);
  pub fn qt_gui_c_QVector_QLineF_constructor_size_t(size: ::libc::c_int, t: *const ::qt_core::line_f::LineF, output: *mut ::vector::VectorQtCoreLineF);
  pub fn qt_gui_c_QVector_QLineF_constructor_v(v: *const ::vector::VectorQtCoreLineF, output: *mut ::vector::VectorQtCoreLineF);
  pub fn qt_gui_c_QVector_QLineF_contains(this_ptr: *const ::vector::VectorQtCoreLineF, t: *const ::qt_core::line_f::LineF) -> bool;
  pub fn qt_gui_c_QVector_QLineF_count_no_args(this_ptr: *const ::vector::VectorQtCoreLineF) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QLineF_count_t(this_ptr: *const ::vector::VectorQtCoreLineF, t: *const ::qt_core::line_f::LineF) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QLineF_data(this_ptr: *mut ::vector::VectorQtCoreLineF) -> *mut ::qt_core::line_f::LineF;
  pub fn qt_gui_c_QVector_QLineF_data_const(this_ptr: *const ::vector::VectorQtCoreLineF) -> *const ::qt_core::line_f::LineF;
  pub fn qt_gui_c_QVector_QLineF_destructor(this_ptr: *mut ::vector::VectorQtCoreLineF);
  pub fn qt_gui_c_QVector_QLineF_empty(this_ptr: *const ::vector::VectorQtCoreLineF) -> bool;
  pub fn qt_gui_c_QVector_QLineF_endsWith(this_ptr: *const ::vector::VectorQtCoreLineF, t: *const ::qt_core::line_f::LineF) -> bool;
  pub fn qt_gui_c_QVector_QLineF_fill_t(this_ptr: *mut ::vector::VectorQtCoreLineF, t: *const ::qt_core::line_f::LineF) -> *mut ::vector::VectorQtCoreLineF;
  pub fn qt_gui_c_QVector_QLineF_fill_t_size(this_ptr: *mut ::vector::VectorQtCoreLineF, t: *const ::qt_core::line_f::LineF, size: ::libc::c_int) -> *mut ::vector::VectorQtCoreLineF;
  pub fn qt_gui_c_QVector_QLineF_first(this_ptr: *mut ::vector::VectorQtCoreLineF) -> *mut ::qt_core::line_f::LineF;
  pub fn qt_gui_c_QVector_QLineF_first_const(this_ptr: *const ::vector::VectorQtCoreLineF) -> *const ::qt_core::line_f::LineF;
  pub fn qt_gui_c_QVector_QLineF_front(this_ptr: *mut ::vector::VectorQtCoreLineF) -> *mut ::qt_core::line_f::LineF;
  pub fn qt_gui_c_QVector_QLineF_front_const(this_ptr: *const ::vector::VectorQtCoreLineF) -> *const ::qt_core::line_f::LineF;
  pub fn qt_gui_c_QVector_QLineF_indexOf_t(this_ptr: *const ::vector::VectorQtCoreLineF, t: *const ::qt_core::line_f::LineF) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QLineF_indexOf_t_from(this_ptr: *const ::vector::VectorQtCoreLineF, t: *const ::qt_core::line_f::LineF, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QLineF_insert_i_n_t(this_ptr: *mut ::vector::VectorQtCoreLineF, i: ::libc::c_int, n: ::libc::c_int, t: *const ::qt_core::line_f::LineF);
  pub fn qt_gui_c_QVector_QLineF_insert_i_t(this_ptr: *mut ::vector::VectorQtCoreLineF, i: ::libc::c_int, t: *const ::qt_core::line_f::LineF);
  pub fn qt_gui_c_QVector_QLineF_isEmpty(this_ptr: *const ::vector::VectorQtCoreLineF) -> bool;
  pub fn qt_gui_c_QVector_QLineF_last(this_ptr: *mut ::vector::VectorQtCoreLineF) -> *mut ::qt_core::line_f::LineF;
  pub fn qt_gui_c_QVector_QLineF_lastIndexOf_t(this_ptr: *const ::vector::VectorQtCoreLineF, t: *const ::qt_core::line_f::LineF) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QLineF_lastIndexOf_t_from(this_ptr: *const ::vector::VectorQtCoreLineF, t: *const ::qt_core::line_f::LineF, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QLineF_last_const(this_ptr: *const ::vector::VectorQtCoreLineF) -> *const ::qt_core::line_f::LineF;
  pub fn qt_gui_c_QVector_QLineF_length(this_ptr: *const ::vector::VectorQtCoreLineF) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QLineF_mid_to_output_pos(this_ptr: *const ::vector::VectorQtCoreLineF, pos: ::libc::c_int, output: *mut ::vector::VectorQtCoreLineF);
  pub fn qt_gui_c_QVector_QLineF_mid_to_output_pos_len(this_ptr: *const ::vector::VectorQtCoreLineF, pos: ::libc::c_int, len: ::libc::c_int, output: *mut ::vector::VectorQtCoreLineF);
  pub fn qt_gui_c_QVector_QLineF_move(this_ptr: *mut ::vector::VectorQtCoreLineF, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QVector_QLineF_operator_add_assign_l(this_ptr: *mut ::vector::VectorQtCoreLineF, l: *const ::vector::VectorQtCoreLineF) -> *mut ::vector::VectorQtCoreLineF;
  pub fn qt_gui_c_QVector_QLineF_operator_add_assign_t(this_ptr: *mut ::vector::VectorQtCoreLineF, t: *const ::qt_core::line_f::LineF) -> *mut ::vector::VectorQtCoreLineF;
  pub fn qt_gui_c_QVector_QLineF_operator_add_to_output(this_ptr: *const ::vector::VectorQtCoreLineF, l: *const ::vector::VectorQtCoreLineF, output: *mut ::vector::VectorQtCoreLineF);
  pub fn qt_gui_c_QVector_QLineF_operator_assign(this_ptr: *mut ::vector::VectorQtCoreLineF, v: *const ::vector::VectorQtCoreLineF) -> *mut ::vector::VectorQtCoreLineF;
  pub fn qt_gui_c_QVector_QLineF_operator_eq(this_ptr: *const ::vector::VectorQtCoreLineF, v: *const ::vector::VectorQtCoreLineF) -> bool;
  pub fn qt_gui_c_QVector_QLineF_operator_index(this_ptr: *mut ::vector::VectorQtCoreLineF, i: ::libc::c_int) -> *mut ::qt_core::line_f::LineF;
  pub fn qt_gui_c_QVector_QLineF_operator_index_const(this_ptr: *const ::vector::VectorQtCoreLineF, i: ::libc::c_int) -> *const ::qt_core::line_f::LineF;
  pub fn qt_gui_c_QVector_QLineF_operator_neq(this_ptr: *const ::vector::VectorQtCoreLineF, v: *const ::vector::VectorQtCoreLineF) -> bool;
  pub fn qt_gui_c_QVector_QLineF_operator_shl_l(this_ptr: *mut ::vector::VectorQtCoreLineF, l: *const ::vector::VectorQtCoreLineF) -> *mut ::vector::VectorQtCoreLineF;
  pub fn qt_gui_c_QVector_QLineF_operator_shl_t(this_ptr: *mut ::vector::VectorQtCoreLineF, t: *const ::qt_core::line_f::LineF) -> *mut ::vector::VectorQtCoreLineF;
  pub fn qt_gui_c_QVector_QLineF_pop_back(this_ptr: *mut ::vector::VectorQtCoreLineF);
  pub fn qt_gui_c_QVector_QLineF_pop_front(this_ptr: *mut ::vector::VectorQtCoreLineF);
  pub fn qt_gui_c_QVector_QLineF_prepend(this_ptr: *mut ::vector::VectorQtCoreLineF, t: *const ::qt_core::line_f::LineF);
  pub fn qt_gui_c_QVector_QLineF_push_back(this_ptr: *mut ::vector::VectorQtCoreLineF, t: *const ::qt_core::line_f::LineF);
  pub fn qt_gui_c_QVector_QLineF_push_front(this_ptr: *mut ::vector::VectorQtCoreLineF, t: *const ::qt_core::line_f::LineF);
  pub fn qt_gui_c_QVector_QLineF_removeAll(this_ptr: *mut ::vector::VectorQtCoreLineF, t: *const ::qt_core::line_f::LineF) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QLineF_removeAt(this_ptr: *mut ::vector::VectorQtCoreLineF, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_QLineF_removeFirst(this_ptr: *mut ::vector::VectorQtCoreLineF);
  pub fn qt_gui_c_QVector_QLineF_removeLast(this_ptr: *mut ::vector::VectorQtCoreLineF);
  pub fn qt_gui_c_QVector_QLineF_removeOne(this_ptr: *mut ::vector::VectorQtCoreLineF, t: *const ::qt_core::line_f::LineF) -> bool;
  pub fn qt_gui_c_QVector_QLineF_remove_i(this_ptr: *mut ::vector::VectorQtCoreLineF, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_QLineF_remove_i_n(this_ptr: *mut ::vector::VectorQtCoreLineF, i: ::libc::c_int, n: ::libc::c_int);
  pub fn qt_gui_c_QVector_QLineF_replace(this_ptr: *mut ::vector::VectorQtCoreLineF, i: ::libc::c_int, t: *const ::qt_core::line_f::LineF);
  pub fn qt_gui_c_QVector_QLineF_reserve(this_ptr: *mut ::vector::VectorQtCoreLineF, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_QLineF_resize(this_ptr: *mut ::vector::VectorQtCoreLineF, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_QLineF_size(this_ptr: *const ::vector::VectorQtCoreLineF) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QLineF_squeeze(this_ptr: *mut ::vector::VectorQtCoreLineF);
  pub fn qt_gui_c_QVector_QLineF_startsWith(this_ptr: *const ::vector::VectorQtCoreLineF, t: *const ::qt_core::line_f::LineF) -> bool;
  pub fn qt_gui_c_QVector_QLineF_swap(this_ptr: *mut ::vector::VectorQtCoreLineF, other: *mut ::vector::VectorQtCoreLineF);
  pub fn qt_gui_c_QVector_QLineF_takeAt_to_output(this_ptr: *mut ::vector::VectorQtCoreLineF, i: ::libc::c_int, output: *mut ::qt_core::line_f::LineF);
  pub fn qt_gui_c_QVector_QLineF_takeFirst_to_output(this_ptr: *mut ::vector::VectorQtCoreLineF, output: *mut ::qt_core::line_f::LineF);
  pub fn qt_gui_c_QVector_QLineF_takeLast_to_output(this_ptr: *mut ::vector::VectorQtCoreLineF, output: *mut ::qt_core::line_f::LineF);
  pub fn qt_gui_c_QVector_QLineF_value_to_output_i(this_ptr: *const ::vector::VectorQtCoreLineF, i: ::libc::c_int, output: *mut ::qt_core::line_f::LineF);
  pub fn qt_gui_c_QVector_QLineF_value_to_output_i_defaultValue(this_ptr: *const ::vector::VectorQtCoreLineF, i: ::libc::c_int, defaultValue: *const ::qt_core::line_f::LineF, output: *mut ::qt_core::line_f::LineF);
  pub fn qt_gui_c_QVector_QLine_append_l(this_ptr: *mut ::vector::VectorQtCoreLine, l: *const ::vector::VectorQtCoreLine);
  pub fn qt_gui_c_QVector_QLine_append_t(this_ptr: *mut ::vector::VectorQtCoreLine, t: *const ::qt_core::line::Line);
  pub fn qt_gui_c_QVector_QLine_at(this_ptr: *const ::vector::VectorQtCoreLine, i: ::libc::c_int) -> *const ::qt_core::line::Line;
  pub fn qt_gui_c_QVector_QLine_back(this_ptr: *mut ::vector::VectorQtCoreLine) -> *mut ::qt_core::line::Line;
  pub fn qt_gui_c_QVector_QLine_back_const(this_ptr: *const ::vector::VectorQtCoreLine) -> *const ::qt_core::line::Line;
  pub fn qt_gui_c_QVector_QLine_capacity(this_ptr: *const ::vector::VectorQtCoreLine) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QLine_clear(this_ptr: *mut ::vector::VectorQtCoreLine);
  pub fn qt_gui_c_QVector_QLine_constData(this_ptr: *const ::vector::VectorQtCoreLine) -> *const ::qt_core::line::Line;
  pub fn qt_gui_c_QVector_QLine_constFirst(this_ptr: *const ::vector::VectorQtCoreLine) -> *const ::qt_core::line::Line;
  pub fn qt_gui_c_QVector_QLine_constLast(this_ptr: *const ::vector::VectorQtCoreLine) -> *const ::qt_core::line::Line;
  pub fn qt_gui_c_QVector_QLine_constructor_no_args(output: *mut ::vector::VectorQtCoreLine);
  pub fn qt_gui_c_QVector_QLine_constructor_size(size: ::libc::c_int, output: *mut ::vector::VectorQtCoreLine);
  pub fn qt_gui_c_QVector_QLine_constructor_size_t(size: ::libc::c_int, t: *const ::qt_core::line::Line, output: *mut ::vector::VectorQtCoreLine);
  pub fn qt_gui_c_QVector_QLine_constructor_v(v: *const ::vector::VectorQtCoreLine, output: *mut ::vector::VectorQtCoreLine);
  pub fn qt_gui_c_QVector_QLine_contains(this_ptr: *const ::vector::VectorQtCoreLine, t: *const ::qt_core::line::Line) -> bool;
  pub fn qt_gui_c_QVector_QLine_count_no_args(this_ptr: *const ::vector::VectorQtCoreLine) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QLine_count_t(this_ptr: *const ::vector::VectorQtCoreLine, t: *const ::qt_core::line::Line) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QLine_data(this_ptr: *mut ::vector::VectorQtCoreLine) -> *mut ::qt_core::line::Line;
  pub fn qt_gui_c_QVector_QLine_data_const(this_ptr: *const ::vector::VectorQtCoreLine) -> *const ::qt_core::line::Line;
  pub fn qt_gui_c_QVector_QLine_destructor(this_ptr: *mut ::vector::VectorQtCoreLine);
  pub fn qt_gui_c_QVector_QLine_empty(this_ptr: *const ::vector::VectorQtCoreLine) -> bool;
  pub fn qt_gui_c_QVector_QLine_endsWith(this_ptr: *const ::vector::VectorQtCoreLine, t: *const ::qt_core::line::Line) -> bool;
  pub fn qt_gui_c_QVector_QLine_fill_t(this_ptr: *mut ::vector::VectorQtCoreLine, t: *const ::qt_core::line::Line) -> *mut ::vector::VectorQtCoreLine;
  pub fn qt_gui_c_QVector_QLine_fill_t_size(this_ptr: *mut ::vector::VectorQtCoreLine, t: *const ::qt_core::line::Line, size: ::libc::c_int) -> *mut ::vector::VectorQtCoreLine;
  pub fn qt_gui_c_QVector_QLine_first(this_ptr: *mut ::vector::VectorQtCoreLine) -> *mut ::qt_core::line::Line;
  pub fn qt_gui_c_QVector_QLine_first_const(this_ptr: *const ::vector::VectorQtCoreLine) -> *const ::qt_core::line::Line;
  pub fn qt_gui_c_QVector_QLine_front(this_ptr: *mut ::vector::VectorQtCoreLine) -> *mut ::qt_core::line::Line;
  pub fn qt_gui_c_QVector_QLine_front_const(this_ptr: *const ::vector::VectorQtCoreLine) -> *const ::qt_core::line::Line;
  pub fn qt_gui_c_QVector_QLine_indexOf_t(this_ptr: *const ::vector::VectorQtCoreLine, t: *const ::qt_core::line::Line) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QLine_indexOf_t_from(this_ptr: *const ::vector::VectorQtCoreLine, t: *const ::qt_core::line::Line, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QLine_insert_i_n_t(this_ptr: *mut ::vector::VectorQtCoreLine, i: ::libc::c_int, n: ::libc::c_int, t: *const ::qt_core::line::Line);
  pub fn qt_gui_c_QVector_QLine_insert_i_t(this_ptr: *mut ::vector::VectorQtCoreLine, i: ::libc::c_int, t: *const ::qt_core::line::Line);
  pub fn qt_gui_c_QVector_QLine_isEmpty(this_ptr: *const ::vector::VectorQtCoreLine) -> bool;
  pub fn qt_gui_c_QVector_QLine_last(this_ptr: *mut ::vector::VectorQtCoreLine) -> *mut ::qt_core::line::Line;
  pub fn qt_gui_c_QVector_QLine_lastIndexOf_t(this_ptr: *const ::vector::VectorQtCoreLine, t: *const ::qt_core::line::Line) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QLine_lastIndexOf_t_from(this_ptr: *const ::vector::VectorQtCoreLine, t: *const ::qt_core::line::Line, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QLine_last_const(this_ptr: *const ::vector::VectorQtCoreLine) -> *const ::qt_core::line::Line;
  pub fn qt_gui_c_QVector_QLine_length(this_ptr: *const ::vector::VectorQtCoreLine) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QLine_mid_to_output_pos(this_ptr: *const ::vector::VectorQtCoreLine, pos: ::libc::c_int, output: *mut ::vector::VectorQtCoreLine);
  pub fn qt_gui_c_QVector_QLine_mid_to_output_pos_len(this_ptr: *const ::vector::VectorQtCoreLine, pos: ::libc::c_int, len: ::libc::c_int, output: *mut ::vector::VectorQtCoreLine);
  pub fn qt_gui_c_QVector_QLine_move(this_ptr: *mut ::vector::VectorQtCoreLine, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QVector_QLine_operator_add_assign_l(this_ptr: *mut ::vector::VectorQtCoreLine, l: *const ::vector::VectorQtCoreLine) -> *mut ::vector::VectorQtCoreLine;
  pub fn qt_gui_c_QVector_QLine_operator_add_assign_t(this_ptr: *mut ::vector::VectorQtCoreLine, t: *const ::qt_core::line::Line) -> *mut ::vector::VectorQtCoreLine;
  pub fn qt_gui_c_QVector_QLine_operator_add_to_output(this_ptr: *const ::vector::VectorQtCoreLine, l: *const ::vector::VectorQtCoreLine, output: *mut ::vector::VectorQtCoreLine);
  pub fn qt_gui_c_QVector_QLine_operator_assign(this_ptr: *mut ::vector::VectorQtCoreLine, v: *const ::vector::VectorQtCoreLine) -> *mut ::vector::VectorQtCoreLine;
  pub fn qt_gui_c_QVector_QLine_operator_eq(this_ptr: *const ::vector::VectorQtCoreLine, v: *const ::vector::VectorQtCoreLine) -> bool;
  pub fn qt_gui_c_QVector_QLine_operator_index(this_ptr: *mut ::vector::VectorQtCoreLine, i: ::libc::c_int) -> *mut ::qt_core::line::Line;
  pub fn qt_gui_c_QVector_QLine_operator_index_const(this_ptr: *const ::vector::VectorQtCoreLine, i: ::libc::c_int) -> *const ::qt_core::line::Line;
  pub fn qt_gui_c_QVector_QLine_operator_neq(this_ptr: *const ::vector::VectorQtCoreLine, v: *const ::vector::VectorQtCoreLine) -> bool;
  pub fn qt_gui_c_QVector_QLine_operator_shl_l(this_ptr: *mut ::vector::VectorQtCoreLine, l: *const ::vector::VectorQtCoreLine) -> *mut ::vector::VectorQtCoreLine;
  pub fn qt_gui_c_QVector_QLine_operator_shl_t(this_ptr: *mut ::vector::VectorQtCoreLine, t: *const ::qt_core::line::Line) -> *mut ::vector::VectorQtCoreLine;
  pub fn qt_gui_c_QVector_QLine_pop_back(this_ptr: *mut ::vector::VectorQtCoreLine);
  pub fn qt_gui_c_QVector_QLine_pop_front(this_ptr: *mut ::vector::VectorQtCoreLine);
  pub fn qt_gui_c_QVector_QLine_prepend(this_ptr: *mut ::vector::VectorQtCoreLine, t: *const ::qt_core::line::Line);
  pub fn qt_gui_c_QVector_QLine_push_back(this_ptr: *mut ::vector::VectorQtCoreLine, t: *const ::qt_core::line::Line);
  pub fn qt_gui_c_QVector_QLine_push_front(this_ptr: *mut ::vector::VectorQtCoreLine, t: *const ::qt_core::line::Line);
  pub fn qt_gui_c_QVector_QLine_removeAll(this_ptr: *mut ::vector::VectorQtCoreLine, t: *const ::qt_core::line::Line) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QLine_removeAt(this_ptr: *mut ::vector::VectorQtCoreLine, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_QLine_removeFirst(this_ptr: *mut ::vector::VectorQtCoreLine);
  pub fn qt_gui_c_QVector_QLine_removeLast(this_ptr: *mut ::vector::VectorQtCoreLine);
  pub fn qt_gui_c_QVector_QLine_removeOne(this_ptr: *mut ::vector::VectorQtCoreLine, t: *const ::qt_core::line::Line) -> bool;
  pub fn qt_gui_c_QVector_QLine_remove_i(this_ptr: *mut ::vector::VectorQtCoreLine, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_QLine_remove_i_n(this_ptr: *mut ::vector::VectorQtCoreLine, i: ::libc::c_int, n: ::libc::c_int);
  pub fn qt_gui_c_QVector_QLine_replace(this_ptr: *mut ::vector::VectorQtCoreLine, i: ::libc::c_int, t: *const ::qt_core::line::Line);
  pub fn qt_gui_c_QVector_QLine_reserve(this_ptr: *mut ::vector::VectorQtCoreLine, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_QLine_resize(this_ptr: *mut ::vector::VectorQtCoreLine, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_QLine_size(this_ptr: *const ::vector::VectorQtCoreLine) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QLine_squeeze(this_ptr: *mut ::vector::VectorQtCoreLine);
  pub fn qt_gui_c_QVector_QLine_startsWith(this_ptr: *const ::vector::VectorQtCoreLine, t: *const ::qt_core::line::Line) -> bool;
  pub fn qt_gui_c_QVector_QLine_swap(this_ptr: *mut ::vector::VectorQtCoreLine, other: *mut ::vector::VectorQtCoreLine);
  pub fn qt_gui_c_QVector_QLine_takeAt_to_output(this_ptr: *mut ::vector::VectorQtCoreLine, i: ::libc::c_int, output: *mut ::qt_core::line::Line);
  pub fn qt_gui_c_QVector_QLine_takeFirst_to_output(this_ptr: *mut ::vector::VectorQtCoreLine, output: *mut ::qt_core::line::Line);
  pub fn qt_gui_c_QVector_QLine_takeLast_to_output(this_ptr: *mut ::vector::VectorQtCoreLine, output: *mut ::qt_core::line::Line);
  pub fn qt_gui_c_QVector_QLine_value_to_output_i(this_ptr: *const ::vector::VectorQtCoreLine, i: ::libc::c_int, output: *mut ::qt_core::line::Line);
  pub fn qt_gui_c_QVector_QLine_value_to_output_i_defaultValue(this_ptr: *const ::vector::VectorQtCoreLine, i: ::libc::c_int, defaultValue: *const ::qt_core::line::Line, output: *mut ::qt_core::line::Line);
  pub fn qt_gui_c_QVector_QPair_double_QColor_append_l(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, l: *const ::vector::VectorPairPairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_append_t(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, t: *const ::pair::PairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_at(this_ptr: *const ::vector::VectorPairPairCDoubleColor, i: ::libc::c_int) -> *const ::pair::PairCDoubleColor;
  pub fn qt_gui_c_QVector_QPair_double_QColor_back(this_ptr: *mut ::vector::VectorPairPairCDoubleColor) -> *mut ::pair::PairCDoubleColor;
  pub fn qt_gui_c_QVector_QPair_double_QColor_back_const(this_ptr: *const ::vector::VectorPairPairCDoubleColor) -> *const ::pair::PairCDoubleColor;
  pub fn qt_gui_c_QVector_QPair_double_QColor_capacity(this_ptr: *const ::vector::VectorPairPairCDoubleColor) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QPair_double_QColor_clear(this_ptr: *mut ::vector::VectorPairPairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_constData(this_ptr: *const ::vector::VectorPairPairCDoubleColor) -> *const ::pair::PairCDoubleColor;
  pub fn qt_gui_c_QVector_QPair_double_QColor_constFirst(this_ptr: *const ::vector::VectorPairPairCDoubleColor) -> *const ::pair::PairCDoubleColor;
  pub fn qt_gui_c_QVector_QPair_double_QColor_constLast(this_ptr: *const ::vector::VectorPairPairCDoubleColor) -> *const ::pair::PairCDoubleColor;
  pub fn qt_gui_c_QVector_QPair_double_QColor_constructor_no_args(output: *mut ::vector::VectorPairPairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_constructor_size(size: ::libc::c_int, output: *mut ::vector::VectorPairPairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_constructor_size_t(size: ::libc::c_int, t: *const ::pair::PairCDoubleColor, output: *mut ::vector::VectorPairPairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_constructor_v(v: *const ::vector::VectorPairPairCDoubleColor, output: *mut ::vector::VectorPairPairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_contains(this_ptr: *const ::vector::VectorPairPairCDoubleColor, t: *const ::pair::PairCDoubleColor) -> bool;
  pub fn qt_gui_c_QVector_QPair_double_QColor_count_no_args(this_ptr: *const ::vector::VectorPairPairCDoubleColor) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QPair_double_QColor_count_t(this_ptr: *const ::vector::VectorPairPairCDoubleColor, t: *const ::pair::PairCDoubleColor) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QPair_double_QColor_data(this_ptr: *mut ::vector::VectorPairPairCDoubleColor) -> *mut ::pair::PairCDoubleColor;
  pub fn qt_gui_c_QVector_QPair_double_QColor_data_const(this_ptr: *const ::vector::VectorPairPairCDoubleColor) -> *const ::pair::PairCDoubleColor;
  pub fn qt_gui_c_QVector_QPair_double_QColor_destructor(this_ptr: *mut ::vector::VectorPairPairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_empty(this_ptr: *const ::vector::VectorPairPairCDoubleColor) -> bool;
  pub fn qt_gui_c_QVector_QPair_double_QColor_endsWith(this_ptr: *const ::vector::VectorPairPairCDoubleColor, t: *const ::pair::PairCDoubleColor) -> bool;
  pub fn qt_gui_c_QVector_QPair_double_QColor_fill_t(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, t: *const ::pair::PairCDoubleColor) -> *mut ::vector::VectorPairPairCDoubleColor;
  pub fn qt_gui_c_QVector_QPair_double_QColor_fill_t_size(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, t: *const ::pair::PairCDoubleColor, size: ::libc::c_int) -> *mut ::vector::VectorPairPairCDoubleColor;
  pub fn qt_gui_c_QVector_QPair_double_QColor_first(this_ptr: *mut ::vector::VectorPairPairCDoubleColor) -> *mut ::pair::PairCDoubleColor;
  pub fn qt_gui_c_QVector_QPair_double_QColor_first_const(this_ptr: *const ::vector::VectorPairPairCDoubleColor) -> *const ::pair::PairCDoubleColor;
  pub fn qt_gui_c_QVector_QPair_double_QColor_front(this_ptr: *mut ::vector::VectorPairPairCDoubleColor) -> *mut ::pair::PairCDoubleColor;
  pub fn qt_gui_c_QVector_QPair_double_QColor_front_const(this_ptr: *const ::vector::VectorPairPairCDoubleColor) -> *const ::pair::PairCDoubleColor;
  pub fn qt_gui_c_QVector_QPair_double_QColor_indexOf_t(this_ptr: *const ::vector::VectorPairPairCDoubleColor, t: *const ::pair::PairCDoubleColor) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QPair_double_QColor_indexOf_t_from(this_ptr: *const ::vector::VectorPairPairCDoubleColor, t: *const ::pair::PairCDoubleColor, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QPair_double_QColor_insert_i_n_t(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, i: ::libc::c_int, n: ::libc::c_int, t: *const ::pair::PairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_insert_i_t(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, i: ::libc::c_int, t: *const ::pair::PairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_isEmpty(this_ptr: *const ::vector::VectorPairPairCDoubleColor) -> bool;
  pub fn qt_gui_c_QVector_QPair_double_QColor_last(this_ptr: *mut ::vector::VectorPairPairCDoubleColor) -> *mut ::pair::PairCDoubleColor;
  pub fn qt_gui_c_QVector_QPair_double_QColor_lastIndexOf_t(this_ptr: *const ::vector::VectorPairPairCDoubleColor, t: *const ::pair::PairCDoubleColor) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QPair_double_QColor_lastIndexOf_t_from(this_ptr: *const ::vector::VectorPairPairCDoubleColor, t: *const ::pair::PairCDoubleColor, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QPair_double_QColor_last_const(this_ptr: *const ::vector::VectorPairPairCDoubleColor) -> *const ::pair::PairCDoubleColor;
  pub fn qt_gui_c_QVector_QPair_double_QColor_length(this_ptr: *const ::vector::VectorPairPairCDoubleColor) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QPair_double_QColor_mid_to_output_pos(this_ptr: *const ::vector::VectorPairPairCDoubleColor, pos: ::libc::c_int, output: *mut ::vector::VectorPairPairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_mid_to_output_pos_len(this_ptr: *const ::vector::VectorPairPairCDoubleColor, pos: ::libc::c_int, len: ::libc::c_int, output: *mut ::vector::VectorPairPairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_move(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QVector_QPair_double_QColor_operator_add_assign_l(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, l: *const ::vector::VectorPairPairCDoubleColor) -> *mut ::vector::VectorPairPairCDoubleColor;
  pub fn qt_gui_c_QVector_QPair_double_QColor_operator_add_assign_t(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, t: *const ::pair::PairCDoubleColor) -> *mut ::vector::VectorPairPairCDoubleColor;
  pub fn qt_gui_c_QVector_QPair_double_QColor_operator_add_to_output(this_ptr: *const ::vector::VectorPairPairCDoubleColor, l: *const ::vector::VectorPairPairCDoubleColor, output: *mut ::vector::VectorPairPairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_operator_assign(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, v: *const ::vector::VectorPairPairCDoubleColor) -> *mut ::vector::VectorPairPairCDoubleColor;
  pub fn qt_gui_c_QVector_QPair_double_QColor_operator_eq(this_ptr: *const ::vector::VectorPairPairCDoubleColor, v: *const ::vector::VectorPairPairCDoubleColor) -> bool;
  pub fn qt_gui_c_QVector_QPair_double_QColor_operator_index(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, i: ::libc::c_int) -> *mut ::pair::PairCDoubleColor;
  pub fn qt_gui_c_QVector_QPair_double_QColor_operator_index_const(this_ptr: *const ::vector::VectorPairPairCDoubleColor, i: ::libc::c_int) -> *const ::pair::PairCDoubleColor;
  pub fn qt_gui_c_QVector_QPair_double_QColor_operator_neq(this_ptr: *const ::vector::VectorPairPairCDoubleColor, v: *const ::vector::VectorPairPairCDoubleColor) -> bool;
  pub fn qt_gui_c_QVector_QPair_double_QColor_operator_shl_l(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, l: *const ::vector::VectorPairPairCDoubleColor) -> *mut ::vector::VectorPairPairCDoubleColor;
  pub fn qt_gui_c_QVector_QPair_double_QColor_operator_shl_t(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, t: *const ::pair::PairCDoubleColor) -> *mut ::vector::VectorPairPairCDoubleColor;
  pub fn qt_gui_c_QVector_QPair_double_QColor_pop_back(this_ptr: *mut ::vector::VectorPairPairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_pop_front(this_ptr: *mut ::vector::VectorPairPairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_prepend(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, t: *const ::pair::PairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_push_back(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, t: *const ::pair::PairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_push_front(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, t: *const ::pair::PairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_removeAll(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, t: *const ::pair::PairCDoubleColor) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QPair_double_QColor_removeAt(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_QPair_double_QColor_removeFirst(this_ptr: *mut ::vector::VectorPairPairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_removeLast(this_ptr: *mut ::vector::VectorPairPairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_removeOne(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, t: *const ::pair::PairCDoubleColor) -> bool;
  pub fn qt_gui_c_QVector_QPair_double_QColor_remove_i(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_QPair_double_QColor_remove_i_n(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, i: ::libc::c_int, n: ::libc::c_int);
  pub fn qt_gui_c_QVector_QPair_double_QColor_replace(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, i: ::libc::c_int, t: *const ::pair::PairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_reserve(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_QPair_double_QColor_resize(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_QPair_double_QColor_size(this_ptr: *const ::vector::VectorPairPairCDoubleColor) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QPair_double_QColor_squeeze(this_ptr: *mut ::vector::VectorPairPairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_startsWith(this_ptr: *const ::vector::VectorPairPairCDoubleColor, t: *const ::pair::PairCDoubleColor) -> bool;
  pub fn qt_gui_c_QVector_QPair_double_QColor_swap(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, other: *mut ::vector::VectorPairPairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_takeAt_to_output(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, i: ::libc::c_int, output: *mut ::pair::PairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_takeFirst_to_output(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, output: *mut ::pair::PairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_takeLast_to_output(this_ptr: *mut ::vector::VectorPairPairCDoubleColor, output: *mut ::pair::PairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_value_to_output_i(this_ptr: *const ::vector::VectorPairPairCDoubleColor, i: ::libc::c_int, output: *mut ::pair::PairCDoubleColor);
  pub fn qt_gui_c_QVector_QPair_double_QColor_value_to_output_i_defaultValue(this_ptr: *const ::vector::VectorPairPairCDoubleColor, i: ::libc::c_int, defaultValue: *const ::pair::PairCDoubleColor, output: *mut ::pair::PairCDoubleColor);
  pub fn qt_gui_c_QVector_QPoint_append_l(this_ptr: *mut ::vector::VectorQtCorePoint, l: *const ::vector::VectorQtCorePoint);
  pub fn qt_gui_c_QVector_QPoint_append_t(this_ptr: *mut ::vector::VectorQtCorePoint, t: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QVector_QPoint_at(this_ptr: *const ::vector::VectorQtCorePoint, i: ::libc::c_int) -> *const ::qt_core::point::Point;
  pub fn qt_gui_c_QVector_QPoint_back(this_ptr: *mut ::vector::VectorQtCorePoint) -> *mut ::qt_core::point::Point;
  pub fn qt_gui_c_QVector_QPoint_back_const(this_ptr: *const ::vector::VectorQtCorePoint) -> *const ::qt_core::point::Point;
  pub fn qt_gui_c_QVector_QPoint_capacity(this_ptr: *const ::vector::VectorQtCorePoint) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QPoint_clear(this_ptr: *mut ::vector::VectorQtCorePoint);
  pub fn qt_gui_c_QVector_QPoint_constData(this_ptr: *const ::vector::VectorQtCorePoint) -> *const ::qt_core::point::Point;
  pub fn qt_gui_c_QVector_QPoint_constFirst(this_ptr: *const ::vector::VectorQtCorePoint) -> *const ::qt_core::point::Point;
  pub fn qt_gui_c_QVector_QPoint_constLast(this_ptr: *const ::vector::VectorQtCorePoint) -> *const ::qt_core::point::Point;
  pub fn qt_gui_c_QVector_QPoint_constructor_no_args(output: *mut ::vector::VectorQtCorePoint);
  pub fn qt_gui_c_QVector_QPoint_constructor_size(size: ::libc::c_int, output: *mut ::vector::VectorQtCorePoint);
  pub fn qt_gui_c_QVector_QPoint_constructor_size_t(size: ::libc::c_int, t: *const ::qt_core::point::Point, output: *mut ::vector::VectorQtCorePoint);
  pub fn qt_gui_c_QVector_QPoint_constructor_v(v: *const ::vector::VectorQtCorePoint, output: *mut ::vector::VectorQtCorePoint);
  pub fn qt_gui_c_QVector_QPoint_contains(this_ptr: *const ::vector::VectorQtCorePoint, t: *const ::qt_core::point::Point) -> bool;
  pub fn qt_gui_c_QVector_QPoint_count_no_args(this_ptr: *const ::vector::VectorQtCorePoint) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QPoint_count_t(this_ptr: *const ::vector::VectorQtCorePoint, t: *const ::qt_core::point::Point) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QPoint_data(this_ptr: *mut ::vector::VectorQtCorePoint) -> *mut ::qt_core::point::Point;
  pub fn qt_gui_c_QVector_QPoint_data_const(this_ptr: *const ::vector::VectorQtCorePoint) -> *const ::qt_core::point::Point;
  pub fn qt_gui_c_QVector_QPoint_destructor(this_ptr: *mut ::vector::VectorQtCorePoint);
  pub fn qt_gui_c_QVector_QPoint_empty(this_ptr: *const ::vector::VectorQtCorePoint) -> bool;
  pub fn qt_gui_c_QVector_QPoint_endsWith(this_ptr: *const ::vector::VectorQtCorePoint, t: *const ::qt_core::point::Point) -> bool;
  pub fn qt_gui_c_QVector_QPoint_fill_t(this_ptr: *mut ::vector::VectorQtCorePoint, t: *const ::qt_core::point::Point) -> *mut ::vector::VectorQtCorePoint;
  pub fn qt_gui_c_QVector_QPoint_fill_t_size(this_ptr: *mut ::vector::VectorQtCorePoint, t: *const ::qt_core::point::Point, size: ::libc::c_int) -> *mut ::vector::VectorQtCorePoint;
  pub fn qt_gui_c_QVector_QPoint_first(this_ptr: *mut ::vector::VectorQtCorePoint) -> *mut ::qt_core::point::Point;
  pub fn qt_gui_c_QVector_QPoint_first_const(this_ptr: *const ::vector::VectorQtCorePoint) -> *const ::qt_core::point::Point;
  pub fn qt_gui_c_QVector_QPoint_front(this_ptr: *mut ::vector::VectorQtCorePoint) -> *mut ::qt_core::point::Point;
  pub fn qt_gui_c_QVector_QPoint_front_const(this_ptr: *const ::vector::VectorQtCorePoint) -> *const ::qt_core::point::Point;
  pub fn qt_gui_c_QVector_QPoint_indexOf_t(this_ptr: *const ::vector::VectorQtCorePoint, t: *const ::qt_core::point::Point) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QPoint_indexOf_t_from(this_ptr: *const ::vector::VectorQtCorePoint, t: *const ::qt_core::point::Point, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QPoint_insert_i_n_t(this_ptr: *mut ::vector::VectorQtCorePoint, i: ::libc::c_int, n: ::libc::c_int, t: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QVector_QPoint_insert_i_t(this_ptr: *mut ::vector::VectorQtCorePoint, i: ::libc::c_int, t: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QVector_QPoint_isEmpty(this_ptr: *const ::vector::VectorQtCorePoint) -> bool;
  pub fn qt_gui_c_QVector_QPoint_last(this_ptr: *mut ::vector::VectorQtCorePoint) -> *mut ::qt_core::point::Point;
  pub fn qt_gui_c_QVector_QPoint_lastIndexOf_t(this_ptr: *const ::vector::VectorQtCorePoint, t: *const ::qt_core::point::Point) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QPoint_lastIndexOf_t_from(this_ptr: *const ::vector::VectorQtCorePoint, t: *const ::qt_core::point::Point, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QPoint_last_const(this_ptr: *const ::vector::VectorQtCorePoint) -> *const ::qt_core::point::Point;
  pub fn qt_gui_c_QVector_QPoint_length(this_ptr: *const ::vector::VectorQtCorePoint) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QPoint_mid_to_output_pos(this_ptr: *const ::vector::VectorQtCorePoint, pos: ::libc::c_int, output: *mut ::vector::VectorQtCorePoint);
  pub fn qt_gui_c_QVector_QPoint_mid_to_output_pos_len(this_ptr: *const ::vector::VectorQtCorePoint, pos: ::libc::c_int, len: ::libc::c_int, output: *mut ::vector::VectorQtCorePoint);
  pub fn qt_gui_c_QVector_QPoint_move(this_ptr: *mut ::vector::VectorQtCorePoint, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QVector_QPoint_operator_add_assign_l(this_ptr: *mut ::vector::VectorQtCorePoint, l: *const ::vector::VectorQtCorePoint) -> *mut ::vector::VectorQtCorePoint;
  pub fn qt_gui_c_QVector_QPoint_operator_add_assign_t(this_ptr: *mut ::vector::VectorQtCorePoint, t: *const ::qt_core::point::Point) -> *mut ::vector::VectorQtCorePoint;
  pub fn qt_gui_c_QVector_QPoint_operator_add_to_output(this_ptr: *const ::vector::VectorQtCorePoint, l: *const ::vector::VectorQtCorePoint, output: *mut ::vector::VectorQtCorePoint);
  pub fn qt_gui_c_QVector_QPoint_operator_assign(this_ptr: *mut ::vector::VectorQtCorePoint, v: *const ::vector::VectorQtCorePoint) -> *mut ::vector::VectorQtCorePoint;
  pub fn qt_gui_c_QVector_QPoint_operator_eq(this_ptr: *const ::vector::VectorQtCorePoint, v: *const ::vector::VectorQtCorePoint) -> bool;
  pub fn qt_gui_c_QVector_QPoint_operator_index(this_ptr: *mut ::vector::VectorQtCorePoint, i: ::libc::c_int) -> *mut ::qt_core::point::Point;
  pub fn qt_gui_c_QVector_QPoint_operator_index_const(this_ptr: *const ::vector::VectorQtCorePoint, i: ::libc::c_int) -> *const ::qt_core::point::Point;
  pub fn qt_gui_c_QVector_QPoint_operator_neq(this_ptr: *const ::vector::VectorQtCorePoint, v: *const ::vector::VectorQtCorePoint) -> bool;
  pub fn qt_gui_c_QVector_QPoint_operator_shl_l(this_ptr: *mut ::vector::VectorQtCorePoint, l: *const ::vector::VectorQtCorePoint) -> *mut ::vector::VectorQtCorePoint;
  pub fn qt_gui_c_QVector_QPoint_operator_shl_t(this_ptr: *mut ::vector::VectorQtCorePoint, t: *const ::qt_core::point::Point) -> *mut ::vector::VectorQtCorePoint;
  pub fn qt_gui_c_QVector_QPoint_pop_back(this_ptr: *mut ::vector::VectorQtCorePoint);
  pub fn qt_gui_c_QVector_QPoint_pop_front(this_ptr: *mut ::vector::VectorQtCorePoint);
  pub fn qt_gui_c_QVector_QPoint_prepend(this_ptr: *mut ::vector::VectorQtCorePoint, t: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QVector_QPoint_push_back(this_ptr: *mut ::vector::VectorQtCorePoint, t: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QVector_QPoint_push_front(this_ptr: *mut ::vector::VectorQtCorePoint, t: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QVector_QPoint_removeAll(this_ptr: *mut ::vector::VectorQtCorePoint, t: *const ::qt_core::point::Point) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QPoint_removeAt(this_ptr: *mut ::vector::VectorQtCorePoint, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_QPoint_removeFirst(this_ptr: *mut ::vector::VectorQtCorePoint);
  pub fn qt_gui_c_QVector_QPoint_removeLast(this_ptr: *mut ::vector::VectorQtCorePoint);
  pub fn qt_gui_c_QVector_QPoint_removeOne(this_ptr: *mut ::vector::VectorQtCorePoint, t: *const ::qt_core::point::Point) -> bool;
  pub fn qt_gui_c_QVector_QPoint_remove_i(this_ptr: *mut ::vector::VectorQtCorePoint, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_QPoint_remove_i_n(this_ptr: *mut ::vector::VectorQtCorePoint, i: ::libc::c_int, n: ::libc::c_int);
  pub fn qt_gui_c_QVector_QPoint_replace(this_ptr: *mut ::vector::VectorQtCorePoint, i: ::libc::c_int, t: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QVector_QPoint_reserve(this_ptr: *mut ::vector::VectorQtCorePoint, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_QPoint_resize(this_ptr: *mut ::vector::VectorQtCorePoint, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_QPoint_size(this_ptr: *const ::vector::VectorQtCorePoint) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QPoint_squeeze(this_ptr: *mut ::vector::VectorQtCorePoint);
  pub fn qt_gui_c_QVector_QPoint_startsWith(this_ptr: *const ::vector::VectorQtCorePoint, t: *const ::qt_core::point::Point) -> bool;
  pub fn qt_gui_c_QVector_QPoint_swap(this_ptr: *mut ::vector::VectorQtCorePoint, other: *mut ::vector::VectorQtCorePoint);
  pub fn qt_gui_c_QVector_QPoint_takeAt_to_output(this_ptr: *mut ::vector::VectorQtCorePoint, i: ::libc::c_int, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QVector_QPoint_takeFirst_to_output(this_ptr: *mut ::vector::VectorQtCorePoint, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QVector_QPoint_takeLast_to_output(this_ptr: *mut ::vector::VectorQtCorePoint, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QVector_QPoint_value_to_output_i(this_ptr: *const ::vector::VectorQtCorePoint, i: ::libc::c_int, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QVector_QPoint_value_to_output_i_defaultValue(this_ptr: *const ::vector::VectorQtCorePoint, i: ::libc::c_int, defaultValue: *const ::qt_core::point::Point, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QVector_QRectF_append_l(this_ptr: *mut ::vector::VectorQtCoreRectF, l: *const ::vector::VectorQtCoreRectF);
  pub fn qt_gui_c_QVector_QRectF_append_t(this_ptr: *mut ::vector::VectorQtCoreRectF, t: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QVector_QRectF_at(this_ptr: *const ::vector::VectorQtCoreRectF, i: ::libc::c_int) -> *const ::qt_core::rect_f::RectF;
  pub fn qt_gui_c_QVector_QRectF_back(this_ptr: *mut ::vector::VectorQtCoreRectF) -> *mut ::qt_core::rect_f::RectF;
  pub fn qt_gui_c_QVector_QRectF_back_const(this_ptr: *const ::vector::VectorQtCoreRectF) -> *const ::qt_core::rect_f::RectF;
  pub fn qt_gui_c_QVector_QRectF_capacity(this_ptr: *const ::vector::VectorQtCoreRectF) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QRectF_clear(this_ptr: *mut ::vector::VectorQtCoreRectF);
  pub fn qt_gui_c_QVector_QRectF_constData(this_ptr: *const ::vector::VectorQtCoreRectF) -> *const ::qt_core::rect_f::RectF;
  pub fn qt_gui_c_QVector_QRectF_constFirst(this_ptr: *const ::vector::VectorQtCoreRectF) -> *const ::qt_core::rect_f::RectF;
  pub fn qt_gui_c_QVector_QRectF_constLast(this_ptr: *const ::vector::VectorQtCoreRectF) -> *const ::qt_core::rect_f::RectF;
  pub fn qt_gui_c_QVector_QRectF_constructor_no_args(output: *mut ::vector::VectorQtCoreRectF);
  pub fn qt_gui_c_QVector_QRectF_constructor_size(size: ::libc::c_int, output: *mut ::vector::VectorQtCoreRectF);
  pub fn qt_gui_c_QVector_QRectF_constructor_size_t(size: ::libc::c_int, t: *const ::qt_core::rect_f::RectF, output: *mut ::vector::VectorQtCoreRectF);
  pub fn qt_gui_c_QVector_QRectF_constructor_v(v: *const ::vector::VectorQtCoreRectF, output: *mut ::vector::VectorQtCoreRectF);
  pub fn qt_gui_c_QVector_QRectF_contains(this_ptr: *const ::vector::VectorQtCoreRectF, t: *const ::qt_core::rect_f::RectF) -> bool;
  pub fn qt_gui_c_QVector_QRectF_count_no_args(this_ptr: *const ::vector::VectorQtCoreRectF) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QRectF_count_t(this_ptr: *const ::vector::VectorQtCoreRectF, t: *const ::qt_core::rect_f::RectF) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QRectF_data(this_ptr: *mut ::vector::VectorQtCoreRectF) -> *mut ::qt_core::rect_f::RectF;
  pub fn qt_gui_c_QVector_QRectF_data_const(this_ptr: *const ::vector::VectorQtCoreRectF) -> *const ::qt_core::rect_f::RectF;
  pub fn qt_gui_c_QVector_QRectF_destructor(this_ptr: *mut ::vector::VectorQtCoreRectF);
  pub fn qt_gui_c_QVector_QRectF_empty(this_ptr: *const ::vector::VectorQtCoreRectF) -> bool;
  pub fn qt_gui_c_QVector_QRectF_endsWith(this_ptr: *const ::vector::VectorQtCoreRectF, t: *const ::qt_core::rect_f::RectF) -> bool;
  pub fn qt_gui_c_QVector_QRectF_fill_t(this_ptr: *mut ::vector::VectorQtCoreRectF, t: *const ::qt_core::rect_f::RectF) -> *mut ::vector::VectorQtCoreRectF;
  pub fn qt_gui_c_QVector_QRectF_fill_t_size(this_ptr: *mut ::vector::VectorQtCoreRectF, t: *const ::qt_core::rect_f::RectF, size: ::libc::c_int) -> *mut ::vector::VectorQtCoreRectF;
  pub fn qt_gui_c_QVector_QRectF_first(this_ptr: *mut ::vector::VectorQtCoreRectF) -> *mut ::qt_core::rect_f::RectF;
  pub fn qt_gui_c_QVector_QRectF_first_const(this_ptr: *const ::vector::VectorQtCoreRectF) -> *const ::qt_core::rect_f::RectF;
  pub fn qt_gui_c_QVector_QRectF_front(this_ptr: *mut ::vector::VectorQtCoreRectF) -> *mut ::qt_core::rect_f::RectF;
  pub fn qt_gui_c_QVector_QRectF_front_const(this_ptr: *const ::vector::VectorQtCoreRectF) -> *const ::qt_core::rect_f::RectF;
  pub fn qt_gui_c_QVector_QRectF_indexOf_t(this_ptr: *const ::vector::VectorQtCoreRectF, t: *const ::qt_core::rect_f::RectF) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QRectF_indexOf_t_from(this_ptr: *const ::vector::VectorQtCoreRectF, t: *const ::qt_core::rect_f::RectF, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QRectF_insert_i_n_t(this_ptr: *mut ::vector::VectorQtCoreRectF, i: ::libc::c_int, n: ::libc::c_int, t: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QVector_QRectF_insert_i_t(this_ptr: *mut ::vector::VectorQtCoreRectF, i: ::libc::c_int, t: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QVector_QRectF_isEmpty(this_ptr: *const ::vector::VectorQtCoreRectF) -> bool;
  pub fn qt_gui_c_QVector_QRectF_last(this_ptr: *mut ::vector::VectorQtCoreRectF) -> *mut ::qt_core::rect_f::RectF;
  pub fn qt_gui_c_QVector_QRectF_lastIndexOf_t(this_ptr: *const ::vector::VectorQtCoreRectF, t: *const ::qt_core::rect_f::RectF) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QRectF_lastIndexOf_t_from(this_ptr: *const ::vector::VectorQtCoreRectF, t: *const ::qt_core::rect_f::RectF, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QRectF_last_const(this_ptr: *const ::vector::VectorQtCoreRectF) -> *const ::qt_core::rect_f::RectF;
  pub fn qt_gui_c_QVector_QRectF_length(this_ptr: *const ::vector::VectorQtCoreRectF) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QRectF_mid_to_output_pos(this_ptr: *const ::vector::VectorQtCoreRectF, pos: ::libc::c_int, output: *mut ::vector::VectorQtCoreRectF);
  pub fn qt_gui_c_QVector_QRectF_mid_to_output_pos_len(this_ptr: *const ::vector::VectorQtCoreRectF, pos: ::libc::c_int, len: ::libc::c_int, output: *mut ::vector::VectorQtCoreRectF);
  pub fn qt_gui_c_QVector_QRectF_move(this_ptr: *mut ::vector::VectorQtCoreRectF, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QVector_QRectF_operator_add_assign_l(this_ptr: *mut ::vector::VectorQtCoreRectF, l: *const ::vector::VectorQtCoreRectF) -> *mut ::vector::VectorQtCoreRectF;
  pub fn qt_gui_c_QVector_QRectF_operator_add_assign_t(this_ptr: *mut ::vector::VectorQtCoreRectF, t: *const ::qt_core::rect_f::RectF) -> *mut ::vector::VectorQtCoreRectF;
  pub fn qt_gui_c_QVector_QRectF_operator_add_to_output(this_ptr: *const ::vector::VectorQtCoreRectF, l: *const ::vector::VectorQtCoreRectF, output: *mut ::vector::VectorQtCoreRectF);
  pub fn qt_gui_c_QVector_QRectF_operator_assign(this_ptr: *mut ::vector::VectorQtCoreRectF, v: *const ::vector::VectorQtCoreRectF) -> *mut ::vector::VectorQtCoreRectF;
  pub fn qt_gui_c_QVector_QRectF_operator_eq(this_ptr: *const ::vector::VectorQtCoreRectF, v: *const ::vector::VectorQtCoreRectF) -> bool;
  pub fn qt_gui_c_QVector_QRectF_operator_index(this_ptr: *mut ::vector::VectorQtCoreRectF, i: ::libc::c_int) -> *mut ::qt_core::rect_f::RectF;
  pub fn qt_gui_c_QVector_QRectF_operator_index_const(this_ptr: *const ::vector::VectorQtCoreRectF, i: ::libc::c_int) -> *const ::qt_core::rect_f::RectF;
  pub fn qt_gui_c_QVector_QRectF_operator_neq(this_ptr: *const ::vector::VectorQtCoreRectF, v: *const ::vector::VectorQtCoreRectF) -> bool;
  pub fn qt_gui_c_QVector_QRectF_operator_shl_l(this_ptr: *mut ::vector::VectorQtCoreRectF, l: *const ::vector::VectorQtCoreRectF) -> *mut ::vector::VectorQtCoreRectF;
  pub fn qt_gui_c_QVector_QRectF_operator_shl_t(this_ptr: *mut ::vector::VectorQtCoreRectF, t: *const ::qt_core::rect_f::RectF) -> *mut ::vector::VectorQtCoreRectF;
  pub fn qt_gui_c_QVector_QRectF_pop_back(this_ptr: *mut ::vector::VectorQtCoreRectF);
  pub fn qt_gui_c_QVector_QRectF_pop_front(this_ptr: *mut ::vector::VectorQtCoreRectF);
  pub fn qt_gui_c_QVector_QRectF_prepend(this_ptr: *mut ::vector::VectorQtCoreRectF, t: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QVector_QRectF_push_back(this_ptr: *mut ::vector::VectorQtCoreRectF, t: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QVector_QRectF_push_front(this_ptr: *mut ::vector::VectorQtCoreRectF, t: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QVector_QRectF_removeAll(this_ptr: *mut ::vector::VectorQtCoreRectF, t: *const ::qt_core::rect_f::RectF) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QRectF_removeAt(this_ptr: *mut ::vector::VectorQtCoreRectF, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_QRectF_removeFirst(this_ptr: *mut ::vector::VectorQtCoreRectF);
  pub fn qt_gui_c_QVector_QRectF_removeLast(this_ptr: *mut ::vector::VectorQtCoreRectF);
  pub fn qt_gui_c_QVector_QRectF_removeOne(this_ptr: *mut ::vector::VectorQtCoreRectF, t: *const ::qt_core::rect_f::RectF) -> bool;
  pub fn qt_gui_c_QVector_QRectF_remove_i(this_ptr: *mut ::vector::VectorQtCoreRectF, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_QRectF_remove_i_n(this_ptr: *mut ::vector::VectorQtCoreRectF, i: ::libc::c_int, n: ::libc::c_int);
  pub fn qt_gui_c_QVector_QRectF_replace(this_ptr: *mut ::vector::VectorQtCoreRectF, i: ::libc::c_int, t: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QVector_QRectF_reserve(this_ptr: *mut ::vector::VectorQtCoreRectF, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_QRectF_resize(this_ptr: *mut ::vector::VectorQtCoreRectF, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_QRectF_size(this_ptr: *const ::vector::VectorQtCoreRectF) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QRectF_squeeze(this_ptr: *mut ::vector::VectorQtCoreRectF);
  pub fn qt_gui_c_QVector_QRectF_startsWith(this_ptr: *const ::vector::VectorQtCoreRectF, t: *const ::qt_core::rect_f::RectF) -> bool;
  pub fn qt_gui_c_QVector_QRectF_swap(this_ptr: *mut ::vector::VectorQtCoreRectF, other: *mut ::vector::VectorQtCoreRectF);
  pub fn qt_gui_c_QVector_QRectF_takeAt_to_output(this_ptr: *mut ::vector::VectorQtCoreRectF, i: ::libc::c_int, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QVector_QRectF_takeFirst_to_output(this_ptr: *mut ::vector::VectorQtCoreRectF, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QVector_QRectF_takeLast_to_output(this_ptr: *mut ::vector::VectorQtCoreRectF, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QVector_QRectF_value_to_output_i(this_ptr: *const ::vector::VectorQtCoreRectF, i: ::libc::c_int, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QVector_QRectF_value_to_output_i_defaultValue(this_ptr: *const ::vector::VectorQtCoreRectF, i: ::libc::c_int, defaultValue: *const ::qt_core::rect_f::RectF, output: *mut ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_QVector_QRect_append_l(this_ptr: *mut ::vector::VectorQtCoreRect, l: *const ::vector::VectorQtCoreRect);
  pub fn qt_gui_c_QVector_QRect_append_t(this_ptr: *mut ::vector::VectorQtCoreRect, t: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QVector_QRect_at(this_ptr: *const ::vector::VectorQtCoreRect, i: ::libc::c_int) -> *const ::qt_core::rect::Rect;
  pub fn qt_gui_c_QVector_QRect_back(this_ptr: *mut ::vector::VectorQtCoreRect) -> *mut ::qt_core::rect::Rect;
  pub fn qt_gui_c_QVector_QRect_back_const(this_ptr: *const ::vector::VectorQtCoreRect) -> *const ::qt_core::rect::Rect;
  pub fn qt_gui_c_QVector_QRect_capacity(this_ptr: *const ::vector::VectorQtCoreRect) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QRect_clear(this_ptr: *mut ::vector::VectorQtCoreRect);
  pub fn qt_gui_c_QVector_QRect_constData(this_ptr: *const ::vector::VectorQtCoreRect) -> *const ::qt_core::rect::Rect;
  pub fn qt_gui_c_QVector_QRect_constFirst(this_ptr: *const ::vector::VectorQtCoreRect) -> *const ::qt_core::rect::Rect;
  pub fn qt_gui_c_QVector_QRect_constLast(this_ptr: *const ::vector::VectorQtCoreRect) -> *const ::qt_core::rect::Rect;
  pub fn qt_gui_c_QVector_QRect_constructor_no_args(output: *mut ::vector::VectorQtCoreRect);
  pub fn qt_gui_c_QVector_QRect_constructor_size(size: ::libc::c_int, output: *mut ::vector::VectorQtCoreRect);
  pub fn qt_gui_c_QVector_QRect_constructor_size_t(size: ::libc::c_int, t: *const ::qt_core::rect::Rect, output: *mut ::vector::VectorQtCoreRect);
  pub fn qt_gui_c_QVector_QRect_constructor_v(v: *const ::vector::VectorQtCoreRect, output: *mut ::vector::VectorQtCoreRect);
  pub fn qt_gui_c_QVector_QRect_contains(this_ptr: *const ::vector::VectorQtCoreRect, t: *const ::qt_core::rect::Rect) -> bool;
  pub fn qt_gui_c_QVector_QRect_count_no_args(this_ptr: *const ::vector::VectorQtCoreRect) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QRect_count_t(this_ptr: *const ::vector::VectorQtCoreRect, t: *const ::qt_core::rect::Rect) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QRect_data(this_ptr: *mut ::vector::VectorQtCoreRect) -> *mut ::qt_core::rect::Rect;
  pub fn qt_gui_c_QVector_QRect_data_const(this_ptr: *const ::vector::VectorQtCoreRect) -> *const ::qt_core::rect::Rect;
  pub fn qt_gui_c_QVector_QRect_destructor(this_ptr: *mut ::vector::VectorQtCoreRect);
  pub fn qt_gui_c_QVector_QRect_empty(this_ptr: *const ::vector::VectorQtCoreRect) -> bool;
  pub fn qt_gui_c_QVector_QRect_endsWith(this_ptr: *const ::vector::VectorQtCoreRect, t: *const ::qt_core::rect::Rect) -> bool;
  pub fn qt_gui_c_QVector_QRect_fill_t(this_ptr: *mut ::vector::VectorQtCoreRect, t: *const ::qt_core::rect::Rect) -> *mut ::vector::VectorQtCoreRect;
  pub fn qt_gui_c_QVector_QRect_fill_t_size(this_ptr: *mut ::vector::VectorQtCoreRect, t: *const ::qt_core::rect::Rect, size: ::libc::c_int) -> *mut ::vector::VectorQtCoreRect;
  pub fn qt_gui_c_QVector_QRect_first(this_ptr: *mut ::vector::VectorQtCoreRect) -> *mut ::qt_core::rect::Rect;
  pub fn qt_gui_c_QVector_QRect_first_const(this_ptr: *const ::vector::VectorQtCoreRect) -> *const ::qt_core::rect::Rect;
  pub fn qt_gui_c_QVector_QRect_front(this_ptr: *mut ::vector::VectorQtCoreRect) -> *mut ::qt_core::rect::Rect;
  pub fn qt_gui_c_QVector_QRect_front_const(this_ptr: *const ::vector::VectorQtCoreRect) -> *const ::qt_core::rect::Rect;
  pub fn qt_gui_c_QVector_QRect_indexOf_t(this_ptr: *const ::vector::VectorQtCoreRect, t: *const ::qt_core::rect::Rect) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QRect_indexOf_t_from(this_ptr: *const ::vector::VectorQtCoreRect, t: *const ::qt_core::rect::Rect, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QRect_insert_i_n_t(this_ptr: *mut ::vector::VectorQtCoreRect, i: ::libc::c_int, n: ::libc::c_int, t: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QVector_QRect_insert_i_t(this_ptr: *mut ::vector::VectorQtCoreRect, i: ::libc::c_int, t: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QVector_QRect_isEmpty(this_ptr: *const ::vector::VectorQtCoreRect) -> bool;
  pub fn qt_gui_c_QVector_QRect_last(this_ptr: *mut ::vector::VectorQtCoreRect) -> *mut ::qt_core::rect::Rect;
  pub fn qt_gui_c_QVector_QRect_lastIndexOf_t(this_ptr: *const ::vector::VectorQtCoreRect, t: *const ::qt_core::rect::Rect) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QRect_lastIndexOf_t_from(this_ptr: *const ::vector::VectorQtCoreRect, t: *const ::qt_core::rect::Rect, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QRect_last_const(this_ptr: *const ::vector::VectorQtCoreRect) -> *const ::qt_core::rect::Rect;
  pub fn qt_gui_c_QVector_QRect_length(this_ptr: *const ::vector::VectorQtCoreRect) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QRect_mid_to_output_pos(this_ptr: *const ::vector::VectorQtCoreRect, pos: ::libc::c_int, output: *mut ::vector::VectorQtCoreRect);
  pub fn qt_gui_c_QVector_QRect_mid_to_output_pos_len(this_ptr: *const ::vector::VectorQtCoreRect, pos: ::libc::c_int, len: ::libc::c_int, output: *mut ::vector::VectorQtCoreRect);
  pub fn qt_gui_c_QVector_QRect_move(this_ptr: *mut ::vector::VectorQtCoreRect, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QVector_QRect_operator_add_assign_l(this_ptr: *mut ::vector::VectorQtCoreRect, l: *const ::vector::VectorQtCoreRect) -> *mut ::vector::VectorQtCoreRect;
  pub fn qt_gui_c_QVector_QRect_operator_add_assign_t(this_ptr: *mut ::vector::VectorQtCoreRect, t: *const ::qt_core::rect::Rect) -> *mut ::vector::VectorQtCoreRect;
  pub fn qt_gui_c_QVector_QRect_operator_add_to_output(this_ptr: *const ::vector::VectorQtCoreRect, l: *const ::vector::VectorQtCoreRect, output: *mut ::vector::VectorQtCoreRect);
  pub fn qt_gui_c_QVector_QRect_operator_assign(this_ptr: *mut ::vector::VectorQtCoreRect, v: *const ::vector::VectorQtCoreRect) -> *mut ::vector::VectorQtCoreRect;
  pub fn qt_gui_c_QVector_QRect_operator_eq(this_ptr: *const ::vector::VectorQtCoreRect, v: *const ::vector::VectorQtCoreRect) -> bool;
  pub fn qt_gui_c_QVector_QRect_operator_index(this_ptr: *mut ::vector::VectorQtCoreRect, i: ::libc::c_int) -> *mut ::qt_core::rect::Rect;
  pub fn qt_gui_c_QVector_QRect_operator_index_const(this_ptr: *const ::vector::VectorQtCoreRect, i: ::libc::c_int) -> *const ::qt_core::rect::Rect;
  pub fn qt_gui_c_QVector_QRect_operator_neq(this_ptr: *const ::vector::VectorQtCoreRect, v: *const ::vector::VectorQtCoreRect) -> bool;
  pub fn qt_gui_c_QVector_QRect_operator_shl_l(this_ptr: *mut ::vector::VectorQtCoreRect, l: *const ::vector::VectorQtCoreRect) -> *mut ::vector::VectorQtCoreRect;
  pub fn qt_gui_c_QVector_QRect_operator_shl_t(this_ptr: *mut ::vector::VectorQtCoreRect, t: *const ::qt_core::rect::Rect) -> *mut ::vector::VectorQtCoreRect;
  pub fn qt_gui_c_QVector_QRect_pop_back(this_ptr: *mut ::vector::VectorQtCoreRect);
  pub fn qt_gui_c_QVector_QRect_pop_front(this_ptr: *mut ::vector::VectorQtCoreRect);
  pub fn qt_gui_c_QVector_QRect_prepend(this_ptr: *mut ::vector::VectorQtCoreRect, t: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QVector_QRect_push_back(this_ptr: *mut ::vector::VectorQtCoreRect, t: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QVector_QRect_push_front(this_ptr: *mut ::vector::VectorQtCoreRect, t: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QVector_QRect_removeAll(this_ptr: *mut ::vector::VectorQtCoreRect, t: *const ::qt_core::rect::Rect) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QRect_removeAt(this_ptr: *mut ::vector::VectorQtCoreRect, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_QRect_removeFirst(this_ptr: *mut ::vector::VectorQtCoreRect);
  pub fn qt_gui_c_QVector_QRect_removeLast(this_ptr: *mut ::vector::VectorQtCoreRect);
  pub fn qt_gui_c_QVector_QRect_removeOne(this_ptr: *mut ::vector::VectorQtCoreRect, t: *const ::qt_core::rect::Rect) -> bool;
  pub fn qt_gui_c_QVector_QRect_remove_i(this_ptr: *mut ::vector::VectorQtCoreRect, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_QRect_remove_i_n(this_ptr: *mut ::vector::VectorQtCoreRect, i: ::libc::c_int, n: ::libc::c_int);
  pub fn qt_gui_c_QVector_QRect_replace(this_ptr: *mut ::vector::VectorQtCoreRect, i: ::libc::c_int, t: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QVector_QRect_reserve(this_ptr: *mut ::vector::VectorQtCoreRect, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_QRect_resize(this_ptr: *mut ::vector::VectorQtCoreRect, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_QRect_size(this_ptr: *const ::vector::VectorQtCoreRect) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QRect_squeeze(this_ptr: *mut ::vector::VectorQtCoreRect);
  pub fn qt_gui_c_QVector_QRect_startsWith(this_ptr: *const ::vector::VectorQtCoreRect, t: *const ::qt_core::rect::Rect) -> bool;
  pub fn qt_gui_c_QVector_QRect_swap(this_ptr: *mut ::vector::VectorQtCoreRect, other: *mut ::vector::VectorQtCoreRect);
  pub fn qt_gui_c_QVector_QRect_takeAt_to_output(this_ptr: *mut ::vector::VectorQtCoreRect, i: ::libc::c_int, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QVector_QRect_takeFirst_to_output(this_ptr: *mut ::vector::VectorQtCoreRect, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QVector_QRect_takeLast_to_output(this_ptr: *mut ::vector::VectorQtCoreRect, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QVector_QRect_value_to_output_i(this_ptr: *const ::vector::VectorQtCoreRect, i: ::libc::c_int, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QVector_QRect_value_to_output_i_defaultValue(this_ptr: *const ::vector::VectorQtCoreRect, i: ::libc::c_int, defaultValue: *const ::qt_core::rect::Rect, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QVector_QSize_append_l(this_ptr: *mut ::vector::VectorQtCoreSize, l: *const ::vector::VectorQtCoreSize);
  pub fn qt_gui_c_QVector_QSize_append_t(this_ptr: *mut ::vector::VectorQtCoreSize, t: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QVector_QSize_at(this_ptr: *const ::vector::VectorQtCoreSize, i: ::libc::c_int) -> *const ::qt_core::size::Size;
  pub fn qt_gui_c_QVector_QSize_back(this_ptr: *mut ::vector::VectorQtCoreSize) -> *mut ::qt_core::size::Size;
  pub fn qt_gui_c_QVector_QSize_back_const(this_ptr: *const ::vector::VectorQtCoreSize) -> *const ::qt_core::size::Size;
  pub fn qt_gui_c_QVector_QSize_capacity(this_ptr: *const ::vector::VectorQtCoreSize) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QSize_clear(this_ptr: *mut ::vector::VectorQtCoreSize);
  pub fn qt_gui_c_QVector_QSize_constData(this_ptr: *const ::vector::VectorQtCoreSize) -> *const ::qt_core::size::Size;
  pub fn qt_gui_c_QVector_QSize_constFirst(this_ptr: *const ::vector::VectorQtCoreSize) -> *const ::qt_core::size::Size;
  pub fn qt_gui_c_QVector_QSize_constLast(this_ptr: *const ::vector::VectorQtCoreSize) -> *const ::qt_core::size::Size;
  pub fn qt_gui_c_QVector_QSize_constructor_no_args(output: *mut ::vector::VectorQtCoreSize);
  pub fn qt_gui_c_QVector_QSize_constructor_size(size: ::libc::c_int, output: *mut ::vector::VectorQtCoreSize);
  pub fn qt_gui_c_QVector_QSize_constructor_size_t(size: ::libc::c_int, t: *const ::qt_core::size::Size, output: *mut ::vector::VectorQtCoreSize);
  pub fn qt_gui_c_QVector_QSize_constructor_v(v: *const ::vector::VectorQtCoreSize, output: *mut ::vector::VectorQtCoreSize);
  pub fn qt_gui_c_QVector_QSize_contains(this_ptr: *const ::vector::VectorQtCoreSize, t: *const ::qt_core::size::Size) -> bool;
  pub fn qt_gui_c_QVector_QSize_count_no_args(this_ptr: *const ::vector::VectorQtCoreSize) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QSize_count_t(this_ptr: *const ::vector::VectorQtCoreSize, t: *const ::qt_core::size::Size) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QSize_data(this_ptr: *mut ::vector::VectorQtCoreSize) -> *mut ::qt_core::size::Size;
  pub fn qt_gui_c_QVector_QSize_data_const(this_ptr: *const ::vector::VectorQtCoreSize) -> *const ::qt_core::size::Size;
  pub fn qt_gui_c_QVector_QSize_destructor(this_ptr: *mut ::vector::VectorQtCoreSize);
  pub fn qt_gui_c_QVector_QSize_empty(this_ptr: *const ::vector::VectorQtCoreSize) -> bool;
  pub fn qt_gui_c_QVector_QSize_endsWith(this_ptr: *const ::vector::VectorQtCoreSize, t: *const ::qt_core::size::Size) -> bool;
  pub fn qt_gui_c_QVector_QSize_fill_t(this_ptr: *mut ::vector::VectorQtCoreSize, t: *const ::qt_core::size::Size) -> *mut ::vector::VectorQtCoreSize;
  pub fn qt_gui_c_QVector_QSize_fill_t_size(this_ptr: *mut ::vector::VectorQtCoreSize, t: *const ::qt_core::size::Size, size: ::libc::c_int) -> *mut ::vector::VectorQtCoreSize;
  pub fn qt_gui_c_QVector_QSize_first(this_ptr: *mut ::vector::VectorQtCoreSize) -> *mut ::qt_core::size::Size;
  pub fn qt_gui_c_QVector_QSize_first_const(this_ptr: *const ::vector::VectorQtCoreSize) -> *const ::qt_core::size::Size;
  pub fn qt_gui_c_QVector_QSize_fromList_to_output(list: *const ::list::ListQtCoreSize, output: *mut ::vector::VectorQtCoreSize);
  pub fn qt_gui_c_QVector_QSize_front(this_ptr: *mut ::vector::VectorQtCoreSize) -> *mut ::qt_core::size::Size;
  pub fn qt_gui_c_QVector_QSize_front_const(this_ptr: *const ::vector::VectorQtCoreSize) -> *const ::qt_core::size::Size;
  pub fn qt_gui_c_QVector_QSize_indexOf_t(this_ptr: *const ::vector::VectorQtCoreSize, t: *const ::qt_core::size::Size) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QSize_indexOf_t_from(this_ptr: *const ::vector::VectorQtCoreSize, t: *const ::qt_core::size::Size, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QSize_insert_i_n_t(this_ptr: *mut ::vector::VectorQtCoreSize, i: ::libc::c_int, n: ::libc::c_int, t: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QVector_QSize_insert_i_t(this_ptr: *mut ::vector::VectorQtCoreSize, i: ::libc::c_int, t: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QVector_QSize_isEmpty(this_ptr: *const ::vector::VectorQtCoreSize) -> bool;
  pub fn qt_gui_c_QVector_QSize_last(this_ptr: *mut ::vector::VectorQtCoreSize) -> *mut ::qt_core::size::Size;
  pub fn qt_gui_c_QVector_QSize_lastIndexOf_t(this_ptr: *const ::vector::VectorQtCoreSize, t: *const ::qt_core::size::Size) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QSize_lastIndexOf_t_from(this_ptr: *const ::vector::VectorQtCoreSize, t: *const ::qt_core::size::Size, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QSize_last_const(this_ptr: *const ::vector::VectorQtCoreSize) -> *const ::qt_core::size::Size;
  pub fn qt_gui_c_QVector_QSize_length(this_ptr: *const ::vector::VectorQtCoreSize) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QSize_mid_to_output_pos(this_ptr: *const ::vector::VectorQtCoreSize, pos: ::libc::c_int, output: *mut ::vector::VectorQtCoreSize);
  pub fn qt_gui_c_QVector_QSize_mid_to_output_pos_len(this_ptr: *const ::vector::VectorQtCoreSize, pos: ::libc::c_int, len: ::libc::c_int, output: *mut ::vector::VectorQtCoreSize);
  pub fn qt_gui_c_QVector_QSize_move(this_ptr: *mut ::vector::VectorQtCoreSize, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QVector_QSize_operator_add_assign_l(this_ptr: *mut ::vector::VectorQtCoreSize, l: *const ::vector::VectorQtCoreSize) -> *mut ::vector::VectorQtCoreSize;
  pub fn qt_gui_c_QVector_QSize_operator_add_assign_t(this_ptr: *mut ::vector::VectorQtCoreSize, t: *const ::qt_core::size::Size) -> *mut ::vector::VectorQtCoreSize;
  pub fn qt_gui_c_QVector_QSize_operator_add_to_output(this_ptr: *const ::vector::VectorQtCoreSize, l: *const ::vector::VectorQtCoreSize, output: *mut ::vector::VectorQtCoreSize);
  pub fn qt_gui_c_QVector_QSize_operator_assign(this_ptr: *mut ::vector::VectorQtCoreSize, v: *const ::vector::VectorQtCoreSize) -> *mut ::vector::VectorQtCoreSize;
  pub fn qt_gui_c_QVector_QSize_operator_eq(this_ptr: *const ::vector::VectorQtCoreSize, v: *const ::vector::VectorQtCoreSize) -> bool;
  pub fn qt_gui_c_QVector_QSize_operator_index(this_ptr: *mut ::vector::VectorQtCoreSize, i: ::libc::c_int) -> *mut ::qt_core::size::Size;
  pub fn qt_gui_c_QVector_QSize_operator_index_const(this_ptr: *const ::vector::VectorQtCoreSize, i: ::libc::c_int) -> *const ::qt_core::size::Size;
  pub fn qt_gui_c_QVector_QSize_operator_neq(this_ptr: *const ::vector::VectorQtCoreSize, v: *const ::vector::VectorQtCoreSize) -> bool;
  pub fn qt_gui_c_QVector_QSize_operator_shl_l(this_ptr: *mut ::vector::VectorQtCoreSize, l: *const ::vector::VectorQtCoreSize) -> *mut ::vector::VectorQtCoreSize;
  pub fn qt_gui_c_QVector_QSize_operator_shl_t(this_ptr: *mut ::vector::VectorQtCoreSize, t: *const ::qt_core::size::Size) -> *mut ::vector::VectorQtCoreSize;
  pub fn qt_gui_c_QVector_QSize_pop_back(this_ptr: *mut ::vector::VectorQtCoreSize);
  pub fn qt_gui_c_QVector_QSize_pop_front(this_ptr: *mut ::vector::VectorQtCoreSize);
  pub fn qt_gui_c_QVector_QSize_prepend(this_ptr: *mut ::vector::VectorQtCoreSize, t: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QVector_QSize_push_back(this_ptr: *mut ::vector::VectorQtCoreSize, t: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QVector_QSize_push_front(this_ptr: *mut ::vector::VectorQtCoreSize, t: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QVector_QSize_removeAll(this_ptr: *mut ::vector::VectorQtCoreSize, t: *const ::qt_core::size::Size) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QSize_removeAt(this_ptr: *mut ::vector::VectorQtCoreSize, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_QSize_removeFirst(this_ptr: *mut ::vector::VectorQtCoreSize);
  pub fn qt_gui_c_QVector_QSize_removeLast(this_ptr: *mut ::vector::VectorQtCoreSize);
  pub fn qt_gui_c_QVector_QSize_removeOne(this_ptr: *mut ::vector::VectorQtCoreSize, t: *const ::qt_core::size::Size) -> bool;
  pub fn qt_gui_c_QVector_QSize_remove_i(this_ptr: *mut ::vector::VectorQtCoreSize, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_QSize_remove_i_n(this_ptr: *mut ::vector::VectorQtCoreSize, i: ::libc::c_int, n: ::libc::c_int);
  pub fn qt_gui_c_QVector_QSize_replace(this_ptr: *mut ::vector::VectorQtCoreSize, i: ::libc::c_int, t: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QVector_QSize_reserve(this_ptr: *mut ::vector::VectorQtCoreSize, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_QSize_resize(this_ptr: *mut ::vector::VectorQtCoreSize, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_QSize_size(this_ptr: *const ::vector::VectorQtCoreSize) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QSize_squeeze(this_ptr: *mut ::vector::VectorQtCoreSize);
  pub fn qt_gui_c_QVector_QSize_startsWith(this_ptr: *const ::vector::VectorQtCoreSize, t: *const ::qt_core::size::Size) -> bool;
  pub fn qt_gui_c_QVector_QSize_swap(this_ptr: *mut ::vector::VectorQtCoreSize, other: *mut ::vector::VectorQtCoreSize);
  pub fn qt_gui_c_QVector_QSize_takeAt_to_output(this_ptr: *mut ::vector::VectorQtCoreSize, i: ::libc::c_int, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QVector_QSize_takeFirst_to_output(this_ptr: *mut ::vector::VectorQtCoreSize, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QVector_QSize_takeLast_to_output(this_ptr: *mut ::vector::VectorQtCoreSize, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QVector_QSize_toList_to_output(this_ptr: *const ::vector::VectorQtCoreSize, output: *mut ::list::ListQtCoreSize);
  pub fn qt_gui_c_QVector_QSize_value_to_output_i(this_ptr: *const ::vector::VectorQtCoreSize, i: ::libc::c_int, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QVector_QSize_value_to_output_i_defaultValue(this_ptr: *const ::vector::VectorQtCoreSize, i: ::libc::c_int, defaultValue: *const ::qt_core::size::Size, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QVector_QTextFormat_append_l(this_ptr: *mut ::vector::VectorTextFormat, l: *const ::vector::VectorTextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_append_t(this_ptr: *mut ::vector::VectorTextFormat, t: *const ::text_format::TextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_at(this_ptr: *const ::vector::VectorTextFormat, i: ::libc::c_int) -> *const ::text_format::TextFormat;
  pub fn qt_gui_c_QVector_QTextFormat_back(this_ptr: *mut ::vector::VectorTextFormat) -> *mut ::text_format::TextFormat;
  pub fn qt_gui_c_QVector_QTextFormat_back_const(this_ptr: *const ::vector::VectorTextFormat) -> *const ::text_format::TextFormat;
  pub fn qt_gui_c_QVector_QTextFormat_capacity(this_ptr: *const ::vector::VectorTextFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QTextFormat_clear(this_ptr: *mut ::vector::VectorTextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_constData(this_ptr: *const ::vector::VectorTextFormat) -> *const ::text_format::TextFormat;
  pub fn qt_gui_c_QVector_QTextFormat_constFirst(this_ptr: *const ::vector::VectorTextFormat) -> *const ::text_format::TextFormat;
  pub fn qt_gui_c_QVector_QTextFormat_constLast(this_ptr: *const ::vector::VectorTextFormat) -> *const ::text_format::TextFormat;
  pub fn qt_gui_c_QVector_QTextFormat_constructor_no_args(output: *mut ::vector::VectorTextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_constructor_size(size: ::libc::c_int, output: *mut ::vector::VectorTextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_constructor_size_t(size: ::libc::c_int, t: *const ::text_format::TextFormat, output: *mut ::vector::VectorTextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_constructor_v(v: *const ::vector::VectorTextFormat, output: *mut ::vector::VectorTextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_contains(this_ptr: *const ::vector::VectorTextFormat, t: *const ::text_format::TextFormat) -> bool;
  pub fn qt_gui_c_QVector_QTextFormat_count_no_args(this_ptr: *const ::vector::VectorTextFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QTextFormat_count_t(this_ptr: *const ::vector::VectorTextFormat, t: *const ::text_format::TextFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QTextFormat_data(this_ptr: *mut ::vector::VectorTextFormat) -> *mut ::text_format::TextFormat;
  pub fn qt_gui_c_QVector_QTextFormat_data_const(this_ptr: *const ::vector::VectorTextFormat) -> *const ::text_format::TextFormat;
  pub fn qt_gui_c_QVector_QTextFormat_destructor(this_ptr: *mut ::vector::VectorTextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_empty(this_ptr: *const ::vector::VectorTextFormat) -> bool;
  pub fn qt_gui_c_QVector_QTextFormat_endsWith(this_ptr: *const ::vector::VectorTextFormat, t: *const ::text_format::TextFormat) -> bool;
  pub fn qt_gui_c_QVector_QTextFormat_fill_t(this_ptr: *mut ::vector::VectorTextFormat, t: *const ::text_format::TextFormat) -> *mut ::vector::VectorTextFormat;
  pub fn qt_gui_c_QVector_QTextFormat_fill_t_size(this_ptr: *mut ::vector::VectorTextFormat, t: *const ::text_format::TextFormat, size: ::libc::c_int) -> *mut ::vector::VectorTextFormat;
  pub fn qt_gui_c_QVector_QTextFormat_first(this_ptr: *mut ::vector::VectorTextFormat) -> *mut ::text_format::TextFormat;
  pub fn qt_gui_c_QVector_QTextFormat_first_const(this_ptr: *const ::vector::VectorTextFormat) -> *const ::text_format::TextFormat;
  pub fn qt_gui_c_QVector_QTextFormat_front(this_ptr: *mut ::vector::VectorTextFormat) -> *mut ::text_format::TextFormat;
  pub fn qt_gui_c_QVector_QTextFormat_front_const(this_ptr: *const ::vector::VectorTextFormat) -> *const ::text_format::TextFormat;
  pub fn qt_gui_c_QVector_QTextFormat_indexOf_t(this_ptr: *const ::vector::VectorTextFormat, t: *const ::text_format::TextFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QTextFormat_indexOf_t_from(this_ptr: *const ::vector::VectorTextFormat, t: *const ::text_format::TextFormat, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QTextFormat_insert_i_n_t(this_ptr: *mut ::vector::VectorTextFormat, i: ::libc::c_int, n: ::libc::c_int, t: *const ::text_format::TextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_insert_i_t(this_ptr: *mut ::vector::VectorTextFormat, i: ::libc::c_int, t: *const ::text_format::TextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_isEmpty(this_ptr: *const ::vector::VectorTextFormat) -> bool;
  pub fn qt_gui_c_QVector_QTextFormat_last(this_ptr: *mut ::vector::VectorTextFormat) -> *mut ::text_format::TextFormat;
  pub fn qt_gui_c_QVector_QTextFormat_lastIndexOf_t(this_ptr: *const ::vector::VectorTextFormat, t: *const ::text_format::TextFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QTextFormat_lastIndexOf_t_from(this_ptr: *const ::vector::VectorTextFormat, t: *const ::text_format::TextFormat, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QTextFormat_last_const(this_ptr: *const ::vector::VectorTextFormat) -> *const ::text_format::TextFormat;
  pub fn qt_gui_c_QVector_QTextFormat_length(this_ptr: *const ::vector::VectorTextFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QTextFormat_mid_to_output_pos(this_ptr: *const ::vector::VectorTextFormat, pos: ::libc::c_int, output: *mut ::vector::VectorTextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_mid_to_output_pos_len(this_ptr: *const ::vector::VectorTextFormat, pos: ::libc::c_int, len: ::libc::c_int, output: *mut ::vector::VectorTextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_move(this_ptr: *mut ::vector::VectorTextFormat, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QVector_QTextFormat_operator_add_assign_l(this_ptr: *mut ::vector::VectorTextFormat, l: *const ::vector::VectorTextFormat) -> *mut ::vector::VectorTextFormat;
  pub fn qt_gui_c_QVector_QTextFormat_operator_add_assign_t(this_ptr: *mut ::vector::VectorTextFormat, t: *const ::text_format::TextFormat) -> *mut ::vector::VectorTextFormat;
  pub fn qt_gui_c_QVector_QTextFormat_operator_add_to_output(this_ptr: *const ::vector::VectorTextFormat, l: *const ::vector::VectorTextFormat, output: *mut ::vector::VectorTextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_operator_assign(this_ptr: *mut ::vector::VectorTextFormat, v: *const ::vector::VectorTextFormat) -> *mut ::vector::VectorTextFormat;
  pub fn qt_gui_c_QVector_QTextFormat_operator_eq(this_ptr: *const ::vector::VectorTextFormat, v: *const ::vector::VectorTextFormat) -> bool;
  pub fn qt_gui_c_QVector_QTextFormat_operator_index(this_ptr: *mut ::vector::VectorTextFormat, i: ::libc::c_int) -> *mut ::text_format::TextFormat;
  pub fn qt_gui_c_QVector_QTextFormat_operator_index_const(this_ptr: *const ::vector::VectorTextFormat, i: ::libc::c_int) -> *const ::text_format::TextFormat;
  pub fn qt_gui_c_QVector_QTextFormat_operator_neq(this_ptr: *const ::vector::VectorTextFormat, v: *const ::vector::VectorTextFormat) -> bool;
  pub fn qt_gui_c_QVector_QTextFormat_operator_shl_l(this_ptr: *mut ::vector::VectorTextFormat, l: *const ::vector::VectorTextFormat) -> *mut ::vector::VectorTextFormat;
  pub fn qt_gui_c_QVector_QTextFormat_operator_shl_t(this_ptr: *mut ::vector::VectorTextFormat, t: *const ::text_format::TextFormat) -> *mut ::vector::VectorTextFormat;
  pub fn qt_gui_c_QVector_QTextFormat_pop_back(this_ptr: *mut ::vector::VectorTextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_pop_front(this_ptr: *mut ::vector::VectorTextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_prepend(this_ptr: *mut ::vector::VectorTextFormat, t: *const ::text_format::TextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_push_back(this_ptr: *mut ::vector::VectorTextFormat, t: *const ::text_format::TextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_push_front(this_ptr: *mut ::vector::VectorTextFormat, t: *const ::text_format::TextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_removeAll(this_ptr: *mut ::vector::VectorTextFormat, t: *const ::text_format::TextFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QTextFormat_removeAt(this_ptr: *mut ::vector::VectorTextFormat, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_QTextFormat_removeFirst(this_ptr: *mut ::vector::VectorTextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_removeLast(this_ptr: *mut ::vector::VectorTextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_removeOne(this_ptr: *mut ::vector::VectorTextFormat, t: *const ::text_format::TextFormat) -> bool;
  pub fn qt_gui_c_QVector_QTextFormat_remove_i(this_ptr: *mut ::vector::VectorTextFormat, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_QTextFormat_remove_i_n(this_ptr: *mut ::vector::VectorTextFormat, i: ::libc::c_int, n: ::libc::c_int);
  pub fn qt_gui_c_QVector_QTextFormat_replace(this_ptr: *mut ::vector::VectorTextFormat, i: ::libc::c_int, t: *const ::text_format::TextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_reserve(this_ptr: *mut ::vector::VectorTextFormat, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_QTextFormat_resize(this_ptr: *mut ::vector::VectorTextFormat, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_QTextFormat_size(this_ptr: *const ::vector::VectorTextFormat) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QTextFormat_squeeze(this_ptr: *mut ::vector::VectorTextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_startsWith(this_ptr: *const ::vector::VectorTextFormat, t: *const ::text_format::TextFormat) -> bool;
  pub fn qt_gui_c_QVector_QTextFormat_swap(this_ptr: *mut ::vector::VectorTextFormat, other: *mut ::vector::VectorTextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_takeAt_to_output(this_ptr: *mut ::vector::VectorTextFormat, i: ::libc::c_int, output: *mut ::text_format::TextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_takeFirst_to_output(this_ptr: *mut ::vector::VectorTextFormat, output: *mut ::text_format::TextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_takeLast_to_output(this_ptr: *mut ::vector::VectorTextFormat, output: *mut ::text_format::TextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_value_to_output_i(this_ptr: *const ::vector::VectorTextFormat, i: ::libc::c_int, output: *mut ::text_format::TextFormat);
  pub fn qt_gui_c_QVector_QTextFormat_value_to_output_i_defaultValue(this_ptr: *const ::vector::VectorTextFormat, i: ::libc::c_int, defaultValue: *const ::text_format::TextFormat, output: *mut ::text_format::TextFormat);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_append_l(this_ptr: *mut ::vector::VectorTextLayoutFormatRange, l: *const ::vector::VectorTextLayoutFormatRange);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_append_t(this_ptr: *mut ::vector::VectorTextLayoutFormatRange, t: *const ::text_layout::FormatRange);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_at(this_ptr: *const ::vector::VectorTextLayoutFormatRange, i: ::libc::c_int) -> *const ::text_layout::FormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_back(this_ptr: *mut ::vector::VectorTextLayoutFormatRange) -> *mut ::text_layout::FormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_back_const(this_ptr: *const ::vector::VectorTextLayoutFormatRange) -> *const ::text_layout::FormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_capacity(this_ptr: *const ::vector::VectorTextLayoutFormatRange) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_clear(this_ptr: *mut ::vector::VectorTextLayoutFormatRange);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_constData(this_ptr: *const ::vector::VectorTextLayoutFormatRange) -> *const ::text_layout::FormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_constFirst(this_ptr: *const ::vector::VectorTextLayoutFormatRange) -> *const ::text_layout::FormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_constLast(this_ptr: *const ::vector::VectorTextLayoutFormatRange) -> *const ::text_layout::FormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_constructor_no_args(output: *mut ::vector::VectorTextLayoutFormatRange);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_constructor_size(size: ::libc::c_int, output: *mut ::vector::VectorTextLayoutFormatRange);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_constructor_size_t(size: ::libc::c_int, t: *const ::text_layout::FormatRange, output: *mut ::vector::VectorTextLayoutFormatRange);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_constructor_v(v: *const ::vector::VectorTextLayoutFormatRange, output: *mut ::vector::VectorTextLayoutFormatRange);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_count(this_ptr: *const ::vector::VectorTextLayoutFormatRange) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_data(this_ptr: *mut ::vector::VectorTextLayoutFormatRange) -> *mut ::text_layout::FormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_data_const(this_ptr: *const ::vector::VectorTextLayoutFormatRange) -> *const ::text_layout::FormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_destructor(this_ptr: *mut ::vector::VectorTextLayoutFormatRange);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_empty(this_ptr: *const ::vector::VectorTextLayoutFormatRange) -> bool;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_fill_t(this_ptr: *mut ::vector::VectorTextLayoutFormatRange, t: *const ::text_layout::FormatRange) -> *mut ::vector::VectorTextLayoutFormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_fill_t_size(this_ptr: *mut ::vector::VectorTextLayoutFormatRange, t: *const ::text_layout::FormatRange, size: ::libc::c_int) -> *mut ::vector::VectorTextLayoutFormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_first(this_ptr: *mut ::vector::VectorTextLayoutFormatRange) -> *mut ::text_layout::FormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_first_const(this_ptr: *const ::vector::VectorTextLayoutFormatRange) -> *const ::text_layout::FormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_fromList_to_output(list: *const ::list::ListTextLayoutFormatRange, output: *mut ::vector::VectorTextLayoutFormatRange);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_front(this_ptr: *mut ::vector::VectorTextLayoutFormatRange) -> *mut ::text_layout::FormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_front_const(this_ptr: *const ::vector::VectorTextLayoutFormatRange) -> *const ::text_layout::FormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_insert_i_n_t(this_ptr: *mut ::vector::VectorTextLayoutFormatRange, i: ::libc::c_int, n: ::libc::c_int, t: *const ::text_layout::FormatRange);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_insert_i_t(this_ptr: *mut ::vector::VectorTextLayoutFormatRange, i: ::libc::c_int, t: *const ::text_layout::FormatRange);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_isEmpty(this_ptr: *const ::vector::VectorTextLayoutFormatRange) -> bool;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_last(this_ptr: *mut ::vector::VectorTextLayoutFormatRange) -> *mut ::text_layout::FormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_last_const(this_ptr: *const ::vector::VectorTextLayoutFormatRange) -> *const ::text_layout::FormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_length(this_ptr: *const ::vector::VectorTextLayoutFormatRange) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_mid_to_output_pos(this_ptr: *const ::vector::VectorTextLayoutFormatRange, pos: ::libc::c_int, output: *mut ::vector::VectorTextLayoutFormatRange);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_mid_to_output_pos_len(this_ptr: *const ::vector::VectorTextLayoutFormatRange, pos: ::libc::c_int, len: ::libc::c_int, output: *mut ::vector::VectorTextLayoutFormatRange);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_move(this_ptr: *mut ::vector::VectorTextLayoutFormatRange, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_operator_add_assign_l(this_ptr: *mut ::vector::VectorTextLayoutFormatRange, l: *const ::vector::VectorTextLayoutFormatRange) -> *mut ::vector::VectorTextLayoutFormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_operator_add_assign_t(this_ptr: *mut ::vector::VectorTextLayoutFormatRange, t: *const ::text_layout::FormatRange) -> *mut ::vector::VectorTextLayoutFormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_operator_add_to_output(this_ptr: *const ::vector::VectorTextLayoutFormatRange, l: *const ::vector::VectorTextLayoutFormatRange, output: *mut ::vector::VectorTextLayoutFormatRange);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_operator_assign(this_ptr: *mut ::vector::VectorTextLayoutFormatRange, v: *const ::vector::VectorTextLayoutFormatRange) -> *mut ::vector::VectorTextLayoutFormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_operator_index(this_ptr: *mut ::vector::VectorTextLayoutFormatRange, i: ::libc::c_int) -> *mut ::text_layout::FormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_operator_index_const(this_ptr: *const ::vector::VectorTextLayoutFormatRange, i: ::libc::c_int) -> *const ::text_layout::FormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_operator_shl_l(this_ptr: *mut ::vector::VectorTextLayoutFormatRange, l: *const ::vector::VectorTextLayoutFormatRange) -> *mut ::vector::VectorTextLayoutFormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_operator_shl_t(this_ptr: *mut ::vector::VectorTextLayoutFormatRange, t: *const ::text_layout::FormatRange) -> *mut ::vector::VectorTextLayoutFormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_pop_back(this_ptr: *mut ::vector::VectorTextLayoutFormatRange);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_pop_front(this_ptr: *mut ::vector::VectorTextLayoutFormatRange);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_prepend(this_ptr: *mut ::vector::VectorTextLayoutFormatRange, t: *const ::text_layout::FormatRange);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_push_back(this_ptr: *mut ::vector::VectorTextLayoutFormatRange, t: *const ::text_layout::FormatRange);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_push_front(this_ptr: *mut ::vector::VectorTextLayoutFormatRange, t: *const ::text_layout::FormatRange);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_removeAt(this_ptr: *mut ::vector::VectorTextLayoutFormatRange, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_removeFirst(this_ptr: *mut ::vector::VectorTextLayoutFormatRange);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_removeLast(this_ptr: *mut ::vector::VectorTextLayoutFormatRange);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_remove_i(this_ptr: *mut ::vector::VectorTextLayoutFormatRange, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_remove_i_n(this_ptr: *mut ::vector::VectorTextLayoutFormatRange, i: ::libc::c_int, n: ::libc::c_int);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_replace(this_ptr: *mut ::vector::VectorTextLayoutFormatRange, i: ::libc::c_int, t: *const ::text_layout::FormatRange);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_reserve(this_ptr: *mut ::vector::VectorTextLayoutFormatRange, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_resize(this_ptr: *mut ::vector::VectorTextLayoutFormatRange, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_size(this_ptr: *const ::vector::VectorTextLayoutFormatRange) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_squeeze(this_ptr: *mut ::vector::VectorTextLayoutFormatRange);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_swap(this_ptr: *mut ::vector::VectorTextLayoutFormatRange, other: *mut ::vector::VectorTextLayoutFormatRange);
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_takeAt_as_ptr(this_ptr: *mut ::vector::VectorTextLayoutFormatRange, i: ::libc::c_int) -> *mut ::text_layout::FormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_takeFirst_as_ptr(this_ptr: *mut ::vector::VectorTextLayoutFormatRange) -> *mut ::text_layout::FormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_takeLast_as_ptr(this_ptr: *mut ::vector::VectorTextLayoutFormatRange) -> *mut ::text_layout::FormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_value_as_ptr_i(this_ptr: *const ::vector::VectorTextLayoutFormatRange, i: ::libc::c_int) -> *mut ::text_layout::FormatRange;
  pub fn qt_gui_c_QVector_QTextLayout_FormatRange_value_as_ptr_i_defaultValue(this_ptr: *const ::vector::VectorTextLayoutFormatRange, i: ::libc::c_int, defaultValue: *const ::text_layout::FormatRange) -> *mut ::text_layout::FormatRange;
  pub fn qt_gui_c_QVector_QTextLength_append_l(this_ptr: *mut ::vector::VectorTextLength, l: *const ::vector::VectorTextLength);
  pub fn qt_gui_c_QVector_QTextLength_append_t(this_ptr: *mut ::vector::VectorTextLength, t: *const ::text_length::TextLength);
  pub fn qt_gui_c_QVector_QTextLength_at(this_ptr: *const ::vector::VectorTextLength, i: ::libc::c_int) -> *const ::text_length::TextLength;
  pub fn qt_gui_c_QVector_QTextLength_back(this_ptr: *mut ::vector::VectorTextLength) -> *mut ::text_length::TextLength;
  pub fn qt_gui_c_QVector_QTextLength_back_const(this_ptr: *const ::vector::VectorTextLength) -> *const ::text_length::TextLength;
  pub fn qt_gui_c_QVector_QTextLength_capacity(this_ptr: *const ::vector::VectorTextLength) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QTextLength_clear(this_ptr: *mut ::vector::VectorTextLength);
  pub fn qt_gui_c_QVector_QTextLength_constData(this_ptr: *const ::vector::VectorTextLength) -> *const ::text_length::TextLength;
  pub fn qt_gui_c_QVector_QTextLength_constFirst(this_ptr: *const ::vector::VectorTextLength) -> *const ::text_length::TextLength;
  pub fn qt_gui_c_QVector_QTextLength_constLast(this_ptr: *const ::vector::VectorTextLength) -> *const ::text_length::TextLength;
  pub fn qt_gui_c_QVector_QTextLength_constructor_no_args(output: *mut ::vector::VectorTextLength);
  pub fn qt_gui_c_QVector_QTextLength_constructor_size(size: ::libc::c_int, output: *mut ::vector::VectorTextLength);
  pub fn qt_gui_c_QVector_QTextLength_constructor_size_t(size: ::libc::c_int, t: *const ::text_length::TextLength, output: *mut ::vector::VectorTextLength);
  pub fn qt_gui_c_QVector_QTextLength_constructor_v(v: *const ::vector::VectorTextLength, output: *mut ::vector::VectorTextLength);
  pub fn qt_gui_c_QVector_QTextLength_contains(this_ptr: *const ::vector::VectorTextLength, t: *const ::text_length::TextLength) -> bool;
  pub fn qt_gui_c_QVector_QTextLength_count_no_args(this_ptr: *const ::vector::VectorTextLength) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QTextLength_count_t(this_ptr: *const ::vector::VectorTextLength, t: *const ::text_length::TextLength) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QTextLength_data(this_ptr: *mut ::vector::VectorTextLength) -> *mut ::text_length::TextLength;
  pub fn qt_gui_c_QVector_QTextLength_data_const(this_ptr: *const ::vector::VectorTextLength) -> *const ::text_length::TextLength;
  pub fn qt_gui_c_QVector_QTextLength_destructor(this_ptr: *mut ::vector::VectorTextLength);
  pub fn qt_gui_c_QVector_QTextLength_empty(this_ptr: *const ::vector::VectorTextLength) -> bool;
  pub fn qt_gui_c_QVector_QTextLength_endsWith(this_ptr: *const ::vector::VectorTextLength, t: *const ::text_length::TextLength) -> bool;
  pub fn qt_gui_c_QVector_QTextLength_fill_t(this_ptr: *mut ::vector::VectorTextLength, t: *const ::text_length::TextLength) -> *mut ::vector::VectorTextLength;
  pub fn qt_gui_c_QVector_QTextLength_fill_t_size(this_ptr: *mut ::vector::VectorTextLength, t: *const ::text_length::TextLength, size: ::libc::c_int) -> *mut ::vector::VectorTextLength;
  pub fn qt_gui_c_QVector_QTextLength_first(this_ptr: *mut ::vector::VectorTextLength) -> *mut ::text_length::TextLength;
  pub fn qt_gui_c_QVector_QTextLength_first_const(this_ptr: *const ::vector::VectorTextLength) -> *const ::text_length::TextLength;
  pub fn qt_gui_c_QVector_QTextLength_front(this_ptr: *mut ::vector::VectorTextLength) -> *mut ::text_length::TextLength;
  pub fn qt_gui_c_QVector_QTextLength_front_const(this_ptr: *const ::vector::VectorTextLength) -> *const ::text_length::TextLength;
  pub fn qt_gui_c_QVector_QTextLength_indexOf_t(this_ptr: *const ::vector::VectorTextLength, t: *const ::text_length::TextLength) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QTextLength_indexOf_t_from(this_ptr: *const ::vector::VectorTextLength, t: *const ::text_length::TextLength, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QTextLength_insert_i_n_t(this_ptr: *mut ::vector::VectorTextLength, i: ::libc::c_int, n: ::libc::c_int, t: *const ::text_length::TextLength);
  pub fn qt_gui_c_QVector_QTextLength_insert_i_t(this_ptr: *mut ::vector::VectorTextLength, i: ::libc::c_int, t: *const ::text_length::TextLength);
  pub fn qt_gui_c_QVector_QTextLength_isEmpty(this_ptr: *const ::vector::VectorTextLength) -> bool;
  pub fn qt_gui_c_QVector_QTextLength_last(this_ptr: *mut ::vector::VectorTextLength) -> *mut ::text_length::TextLength;
  pub fn qt_gui_c_QVector_QTextLength_lastIndexOf_t(this_ptr: *const ::vector::VectorTextLength, t: *const ::text_length::TextLength) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QTextLength_lastIndexOf_t_from(this_ptr: *const ::vector::VectorTextLength, t: *const ::text_length::TextLength, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QTextLength_last_const(this_ptr: *const ::vector::VectorTextLength) -> *const ::text_length::TextLength;
  pub fn qt_gui_c_QVector_QTextLength_length(this_ptr: *const ::vector::VectorTextLength) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QTextLength_mid_to_output_pos(this_ptr: *const ::vector::VectorTextLength, pos: ::libc::c_int, output: *mut ::vector::VectorTextLength);
  pub fn qt_gui_c_QVector_QTextLength_mid_to_output_pos_len(this_ptr: *const ::vector::VectorTextLength, pos: ::libc::c_int, len: ::libc::c_int, output: *mut ::vector::VectorTextLength);
  pub fn qt_gui_c_QVector_QTextLength_move(this_ptr: *mut ::vector::VectorTextLength, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QVector_QTextLength_operator_add_assign_l(this_ptr: *mut ::vector::VectorTextLength, l: *const ::vector::VectorTextLength) -> *mut ::vector::VectorTextLength;
  pub fn qt_gui_c_QVector_QTextLength_operator_add_assign_t(this_ptr: *mut ::vector::VectorTextLength, t: *const ::text_length::TextLength) -> *mut ::vector::VectorTextLength;
  pub fn qt_gui_c_QVector_QTextLength_operator_add_to_output(this_ptr: *const ::vector::VectorTextLength, l: *const ::vector::VectorTextLength, output: *mut ::vector::VectorTextLength);
  pub fn qt_gui_c_QVector_QTextLength_operator_assign(this_ptr: *mut ::vector::VectorTextLength, v: *const ::vector::VectorTextLength) -> *mut ::vector::VectorTextLength;
  pub fn qt_gui_c_QVector_QTextLength_operator_eq(this_ptr: *const ::vector::VectorTextLength, v: *const ::vector::VectorTextLength) -> bool;
  pub fn qt_gui_c_QVector_QTextLength_operator_index(this_ptr: *mut ::vector::VectorTextLength, i: ::libc::c_int) -> *mut ::text_length::TextLength;
  pub fn qt_gui_c_QVector_QTextLength_operator_index_const(this_ptr: *const ::vector::VectorTextLength, i: ::libc::c_int) -> *const ::text_length::TextLength;
  pub fn qt_gui_c_QVector_QTextLength_operator_neq(this_ptr: *const ::vector::VectorTextLength, v: *const ::vector::VectorTextLength) -> bool;
  pub fn qt_gui_c_QVector_QTextLength_operator_shl_l(this_ptr: *mut ::vector::VectorTextLength, l: *const ::vector::VectorTextLength) -> *mut ::vector::VectorTextLength;
  pub fn qt_gui_c_QVector_QTextLength_operator_shl_t(this_ptr: *mut ::vector::VectorTextLength, t: *const ::text_length::TextLength) -> *mut ::vector::VectorTextLength;
  pub fn qt_gui_c_QVector_QTextLength_pop_back(this_ptr: *mut ::vector::VectorTextLength);
  pub fn qt_gui_c_QVector_QTextLength_pop_front(this_ptr: *mut ::vector::VectorTextLength);
  pub fn qt_gui_c_QVector_QTextLength_prepend(this_ptr: *mut ::vector::VectorTextLength, t: *const ::text_length::TextLength);
  pub fn qt_gui_c_QVector_QTextLength_push_back(this_ptr: *mut ::vector::VectorTextLength, t: *const ::text_length::TextLength);
  pub fn qt_gui_c_QVector_QTextLength_push_front(this_ptr: *mut ::vector::VectorTextLength, t: *const ::text_length::TextLength);
  pub fn qt_gui_c_QVector_QTextLength_removeAll(this_ptr: *mut ::vector::VectorTextLength, t: *const ::text_length::TextLength) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QTextLength_removeAt(this_ptr: *mut ::vector::VectorTextLength, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_QTextLength_removeFirst(this_ptr: *mut ::vector::VectorTextLength);
  pub fn qt_gui_c_QVector_QTextLength_removeLast(this_ptr: *mut ::vector::VectorTextLength);
  pub fn qt_gui_c_QVector_QTextLength_removeOne(this_ptr: *mut ::vector::VectorTextLength, t: *const ::text_length::TextLength) -> bool;
  pub fn qt_gui_c_QVector_QTextLength_remove_i(this_ptr: *mut ::vector::VectorTextLength, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_QTextLength_remove_i_n(this_ptr: *mut ::vector::VectorTextLength, i: ::libc::c_int, n: ::libc::c_int);
  pub fn qt_gui_c_QVector_QTextLength_replace(this_ptr: *mut ::vector::VectorTextLength, i: ::libc::c_int, t: *const ::text_length::TextLength);
  pub fn qt_gui_c_QVector_QTextLength_reserve(this_ptr: *mut ::vector::VectorTextLength, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_QTextLength_resize(this_ptr: *mut ::vector::VectorTextLength, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_QTextLength_size(this_ptr: *const ::vector::VectorTextLength) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_QTextLength_squeeze(this_ptr: *mut ::vector::VectorTextLength);
  pub fn qt_gui_c_QVector_QTextLength_startsWith(this_ptr: *const ::vector::VectorTextLength, t: *const ::text_length::TextLength) -> bool;
  pub fn qt_gui_c_QVector_QTextLength_swap(this_ptr: *mut ::vector::VectorTextLength, other: *mut ::vector::VectorTextLength);
  pub fn qt_gui_c_QVector_QTextLength_takeAt_to_output(this_ptr: *mut ::vector::VectorTextLength, i: ::libc::c_int, output: *mut ::text_length::TextLength);
  pub fn qt_gui_c_QVector_QTextLength_takeFirst_to_output(this_ptr: *mut ::vector::VectorTextLength, output: *mut ::text_length::TextLength);
  pub fn qt_gui_c_QVector_QTextLength_takeLast_to_output(this_ptr: *mut ::vector::VectorTextLength, output: *mut ::text_length::TextLength);
  pub fn qt_gui_c_QVector_QTextLength_value_to_output_i(this_ptr: *const ::vector::VectorTextLength, i: ::libc::c_int, output: *mut ::text_length::TextLength);
  pub fn qt_gui_c_QVector_QTextLength_value_to_output_i_defaultValue(this_ptr: *const ::vector::VectorTextLength, i: ::libc::c_int, defaultValue: *const ::text_length::TextLength, output: *mut ::text_length::TextLength);
  pub fn qt_gui_c_QVector_double_append_l(this_ptr: *mut ::vector::VectorCDouble, l: *const ::vector::VectorCDouble);
  pub fn qt_gui_c_QVector_double_append_t(this_ptr: *mut ::vector::VectorCDouble, t: *const ::libc::c_double);
  pub fn qt_gui_c_QVector_double_at(this_ptr: *const ::vector::VectorCDouble, i: ::libc::c_int) -> *const ::libc::c_double;
  pub fn qt_gui_c_QVector_double_back(this_ptr: *mut ::vector::VectorCDouble) -> *mut ::libc::c_double;
  pub fn qt_gui_c_QVector_double_back_const(this_ptr: *const ::vector::VectorCDouble) -> *const ::libc::c_double;
  pub fn qt_gui_c_QVector_double_capacity(this_ptr: *const ::vector::VectorCDouble) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_double_clear(this_ptr: *mut ::vector::VectorCDouble);
  pub fn qt_gui_c_QVector_double_constData(this_ptr: *const ::vector::VectorCDouble) -> *const ::libc::c_double;
  pub fn qt_gui_c_QVector_double_constFirst(this_ptr: *const ::vector::VectorCDouble) -> *const ::libc::c_double;
  pub fn qt_gui_c_QVector_double_constLast(this_ptr: *const ::vector::VectorCDouble) -> *const ::libc::c_double;
  pub fn qt_gui_c_QVector_double_constructor_no_args(output: *mut ::vector::VectorCDouble);
  pub fn qt_gui_c_QVector_double_constructor_size(size: ::libc::c_int, output: *mut ::vector::VectorCDouble);
  pub fn qt_gui_c_QVector_double_constructor_size_t(size: ::libc::c_int, t: *const ::libc::c_double, output: *mut ::vector::VectorCDouble);
  pub fn qt_gui_c_QVector_double_constructor_v(v: *const ::vector::VectorCDouble, output: *mut ::vector::VectorCDouble);
  pub fn qt_gui_c_QVector_double_contains(this_ptr: *const ::vector::VectorCDouble, t: *const ::libc::c_double) -> bool;
  pub fn qt_gui_c_QVector_double_count_no_args(this_ptr: *const ::vector::VectorCDouble) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_double_count_t(this_ptr: *const ::vector::VectorCDouble, t: *const ::libc::c_double) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_double_data(this_ptr: *mut ::vector::VectorCDouble) -> *mut ::libc::c_double;
  pub fn qt_gui_c_QVector_double_data_const(this_ptr: *const ::vector::VectorCDouble) -> *const ::libc::c_double;
  pub fn qt_gui_c_QVector_double_destructor(this_ptr: *mut ::vector::VectorCDouble);
  pub fn qt_gui_c_QVector_double_empty(this_ptr: *const ::vector::VectorCDouble) -> bool;
  pub fn qt_gui_c_QVector_double_endsWith(this_ptr: *const ::vector::VectorCDouble, t: *const ::libc::c_double) -> bool;
  pub fn qt_gui_c_QVector_double_fill_t(this_ptr: *mut ::vector::VectorCDouble, t: *const ::libc::c_double) -> *mut ::vector::VectorCDouble;
  pub fn qt_gui_c_QVector_double_fill_t_size(this_ptr: *mut ::vector::VectorCDouble, t: *const ::libc::c_double, size: ::libc::c_int) -> *mut ::vector::VectorCDouble;
  pub fn qt_gui_c_QVector_double_first(this_ptr: *mut ::vector::VectorCDouble) -> *mut ::libc::c_double;
  pub fn qt_gui_c_QVector_double_first_const(this_ptr: *const ::vector::VectorCDouble) -> *const ::libc::c_double;
  pub fn qt_gui_c_QVector_double_fromList_to_output(list: *const ::list::ListCDouble, output: *mut ::vector::VectorCDouble);
  pub fn qt_gui_c_QVector_double_front(this_ptr: *mut ::vector::VectorCDouble) -> *mut ::libc::c_double;
  pub fn qt_gui_c_QVector_double_front_const(this_ptr: *const ::vector::VectorCDouble) -> *const ::libc::c_double;
  pub fn qt_gui_c_QVector_double_indexOf_t(this_ptr: *const ::vector::VectorCDouble, t: *const ::libc::c_double) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_double_indexOf_t_from(this_ptr: *const ::vector::VectorCDouble, t: *const ::libc::c_double, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_double_insert_i_n_t(this_ptr: *mut ::vector::VectorCDouble, i: ::libc::c_int, n: ::libc::c_int, t: *const ::libc::c_double);
  pub fn qt_gui_c_QVector_double_insert_i_t(this_ptr: *mut ::vector::VectorCDouble, i: ::libc::c_int, t: *const ::libc::c_double);
  pub fn qt_gui_c_QVector_double_isEmpty(this_ptr: *const ::vector::VectorCDouble) -> bool;
  pub fn qt_gui_c_QVector_double_last(this_ptr: *mut ::vector::VectorCDouble) -> *mut ::libc::c_double;
  pub fn qt_gui_c_QVector_double_lastIndexOf_t(this_ptr: *const ::vector::VectorCDouble, t: *const ::libc::c_double) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_double_lastIndexOf_t_from(this_ptr: *const ::vector::VectorCDouble, t: *const ::libc::c_double, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_double_last_const(this_ptr: *const ::vector::VectorCDouble) -> *const ::libc::c_double;
  pub fn qt_gui_c_QVector_double_length(this_ptr: *const ::vector::VectorCDouble) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_double_mid_to_output_pos(this_ptr: *const ::vector::VectorCDouble, pos: ::libc::c_int, output: *mut ::vector::VectorCDouble);
  pub fn qt_gui_c_QVector_double_mid_to_output_pos_len(this_ptr: *const ::vector::VectorCDouble, pos: ::libc::c_int, len: ::libc::c_int, output: *mut ::vector::VectorCDouble);
  pub fn qt_gui_c_QVector_double_move(this_ptr: *mut ::vector::VectorCDouble, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QVector_double_operator_add_assign_l(this_ptr: *mut ::vector::VectorCDouble, l: *const ::vector::VectorCDouble) -> *mut ::vector::VectorCDouble;
  pub fn qt_gui_c_QVector_double_operator_add_assign_t(this_ptr: *mut ::vector::VectorCDouble, t: *const ::libc::c_double) -> *mut ::vector::VectorCDouble;
  pub fn qt_gui_c_QVector_double_operator_add_to_output(this_ptr: *const ::vector::VectorCDouble, l: *const ::vector::VectorCDouble, output: *mut ::vector::VectorCDouble);
  pub fn qt_gui_c_QVector_double_operator_assign(this_ptr: *mut ::vector::VectorCDouble, v: *const ::vector::VectorCDouble) -> *mut ::vector::VectorCDouble;
  pub fn qt_gui_c_QVector_double_operator_eq(this_ptr: *const ::vector::VectorCDouble, v: *const ::vector::VectorCDouble) -> bool;
  pub fn qt_gui_c_QVector_double_operator_index(this_ptr: *mut ::vector::VectorCDouble, i: ::libc::c_int) -> *mut ::libc::c_double;
  pub fn qt_gui_c_QVector_double_operator_index_const(this_ptr: *const ::vector::VectorCDouble, i: ::libc::c_int) -> *const ::libc::c_double;
  pub fn qt_gui_c_QVector_double_operator_neq(this_ptr: *const ::vector::VectorCDouble, v: *const ::vector::VectorCDouble) -> bool;
  pub fn qt_gui_c_QVector_double_operator_shl_l(this_ptr: *mut ::vector::VectorCDouble, l: *const ::vector::VectorCDouble) -> *mut ::vector::VectorCDouble;
  pub fn qt_gui_c_QVector_double_operator_shl_t(this_ptr: *mut ::vector::VectorCDouble, t: *const ::libc::c_double) -> *mut ::vector::VectorCDouble;
  pub fn qt_gui_c_QVector_double_pop_back(this_ptr: *mut ::vector::VectorCDouble);
  pub fn qt_gui_c_QVector_double_pop_front(this_ptr: *mut ::vector::VectorCDouble);
  pub fn qt_gui_c_QVector_double_prepend(this_ptr: *mut ::vector::VectorCDouble, t: *const ::libc::c_double);
  pub fn qt_gui_c_QVector_double_push_back(this_ptr: *mut ::vector::VectorCDouble, t: *const ::libc::c_double);
  pub fn qt_gui_c_QVector_double_push_front(this_ptr: *mut ::vector::VectorCDouble, t: *const ::libc::c_double);
  pub fn qt_gui_c_QVector_double_removeAll(this_ptr: *mut ::vector::VectorCDouble, t: *const ::libc::c_double) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_double_removeAt(this_ptr: *mut ::vector::VectorCDouble, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_double_removeFirst(this_ptr: *mut ::vector::VectorCDouble);
  pub fn qt_gui_c_QVector_double_removeLast(this_ptr: *mut ::vector::VectorCDouble);
  pub fn qt_gui_c_QVector_double_removeOne(this_ptr: *mut ::vector::VectorCDouble, t: *const ::libc::c_double) -> bool;
  pub fn qt_gui_c_QVector_double_remove_i(this_ptr: *mut ::vector::VectorCDouble, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_double_remove_i_n(this_ptr: *mut ::vector::VectorCDouble, i: ::libc::c_int, n: ::libc::c_int);
  pub fn qt_gui_c_QVector_double_replace(this_ptr: *mut ::vector::VectorCDouble, i: ::libc::c_int, t: *const ::libc::c_double);
  pub fn qt_gui_c_QVector_double_reserve(this_ptr: *mut ::vector::VectorCDouble, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_double_resize(this_ptr: *mut ::vector::VectorCDouble, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_double_size(this_ptr: *const ::vector::VectorCDouble) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_double_squeeze(this_ptr: *mut ::vector::VectorCDouble);
  pub fn qt_gui_c_QVector_double_startsWith(this_ptr: *const ::vector::VectorCDouble, t: *const ::libc::c_double) -> bool;
  pub fn qt_gui_c_QVector_double_swap(this_ptr: *mut ::vector::VectorCDouble, other: *mut ::vector::VectorCDouble);
  pub fn qt_gui_c_QVector_double_takeAt(this_ptr: *mut ::vector::VectorCDouble, i: ::libc::c_int) -> ::libc::c_double;
  pub fn qt_gui_c_QVector_double_takeFirst(this_ptr: *mut ::vector::VectorCDouble) -> ::libc::c_double;
  pub fn qt_gui_c_QVector_double_takeLast(this_ptr: *mut ::vector::VectorCDouble) -> ::libc::c_double;
  pub fn qt_gui_c_QVector_double_toList_to_output(this_ptr: *const ::vector::VectorCDouble, output: *mut ::list::ListCDouble);
  pub fn qt_gui_c_QVector_double_value_i(this_ptr: *const ::vector::VectorCDouble, i: ::libc::c_int) -> ::libc::c_double;
  pub fn qt_gui_c_QVector_double_value_i_defaultValue(this_ptr: *const ::vector::VectorCDouble, i: ::libc::c_int, defaultValue: *const ::libc::c_double) -> ::libc::c_double;
  pub fn qt_gui_c_QVector_float_append_l(this_ptr: *mut ::vector::VectorCFloat, l: *const ::vector::VectorCFloat);
  pub fn qt_gui_c_QVector_float_append_t(this_ptr: *mut ::vector::VectorCFloat, t: *const ::libc::c_float);
  pub fn qt_gui_c_QVector_float_at(this_ptr: *const ::vector::VectorCFloat, i: ::libc::c_int) -> *const ::libc::c_float;
  pub fn qt_gui_c_QVector_float_back(this_ptr: *mut ::vector::VectorCFloat) -> *mut ::libc::c_float;
  pub fn qt_gui_c_QVector_float_back_const(this_ptr: *const ::vector::VectorCFloat) -> *const ::libc::c_float;
  pub fn qt_gui_c_QVector_float_capacity(this_ptr: *const ::vector::VectorCFloat) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_float_clear(this_ptr: *mut ::vector::VectorCFloat);
  pub fn qt_gui_c_QVector_float_constData(this_ptr: *const ::vector::VectorCFloat) -> *const ::libc::c_float;
  pub fn qt_gui_c_QVector_float_constFirst(this_ptr: *const ::vector::VectorCFloat) -> *const ::libc::c_float;
  pub fn qt_gui_c_QVector_float_constLast(this_ptr: *const ::vector::VectorCFloat) -> *const ::libc::c_float;
  pub fn qt_gui_c_QVector_float_constructor_no_args(output: *mut ::vector::VectorCFloat);
  pub fn qt_gui_c_QVector_float_constructor_size(size: ::libc::c_int, output: *mut ::vector::VectorCFloat);
  pub fn qt_gui_c_QVector_float_constructor_size_t(size: ::libc::c_int, t: *const ::libc::c_float, output: *mut ::vector::VectorCFloat);
  pub fn qt_gui_c_QVector_float_constructor_v(v: *const ::vector::VectorCFloat, output: *mut ::vector::VectorCFloat);
  pub fn qt_gui_c_QVector_float_contains(this_ptr: *const ::vector::VectorCFloat, t: *const ::libc::c_float) -> bool;
  pub fn qt_gui_c_QVector_float_count_no_args(this_ptr: *const ::vector::VectorCFloat) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_float_count_t(this_ptr: *const ::vector::VectorCFloat, t: *const ::libc::c_float) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_float_data(this_ptr: *mut ::vector::VectorCFloat) -> *mut ::libc::c_float;
  pub fn qt_gui_c_QVector_float_data_const(this_ptr: *const ::vector::VectorCFloat) -> *const ::libc::c_float;
  pub fn qt_gui_c_QVector_float_destructor(this_ptr: *mut ::vector::VectorCFloat);
  pub fn qt_gui_c_QVector_float_empty(this_ptr: *const ::vector::VectorCFloat) -> bool;
  pub fn qt_gui_c_QVector_float_endsWith(this_ptr: *const ::vector::VectorCFloat, t: *const ::libc::c_float) -> bool;
  pub fn qt_gui_c_QVector_float_fill_t(this_ptr: *mut ::vector::VectorCFloat, t: *const ::libc::c_float) -> *mut ::vector::VectorCFloat;
  pub fn qt_gui_c_QVector_float_fill_t_size(this_ptr: *mut ::vector::VectorCFloat, t: *const ::libc::c_float, size: ::libc::c_int) -> *mut ::vector::VectorCFloat;
  pub fn qt_gui_c_QVector_float_first(this_ptr: *mut ::vector::VectorCFloat) -> *mut ::libc::c_float;
  pub fn qt_gui_c_QVector_float_first_const(this_ptr: *const ::vector::VectorCFloat) -> *const ::libc::c_float;
  pub fn qt_gui_c_QVector_float_front(this_ptr: *mut ::vector::VectorCFloat) -> *mut ::libc::c_float;
  pub fn qt_gui_c_QVector_float_front_const(this_ptr: *const ::vector::VectorCFloat) -> *const ::libc::c_float;
  pub fn qt_gui_c_QVector_float_indexOf_t(this_ptr: *const ::vector::VectorCFloat, t: *const ::libc::c_float) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_float_indexOf_t_from(this_ptr: *const ::vector::VectorCFloat, t: *const ::libc::c_float, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_float_insert_i_n_t(this_ptr: *mut ::vector::VectorCFloat, i: ::libc::c_int, n: ::libc::c_int, t: *const ::libc::c_float);
  pub fn qt_gui_c_QVector_float_insert_i_t(this_ptr: *mut ::vector::VectorCFloat, i: ::libc::c_int, t: *const ::libc::c_float);
  pub fn qt_gui_c_QVector_float_isEmpty(this_ptr: *const ::vector::VectorCFloat) -> bool;
  pub fn qt_gui_c_QVector_float_last(this_ptr: *mut ::vector::VectorCFloat) -> *mut ::libc::c_float;
  pub fn qt_gui_c_QVector_float_lastIndexOf_t(this_ptr: *const ::vector::VectorCFloat, t: *const ::libc::c_float) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_float_lastIndexOf_t_from(this_ptr: *const ::vector::VectorCFloat, t: *const ::libc::c_float, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_float_last_const(this_ptr: *const ::vector::VectorCFloat) -> *const ::libc::c_float;
  pub fn qt_gui_c_QVector_float_length(this_ptr: *const ::vector::VectorCFloat) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_float_mid_to_output_pos(this_ptr: *const ::vector::VectorCFloat, pos: ::libc::c_int, output: *mut ::vector::VectorCFloat);
  pub fn qt_gui_c_QVector_float_mid_to_output_pos_len(this_ptr: *const ::vector::VectorCFloat, pos: ::libc::c_int, len: ::libc::c_int, output: *mut ::vector::VectorCFloat);
  pub fn qt_gui_c_QVector_float_move(this_ptr: *mut ::vector::VectorCFloat, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QVector_float_operator_add_assign_l(this_ptr: *mut ::vector::VectorCFloat, l: *const ::vector::VectorCFloat) -> *mut ::vector::VectorCFloat;
  pub fn qt_gui_c_QVector_float_operator_add_assign_t(this_ptr: *mut ::vector::VectorCFloat, t: *const ::libc::c_float) -> *mut ::vector::VectorCFloat;
  pub fn qt_gui_c_QVector_float_operator_add_to_output(this_ptr: *const ::vector::VectorCFloat, l: *const ::vector::VectorCFloat, output: *mut ::vector::VectorCFloat);
  pub fn qt_gui_c_QVector_float_operator_assign(this_ptr: *mut ::vector::VectorCFloat, v: *const ::vector::VectorCFloat) -> *mut ::vector::VectorCFloat;
  pub fn qt_gui_c_QVector_float_operator_eq(this_ptr: *const ::vector::VectorCFloat, v: *const ::vector::VectorCFloat) -> bool;
  pub fn qt_gui_c_QVector_float_operator_index(this_ptr: *mut ::vector::VectorCFloat, i: ::libc::c_int) -> *mut ::libc::c_float;
  pub fn qt_gui_c_QVector_float_operator_index_const(this_ptr: *const ::vector::VectorCFloat, i: ::libc::c_int) -> *const ::libc::c_float;
  pub fn qt_gui_c_QVector_float_operator_neq(this_ptr: *const ::vector::VectorCFloat, v: *const ::vector::VectorCFloat) -> bool;
  pub fn qt_gui_c_QVector_float_operator_shl_l(this_ptr: *mut ::vector::VectorCFloat, l: *const ::vector::VectorCFloat) -> *mut ::vector::VectorCFloat;
  pub fn qt_gui_c_QVector_float_operator_shl_t(this_ptr: *mut ::vector::VectorCFloat, t: *const ::libc::c_float) -> *mut ::vector::VectorCFloat;
  pub fn qt_gui_c_QVector_float_pop_back(this_ptr: *mut ::vector::VectorCFloat);
  pub fn qt_gui_c_QVector_float_pop_front(this_ptr: *mut ::vector::VectorCFloat);
  pub fn qt_gui_c_QVector_float_prepend(this_ptr: *mut ::vector::VectorCFloat, t: *const ::libc::c_float);
  pub fn qt_gui_c_QVector_float_push_back(this_ptr: *mut ::vector::VectorCFloat, t: *const ::libc::c_float);
  pub fn qt_gui_c_QVector_float_push_front(this_ptr: *mut ::vector::VectorCFloat, t: *const ::libc::c_float);
  pub fn qt_gui_c_QVector_float_removeAll(this_ptr: *mut ::vector::VectorCFloat, t: *const ::libc::c_float) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_float_removeAt(this_ptr: *mut ::vector::VectorCFloat, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_float_removeFirst(this_ptr: *mut ::vector::VectorCFloat);
  pub fn qt_gui_c_QVector_float_removeLast(this_ptr: *mut ::vector::VectorCFloat);
  pub fn qt_gui_c_QVector_float_removeOne(this_ptr: *mut ::vector::VectorCFloat, t: *const ::libc::c_float) -> bool;
  pub fn qt_gui_c_QVector_float_remove_i(this_ptr: *mut ::vector::VectorCFloat, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_float_remove_i_n(this_ptr: *mut ::vector::VectorCFloat, i: ::libc::c_int, n: ::libc::c_int);
  pub fn qt_gui_c_QVector_float_replace(this_ptr: *mut ::vector::VectorCFloat, i: ::libc::c_int, t: *const ::libc::c_float);
  pub fn qt_gui_c_QVector_float_reserve(this_ptr: *mut ::vector::VectorCFloat, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_float_resize(this_ptr: *mut ::vector::VectorCFloat, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_float_size(this_ptr: *const ::vector::VectorCFloat) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_float_squeeze(this_ptr: *mut ::vector::VectorCFloat);
  pub fn qt_gui_c_QVector_float_startsWith(this_ptr: *const ::vector::VectorCFloat, t: *const ::libc::c_float) -> bool;
  pub fn qt_gui_c_QVector_float_swap(this_ptr: *mut ::vector::VectorCFloat, other: *mut ::vector::VectorCFloat);
  pub fn qt_gui_c_QVector_float_takeAt(this_ptr: *mut ::vector::VectorCFloat, i: ::libc::c_int) -> ::libc::c_float;
  pub fn qt_gui_c_QVector_float_takeFirst(this_ptr: *mut ::vector::VectorCFloat) -> ::libc::c_float;
  pub fn qt_gui_c_QVector_float_takeLast(this_ptr: *mut ::vector::VectorCFloat) -> ::libc::c_float;
  pub fn qt_gui_c_QVector_float_value_i(this_ptr: *const ::vector::VectorCFloat, i: ::libc::c_int) -> ::libc::c_float;
  pub fn qt_gui_c_QVector_float_value_i_defaultValue(this_ptr: *const ::vector::VectorCFloat, i: ::libc::c_int, defaultValue: *const ::libc::c_float) -> ::libc::c_float;
  pub fn qt_gui_c_QVector_quint32_append_l(this_ptr: *mut ::vector::VectorU32, l: *const ::vector::VectorU32);
  pub fn qt_gui_c_QVector_quint32_append_t(this_ptr: *mut ::vector::VectorU32, t: *const u32);
  pub fn qt_gui_c_QVector_quint32_at(this_ptr: *const ::vector::VectorU32, i: ::libc::c_int) -> *const u32;
  pub fn qt_gui_c_QVector_quint32_back(this_ptr: *mut ::vector::VectorU32) -> *mut u32;
  pub fn qt_gui_c_QVector_quint32_back_const(this_ptr: *const ::vector::VectorU32) -> *const u32;
  pub fn qt_gui_c_QVector_quint32_capacity(this_ptr: *const ::vector::VectorU32) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_quint32_clear(this_ptr: *mut ::vector::VectorU32);
  pub fn qt_gui_c_QVector_quint32_constData(this_ptr: *const ::vector::VectorU32) -> *const u32;
  pub fn qt_gui_c_QVector_quint32_constFirst(this_ptr: *const ::vector::VectorU32) -> *const u32;
  pub fn qt_gui_c_QVector_quint32_constLast(this_ptr: *const ::vector::VectorU32) -> *const u32;
  pub fn qt_gui_c_QVector_quint32_constructor_no_args(output: *mut ::vector::VectorU32);
  pub fn qt_gui_c_QVector_quint32_constructor_size(size: ::libc::c_int, output: *mut ::vector::VectorU32);
  pub fn qt_gui_c_QVector_quint32_constructor_size_t(size: ::libc::c_int, t: *const u32, output: *mut ::vector::VectorU32);
  pub fn qt_gui_c_QVector_quint32_constructor_v(v: *const ::vector::VectorU32, output: *mut ::vector::VectorU32);
  pub fn qt_gui_c_QVector_quint32_contains(this_ptr: *const ::vector::VectorU32, t: *const u32) -> bool;
  pub fn qt_gui_c_QVector_quint32_count_no_args(this_ptr: *const ::vector::VectorU32) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_quint32_count_t(this_ptr: *const ::vector::VectorU32, t: *const u32) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_quint32_data(this_ptr: *mut ::vector::VectorU32) -> *mut u32;
  pub fn qt_gui_c_QVector_quint32_data_const(this_ptr: *const ::vector::VectorU32) -> *const u32;
  pub fn qt_gui_c_QVector_quint32_destructor(this_ptr: *mut ::vector::VectorU32);
  pub fn qt_gui_c_QVector_quint32_empty(this_ptr: *const ::vector::VectorU32) -> bool;
  pub fn qt_gui_c_QVector_quint32_endsWith(this_ptr: *const ::vector::VectorU32, t: *const u32) -> bool;
  pub fn qt_gui_c_QVector_quint32_fill_t(this_ptr: *mut ::vector::VectorU32, t: *const u32) -> *mut ::vector::VectorU32;
  pub fn qt_gui_c_QVector_quint32_fill_t_size(this_ptr: *mut ::vector::VectorU32, t: *const u32, size: ::libc::c_int) -> *mut ::vector::VectorU32;
  pub fn qt_gui_c_QVector_quint32_first(this_ptr: *mut ::vector::VectorU32) -> *mut u32;
  pub fn qt_gui_c_QVector_quint32_first_const(this_ptr: *const ::vector::VectorU32) -> *const u32;
  pub fn qt_gui_c_QVector_quint32_front(this_ptr: *mut ::vector::VectorU32) -> *mut u32;
  pub fn qt_gui_c_QVector_quint32_front_const(this_ptr: *const ::vector::VectorU32) -> *const u32;
  pub fn qt_gui_c_QVector_quint32_indexOf_t(this_ptr: *const ::vector::VectorU32, t: *const u32) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_quint32_indexOf_t_from(this_ptr: *const ::vector::VectorU32, t: *const u32, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_quint32_insert_i_n_t(this_ptr: *mut ::vector::VectorU32, i: ::libc::c_int, n: ::libc::c_int, t: *const u32);
  pub fn qt_gui_c_QVector_quint32_insert_i_t(this_ptr: *mut ::vector::VectorU32, i: ::libc::c_int, t: *const u32);
  pub fn qt_gui_c_QVector_quint32_isEmpty(this_ptr: *const ::vector::VectorU32) -> bool;
  pub fn qt_gui_c_QVector_quint32_last(this_ptr: *mut ::vector::VectorU32) -> *mut u32;
  pub fn qt_gui_c_QVector_quint32_lastIndexOf_t(this_ptr: *const ::vector::VectorU32, t: *const u32) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_quint32_lastIndexOf_t_from(this_ptr: *const ::vector::VectorU32, t: *const u32, from: ::libc::c_int) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_quint32_last_const(this_ptr: *const ::vector::VectorU32) -> *const u32;
  pub fn qt_gui_c_QVector_quint32_length(this_ptr: *const ::vector::VectorU32) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_quint32_mid_to_output_pos(this_ptr: *const ::vector::VectorU32, pos: ::libc::c_int, output: *mut ::vector::VectorU32);
  pub fn qt_gui_c_QVector_quint32_mid_to_output_pos_len(this_ptr: *const ::vector::VectorU32, pos: ::libc::c_int, len: ::libc::c_int, output: *mut ::vector::VectorU32);
  pub fn qt_gui_c_QVector_quint32_move(this_ptr: *mut ::vector::VectorU32, from: ::libc::c_int, to: ::libc::c_int);
  pub fn qt_gui_c_QVector_quint32_operator_add_assign_l(this_ptr: *mut ::vector::VectorU32, l: *const ::vector::VectorU32) -> *mut ::vector::VectorU32;
  pub fn qt_gui_c_QVector_quint32_operator_add_assign_t(this_ptr: *mut ::vector::VectorU32, t: *const u32) -> *mut ::vector::VectorU32;
  pub fn qt_gui_c_QVector_quint32_operator_add_to_output(this_ptr: *const ::vector::VectorU32, l: *const ::vector::VectorU32, output: *mut ::vector::VectorU32);
  pub fn qt_gui_c_QVector_quint32_operator_assign(this_ptr: *mut ::vector::VectorU32, v: *const ::vector::VectorU32) -> *mut ::vector::VectorU32;
  pub fn qt_gui_c_QVector_quint32_operator_eq(this_ptr: *const ::vector::VectorU32, v: *const ::vector::VectorU32) -> bool;
  pub fn qt_gui_c_QVector_quint32_operator_index(this_ptr: *mut ::vector::VectorU32, i: ::libc::c_int) -> *mut u32;
  pub fn qt_gui_c_QVector_quint32_operator_index_const(this_ptr: *const ::vector::VectorU32, i: ::libc::c_int) -> *const u32;
  pub fn qt_gui_c_QVector_quint32_operator_neq(this_ptr: *const ::vector::VectorU32, v: *const ::vector::VectorU32) -> bool;
  pub fn qt_gui_c_QVector_quint32_operator_shl_l(this_ptr: *mut ::vector::VectorU32, l: *const ::vector::VectorU32) -> *mut ::vector::VectorU32;
  pub fn qt_gui_c_QVector_quint32_operator_shl_t(this_ptr: *mut ::vector::VectorU32, t: *const u32) -> *mut ::vector::VectorU32;
  pub fn qt_gui_c_QVector_quint32_pop_back(this_ptr: *mut ::vector::VectorU32);
  pub fn qt_gui_c_QVector_quint32_pop_front(this_ptr: *mut ::vector::VectorU32);
  pub fn qt_gui_c_QVector_quint32_prepend(this_ptr: *mut ::vector::VectorU32, t: *const u32);
  pub fn qt_gui_c_QVector_quint32_push_back(this_ptr: *mut ::vector::VectorU32, t: *const u32);
  pub fn qt_gui_c_QVector_quint32_push_front(this_ptr: *mut ::vector::VectorU32, t: *const u32);
  pub fn qt_gui_c_QVector_quint32_removeAll(this_ptr: *mut ::vector::VectorU32, t: *const u32) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_quint32_removeAt(this_ptr: *mut ::vector::VectorU32, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_quint32_removeFirst(this_ptr: *mut ::vector::VectorU32);
  pub fn qt_gui_c_QVector_quint32_removeLast(this_ptr: *mut ::vector::VectorU32);
  pub fn qt_gui_c_QVector_quint32_removeOne(this_ptr: *mut ::vector::VectorU32, t: *const u32) -> bool;
  pub fn qt_gui_c_QVector_quint32_remove_i(this_ptr: *mut ::vector::VectorU32, i: ::libc::c_int);
  pub fn qt_gui_c_QVector_quint32_remove_i_n(this_ptr: *mut ::vector::VectorU32, i: ::libc::c_int, n: ::libc::c_int);
  pub fn qt_gui_c_QVector_quint32_replace(this_ptr: *mut ::vector::VectorU32, i: ::libc::c_int, t: *const u32);
  pub fn qt_gui_c_QVector_quint32_reserve(this_ptr: *mut ::vector::VectorU32, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_quint32_resize(this_ptr: *mut ::vector::VectorU32, size: ::libc::c_int);
  pub fn qt_gui_c_QVector_quint32_size(this_ptr: *const ::vector::VectorU32) -> ::libc::c_int;
  pub fn qt_gui_c_QVector_quint32_squeeze(this_ptr: *mut ::vector::VectorU32);
  pub fn qt_gui_c_QVector_quint32_startsWith(this_ptr: *const ::vector::VectorU32, t: *const u32) -> bool;
  pub fn qt_gui_c_QVector_quint32_swap(this_ptr: *mut ::vector::VectorU32, other: *mut ::vector::VectorU32);
  pub fn qt_gui_c_QVector_quint32_takeAt(this_ptr: *mut ::vector::VectorU32, i: ::libc::c_int) -> u32;
  pub fn qt_gui_c_QVector_quint32_takeFirst(this_ptr: *mut ::vector::VectorU32) -> u32;
  pub fn qt_gui_c_QVector_quint32_takeLast(this_ptr: *mut ::vector::VectorU32) -> u32;
  pub fn qt_gui_c_QVector_quint32_value_i(this_ptr: *const ::vector::VectorU32, i: ::libc::c_int) -> u32;
  pub fn qt_gui_c_QVector_quint32_value_i_defaultValue(this_ptr: *const ::vector::VectorU32, i: ::libc::c_int, defaultValue: *const u32) -> u32;

  // Header: QVector2D
  pub fn qt_gui_c_QVector2D_G_operator_shl(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *const ::vector_2d::Vector2D) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QVector2D_G_operator_shl_to_output(dbg: *const ::qt_core::debug::Debug, vector: *const ::vector_2d::Vector2D, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QVector2D_G_operator_shr(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *mut ::vector_2d::Vector2D) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QVector2D_convert_to_QVariant_to_output(this_ptr: *const ::vector_2d::Vector2D, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QVector2D_delete(this_ptr: *mut ::vector_2d::Vector2D);
  pub fn qt_gui_c_QVector2D_distanceToLine(this_ptr: *const ::vector_2d::Vector2D, point: *const ::vector_2d::Vector2D, direction: *const ::vector_2d::Vector2D) -> ::libc::c_float;
  pub fn qt_gui_c_QVector2D_distanceToPoint(this_ptr: *const ::vector_2d::Vector2D, point: *const ::vector_2d::Vector2D) -> ::libc::c_float;
  pub fn qt_gui_c_QVector2D_dotProduct(v1: *const ::vector_2d::Vector2D, v2: *const ::vector_2d::Vector2D) -> ::libc::c_float;
  pub fn qt_gui_c_QVector2D_isNull(this_ptr: *const ::vector_2d::Vector2D) -> bool;
  pub fn qt_gui_c_QVector2D_length(this_ptr: *const ::vector_2d::Vector2D) -> ::libc::c_float;
  pub fn qt_gui_c_QVector2D_lengthSquared(this_ptr: *const ::vector_2d::Vector2D) -> ::libc::c_float;
  pub fn qt_gui_c_QVector2D_new_QPoint(point: *const ::qt_core::point::Point) -> *mut ::vector_2d::Vector2D;
  pub fn qt_gui_c_QVector2D_new_QPointF(point: *const ::qt_core::point_f::PointF) -> *mut ::vector_2d::Vector2D;
  pub fn qt_gui_c_QVector2D_new_QVector3D(vector: *const ::vector_3d::Vector3D) -> *mut ::vector_2d::Vector2D;
  pub fn qt_gui_c_QVector2D_new_QVector4D(vector: *const ::vector_4d::Vector4D) -> *mut ::vector_2d::Vector2D;
  pub fn qt_gui_c_QVector2D_new_float_float(xpos: ::libc::c_float, ypos: ::libc::c_float) -> *mut ::vector_2d::Vector2D;
  pub fn qt_gui_c_QVector2D_new_no_args() -> *mut ::vector_2d::Vector2D;
  pub fn qt_gui_c_QVector2D_normalize(this_ptr: *mut ::vector_2d::Vector2D);
  pub fn qt_gui_c_QVector2D_normalized_as_ptr(this_ptr: *const ::vector_2d::Vector2D) -> *mut ::vector_2d::Vector2D;
  pub fn qt_gui_c_QVector2D_operator_add_assign(this_ptr: *mut ::vector_2d::Vector2D, vector: *const ::vector_2d::Vector2D) -> *mut ::vector_2d::Vector2D;
  pub fn qt_gui_c_QVector2D_operator_div_assign_divisor(this_ptr: *mut ::vector_2d::Vector2D, divisor: ::libc::c_float) -> *mut ::vector_2d::Vector2D;
  pub fn qt_gui_c_QVector2D_operator_div_assign_vector(this_ptr: *mut ::vector_2d::Vector2D, vector: *const ::vector_2d::Vector2D) -> *mut ::vector_2d::Vector2D;
  pub fn qt_gui_c_QVector2D_operator_index(this_ptr: *mut ::vector_2d::Vector2D, i: ::libc::c_int) -> *mut ::libc::c_float;
  pub fn qt_gui_c_QVector2D_operator_index_const(this_ptr: *const ::vector_2d::Vector2D, i: ::libc::c_int) -> ::libc::c_float;
  pub fn qt_gui_c_QVector2D_operator_mul_assign_factor(this_ptr: *mut ::vector_2d::Vector2D, factor: ::libc::c_float) -> *mut ::vector_2d::Vector2D;
  pub fn qt_gui_c_QVector2D_operator_mul_assign_vector(this_ptr: *mut ::vector_2d::Vector2D, vector: *const ::vector_2d::Vector2D) -> *mut ::vector_2d::Vector2D;
  pub fn qt_gui_c_QVector2D_operator_sub_assign(this_ptr: *mut ::vector_2d::Vector2D, vector: *const ::vector_2d::Vector2D) -> *mut ::vector_2d::Vector2D;
  pub fn qt_gui_c_QVector2D_setX(this_ptr: *mut ::vector_2d::Vector2D, x: ::libc::c_float);
  pub fn qt_gui_c_QVector2D_setY(this_ptr: *mut ::vector_2d::Vector2D, y: ::libc::c_float);
  pub fn qt_gui_c_QVector2D_toPointF_to_output(this_ptr: *const ::vector_2d::Vector2D, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QVector2D_toPoint_to_output(this_ptr: *const ::vector_2d::Vector2D, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QVector2D_toVector3D_as_ptr(this_ptr: *const ::vector_2d::Vector2D) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QVector2D_toVector4D_as_ptr(this_ptr: *const ::vector_2d::Vector2D) -> *mut ::vector_4d::Vector4D;
  pub fn qt_gui_c_QVector2D_x(this_ptr: *const ::vector_2d::Vector2D) -> ::libc::c_float;
  pub fn qt_gui_c_QVector2D_y(this_ptr: *const ::vector_2d::Vector2D) -> ::libc::c_float;

  // Header: QVector3D
  pub fn qt_gui_c_QVector3D_G_operator_shl(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *const ::vector_3d::Vector3D) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QVector3D_G_operator_shl_to_output(dbg: *const ::qt_core::debug::Debug, vector: *const ::vector_3d::Vector3D, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QVector3D_G_operator_shr(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *mut ::vector_3d::Vector3D) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QVector3D_convert_to_QVariant_to_output(this_ptr: *const ::vector_3d::Vector3D, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QVector3D_crossProduct_as_ptr(v1: *const ::vector_3d::Vector3D, v2: *const ::vector_3d::Vector3D) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QVector3D_delete(this_ptr: *mut ::vector_3d::Vector3D);
  pub fn qt_gui_c_QVector3D_distanceToLine(this_ptr: *const ::vector_3d::Vector3D, point: *const ::vector_3d::Vector3D, direction: *const ::vector_3d::Vector3D) -> ::libc::c_float;
  pub fn qt_gui_c_QVector3D_distanceToPlane_plane1_plane2_plane3(this_ptr: *const ::vector_3d::Vector3D, plane1: *const ::vector_3d::Vector3D, plane2: *const ::vector_3d::Vector3D, plane3: *const ::vector_3d::Vector3D) -> ::libc::c_float;
  pub fn qt_gui_c_QVector3D_distanceToPlane_plane_normal(this_ptr: *const ::vector_3d::Vector3D, plane: *const ::vector_3d::Vector3D, normal: *const ::vector_3d::Vector3D) -> ::libc::c_float;
  pub fn qt_gui_c_QVector3D_distanceToPoint(this_ptr: *const ::vector_3d::Vector3D, point: *const ::vector_3d::Vector3D) -> ::libc::c_float;
  pub fn qt_gui_c_QVector3D_dotProduct(v1: *const ::vector_3d::Vector3D, v2: *const ::vector_3d::Vector3D) -> ::libc::c_float;
  pub fn qt_gui_c_QVector3D_isNull(this_ptr: *const ::vector_3d::Vector3D) -> bool;
  pub fn qt_gui_c_QVector3D_length(this_ptr: *const ::vector_3d::Vector3D) -> ::libc::c_float;
  pub fn qt_gui_c_QVector3D_lengthSquared(this_ptr: *const ::vector_3d::Vector3D) -> ::libc::c_float;
  pub fn qt_gui_c_QVector3D_new_QPoint(point: *const ::qt_core::point::Point) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QVector3D_new_QPointF(point: *const ::qt_core::point_f::PointF) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QVector3D_new_QVector2D(vector: *const ::vector_2d::Vector2D) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QVector3D_new_QVector2D_float(vector: *const ::vector_2d::Vector2D, zpos: ::libc::c_float) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QVector3D_new_QVector4D(vector: *const ::vector_4d::Vector4D) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QVector3D_new_float_float_float(xpos: ::libc::c_float, ypos: ::libc::c_float, zpos: ::libc::c_float) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QVector3D_new_no_args() -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QVector3D_normal_as_ptr_v1_v2(v1: *const ::vector_3d::Vector3D, v2: *const ::vector_3d::Vector3D) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QVector3D_normal_as_ptr_v1_v2_v3(v1: *const ::vector_3d::Vector3D, v2: *const ::vector_3d::Vector3D, v3: *const ::vector_3d::Vector3D) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QVector3D_normalize(this_ptr: *mut ::vector_3d::Vector3D);
  pub fn qt_gui_c_QVector3D_normalized_as_ptr(this_ptr: *const ::vector_3d::Vector3D) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QVector3D_operator_add_assign(this_ptr: *mut ::vector_3d::Vector3D, vector: *const ::vector_3d::Vector3D) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QVector3D_operator_div_assign_divisor(this_ptr: *mut ::vector_3d::Vector3D, divisor: ::libc::c_float) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QVector3D_operator_div_assign_vector(this_ptr: *mut ::vector_3d::Vector3D, vector: *const ::vector_3d::Vector3D) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QVector3D_operator_index(this_ptr: *mut ::vector_3d::Vector3D, i: ::libc::c_int) -> *mut ::libc::c_float;
  pub fn qt_gui_c_QVector3D_operator_index_const(this_ptr: *const ::vector_3d::Vector3D, i: ::libc::c_int) -> ::libc::c_float;
  pub fn qt_gui_c_QVector3D_operator_mul_assign_factor(this_ptr: *mut ::vector_3d::Vector3D, factor: ::libc::c_float) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QVector3D_operator_mul_assign_vector(this_ptr: *mut ::vector_3d::Vector3D, vector: *const ::vector_3d::Vector3D) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QVector3D_operator_sub_assign(this_ptr: *mut ::vector_3d::Vector3D, vector: *const ::vector_3d::Vector3D) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QVector3D_project_as_ptr(this_ptr: *const ::vector_3d::Vector3D, modelView: *const ::matrix_4x4::Matrix4X4, projection: *const ::matrix_4x4::Matrix4X4, viewport: *const ::qt_core::rect::Rect) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QVector3D_setX(this_ptr: *mut ::vector_3d::Vector3D, x: ::libc::c_float);
  pub fn qt_gui_c_QVector3D_setY(this_ptr: *mut ::vector_3d::Vector3D, y: ::libc::c_float);
  pub fn qt_gui_c_QVector3D_setZ(this_ptr: *mut ::vector_3d::Vector3D, z: ::libc::c_float);
  pub fn qt_gui_c_QVector3D_toPointF_to_output(this_ptr: *const ::vector_3d::Vector3D, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QVector3D_toPoint_to_output(this_ptr: *const ::vector_3d::Vector3D, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QVector3D_toVector2D_as_ptr(this_ptr: *const ::vector_3d::Vector3D) -> *mut ::vector_2d::Vector2D;
  pub fn qt_gui_c_QVector3D_toVector4D_as_ptr(this_ptr: *const ::vector_3d::Vector3D) -> *mut ::vector_4d::Vector4D;
  pub fn qt_gui_c_QVector3D_unproject_as_ptr(this_ptr: *const ::vector_3d::Vector3D, modelView: *const ::matrix_4x4::Matrix4X4, projection: *const ::matrix_4x4::Matrix4X4, viewport: *const ::qt_core::rect::Rect) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QVector3D_x(this_ptr: *const ::vector_3d::Vector3D) -> ::libc::c_float;
  pub fn qt_gui_c_QVector3D_y(this_ptr: *const ::vector_3d::Vector3D) -> ::libc::c_float;
  pub fn qt_gui_c_QVector3D_z(this_ptr: *const ::vector_3d::Vector3D) -> ::libc::c_float;

  // Header: QVector4D
  pub fn qt_gui_c_QVector4D_G_operator_shl(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *const ::vector_4d::Vector4D) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QVector4D_G_operator_shl_to_output(dbg: *const ::qt_core::debug::Debug, vector: *const ::vector_4d::Vector4D, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QVector4D_G_operator_shr(arg1: *mut ::qt_core::data_stream::DataStream, arg2: *mut ::vector_4d::Vector4D) -> *mut ::qt_core::data_stream::DataStream;
  pub fn qt_gui_c_QVector4D_convert_to_QVariant_to_output(this_ptr: *const ::vector_4d::Vector4D, output: *mut ::qt_core::variant::Variant);
  pub fn qt_gui_c_QVector4D_delete(this_ptr: *mut ::vector_4d::Vector4D);
  pub fn qt_gui_c_QVector4D_dotProduct(v1: *const ::vector_4d::Vector4D, v2: *const ::vector_4d::Vector4D) -> ::libc::c_float;
  pub fn qt_gui_c_QVector4D_isNull(this_ptr: *const ::vector_4d::Vector4D) -> bool;
  pub fn qt_gui_c_QVector4D_length(this_ptr: *const ::vector_4d::Vector4D) -> ::libc::c_float;
  pub fn qt_gui_c_QVector4D_lengthSquared(this_ptr: *const ::vector_4d::Vector4D) -> ::libc::c_float;
  pub fn qt_gui_c_QVector4D_new_QPoint(point: *const ::qt_core::point::Point) -> *mut ::vector_4d::Vector4D;
  pub fn qt_gui_c_QVector4D_new_QPointF(point: *const ::qt_core::point_f::PointF) -> *mut ::vector_4d::Vector4D;
  pub fn qt_gui_c_QVector4D_new_QVector2D(vector: *const ::vector_2d::Vector2D) -> *mut ::vector_4d::Vector4D;
  pub fn qt_gui_c_QVector4D_new_QVector2D_float_float(vector: *const ::vector_2d::Vector2D, zpos: ::libc::c_float, wpos: ::libc::c_float) -> *mut ::vector_4d::Vector4D;
  pub fn qt_gui_c_QVector4D_new_QVector3D(vector: *const ::vector_3d::Vector3D) -> *mut ::vector_4d::Vector4D;
  pub fn qt_gui_c_QVector4D_new_QVector3D_float(vector: *const ::vector_3d::Vector3D, wpos: ::libc::c_float) -> *mut ::vector_4d::Vector4D;
  pub fn qt_gui_c_QVector4D_new_float_float_float_float(xpos: ::libc::c_float, ypos: ::libc::c_float, zpos: ::libc::c_float, wpos: ::libc::c_float) -> *mut ::vector_4d::Vector4D;
  pub fn qt_gui_c_QVector4D_new_no_args() -> *mut ::vector_4d::Vector4D;
  pub fn qt_gui_c_QVector4D_normalize(this_ptr: *mut ::vector_4d::Vector4D);
  pub fn qt_gui_c_QVector4D_normalized_as_ptr(this_ptr: *const ::vector_4d::Vector4D) -> *mut ::vector_4d::Vector4D;
  pub fn qt_gui_c_QVector4D_operator_add_assign(this_ptr: *mut ::vector_4d::Vector4D, vector: *const ::vector_4d::Vector4D) -> *mut ::vector_4d::Vector4D;
  pub fn qt_gui_c_QVector4D_operator_div_assign_divisor(this_ptr: *mut ::vector_4d::Vector4D, divisor: ::libc::c_float) -> *mut ::vector_4d::Vector4D;
  pub fn qt_gui_c_QVector4D_operator_div_assign_vector(this_ptr: *mut ::vector_4d::Vector4D, vector: *const ::vector_4d::Vector4D) -> *mut ::vector_4d::Vector4D;
  pub fn qt_gui_c_QVector4D_operator_index(this_ptr: *mut ::vector_4d::Vector4D, i: ::libc::c_int) -> *mut ::libc::c_float;
  pub fn qt_gui_c_QVector4D_operator_index_const(this_ptr: *const ::vector_4d::Vector4D, i: ::libc::c_int) -> ::libc::c_float;
  pub fn qt_gui_c_QVector4D_operator_mul_assign_factor(this_ptr: *mut ::vector_4d::Vector4D, factor: ::libc::c_float) -> *mut ::vector_4d::Vector4D;
  pub fn qt_gui_c_QVector4D_operator_mul_assign_vector(this_ptr: *mut ::vector_4d::Vector4D, vector: *const ::vector_4d::Vector4D) -> *mut ::vector_4d::Vector4D;
  pub fn qt_gui_c_QVector4D_operator_sub_assign(this_ptr: *mut ::vector_4d::Vector4D, vector: *const ::vector_4d::Vector4D) -> *mut ::vector_4d::Vector4D;
  pub fn qt_gui_c_QVector4D_setW(this_ptr: *mut ::vector_4d::Vector4D, w: ::libc::c_float);
  pub fn qt_gui_c_QVector4D_setX(this_ptr: *mut ::vector_4d::Vector4D, x: ::libc::c_float);
  pub fn qt_gui_c_QVector4D_setY(this_ptr: *mut ::vector_4d::Vector4D, y: ::libc::c_float);
  pub fn qt_gui_c_QVector4D_setZ(this_ptr: *mut ::vector_4d::Vector4D, z: ::libc::c_float);
  pub fn qt_gui_c_QVector4D_toPointF_to_output(this_ptr: *const ::vector_4d::Vector4D, output: *mut ::qt_core::point_f::PointF);
  pub fn qt_gui_c_QVector4D_toPoint_to_output(this_ptr: *const ::vector_4d::Vector4D, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QVector4D_toVector2DAffine_as_ptr(this_ptr: *const ::vector_4d::Vector4D) -> *mut ::vector_2d::Vector2D;
  pub fn qt_gui_c_QVector4D_toVector2D_as_ptr(this_ptr: *const ::vector_4d::Vector4D) -> *mut ::vector_2d::Vector2D;
  pub fn qt_gui_c_QVector4D_toVector3DAffine_as_ptr(this_ptr: *const ::vector_4d::Vector4D) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QVector4D_toVector3D_as_ptr(this_ptr: *const ::vector_4d::Vector4D) -> *mut ::vector_3d::Vector3D;
  pub fn qt_gui_c_QVector4D_w(this_ptr: *const ::vector_4d::Vector4D) -> ::libc::c_float;
  pub fn qt_gui_c_QVector4D_x(this_ptr: *const ::vector_4d::Vector4D) -> ::libc::c_float;
  pub fn qt_gui_c_QVector4D_y(this_ptr: *const ::vector_4d::Vector4D) -> ::libc::c_float;
  pub fn qt_gui_c_QVector4D_z(this_ptr: *const ::vector_4d::Vector4D) -> ::libc::c_float;

  // Header: QWhatsThisClickedEvent
  pub fn qt_gui_c_QWhatsThisClickedEvent_G_static_cast_QEvent_ptr(ptr: *mut ::whats_this_clicked_event::WhatsThisClickedEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QWhatsThisClickedEvent_G_static_cast_QWhatsThisClickedEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::whats_this_clicked_event::WhatsThisClickedEvent;
  pub fn qt_gui_c_QWhatsThisClickedEvent_delete(this_ptr: *mut ::whats_this_clicked_event::WhatsThisClickedEvent);
  pub fn qt_gui_c_QWhatsThisClickedEvent_href_to_output(this_ptr: *const ::whats_this_clicked_event::WhatsThisClickedEvent, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QWhatsThisClickedEvent_new(href: *const ::qt_core::string::String) -> *mut ::whats_this_clicked_event::WhatsThisClickedEvent;

  // Header: QWheelEvent
  pub fn qt_gui_c_QWheelEvent_G_dynamic_cast_QWheelEvent_ptr(ptr: *mut ::input_event::InputEvent) -> *mut ::wheel_event::WheelEvent;
  pub fn qt_gui_c_QWheelEvent_G_static_cast_QEvent_ptr(ptr: *mut ::wheel_event::WheelEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QWheelEvent_G_static_cast_QInputEvent_ptr(ptr: *mut ::wheel_event::WheelEvent) -> *mut ::input_event::InputEvent;
  pub fn qt_gui_c_QWheelEvent_G_static_cast_QWheelEvent_ptr_QEvent(ptr: *mut ::qt_core::event::Event) -> *mut ::wheel_event::WheelEvent;
  pub fn qt_gui_c_QWheelEvent_G_static_cast_QWheelEvent_ptr_QInputEvent(ptr: *mut ::input_event::InputEvent) -> *mut ::wheel_event::WheelEvent;
  pub fn qt_gui_c_QWheelEvent_angleDelta_to_output(this_ptr: *const ::wheel_event::WheelEvent, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QWheelEvent_delete(this_ptr: *mut ::wheel_event::WheelEvent);
  pub fn qt_gui_c_QWheelEvent_delta(this_ptr: *const ::wheel_event::WheelEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QWheelEvent_globalPosF(this_ptr: *const ::wheel_event::WheelEvent) -> *const ::qt_core::point_f::PointF;
  pub fn qt_gui_c_QWheelEvent_globalPos_to_output(this_ptr: *const ::wheel_event::WheelEvent, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QWheelEvent_globalX(this_ptr: *const ::wheel_event::WheelEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QWheelEvent_globalY(this_ptr: *const ::wheel_event::WheelEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QWheelEvent_inverted(this_ptr: *const ::wheel_event::WheelEvent) -> bool;
  pub fn qt_gui_c_QWheelEvent_pixelDelta_to_output(this_ptr: *const ::wheel_event::WheelEvent, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QWheelEvent_posF(this_ptr: *const ::wheel_event::WheelEvent) -> *const ::qt_core::point_f::PointF;
  pub fn qt_gui_c_QWheelEvent_pos_to_output(this_ptr: *const ::wheel_event::WheelEvent, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QWheelEvent_x(this_ptr: *const ::wheel_event::WheelEvent) -> ::libc::c_int;
  pub fn qt_gui_c_QWheelEvent_y(this_ptr: *const ::wheel_event::WheelEvent) -> ::libc::c_int;

  // Header: QWindow
  pub fn qt_gui_c_QWindow_G_dynamic_cast_QWindow_ptr(ptr: *mut ::surface::Surface) -> *mut ::window::Window;
  pub fn qt_gui_c_QWindow_G_operator_shl_to_output(arg1: *const ::qt_core::debug::Debug, arg2: *const ::window::Window, output: *mut ::qt_core::debug::Debug);
  pub fn qt_gui_c_QWindow_G_static_cast_QObject_ptr(ptr: *mut ::window::Window) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QWindow_G_static_cast_QSurface_ptr(ptr: *mut ::window::Window) -> *mut ::surface::Surface;
  pub fn qt_gui_c_QWindow_G_static_cast_QWindow_ptr_QObject(ptr: *mut ::qt_core::object::Object) -> *mut ::window::Window;
  pub fn qt_gui_c_QWindow_G_static_cast_QWindow_ptr_QSurface(ptr: *mut ::surface::Surface) -> *mut ::window::Window;
  pub fn qt_gui_c_QWindow_accessibleRoot(this_ptr: *const ::window::Window) -> *mut ::accessible_interface::AccessibleInterface;
  pub fn qt_gui_c_QWindow_alert(this_ptr: *mut ::window::Window, msec: ::libc::c_int);
  pub fn qt_gui_c_QWindow_baseSize_to_output(this_ptr: *const ::window::Window, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QWindow_close(this_ptr: *mut ::window::Window) -> bool;
  pub fn qt_gui_c_QWindow_create(this_ptr: *mut ::window::Window);
  pub fn qt_gui_c_QWindow_cursor_as_ptr(this_ptr: *const ::window::Window) -> *mut ::cursor::Cursor;
  pub fn qt_gui_c_QWindow_delete(this_ptr: *mut ::window::Window);
  pub fn qt_gui_c_QWindow_destroy(this_ptr: *mut ::window::Window);
  pub fn qt_gui_c_QWindow_devicePixelRatio(this_ptr: *const ::window::Window) -> ::libc::c_double;
  pub fn qt_gui_c_QWindow_filePath_to_output(this_ptr: *const ::window::Window, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QWindow_focusObject(this_ptr: *const ::window::Window) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_QWindow_format_to_output(this_ptr: *const ::window::Window, output: *mut ::surface_format::SurfaceFormat);
  pub fn qt_gui_c_QWindow_frameGeometry_to_output(this_ptr: *const ::window::Window, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QWindow_frameMargins_to_output(this_ptr: *const ::window::Window, output: *mut ::qt_core::margins::Margins);
  pub fn qt_gui_c_QWindow_framePosition_to_output(this_ptr: *const ::window::Window, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QWindow_fromWinId(id: ::libc::c_ulonglong) -> *mut ::window::Window;
  pub fn qt_gui_c_QWindow_geometry_to_output(this_ptr: *const ::window::Window, output: *mut ::qt_core::rect::Rect);
  pub fn qt_gui_c_QWindow_height(this_ptr: *const ::window::Window) -> ::libc::c_int;
  pub fn qt_gui_c_QWindow_hide(this_ptr: *mut ::window::Window);
  pub fn qt_gui_c_QWindow_icon_to_output(this_ptr: *const ::window::Window, output: *mut ::icon::Icon);
  pub fn qt_gui_c_QWindow_isActive(this_ptr: *const ::window::Window) -> bool;
  pub fn qt_gui_c_QWindow_isAncestorOf_child(this_ptr: *const ::window::Window, child: *const ::window::Window) -> bool;
  pub fn qt_gui_c_QWindow_isAncestorOf_child_mode(this_ptr: *const ::window::Window, child: *const ::window::Window, mode: ::window::AncestorMode) -> bool;
  pub fn qt_gui_c_QWindow_isExposed(this_ptr: *const ::window::Window) -> bool;
  pub fn qt_gui_c_QWindow_isModal(this_ptr: *const ::window::Window) -> bool;
  pub fn qt_gui_c_QWindow_isTopLevel(this_ptr: *const ::window::Window) -> bool;
  pub fn qt_gui_c_QWindow_isVisible(this_ptr: *const ::window::Window) -> bool;
  pub fn qt_gui_c_QWindow_lower(this_ptr: *mut ::window::Window);
  pub fn qt_gui_c_QWindow_mapFromGlobal_to_output(this_ptr: *const ::window::Window, pos: *const ::qt_core::point::Point, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QWindow_mapToGlobal_to_output(this_ptr: *const ::window::Window, pos: *const ::qt_core::point::Point, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QWindow_mask_as_ptr(this_ptr: *const ::window::Window) -> *mut ::region::Region;
  pub fn qt_gui_c_QWindow_maximumHeight(this_ptr: *const ::window::Window) -> ::libc::c_int;
  pub fn qt_gui_c_QWindow_maximumSize_to_output(this_ptr: *const ::window::Window, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QWindow_maximumWidth(this_ptr: *const ::window::Window) -> ::libc::c_int;
  pub fn qt_gui_c_QWindow_metaObject(this_ptr: *const ::window::Window) -> *const ::qt_core::meta_object::MetaObject;
  pub fn qt_gui_c_QWindow_minimumHeight(this_ptr: *const ::window::Window) -> ::libc::c_int;
  pub fn qt_gui_c_QWindow_minimumSize_to_output(this_ptr: *const ::window::Window, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QWindow_minimumWidth(this_ptr: *const ::window::Window) -> ::libc::c_int;
  pub fn qt_gui_c_QWindow_new_no_args() -> *mut ::window::Window;
  pub fn qt_gui_c_QWindow_new_parent(parent: *mut ::window::Window) -> *mut ::window::Window;
  pub fn qt_gui_c_QWindow_new_screen(screen: *mut ::screen::Screen) -> *mut ::window::Window;
  pub fn qt_gui_c_QWindow_opacity(this_ptr: *const ::window::Window) -> ::libc::c_double;
  pub fn qt_gui_c_QWindow_parent_mode(this_ptr: *const ::window::Window, mode: ::window::AncestorMode) -> *mut ::window::Window;
  pub fn qt_gui_c_QWindow_parent_no_args(this_ptr: *const ::window::Window) -> *mut ::window::Window;
  pub fn qt_gui_c_QWindow_position_to_output(this_ptr: *const ::window::Window, output: *mut ::qt_core::point::Point);
  pub fn qt_gui_c_QWindow_qt_metacall(this_ptr: *mut ::window::Window, arg1: *const ::qt_core::meta_object::Call, arg2: ::libc::c_int, arg3: *mut *mut ::libc::c_void) -> ::libc::c_int;
  pub fn qt_gui_c_QWindow_qt_metacast(this_ptr: *mut ::window::Window, arg1: *const ::libc::c_char) -> *mut ::libc::c_void;
  pub fn qt_gui_c_QWindow_raise(this_ptr: *mut ::window::Window);
  pub fn qt_gui_c_QWindow_reportContentOrientationChange(this_ptr: *mut ::window::Window, orientation: *const ::qt_core::qt::ScreenOrientation);
  pub fn qt_gui_c_QWindow_requestActivate(this_ptr: *mut ::window::Window);
  pub fn qt_gui_c_QWindow_requestUpdate(this_ptr: *mut ::window::Window);
  pub fn qt_gui_c_QWindow_requestedFormat_to_output(this_ptr: *const ::window::Window, output: *mut ::surface_format::SurfaceFormat);
  pub fn qt_gui_c_QWindow_resize_newSize(this_ptr: *mut ::window::Window, newSize: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QWindow_resize_w_h(this_ptr: *mut ::window::Window, w: ::libc::c_int, h: ::libc::c_int);
  pub fn qt_gui_c_QWindow_screen(this_ptr: *const ::window::Window) -> *mut ::screen::Screen;
  pub fn qt_gui_c_QWindow_setBaseSize(this_ptr: *mut ::window::Window, size: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QWindow_setCursor(this_ptr: *mut ::window::Window, arg1: *const ::cursor::Cursor);
  pub fn qt_gui_c_QWindow_setFilePath(this_ptr: *mut ::window::Window, filePath: *const ::qt_core::string::String);
  pub fn qt_gui_c_QWindow_setFlag_arg1(this_ptr: *mut ::window::Window, arg1: *const ::qt_core::qt::WindowType);
  pub fn qt_gui_c_QWindow_setFlag_arg1_on(this_ptr: *mut ::window::Window, arg1: *const ::qt_core::qt::WindowType, on: bool);
  pub fn qt_gui_c_QWindow_setFormat(this_ptr: *mut ::window::Window, format: *const ::surface_format::SurfaceFormat);
  pub fn qt_gui_c_QWindow_setFramePosition(this_ptr: *mut ::window::Window, point: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QWindow_setGeometry_posx_posy_w_h(this_ptr: *mut ::window::Window, posx: ::libc::c_int, posy: ::libc::c_int, w: ::libc::c_int, h: ::libc::c_int);
  pub fn qt_gui_c_QWindow_setGeometry_rect(this_ptr: *mut ::window::Window, rect: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_QWindow_setHeight(this_ptr: *mut ::window::Window, arg: ::libc::c_int);
  pub fn qt_gui_c_QWindow_setIcon(this_ptr: *mut ::window::Window, icon: *const ::icon::Icon);
  pub fn qt_gui_c_QWindow_setKeyboardGrabEnabled(this_ptr: *mut ::window::Window, grab: bool) -> bool;
  pub fn qt_gui_c_QWindow_setMask(this_ptr: *mut ::window::Window, region: *const ::region::Region);
  pub fn qt_gui_c_QWindow_setMaximumHeight(this_ptr: *mut ::window::Window, h: ::libc::c_int);
  pub fn qt_gui_c_QWindow_setMaximumSize(this_ptr: *mut ::window::Window, size: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QWindow_setMaximumWidth(this_ptr: *mut ::window::Window, w: ::libc::c_int);
  pub fn qt_gui_c_QWindow_setMinimumHeight(this_ptr: *mut ::window::Window, h: ::libc::c_int);
  pub fn qt_gui_c_QWindow_setMinimumSize(this_ptr: *mut ::window::Window, size: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QWindow_setMinimumWidth(this_ptr: *mut ::window::Window, w: ::libc::c_int);
  pub fn qt_gui_c_QWindow_setModality(this_ptr: *mut ::window::Window, modality: *const ::qt_core::qt::WindowModality);
  pub fn qt_gui_c_QWindow_setMouseGrabEnabled(this_ptr: *mut ::window::Window, grab: bool) -> bool;
  pub fn qt_gui_c_QWindow_setOpacity(this_ptr: *mut ::window::Window, level: ::libc::c_double);
  pub fn qt_gui_c_QWindow_setParent(this_ptr: *mut ::window::Window, parent: *mut ::window::Window);
  pub fn qt_gui_c_QWindow_setPosition_posx_posy(this_ptr: *mut ::window::Window, posx: ::libc::c_int, posy: ::libc::c_int);
  pub fn qt_gui_c_QWindow_setPosition_pt(this_ptr: *mut ::window::Window, pt: *const ::qt_core::point::Point);
  pub fn qt_gui_c_QWindow_setScreen(this_ptr: *mut ::window::Window, screen: *mut ::screen::Screen);
  pub fn qt_gui_c_QWindow_setSizeIncrement(this_ptr: *mut ::window::Window, size: *const ::qt_core::size::Size);
  pub fn qt_gui_c_QWindow_setSurfaceType(this_ptr: *mut ::window::Window, surfaceType: ::surface::SurfaceType);
  pub fn qt_gui_c_QWindow_setTitle(this_ptr: *mut ::window::Window, arg1: *const ::qt_core::string::String);
  pub fn qt_gui_c_QWindow_setTransientParent(this_ptr: *mut ::window::Window, parent: *mut ::window::Window);
  pub fn qt_gui_c_QWindow_setVisibility(this_ptr: *mut ::window::Window, v: ::window::Visibility);
  pub fn qt_gui_c_QWindow_setVisible(this_ptr: *mut ::window::Window, visible: bool);
  pub fn qt_gui_c_QWindow_setWidth(this_ptr: *mut ::window::Window, arg: ::libc::c_int);
  pub fn qt_gui_c_QWindow_setWindowState(this_ptr: *mut ::window::Window, state: *const ::qt_core::qt::WindowState);
  pub fn qt_gui_c_QWindow_setX(this_ptr: *mut ::window::Window, arg: ::libc::c_int);
  pub fn qt_gui_c_QWindow_setY(this_ptr: *mut ::window::Window, arg: ::libc::c_int);
  pub fn qt_gui_c_QWindow_show(this_ptr: *mut ::window::Window);
  pub fn qt_gui_c_QWindow_showFullScreen(this_ptr: *mut ::window::Window);
  pub fn qt_gui_c_QWindow_showMaximized(this_ptr: *mut ::window::Window);
  pub fn qt_gui_c_QWindow_showMinimized(this_ptr: *mut ::window::Window);
  pub fn qt_gui_c_QWindow_showNormal(this_ptr: *mut ::window::Window);
  pub fn qt_gui_c_QWindow_sizeIncrement_to_output(this_ptr: *const ::window::Window, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QWindow_size_to_output(this_ptr: *const ::window::Window, output: *mut ::qt_core::size::Size);
  pub fn qt_gui_c_QWindow_surfaceType(this_ptr: *const ::window::Window) -> ::surface::SurfaceType;
  pub fn qt_gui_c_QWindow_title_to_output(this_ptr: *const ::window::Window, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QWindow_trUtf8_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QWindow_tr_to_output(s: *const ::libc::c_char, c: *const ::libc::c_char, n: ::libc::c_int, output: *mut ::qt_core::string::String);
  pub fn qt_gui_c_QWindow_transientParent(this_ptr: *const ::window::Window) -> *mut ::window::Window;
  pub fn qt_gui_c_QWindow_unsetCursor(this_ptr: *mut ::window::Window);
  pub fn qt_gui_c_QWindow_visibility(this_ptr: *const ::window::Window) -> ::window::Visibility;
  pub fn qt_gui_c_QWindow_width(this_ptr: *const ::window::Window) -> ::libc::c_int;
  pub fn qt_gui_c_QWindow_winId(this_ptr: *const ::window::Window) -> ::libc::c_ulonglong;
  pub fn qt_gui_c_QWindow_x(this_ptr: *const ::window::Window) -> ::libc::c_int;
  pub fn qt_gui_c_QWindow_y(this_ptr: *const ::window::Window) -> ::libc::c_int;

  // Header: QWindowStateChangeEvent
  pub fn qt_gui_c_QWindowStateChangeEvent_G_static_cast_QEvent_ptr(ptr: *mut ::window_state_change_event::WindowStateChangeEvent) -> *mut ::qt_core::event::Event;
  pub fn qt_gui_c_QWindowStateChangeEvent_G_static_cast_QWindowStateChangeEvent_ptr(ptr: *mut ::qt_core::event::Event) -> *mut ::window_state_change_event::WindowStateChangeEvent;
  pub fn qt_gui_c_QWindowStateChangeEvent_delete(this_ptr: *mut ::window_state_change_event::WindowStateChangeEvent);
  pub fn qt_gui_c_QWindowStateChangeEvent_isOverride(this_ptr: *const ::window_state_change_event::WindowStateChangeEvent) -> bool;

  // Header: slots
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QClipboard_Mode_custom_slot(this_ptr: *mut ::slots::raw::RawSlotClipboardModeRef, arg0: *const ::clipboard::Mode);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QClipboard_Mode_delete(this_ptr: *mut ::slots::raw::RawSlotClipboardModeRef);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QClipboard_Mode_new() -> *mut ::slots::raw::RawSlotClipboardModeRef;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QClipboard_Mode_set(this_ptr: *mut ::slots::raw::RawSlotClipboardModeRef, func: extern "C" fn(*mut ::libc::c_void, *const ::clipboard::Mode), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QDoubleValidator_Notation_custom_slot(this_ptr: *mut ::slots::raw::RawSlotDoubleValidatorNotationRef, arg0: *const ::double_validator::Notation);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QDoubleValidator_Notation_delete(this_ptr: *mut ::slots::raw::RawSlotDoubleValidatorNotationRef);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QDoubleValidator_Notation_new() -> *mut ::slots::raw::RawSlotDoubleValidatorNotationRef;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QDoubleValidator_Notation_set(this_ptr: *mut ::slots::raw::RawSlotDoubleValidatorNotationRef, func: extern "C" fn(*mut ::libc::c_void, *const ::double_validator::Notation), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QImageReader_ImageReaderError_custom_slot(this_ptr: *mut ::slots::raw::RawSlotImageReaderImageReaderErrorRef, arg0: *const ::image_reader::ImageReaderError);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QImageReader_ImageReaderError_delete(this_ptr: *mut ::slots::raw::RawSlotImageReaderImageReaderErrorRef);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QImageReader_ImageReaderError_new() -> *mut ::slots::raw::RawSlotImageReaderImageReaderErrorRef;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QImageReader_ImageReaderError_set(this_ptr: *mut ::slots::raw::RawSlotImageReaderImageReaderErrorRef, func: extern "C" fn(*mut ::libc::c_void, *const ::image_reader::ImageReaderError), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QMovie_MovieState_custom_slot(this_ptr: *mut ::slots::raw::RawSlotMovieMovieStateRef, arg0: *const ::movie::MovieState);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QMovie_MovieState_delete(this_ptr: *mut ::slots::raw::RawSlotMovieMovieStateRef);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QMovie_MovieState_new() -> *mut ::slots::raw::RawSlotMovieMovieStateRef;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QMovie_MovieState_set(this_ptr: *mut ::slots::raw::RawSlotMovieMovieStateRef, func: extern "C" fn(*mut ::libc::c_void, *const ::movie::MovieState), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QScreen_ptr_custom_slot(this_ptr: *mut ::slots::raw::RawSlotScreenMutPtr, arg0: *mut ::screen::Screen);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QScreen_ptr_delete(this_ptr: *mut ::slots::raw::RawSlotScreenMutPtr);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QScreen_ptr_new() -> *mut ::slots::raw::RawSlotScreenMutPtr;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QScreen_ptr_set(this_ptr: *mut ::slots::raw::RawSlotScreenMutPtr, func: extern "C" fn(*mut ::libc::c_void, *mut ::screen::Screen), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QSessionManager_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotSessionManagerMutRef, arg0: *mut ::session_manager::SessionManager);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QSessionManager_ref_delete(this_ptr: *mut ::slots::raw::RawSlotSessionManagerMutRef);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QSessionManager_ref_new() -> *mut ::slots::raw::RawSlotSessionManagerMutRef;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QSessionManager_ref_set(this_ptr: *mut ::slots::raw::RawSlotSessionManagerMutRef, func: extern "C" fn(*mut ::libc::c_void, *mut ::session_manager::SessionManager), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QStandardItem_ptr_custom_slot(this_ptr: *mut ::slots::raw::RawSlotStandardItemMutPtr, arg0: *mut ::standard_item::StandardItem);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QStandardItem_ptr_delete(this_ptr: *mut ::slots::raw::RawSlotStandardItemMutPtr);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QStandardItem_ptr_new() -> *mut ::slots::raw::RawSlotStandardItemMutPtr;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QStandardItem_ptr_set(this_ptr: *mut ::slots::raw::RawSlotStandardItemMutPtr, func: extern "C" fn(*mut ::libc::c_void, *mut ::standard_item::StandardItem), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QWindow_Visibility_custom_slot(this_ptr: *mut ::slots::raw::RawSlotWindowVisibilityRef, arg0: *const ::window::Visibility);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QWindow_Visibility_delete(this_ptr: *mut ::slots::raw::RawSlotWindowVisibilityRef);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QWindow_Visibility_new() -> *mut ::slots::raw::RawSlotWindowVisibilityRef;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QWindow_Visibility_set(this_ptr: *mut ::slots::raw::RawSlotWindowVisibilityRef, func: extern "C" fn(*mut ::libc::c_void, *const ::window::Visibility), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QWindow_ptr_custom_slot(this_ptr: *mut ::slots::raw::RawSlotWindowMutPtr, arg0: *mut ::window::Window);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QWindow_ptr_delete(this_ptr: *mut ::slots::raw::RawSlotWindowMutPtr);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QWindow_ptr_new() -> *mut ::slots::raw::RawSlotWindowMutPtr;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_QWindow_ptr_set(this_ptr: *mut ::slots::raw::RawSlotWindowMutPtr, func: extern "C" fn(*mut ::libc::c_void, *mut ::window::Window), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_ApplicationState_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtApplicationStateRef, arg0: *const ::qt_core::qt::ApplicationState);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_ApplicationState_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtApplicationStateRef);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_ApplicationState_new() -> *mut ::slots::raw::RawSlotQtCoreQtApplicationStateRef;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_ApplicationState_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtApplicationStateRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::qt::ApplicationState), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_DropAction_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtDropActionRef, arg0: *const ::qt_core::qt::DropAction);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_DropAction_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtDropActionRef);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_DropAction_new() -> *mut ::slots::raw::RawSlotQtCoreQtDropActionRef;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_DropAction_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtDropActionRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::qt::DropAction), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_LayoutDirection_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtLayoutDirectionRef, arg0: *const ::qt_core::qt::LayoutDirection);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_LayoutDirection_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtLayoutDirectionRef);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_LayoutDirection_new() -> *mut ::slots::raw::RawSlotQtCoreQtLayoutDirectionRef;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_LayoutDirection_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtLayoutDirectionRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::qt::LayoutDirection), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_ScreenOrientation_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtScreenOrientationRef, arg0: *const ::qt_core::qt::ScreenOrientation);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_ScreenOrientation_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtScreenOrientationRef);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_ScreenOrientation_new() -> *mut ::slots::raw::RawSlotQtCoreQtScreenOrientationRef;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_ScreenOrientation_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtScreenOrientationRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::qt::ScreenOrientation), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_TabFocusBehavior_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtTabFocusBehaviorRef, arg0: *const ::qt_core::qt::TabFocusBehavior);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_TabFocusBehavior_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtTabFocusBehaviorRef);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_TabFocusBehavior_new() -> *mut ::slots::raw::RawSlotQtCoreQtTabFocusBehaviorRef;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_TabFocusBehavior_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtTabFocusBehaviorRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::qt::TabFocusBehavior), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_WindowModality_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtWindowModalityRef, arg0: *const ::qt_core::qt::WindowModality);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_WindowModality_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtWindowModalityRef);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_WindowModality_new() -> *mut ::slots::raw::RawSlotQtCoreQtWindowModalityRef;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_WindowModality_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtWindowModalityRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::qt::WindowModality), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_WindowState_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtWindowStateRef, arg0: *const ::qt_core::qt::WindowState);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_WindowState_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtWindowStateRef);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_WindowState_new() -> *mut ::slots::raw::RawSlotQtCoreQtWindowStateRef;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_Qt_WindowState_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreQtWindowStateRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::qt::WindowState), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QOpenGLDebugMessage_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotOpenglDebugMessageRef, arg0: *const ::opengl_debug_message::OpenGLDebugMessage);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QOpenGLDebugMessage_ref_delete(this_ptr: *mut ::slots::raw::RawSlotOpenglDebugMessageRef);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QOpenGLDebugMessage_ref_new() -> *mut ::slots::raw::RawSlotOpenglDebugMessageRef;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QOpenGLDebugMessage_ref_set(this_ptr: *mut ::slots::raw::RawSlotOpenglDebugMessageRef, func: extern "C" fn(*mut ::libc::c_void, *const ::opengl_debug_message::OpenGLDebugMessage), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QPalette_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotPaletteRef, arg0: *const ::palette::Palette);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QPalette_ref_delete(this_ptr: *mut ::slots::raw::RawSlotPaletteRef);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QPalette_ref_new() -> *mut ::slots::raw::RawSlotPaletteRef;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QPalette_ref_set(this_ptr: *mut ::slots::raw::RawSlotPaletteRef, func: extern "C" fn(*mut ::libc::c_void, *const ::palette::Palette), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QRectF_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreRectFRef, arg0: *const ::qt_core::rect_f::RectF);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QRectF_ref_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreRectFRef);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QRectF_ref_new() -> *mut ::slots::raw::RawSlotQtCoreRectFRef;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QRectF_ref_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreRectFRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::rect_f::RectF), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QRect_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreRectRef, arg0: *const ::qt_core::rect::Rect);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QRect_ref_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreRectRef);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QRect_ref_new() -> *mut ::slots::raw::RawSlotQtCoreRectRef;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QRect_ref_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreRectRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::rect::Rect), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QRegExp_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreRegExpRef, arg0: *const ::qt_core::reg_exp::RegExp);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QRegExp_ref_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreRegExpRef);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QRegExp_ref_new() -> *mut ::slots::raw::RawSlotQtCoreRegExpRef;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QRegExp_ref_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreRegExpRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::reg_exp::RegExp), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QRegularExpression_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreRegularExpressionRef, arg0: *const ::qt_core::regular_expression::RegularExpression);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QRegularExpression_ref_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreRegularExpressionRef);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QRegularExpression_ref_new() -> *mut ::slots::raw::RawSlotQtCoreRegularExpressionRef;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QRegularExpression_ref_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreRegularExpressionRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::regular_expression::RegularExpression), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QSizeF_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreSizeFRef, arg0: *const ::qt_core::size_f::SizeF);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QSizeF_ref_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreSizeFRef);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QSizeF_ref_new() -> *mut ::slots::raw::RawSlotQtCoreSizeFRef;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QSizeF_ref_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreSizeFRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::size_f::SizeF), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QSize_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreSizeRef, arg0: *const ::qt_core::size::Size);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QSize_ref_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreSizeRef);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QSize_ref_new() -> *mut ::slots::raw::RawSlotQtCoreSizeRef;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QSize_ref_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreSizeRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::size::Size), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QTextBlock_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotTextBlockRef, arg0: *const ::text_block::TextBlock);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QTextBlock_ref_delete(this_ptr: *mut ::slots::raw::RawSlotTextBlockRef);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QTextBlock_ref_new() -> *mut ::slots::raw::RawSlotTextBlockRef;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QTextBlock_ref_set(this_ptr: *mut ::slots::raw::RawSlotTextBlockRef, func: extern "C" fn(*mut ::libc::c_void, *const ::text_block::TextBlock), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QTextCursor_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotTextCursorRef, arg0: *const ::text_cursor::TextCursor);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QTextCursor_ref_delete(this_ptr: *mut ::slots::raw::RawSlotTextCursorRef);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QTextCursor_ref_new() -> *mut ::slots::raw::RawSlotTextCursorRef;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QTextCursor_ref_set(this_ptr: *mut ::slots::raw::RawSlotTextCursorRef, func: extern "C" fn(*mut ::libc::c_void, *const ::text_cursor::TextCursor), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QUrl_ref_custom_slot(this_ptr: *mut ::slots::raw::RawSlotQtCoreUrlRef, arg0: *const ::qt_core::url::Url);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QUrl_ref_delete(this_ptr: *mut ::slots::raw::RawSlotQtCoreUrlRef);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QUrl_ref_new() -> *mut ::slots::raw::RawSlotQtCoreUrlRef;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_const_QUrl_ref_set(this_ptr: *mut ::slots::raw::RawSlotQtCoreUrlRef, func: extern "C" fn(*mut ::libc::c_void, *const ::qt_core::url::Url), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_int_int_custom_slot(this_ptr: *mut ::slots::raw::RawSlotCIntCInt, arg0: ::libc::c_int, arg1: ::libc::c_int);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_int_int_delete(this_ptr: *mut ::slots::raw::RawSlotCIntCInt);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_int_int_int_custom_slot(this_ptr: *mut ::slots::raw::RawSlotCIntCIntCInt, arg0: ::libc::c_int, arg1: ::libc::c_int, arg2: ::libc::c_int);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_int_int_int_delete(this_ptr: *mut ::slots::raw::RawSlotCIntCIntCInt);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_int_int_int_new() -> *mut ::slots::raw::RawSlotCIntCIntCInt;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_int_int_int_set(this_ptr: *mut ::slots::raw::RawSlotCIntCIntCInt, func: extern "C" fn(*mut ::libc::c_void, ::libc::c_int, ::libc::c_int, ::libc::c_int), data: *mut ::libc::c_void);
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_int_int_new() -> *mut ::slots::raw::RawSlotCIntCInt;
  pub fn qt_gui_c_qt_gui_c_SlotWrapper_int_int_set(this_ptr: *mut ::slots::raw::RawSlotCIntCInt, func: extern "C" fn(*mut ::libc::c_void, ::libc::c_int, ::libc::c_int), data: *mut ::libc::c_void);
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_QClipboard_Mode(ptr: *mut ::slots::raw::RawSlotClipboardModeRef) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_QDoubleValidator_Notation(ptr: *mut ::slots::raw::RawSlotDoubleValidatorNotationRef) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_QImageReader_ImageReaderError(ptr: *mut ::slots::raw::RawSlotImageReaderImageReaderErrorRef) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_QMovie_MovieState(ptr: *mut ::slots::raw::RawSlotMovieMovieStateRef) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_QScreen_ptr(ptr: *mut ::slots::raw::RawSlotScreenMutPtr) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_QSessionManager_ref(ptr: *mut ::slots::raw::RawSlotSessionManagerMutRef) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_QStandardItem_ptr(ptr: *mut ::slots::raw::RawSlotStandardItemMutPtr) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_QWindow_Visibility(ptr: *mut ::slots::raw::RawSlotWindowVisibilityRef) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_QWindow_ptr(ptr: *mut ::slots::raw::RawSlotWindowMutPtr) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_Qt_ApplicationState(ptr: *mut ::slots::raw::RawSlotQtCoreQtApplicationStateRef) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_Qt_DropAction(ptr: *mut ::slots::raw::RawSlotQtCoreQtDropActionRef) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_Qt_LayoutDirection(ptr: *mut ::slots::raw::RawSlotQtCoreQtLayoutDirectionRef) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_Qt_ScreenOrientation(ptr: *mut ::slots::raw::RawSlotQtCoreQtScreenOrientationRef) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_Qt_TabFocusBehavior(ptr: *mut ::slots::raw::RawSlotQtCoreQtTabFocusBehaviorRef) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_Qt_WindowModality(ptr: *mut ::slots::raw::RawSlotQtCoreQtWindowModalityRef) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_Qt_WindowState(ptr: *mut ::slots::raw::RawSlotQtCoreQtWindowStateRef) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_const_QOpenGLDebugMessage_ref(ptr: *mut ::slots::raw::RawSlotOpenglDebugMessageRef) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_const_QPalette_ref(ptr: *mut ::slots::raw::RawSlotPaletteRef) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_const_QRectF_ref(ptr: *mut ::slots::raw::RawSlotQtCoreRectFRef) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_const_QRect_ref(ptr: *mut ::slots::raw::RawSlotQtCoreRectRef) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_const_QRegExp_ref(ptr: *mut ::slots::raw::RawSlotQtCoreRegExpRef) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_const_QRegularExpression_ref(ptr: *mut ::slots::raw::RawSlotQtCoreRegularExpressionRef) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_const_QSizeF_ref(ptr: *mut ::slots::raw::RawSlotQtCoreSizeFRef) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_const_QSize_ref(ptr: *mut ::slots::raw::RawSlotQtCoreSizeRef) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_const_QTextBlock_ref(ptr: *mut ::slots::raw::RawSlotTextBlockRef) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_const_QTextCursor_ref(ptr: *mut ::slots::raw::RawSlotTextCursorRef) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_const_QUrl_ref(ptr: *mut ::slots::raw::RawSlotQtCoreUrlRef) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_int_int(ptr: *mut ::slots::raw::RawSlotCIntCInt) -> *mut ::qt_core::object::Object;
  pub fn qt_gui_c_slots_G_static_cast_QObject_ptr_qt_gui_c_SlotWrapper_int_int_int(ptr: *mut ::slots::raw::RawSlotCIntCIntCInt) -> *mut ::qt_core::object::Object;

}
